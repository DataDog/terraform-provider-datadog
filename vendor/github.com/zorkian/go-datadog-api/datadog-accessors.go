/*
 THIS FILE IS AUTOMATICALLY GENERATED BY create-accessors; DO NOT EDIT.
 * Datadog API for Go
 *
 * Please see the included LICENSE file for licensing information.
 *
 * Copyright 2018 by authors and contributors.
*/

package datadog

import (
	"encoding/json"
)

// GetCreator returns the Creator field if non-nil, zero value otherwise.
func (a *Alert) GetCreator() int {
	if a == nil || a.Creator == nil {
		return 0
	}
	return *a.Creator
}

// GetCreatorOk returns a tuple with the Creator field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (a *Alert) GetCreatorOk() (int, bool) {
	if a == nil || a.Creator == nil {
		return 0, false
	}
	return *a.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (a *Alert) HasCreator() bool {
	if a != nil && a.Creator != nil {
		return true
	}

	return false
}

// SetCreator allocates a new a.Creator and returns the pointer to it.
func (a *Alert) SetCreator(v int) {
	a.Creator = &v
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (a *Alert) GetId() int {
	if a == nil || a.Id == nil {
		return 0
	}
	return *a.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (a *Alert) GetIdOk() (int, bool) {
	if a == nil || a.Id == nil {
		return 0, false
	}
	return *a.Id, true
}

// HasId returns a boolean if a field has been set.
func (a *Alert) HasId() bool {
	if a != nil && a.Id != nil {
		return true
	}

	return false
}

// SetId allocates a new a.Id and returns the pointer to it.
func (a *Alert) SetId(v int) {
	a.Id = &v
}

// GetMessage returns the Message field if non-nil, zero value otherwise.
func (a *Alert) GetMessage() string {
	if a == nil || a.Message == nil {
		return ""
	}
	return *a.Message
}

// GetMessageOk returns a tuple with the Message field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (a *Alert) GetMessageOk() (string, bool) {
	if a == nil || a.Message == nil {
		return "", false
	}
	return *a.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (a *Alert) HasMessage() bool {
	if a != nil && a.Message != nil {
		return true
	}

	return false
}

// SetMessage allocates a new a.Message and returns the pointer to it.
func (a *Alert) SetMessage(v string) {
	a.Message = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (a *Alert) GetName() string {
	if a == nil || a.Name == nil {
		return ""
	}
	return *a.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (a *Alert) GetNameOk() (string, bool) {
	if a == nil || a.Name == nil {
		return "", false
	}
	return *a.Name, true
}

// HasName returns a boolean if a field has been set.
func (a *Alert) HasName() bool {
	if a != nil && a.Name != nil {
		return true
	}

	return false
}

// SetName allocates a new a.Name and returns the pointer to it.
func (a *Alert) SetName(v string) {
	a.Name = &v
}

// GetNotifyNoData returns the NotifyNoData field if non-nil, zero value otherwise.
func (a *Alert) GetNotifyNoData() bool {
	if a == nil || a.NotifyNoData == nil {
		return false
	}
	return *a.NotifyNoData
}

// GetNotifyNoDataOk returns a tuple with the NotifyNoData field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (a *Alert) GetNotifyNoDataOk() (bool, bool) {
	if a == nil || a.NotifyNoData == nil {
		return false, false
	}
	return *a.NotifyNoData, true
}

// HasNotifyNoData returns a boolean if a field has been set.
func (a *Alert) HasNotifyNoData() bool {
	if a != nil && a.NotifyNoData != nil {
		return true
	}

	return false
}

// SetNotifyNoData allocates a new a.NotifyNoData and returns the pointer to it.
func (a *Alert) SetNotifyNoData(v bool) {
	a.NotifyNoData = &v
}

// GetQuery returns the Query field if non-nil, zero value otherwise.
func (a *Alert) GetQuery() string {
	if a == nil || a.Query == nil {
		return ""
	}
	return *a.Query
}

// GetQueryOk returns a tuple with the Query field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (a *Alert) GetQueryOk() (string, bool) {
	if a == nil || a.Query == nil {
		return "", false
	}
	return *a.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (a *Alert) HasQuery() bool {
	if a != nil && a.Query != nil {
		return true
	}

	return false
}

// SetQuery allocates a new a.Query and returns the pointer to it.
func (a *Alert) SetQuery(v string) {
	a.Query = &v
}

// GetSilenced returns the Silenced field if non-nil, zero value otherwise.
func (a *Alert) GetSilenced() bool {
	if a == nil || a.Silenced == nil {
		return false
	}
	return *a.Silenced
}

// GetSilencedOk returns a tuple with the Silenced field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (a *Alert) GetSilencedOk() (bool, bool) {
	if a == nil || a.Silenced == nil {
		return false, false
	}
	return *a.Silenced, true
}

// HasSilenced returns a boolean if a field has been set.
func (a *Alert) HasSilenced() bool {
	if a != nil && a.Silenced != nil {
		return true
	}

	return false
}

// SetSilenced allocates a new a.Silenced and returns the pointer to it.
func (a *Alert) SetSilenced(v bool) {
	a.Silenced = &v
}

// GetState returns the State field if non-nil, zero value otherwise.
func (a *Alert) GetState() string {
	if a == nil || a.State == nil {
		return ""
	}
	return *a.State
}

// GetStateOk returns a tuple with the State field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (a *Alert) GetStateOk() (string, bool) {
	if a == nil || a.State == nil {
		return "", false
	}
	return *a.State, true
}

// HasState returns a boolean if a field has been set.
func (a *Alert) HasState() bool {
	if a != nil && a.State != nil {
		return true
	}

	return false
}

// SetState allocates a new a.State and returns the pointer to it.
func (a *Alert) SetState(v string) {
	a.State = &v
}

// GetAccount returns the Account field if non-nil, zero value otherwise.
func (c *ChannelSlackRequest) GetAccount() string {
	if c == nil || c.Account == nil {
		return ""
	}
	return *c.Account
}

// GetAccountOk returns a tuple with the Account field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *ChannelSlackRequest) GetAccountOk() (string, bool) {
	if c == nil || c.Account == nil {
		return "", false
	}
	return *c.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (c *ChannelSlackRequest) HasAccount() bool {
	if c != nil && c.Account != nil {
		return true
	}

	return false
}

// SetAccount allocates a new c.Account and returns the pointer to it.
func (c *ChannelSlackRequest) SetAccount(v string) {
	c.Account = &v
}

// GetChannelName returns the ChannelName field if non-nil, zero value otherwise.
func (c *ChannelSlackRequest) GetChannelName() string {
	if c == nil || c.ChannelName == nil {
		return ""
	}
	return *c.ChannelName
}

// GetChannelNameOk returns a tuple with the ChannelName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *ChannelSlackRequest) GetChannelNameOk() (string, bool) {
	if c == nil || c.ChannelName == nil {
		return "", false
	}
	return *c.ChannelName, true
}

// HasChannelName returns a boolean if a field has been set.
func (c *ChannelSlackRequest) HasChannelName() bool {
	if c != nil && c.ChannelName != nil {
		return true
	}

	return false
}

// SetChannelName allocates a new c.ChannelName and returns the pointer to it.
func (c *ChannelSlackRequest) SetChannelName(v string) {
	c.ChannelName = &v
}

// GetTransferAllUserComments returns the TransferAllUserComments field if non-nil, zero value otherwise.
func (c *ChannelSlackRequest) GetTransferAllUserComments() bool {
	if c == nil || c.TransferAllUserComments == nil {
		return false
	}
	return *c.TransferAllUserComments
}

// GetTransferAllUserCommentsOk returns a tuple with the TransferAllUserComments field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *ChannelSlackRequest) GetTransferAllUserCommentsOk() (bool, bool) {
	if c == nil || c.TransferAllUserComments == nil {
		return false, false
	}
	return *c.TransferAllUserComments, true
}

// HasTransferAllUserComments returns a boolean if a field has been set.
func (c *ChannelSlackRequest) HasTransferAllUserComments() bool {
	if c != nil && c.TransferAllUserComments != nil {
		return true
	}

	return false
}

// SetTransferAllUserComments allocates a new c.TransferAllUserComments and returns the pointer to it.
func (c *ChannelSlackRequest) SetTransferAllUserComments(v bool) {
	c.TransferAllUserComments = &v
}

// GetCheck returns the Check field if non-nil, zero value otherwise.
func (c *Check) GetCheck() string {
	if c == nil || c.Check == nil {
		return ""
	}
	return *c.Check
}

// GetCheckOk returns a tuple with the Check field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *Check) GetCheckOk() (string, bool) {
	if c == nil || c.Check == nil {
		return "", false
	}
	return *c.Check, true
}

// HasCheck returns a boolean if a field has been set.
func (c *Check) HasCheck() bool {
	if c != nil && c.Check != nil {
		return true
	}

	return false
}

// SetCheck allocates a new c.Check and returns the pointer to it.
func (c *Check) SetCheck(v string) {
	c.Check = &v
}

// GetHostName returns the HostName field if non-nil, zero value otherwise.
func (c *Check) GetHostName() string {
	if c == nil || c.HostName == nil {
		return ""
	}
	return *c.HostName
}

// GetHostNameOk returns a tuple with the HostName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *Check) GetHostNameOk() (string, bool) {
	if c == nil || c.HostName == nil {
		return "", false
	}
	return *c.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (c *Check) HasHostName() bool {
	if c != nil && c.HostName != nil {
		return true
	}

	return false
}

// SetHostName allocates a new c.HostName and returns the pointer to it.
func (c *Check) SetHostName(v string) {
	c.HostName = &v
}

// GetMessage returns the Message field if non-nil, zero value otherwise.
func (c *Check) GetMessage() string {
	if c == nil || c.Message == nil {
		return ""
	}
	return *c.Message
}

// GetMessageOk returns a tuple with the Message field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *Check) GetMessageOk() (string, bool) {
	if c == nil || c.Message == nil {
		return "", false
	}
	return *c.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (c *Check) HasMessage() bool {
	if c != nil && c.Message != nil {
		return true
	}

	return false
}

// SetMessage allocates a new c.Message and returns the pointer to it.
func (c *Check) SetMessage(v string) {
	c.Message = &v
}

// GetStatus returns the Status field if non-nil, zero value otherwise.
func (c *Check) GetStatus() Status {
	if c == nil || c.Status == nil {
		return 0
	}
	return *c.Status
}

// GetStatusOk returns a tuple with the Status field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *Check) GetStatusOk() (Status, bool) {
	if c == nil || c.Status == nil {
		return 0, false
	}
	return *c.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (c *Check) HasStatus() bool {
	if c != nil && c.Status != nil {
		return true
	}

	return false
}

// SetStatus allocates a new c.Status and returns the pointer to it.
func (c *Check) SetStatus(v Status) {
	c.Status = &v
}

// GetTimestamp returns the Timestamp field if non-nil, zero value otherwise.
func (c *Check) GetTimestamp() string {
	if c == nil || c.Timestamp == nil {
		return ""
	}
	return *c.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *Check) GetTimestampOk() (string, bool) {
	if c == nil || c.Timestamp == nil {
		return "", false
	}
	return *c.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (c *Check) HasTimestamp() bool {
	if c != nil && c.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp allocates a new c.Timestamp and returns the pointer to it.
func (c *Check) SetTimestamp(v string) {
	c.Timestamp = &v
}

// GetHandle returns the Handle field if non-nil, zero value otherwise.
func (c *Comment) GetHandle() string {
	if c == nil || c.Handle == nil {
		return ""
	}
	return *c.Handle
}

// GetHandleOk returns a tuple with the Handle field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *Comment) GetHandleOk() (string, bool) {
	if c == nil || c.Handle == nil {
		return "", false
	}
	return *c.Handle, true
}

// HasHandle returns a boolean if a field has been set.
func (c *Comment) HasHandle() bool {
	if c != nil && c.Handle != nil {
		return true
	}

	return false
}

// SetHandle allocates a new c.Handle and returns the pointer to it.
func (c *Comment) SetHandle(v string) {
	c.Handle = &v
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (c *Comment) GetId() int {
	if c == nil || c.Id == nil {
		return 0
	}
	return *c.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *Comment) GetIdOk() (int, bool) {
	if c == nil || c.Id == nil {
		return 0, false
	}
	return *c.Id, true
}

// HasId returns a boolean if a field has been set.
func (c *Comment) HasId() bool {
	if c != nil && c.Id != nil {
		return true
	}

	return false
}

// SetId allocates a new c.Id and returns the pointer to it.
func (c *Comment) SetId(v int) {
	c.Id = &v
}

// GetMessage returns the Message field if non-nil, zero value otherwise.
func (c *Comment) GetMessage() string {
	if c == nil || c.Message == nil {
		return ""
	}
	return *c.Message
}

// GetMessageOk returns a tuple with the Message field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *Comment) GetMessageOk() (string, bool) {
	if c == nil || c.Message == nil {
		return "", false
	}
	return *c.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (c *Comment) HasMessage() bool {
	if c != nil && c.Message != nil {
		return true
	}

	return false
}

// SetMessage allocates a new c.Message and returns the pointer to it.
func (c *Comment) SetMessage(v string) {
	c.Message = &v
}

// GetRelatedId returns the RelatedId field if non-nil, zero value otherwise.
func (c *Comment) GetRelatedId() int {
	if c == nil || c.RelatedId == nil {
		return 0
	}
	return *c.RelatedId
}

// GetRelatedIdOk returns a tuple with the RelatedId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *Comment) GetRelatedIdOk() (int, bool) {
	if c == nil || c.RelatedId == nil {
		return 0, false
	}
	return *c.RelatedId, true
}

// HasRelatedId returns a boolean if a field has been set.
func (c *Comment) HasRelatedId() bool {
	if c != nil && c.RelatedId != nil {
		return true
	}

	return false
}

// SetRelatedId allocates a new c.RelatedId and returns the pointer to it.
func (c *Comment) SetRelatedId(v int) {
	c.RelatedId = &v
}

// GetResource returns the Resource field if non-nil, zero value otherwise.
func (c *Comment) GetResource() string {
	if c == nil || c.Resource == nil {
		return ""
	}
	return *c.Resource
}

// GetResourceOk returns a tuple with the Resource field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *Comment) GetResourceOk() (string, bool) {
	if c == nil || c.Resource == nil {
		return "", false
	}
	return *c.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (c *Comment) HasResource() bool {
	if c != nil && c.Resource != nil {
		return true
	}

	return false
}

// SetResource allocates a new c.Resource and returns the pointer to it.
func (c *Comment) SetResource(v string) {
	c.Resource = &v
}

// GetUrl returns the Url field if non-nil, zero value otherwise.
func (c *Comment) GetUrl() string {
	if c == nil || c.Url == nil {
		return ""
	}
	return *c.Url
}

// GetUrlOk returns a tuple with the Url field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *Comment) GetUrlOk() (string, bool) {
	if c == nil || c.Url == nil {
		return "", false
	}
	return *c.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (c *Comment) HasUrl() bool {
	if c != nil && c.Url != nil {
		return true
	}

	return false
}

// SetUrl allocates a new c.Url and returns the pointer to it.
func (c *Comment) SetUrl(v string) {
	c.Url = &v
}

// GetColor returns the Color field if non-nil, zero value otherwise.
func (c *ConditionalFormat) GetColor() string {
	if c == nil || c.Color == nil {
		return ""
	}
	return *c.Color
}

// GetColorOk returns a tuple with the Color field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *ConditionalFormat) GetColorOk() (string, bool) {
	if c == nil || c.Color == nil {
		return "", false
	}
	return *c.Color, true
}

// HasColor returns a boolean if a field has been set.
func (c *ConditionalFormat) HasColor() bool {
	if c != nil && c.Color != nil {
		return true
	}

	return false
}

// SetColor allocates a new c.Color and returns the pointer to it.
func (c *ConditionalFormat) SetColor(v string) {
	c.Color = &v
}

// GetComparator returns the Comparator field if non-nil, zero value otherwise.
func (c *ConditionalFormat) GetComparator() string {
	if c == nil || c.Comparator == nil {
		return ""
	}
	return *c.Comparator
}

// GetComparatorOk returns a tuple with the Comparator field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *ConditionalFormat) GetComparatorOk() (string, bool) {
	if c == nil || c.Comparator == nil {
		return "", false
	}
	return *c.Comparator, true
}

// HasComparator returns a boolean if a field has been set.
func (c *ConditionalFormat) HasComparator() bool {
	if c != nil && c.Comparator != nil {
		return true
	}

	return false
}

// SetComparator allocates a new c.Comparator and returns the pointer to it.
func (c *ConditionalFormat) SetComparator(v string) {
	c.Comparator = &v
}

// GetImageURL returns the ImageURL field if non-nil, zero value otherwise.
func (c *ConditionalFormat) GetImageURL() string {
	if c == nil || c.ImageURL == nil {
		return ""
	}
	return *c.ImageURL
}

// GetImageURLOk returns a tuple with the ImageURL field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *ConditionalFormat) GetImageURLOk() (string, bool) {
	if c == nil || c.ImageURL == nil {
		return "", false
	}
	return *c.ImageURL, true
}

// HasImageURL returns a boolean if a field has been set.
func (c *ConditionalFormat) HasImageURL() bool {
	if c != nil && c.ImageURL != nil {
		return true
	}

	return false
}

// SetImageURL allocates a new c.ImageURL and returns the pointer to it.
func (c *ConditionalFormat) SetImageURL(v string) {
	c.ImageURL = &v
}

// GetInvert returns the Invert field if non-nil, zero value otherwise.
func (c *ConditionalFormat) GetInvert() bool {
	if c == nil || c.Invert == nil {
		return false
	}
	return *c.Invert
}

// GetInvertOk returns a tuple with the Invert field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *ConditionalFormat) GetInvertOk() (bool, bool) {
	if c == nil || c.Invert == nil {
		return false, false
	}
	return *c.Invert, true
}

// HasInvert returns a boolean if a field has been set.
func (c *ConditionalFormat) HasInvert() bool {
	if c != nil && c.Invert != nil {
		return true
	}

	return false
}

// SetInvert allocates a new c.Invert and returns the pointer to it.
func (c *ConditionalFormat) SetInvert(v bool) {
	c.Invert = &v
}

// GetPalette returns the Palette field if non-nil, zero value otherwise.
func (c *ConditionalFormat) GetPalette() string {
	if c == nil || c.Palette == nil {
		return ""
	}
	return *c.Palette
}

// GetPaletteOk returns a tuple with the Palette field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *ConditionalFormat) GetPaletteOk() (string, bool) {
	if c == nil || c.Palette == nil {
		return "", false
	}
	return *c.Palette, true
}

// HasPalette returns a boolean if a field has been set.
func (c *ConditionalFormat) HasPalette() bool {
	if c != nil && c.Palette != nil {
		return true
	}

	return false
}

// SetPalette allocates a new c.Palette and returns the pointer to it.
func (c *ConditionalFormat) SetPalette(v string) {
	c.Palette = &v
}

// GetValue returns the Value field if non-nil, zero value otherwise.
func (c *ConditionalFormat) GetValue() string {
	if c == nil || c.Value == nil {
		return ""
	}
	return *c.Value
}

// GetValueOk returns a tuple with the Value field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *ConditionalFormat) GetValueOk() (string, bool) {
	if c == nil || c.Value == nil {
		return "", false
	}
	return *c.Value, true
}

// HasValue returns a boolean if a field has been set.
func (c *ConditionalFormat) HasValue() bool {
	if c != nil && c.Value != nil {
		return true
	}

	return false
}

// SetValue allocates a new c.Value and returns the pointer to it.
func (c *ConditionalFormat) SetValue(v string) {
	c.Value = &v
}

// GetAccessRole returns the AccessRole field if non-nil, zero value otherwise.
func (c *CreatedBy) GetAccessRole() string {
	if c == nil || c.AccessRole == nil {
		return ""
	}
	return *c.AccessRole
}

// GetAccessRoleOk returns a tuple with the AccessRole field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *CreatedBy) GetAccessRoleOk() (string, bool) {
	if c == nil || c.AccessRole == nil {
		return "", false
	}
	return *c.AccessRole, true
}

// HasAccessRole returns a boolean if a field has been set.
func (c *CreatedBy) HasAccessRole() bool {
	if c != nil && c.AccessRole != nil {
		return true
	}

	return false
}

// SetAccessRole allocates a new c.AccessRole and returns the pointer to it.
func (c *CreatedBy) SetAccessRole(v string) {
	c.AccessRole = &v
}

// GetDisabled returns the Disabled field if non-nil, zero value otherwise.
func (c *CreatedBy) GetDisabled() bool {
	if c == nil || c.Disabled == nil {
		return false
	}
	return *c.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *CreatedBy) GetDisabledOk() (bool, bool) {
	if c == nil || c.Disabled == nil {
		return false, false
	}
	return *c.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (c *CreatedBy) HasDisabled() bool {
	if c != nil && c.Disabled != nil {
		return true
	}

	return false
}

// SetDisabled allocates a new c.Disabled and returns the pointer to it.
func (c *CreatedBy) SetDisabled(v bool) {
	c.Disabled = &v
}

// GetEmail returns the Email field if non-nil, zero value otherwise.
func (c *CreatedBy) GetEmail() string {
	if c == nil || c.Email == nil {
		return ""
	}
	return *c.Email
}

// GetEmailOk returns a tuple with the Email field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *CreatedBy) GetEmailOk() (string, bool) {
	if c == nil || c.Email == nil {
		return "", false
	}
	return *c.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (c *CreatedBy) HasEmail() bool {
	if c != nil && c.Email != nil {
		return true
	}

	return false
}

// SetEmail allocates a new c.Email and returns the pointer to it.
func (c *CreatedBy) SetEmail(v string) {
	c.Email = &v
}

// GetHandle returns the Handle field if non-nil, zero value otherwise.
func (c *CreatedBy) GetHandle() string {
	if c == nil || c.Handle == nil {
		return ""
	}
	return *c.Handle
}

// GetHandleOk returns a tuple with the Handle field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *CreatedBy) GetHandleOk() (string, bool) {
	if c == nil || c.Handle == nil {
		return "", false
	}
	return *c.Handle, true
}

// HasHandle returns a boolean if a field has been set.
func (c *CreatedBy) HasHandle() bool {
	if c != nil && c.Handle != nil {
		return true
	}

	return false
}

// SetHandle allocates a new c.Handle and returns the pointer to it.
func (c *CreatedBy) SetHandle(v string) {
	c.Handle = &v
}

// GetIcon returns the Icon field if non-nil, zero value otherwise.
func (c *CreatedBy) GetIcon() string {
	if c == nil || c.Icon == nil {
		return ""
	}
	return *c.Icon
}

// GetIconOk returns a tuple with the Icon field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *CreatedBy) GetIconOk() (string, bool) {
	if c == nil || c.Icon == nil {
		return "", false
	}
	return *c.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (c *CreatedBy) HasIcon() bool {
	if c != nil && c.Icon != nil {
		return true
	}

	return false
}

// SetIcon allocates a new c.Icon and returns the pointer to it.
func (c *CreatedBy) SetIcon(v string) {
	c.Icon = &v
}

// GetIsAdmin returns the IsAdmin field if non-nil, zero value otherwise.
func (c *CreatedBy) GetIsAdmin() bool {
	if c == nil || c.IsAdmin == nil {
		return false
	}
	return *c.IsAdmin
}

// GetIsAdminOk returns a tuple with the IsAdmin field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *CreatedBy) GetIsAdminOk() (bool, bool) {
	if c == nil || c.IsAdmin == nil {
		return false, false
	}
	return *c.IsAdmin, true
}

// HasIsAdmin returns a boolean if a field has been set.
func (c *CreatedBy) HasIsAdmin() bool {
	if c != nil && c.IsAdmin != nil {
		return true
	}

	return false
}

// SetIsAdmin allocates a new c.IsAdmin and returns the pointer to it.
func (c *CreatedBy) SetIsAdmin(v bool) {
	c.IsAdmin = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (c *CreatedBy) GetName() string {
	if c == nil || c.Name == nil {
		return ""
	}
	return *c.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *CreatedBy) GetNameOk() (string, bool) {
	if c == nil || c.Name == nil {
		return "", false
	}
	return *c.Name, true
}

// HasName returns a boolean if a field has been set.
func (c *CreatedBy) HasName() bool {
	if c != nil && c.Name != nil {
		return true
	}

	return false
}

// SetName allocates a new c.Name and returns the pointer to it.
func (c *CreatedBy) SetName(v string) {
	c.Name = &v
}

// GetRole returns the Role field if non-nil, zero value otherwise.
func (c *CreatedBy) GetRole() string {
	if c == nil || c.Role == nil {
		return ""
	}
	return *c.Role
}

// GetRoleOk returns a tuple with the Role field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *CreatedBy) GetRoleOk() (string, bool) {
	if c == nil || c.Role == nil {
		return "", false
	}
	return *c.Role, true
}

// HasRole returns a boolean if a field has been set.
func (c *CreatedBy) HasRole() bool {
	if c != nil && c.Role != nil {
		return true
	}

	return false
}

// SetRole allocates a new c.Role and returns the pointer to it.
func (c *CreatedBy) SetRole(v string) {
	c.Role = &v
}

// GetVerified returns the Verified field if non-nil, zero value otherwise.
func (c *CreatedBy) GetVerified() bool {
	if c == nil || c.Verified == nil {
		return false
	}
	return *c.Verified
}

// GetVerifiedOk returns a tuple with the Verified field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *CreatedBy) GetVerifiedOk() (bool, bool) {
	if c == nil || c.Verified == nil {
		return false, false
	}
	return *c.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (c *CreatedBy) HasVerified() bool {
	if c != nil && c.Verified != nil {
		return true
	}

	return false
}

// SetVerified allocates a new c.Verified and returns the pointer to it.
func (c *CreatedBy) SetVerified(v bool) {
	c.Verified = &v
}

// GetEmail returns the Email field if non-nil, zero value otherwise.
func (c *Creator) GetEmail() string {
	if c == nil || c.Email == nil {
		return ""
	}
	return *c.Email
}

// GetEmailOk returns a tuple with the Email field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *Creator) GetEmailOk() (string, bool) {
	if c == nil || c.Email == nil {
		return "", false
	}
	return *c.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (c *Creator) HasEmail() bool {
	if c != nil && c.Email != nil {
		return true
	}

	return false
}

// SetEmail allocates a new c.Email and returns the pointer to it.
func (c *Creator) SetEmail(v string) {
	c.Email = &v
}

// GetHandle returns the Handle field if non-nil, zero value otherwise.
func (c *Creator) GetHandle() string {
	if c == nil || c.Handle == nil {
		return ""
	}
	return *c.Handle
}

// GetHandleOk returns a tuple with the Handle field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *Creator) GetHandleOk() (string, bool) {
	if c == nil || c.Handle == nil {
		return "", false
	}
	return *c.Handle, true
}

// HasHandle returns a boolean if a field has been set.
func (c *Creator) HasHandle() bool {
	if c != nil && c.Handle != nil {
		return true
	}

	return false
}

// SetHandle allocates a new c.Handle and returns the pointer to it.
func (c *Creator) SetHandle(v string) {
	c.Handle = &v
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (c *Creator) GetId() int {
	if c == nil || c.Id == nil {
		return 0
	}
	return *c.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *Creator) GetIdOk() (int, bool) {
	if c == nil || c.Id == nil {
		return 0, false
	}
	return *c.Id, true
}

// HasId returns a boolean if a field has been set.
func (c *Creator) HasId() bool {
	if c != nil && c.Id != nil {
		return true
	}

	return false
}

// SetId allocates a new c.Id and returns the pointer to it.
func (c *Creator) SetId(v int) {
	c.Id = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (c *Creator) GetName() string {
	if c == nil || c.Name == nil {
		return ""
	}
	return *c.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (c *Creator) GetNameOk() (string, bool) {
	if c == nil || c.Name == nil {
		return "", false
	}
	return *c.Name, true
}

// HasName returns a boolean if a field has been set.
func (c *Creator) HasName() bool {
	if c != nil && c.Name != nil {
		return true
	}

	return false
}

// SetName allocates a new c.Name and returns the pointer to it.
func (c *Creator) SetName(v string) {
	c.Name = &v
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (d *Dashboard) GetDescription() string {
	if d == nil || d.Description == nil {
		return ""
	}
	return *d.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *Dashboard) GetDescriptionOk() (string, bool) {
	if d == nil || d.Description == nil {
		return "", false
	}
	return *d.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (d *Dashboard) HasDescription() bool {
	if d != nil && d.Description != nil {
		return true
	}

	return false
}

// SetDescription allocates a new d.Description and returns the pointer to it.
func (d *Dashboard) SetDescription(v string) {
	d.Description = &v
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (d *Dashboard) GetId() int {
	if d == nil || d.Id == nil {
		return 0
	}
	return *d.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *Dashboard) GetIdOk() (int, bool) {
	if d == nil || d.Id == nil {
		return 0, false
	}
	return *d.Id, true
}

// HasId returns a boolean if a field has been set.
func (d *Dashboard) HasId() bool {
	if d != nil && d.Id != nil {
		return true
	}

	return false
}

// SetId allocates a new d.Id and returns the pointer to it.
func (d *Dashboard) SetId(v int) {
	d.Id = &v
}

// GetReadOnly returns the ReadOnly field if non-nil, zero value otherwise.
func (d *Dashboard) GetReadOnly() bool {
	if d == nil || d.ReadOnly == nil {
		return false
	}
	return *d.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *Dashboard) GetReadOnlyOk() (bool, bool) {
	if d == nil || d.ReadOnly == nil {
		return false, false
	}
	return *d.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (d *Dashboard) HasReadOnly() bool {
	if d != nil && d.ReadOnly != nil {
		return true
	}

	return false
}

// SetReadOnly allocates a new d.ReadOnly and returns the pointer to it.
func (d *Dashboard) SetReadOnly(v bool) {
	d.ReadOnly = &v
}

// GetTitle returns the Title field if non-nil, zero value otherwise.
func (d *Dashboard) GetTitle() string {
	if d == nil || d.Title == nil {
		return ""
	}
	return *d.Title
}

// GetTitleOk returns a tuple with the Title field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *Dashboard) GetTitleOk() (string, bool) {
	if d == nil || d.Title == nil {
		return "", false
	}
	return *d.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (d *Dashboard) HasTitle() bool {
	if d != nil && d.Title != nil {
		return true
	}

	return false
}

// SetTitle allocates a new d.Title and returns the pointer to it.
func (d *Dashboard) SetTitle(v string) {
	d.Title = &v
}

// GetComparator returns the Comparator field if non-nil, zero value otherwise.
func (d *DashboardConditionalFormat) GetComparator() string {
	if d == nil || d.Comparator == nil {
		return ""
	}
	return *d.Comparator
}

// GetComparatorOk returns a tuple with the Comparator field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *DashboardConditionalFormat) GetComparatorOk() (string, bool) {
	if d == nil || d.Comparator == nil {
		return "", false
	}
	return *d.Comparator, true
}

// HasComparator returns a boolean if a field has been set.
func (d *DashboardConditionalFormat) HasComparator() bool {
	if d != nil && d.Comparator != nil {
		return true
	}

	return false
}

// SetComparator allocates a new d.Comparator and returns the pointer to it.
func (d *DashboardConditionalFormat) SetComparator(v string) {
	d.Comparator = &v
}

// GetCustomBgColor returns the CustomBgColor field if non-nil, zero value otherwise.
func (d *DashboardConditionalFormat) GetCustomBgColor() string {
	if d == nil || d.CustomBgColor == nil {
		return ""
	}
	return *d.CustomBgColor
}

// GetCustomBgColorOk returns a tuple with the CustomBgColor field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *DashboardConditionalFormat) GetCustomBgColorOk() (string, bool) {
	if d == nil || d.CustomBgColor == nil {
		return "", false
	}
	return *d.CustomBgColor, true
}

// HasCustomBgColor returns a boolean if a field has been set.
func (d *DashboardConditionalFormat) HasCustomBgColor() bool {
	if d != nil && d.CustomBgColor != nil {
		return true
	}

	return false
}

// SetCustomBgColor allocates a new d.CustomBgColor and returns the pointer to it.
func (d *DashboardConditionalFormat) SetCustomBgColor(v string) {
	d.CustomBgColor = &v
}

// GetCustomFgColor returns the CustomFgColor field if non-nil, zero value otherwise.
func (d *DashboardConditionalFormat) GetCustomFgColor() string {
	if d == nil || d.CustomFgColor == nil {
		return ""
	}
	return *d.CustomFgColor
}

// GetCustomFgColorOk returns a tuple with the CustomFgColor field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *DashboardConditionalFormat) GetCustomFgColorOk() (string, bool) {
	if d == nil || d.CustomFgColor == nil {
		return "", false
	}
	return *d.CustomFgColor, true
}

// HasCustomFgColor returns a boolean if a field has been set.
func (d *DashboardConditionalFormat) HasCustomFgColor() bool {
	if d != nil && d.CustomFgColor != nil {
		return true
	}

	return false
}

// SetCustomFgColor allocates a new d.CustomFgColor and returns the pointer to it.
func (d *DashboardConditionalFormat) SetCustomFgColor(v string) {
	d.CustomFgColor = &v
}

// GetCustomImageUrl returns the CustomImageUrl field if non-nil, zero value otherwise.
func (d *DashboardConditionalFormat) GetCustomImageUrl() string {
	if d == nil || d.CustomImageUrl == nil {
		return ""
	}
	return *d.CustomImageUrl
}

// GetCustomImageUrlOk returns a tuple with the CustomImageUrl field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *DashboardConditionalFormat) GetCustomImageUrlOk() (string, bool) {
	if d == nil || d.CustomImageUrl == nil {
		return "", false
	}
	return *d.CustomImageUrl, true
}

// HasCustomImageUrl returns a boolean if a field has been set.
func (d *DashboardConditionalFormat) HasCustomImageUrl() bool {
	if d != nil && d.CustomImageUrl != nil {
		return true
	}

	return false
}

// SetCustomImageUrl allocates a new d.CustomImageUrl and returns the pointer to it.
func (d *DashboardConditionalFormat) SetCustomImageUrl(v string) {
	d.CustomImageUrl = &v
}

// GetInverted returns the Inverted field if non-nil, zero value otherwise.
func (d *DashboardConditionalFormat) GetInverted() bool {
	if d == nil || d.Inverted == nil {
		return false
	}
	return *d.Inverted
}

// GetInvertedOk returns a tuple with the Inverted field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *DashboardConditionalFormat) GetInvertedOk() (bool, bool) {
	if d == nil || d.Inverted == nil {
		return false, false
	}
	return *d.Inverted, true
}

// HasInverted returns a boolean if a field has been set.
func (d *DashboardConditionalFormat) HasInverted() bool {
	if d != nil && d.Inverted != nil {
		return true
	}

	return false
}

// SetInverted allocates a new d.Inverted and returns the pointer to it.
func (d *DashboardConditionalFormat) SetInverted(v bool) {
	d.Inverted = &v
}

// GetPalette returns the Palette field if non-nil, zero value otherwise.
func (d *DashboardConditionalFormat) GetPalette() string {
	if d == nil || d.Palette == nil {
		return ""
	}
	return *d.Palette
}

// GetPaletteOk returns a tuple with the Palette field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *DashboardConditionalFormat) GetPaletteOk() (string, bool) {
	if d == nil || d.Palette == nil {
		return "", false
	}
	return *d.Palette, true
}

// HasPalette returns a boolean if a field has been set.
func (d *DashboardConditionalFormat) HasPalette() bool {
	if d != nil && d.Palette != nil {
		return true
	}

	return false
}

// SetPalette allocates a new d.Palette and returns the pointer to it.
func (d *DashboardConditionalFormat) SetPalette(v string) {
	d.Palette = &v
}

// GetValue returns the Value field if non-nil, zero value otherwise.
func (d *DashboardConditionalFormat) GetValue() json.Number {
	if d == nil || d.Value == nil {
		return ""
	}
	return *d.Value
}

// GetValueOk returns a tuple with the Value field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *DashboardConditionalFormat) GetValueOk() (json.Number, bool) {
	if d == nil || d.Value == nil {
		return "", false
	}
	return *d.Value, true
}

// HasValue returns a boolean if a field has been set.
func (d *DashboardConditionalFormat) HasValue() bool {
	if d != nil && d.Value != nil {
		return true
	}

	return false
}

// SetValue allocates a new d.Value and returns the pointer to it.
func (d *DashboardConditionalFormat) SetValue(v json.Number) {
	d.Value = &v
}

// GetDashboardCount returns the DashboardCount field if non-nil, zero value otherwise.
func (d *DashboardList) GetDashboardCount() int {
	if d == nil || d.DashboardCount == nil {
		return 0
	}
	return *d.DashboardCount
}

// GetDashboardCountOk returns a tuple with the DashboardCount field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *DashboardList) GetDashboardCountOk() (int, bool) {
	if d == nil || d.DashboardCount == nil {
		return 0, false
	}
	return *d.DashboardCount, true
}

// HasDashboardCount returns a boolean if a field has been set.
func (d *DashboardList) HasDashboardCount() bool {
	if d != nil && d.DashboardCount != nil {
		return true
	}

	return false
}

// SetDashboardCount allocates a new d.DashboardCount and returns the pointer to it.
func (d *DashboardList) SetDashboardCount(v int) {
	d.DashboardCount = &v
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (d *DashboardList) GetId() int {
	if d == nil || d.Id == nil {
		return 0
	}
	return *d.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *DashboardList) GetIdOk() (int, bool) {
	if d == nil || d.Id == nil {
		return 0, false
	}
	return *d.Id, true
}

// HasId returns a boolean if a field has been set.
func (d *DashboardList) HasId() bool {
	if d != nil && d.Id != nil {
		return true
	}

	return false
}

// SetId allocates a new d.Id and returns the pointer to it.
func (d *DashboardList) SetId(v int) {
	d.Id = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (d *DashboardList) GetName() string {
	if d == nil || d.Name == nil {
		return ""
	}
	return *d.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *DashboardList) GetNameOk() (string, bool) {
	if d == nil || d.Name == nil {
		return "", false
	}
	return *d.Name, true
}

// HasName returns a boolean if a field has been set.
func (d *DashboardList) HasName() bool {
	if d != nil && d.Name != nil {
		return true
	}

	return false
}

// SetName allocates a new d.Name and returns the pointer to it.
func (d *DashboardList) SetName(v string) {
	d.Name = &v
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (d *DashboardListItem) GetId() int {
	if d == nil || d.Id == nil {
		return 0
	}
	return *d.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *DashboardListItem) GetIdOk() (int, bool) {
	if d == nil || d.Id == nil {
		return 0, false
	}
	return *d.Id, true
}

// HasId returns a boolean if a field has been set.
func (d *DashboardListItem) HasId() bool {
	if d != nil && d.Id != nil {
		return true
	}

	return false
}

// SetId allocates a new d.Id and returns the pointer to it.
func (d *DashboardListItem) SetId(v int) {
	d.Id = &v
}

// GetType returns the Type field if non-nil, zero value otherwise.
func (d *DashboardListItem) GetType() string {
	if d == nil || d.Type == nil {
		return ""
	}
	return *d.Type
}

// GetTypeOk returns a tuple with the Type field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *DashboardListItem) GetTypeOk() (string, bool) {
	if d == nil || d.Type == nil {
		return "", false
	}
	return *d.Type, true
}

// HasType returns a boolean if a field has been set.
func (d *DashboardListItem) HasType() bool {
	if d != nil && d.Type != nil {
		return true
	}

	return false
}

// SetType allocates a new d.Type and returns the pointer to it.
func (d *DashboardListItem) SetType(v string) {
	d.Type = &v
}

// GetCreated returns the Created field if non-nil, zero value otherwise.
func (d *DashboardLite) GetCreated() string {
	if d == nil || d.Created == nil {
		return ""
	}
	return *d.Created
}

// GetCreatedOk returns a tuple with the Created field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *DashboardLite) GetCreatedOk() (string, bool) {
	if d == nil || d.Created == nil {
		return "", false
	}
	return *d.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (d *DashboardLite) HasCreated() bool {
	if d != nil && d.Created != nil {
		return true
	}

	return false
}

// SetCreated allocates a new d.Created and returns the pointer to it.
func (d *DashboardLite) SetCreated(v string) {
	d.Created = &v
}

// GetCreatedBy returns the CreatedBy field if non-nil, zero value otherwise.
func (d *DashboardLite) GetCreatedBy() CreatedBy {
	if d == nil || d.CreatedBy == nil {
		return CreatedBy{}
	}
	return *d.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *DashboardLite) GetCreatedByOk() (CreatedBy, bool) {
	if d == nil || d.CreatedBy == nil {
		return CreatedBy{}, false
	}
	return *d.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (d *DashboardLite) HasCreatedBy() bool {
	if d != nil && d.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy allocates a new d.CreatedBy and returns the pointer to it.
func (d *DashboardLite) SetCreatedBy(v CreatedBy) {
	d.CreatedBy = &v
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (d *DashboardLite) GetDescription() string {
	if d == nil || d.Description == nil {
		return ""
	}
	return *d.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *DashboardLite) GetDescriptionOk() (string, bool) {
	if d == nil || d.Description == nil {
		return "", false
	}
	return *d.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (d *DashboardLite) HasDescription() bool {
	if d != nil && d.Description != nil {
		return true
	}

	return false
}

// SetDescription allocates a new d.Description and returns the pointer to it.
func (d *DashboardLite) SetDescription(v string) {
	d.Description = &v
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (d *DashboardLite) GetId() int {
	if d == nil || d.Id == nil {
		return 0
	}
	return *d.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *DashboardLite) GetIdOk() (int, bool) {
	if d == nil || d.Id == nil {
		return 0, false
	}
	return *d.Id, true
}

// HasId returns a boolean if a field has been set.
func (d *DashboardLite) HasId() bool {
	if d != nil && d.Id != nil {
		return true
	}

	return false
}

// SetId allocates a new d.Id and returns the pointer to it.
func (d *DashboardLite) SetId(v int) {
	d.Id = &v
}

// GetModified returns the Modified field if non-nil, zero value otherwise.
func (d *DashboardLite) GetModified() string {
	if d == nil || d.Modified == nil {
		return ""
	}
	return *d.Modified
}

// GetModifiedOk returns a tuple with the Modified field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *DashboardLite) GetModifiedOk() (string, bool) {
	if d == nil || d.Modified == nil {
		return "", false
	}
	return *d.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (d *DashboardLite) HasModified() bool {
	if d != nil && d.Modified != nil {
		return true
	}

	return false
}

// SetModified allocates a new d.Modified and returns the pointer to it.
func (d *DashboardLite) SetModified(v string) {
	d.Modified = &v
}

// GetReadOnly returns the ReadOnly field if non-nil, zero value otherwise.
func (d *DashboardLite) GetReadOnly() bool {
	if d == nil || d.ReadOnly == nil {
		return false
	}
	return *d.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *DashboardLite) GetReadOnlyOk() (bool, bool) {
	if d == nil || d.ReadOnly == nil {
		return false, false
	}
	return *d.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (d *DashboardLite) HasReadOnly() bool {
	if d != nil && d.ReadOnly != nil {
		return true
	}

	return false
}

// SetReadOnly allocates a new d.ReadOnly and returns the pointer to it.
func (d *DashboardLite) SetReadOnly(v bool) {
	d.ReadOnly = &v
}

// GetResource returns the Resource field if non-nil, zero value otherwise.
func (d *DashboardLite) GetResource() string {
	if d == nil || d.Resource == nil {
		return ""
	}
	return *d.Resource
}

// GetResourceOk returns a tuple with the Resource field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *DashboardLite) GetResourceOk() (string, bool) {
	if d == nil || d.Resource == nil {
		return "", false
	}
	return *d.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (d *DashboardLite) HasResource() bool {
	if d != nil && d.Resource != nil {
		return true
	}

	return false
}

// SetResource allocates a new d.Resource and returns the pointer to it.
func (d *DashboardLite) SetResource(v string) {
	d.Resource = &v
}

// GetTitle returns the Title field if non-nil, zero value otherwise.
func (d *DashboardLite) GetTitle() string {
	if d == nil || d.Title == nil {
		return ""
	}
	return *d.Title
}

// GetTitleOk returns a tuple with the Title field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *DashboardLite) GetTitleOk() (string, bool) {
	if d == nil || d.Title == nil {
		return "", false
	}
	return *d.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (d *DashboardLite) HasTitle() bool {
	if d != nil && d.Title != nil {
		return true
	}

	return false
}

// SetTitle allocates a new d.Title and returns the pointer to it.
func (d *DashboardLite) SetTitle(v string) {
	d.Title = &v
}

// GetActive returns the Active field if non-nil, zero value otherwise.
func (d *Downtime) GetActive() bool {
	if d == nil || d.Active == nil {
		return false
	}
	return *d.Active
}

// GetActiveOk returns a tuple with the Active field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *Downtime) GetActiveOk() (bool, bool) {
	if d == nil || d.Active == nil {
		return false, false
	}
	return *d.Active, true
}

// HasActive returns a boolean if a field has been set.
func (d *Downtime) HasActive() bool {
	if d != nil && d.Active != nil {
		return true
	}

	return false
}

// SetActive allocates a new d.Active and returns the pointer to it.
func (d *Downtime) SetActive(v bool) {
	d.Active = &v
}

// GetCanceled returns the Canceled field if non-nil, zero value otherwise.
func (d *Downtime) GetCanceled() int {
	if d == nil || d.Canceled == nil {
		return 0
	}
	return *d.Canceled
}

// GetCanceledOk returns a tuple with the Canceled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *Downtime) GetCanceledOk() (int, bool) {
	if d == nil || d.Canceled == nil {
		return 0, false
	}
	return *d.Canceled, true
}

// HasCanceled returns a boolean if a field has been set.
func (d *Downtime) HasCanceled() bool {
	if d != nil && d.Canceled != nil {
		return true
	}

	return false
}

// SetCanceled allocates a new d.Canceled and returns the pointer to it.
func (d *Downtime) SetCanceled(v int) {
	d.Canceled = &v
}

// GetDisabled returns the Disabled field if non-nil, zero value otherwise.
func (d *Downtime) GetDisabled() bool {
	if d == nil || d.Disabled == nil {
		return false
	}
	return *d.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *Downtime) GetDisabledOk() (bool, bool) {
	if d == nil || d.Disabled == nil {
		return false, false
	}
	return *d.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (d *Downtime) HasDisabled() bool {
	if d != nil && d.Disabled != nil {
		return true
	}

	return false
}

// SetDisabled allocates a new d.Disabled and returns the pointer to it.
func (d *Downtime) SetDisabled(v bool) {
	d.Disabled = &v
}

// GetEnd returns the End field if non-nil, zero value otherwise.
func (d *Downtime) GetEnd() int {
	if d == nil || d.End == nil {
		return 0
	}
	return *d.End
}

// GetEndOk returns a tuple with the End field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *Downtime) GetEndOk() (int, bool) {
	if d == nil || d.End == nil {
		return 0, false
	}
	return *d.End, true
}

// HasEnd returns a boolean if a field has been set.
func (d *Downtime) HasEnd() bool {
	if d != nil && d.End != nil {
		return true
	}

	return false
}

// SetEnd allocates a new d.End and returns the pointer to it.
func (d *Downtime) SetEnd(v int) {
	d.End = &v
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (d *Downtime) GetId() int {
	if d == nil || d.Id == nil {
		return 0
	}
	return *d.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *Downtime) GetIdOk() (int, bool) {
	if d == nil || d.Id == nil {
		return 0, false
	}
	return *d.Id, true
}

// HasId returns a boolean if a field has been set.
func (d *Downtime) HasId() bool {
	if d != nil && d.Id != nil {
		return true
	}

	return false
}

// SetId allocates a new d.Id and returns the pointer to it.
func (d *Downtime) SetId(v int) {
	d.Id = &v
}

// GetMessage returns the Message field if non-nil, zero value otherwise.
func (d *Downtime) GetMessage() string {
	if d == nil || d.Message == nil {
		return ""
	}
	return *d.Message
}

// GetMessageOk returns a tuple with the Message field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *Downtime) GetMessageOk() (string, bool) {
	if d == nil || d.Message == nil {
		return "", false
	}
	return *d.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (d *Downtime) HasMessage() bool {
	if d != nil && d.Message != nil {
		return true
	}

	return false
}

// SetMessage allocates a new d.Message and returns the pointer to it.
func (d *Downtime) SetMessage(v string) {
	d.Message = &v
}

// GetMonitorId returns the MonitorId field if non-nil, zero value otherwise.
func (d *Downtime) GetMonitorId() int {
	if d == nil || d.MonitorId == nil {
		return 0
	}
	return *d.MonitorId
}

// GetMonitorIdOk returns a tuple with the MonitorId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *Downtime) GetMonitorIdOk() (int, bool) {
	if d == nil || d.MonitorId == nil {
		return 0, false
	}
	return *d.MonitorId, true
}

// HasMonitorId returns a boolean if a field has been set.
func (d *Downtime) HasMonitorId() bool {
	if d != nil && d.MonitorId != nil {
		return true
	}

	return false
}

// SetMonitorId allocates a new d.MonitorId and returns the pointer to it.
func (d *Downtime) SetMonitorId(v int) {
	d.MonitorId = &v
}

// GetRecurrence returns the Recurrence field if non-nil, zero value otherwise.
func (d *Downtime) GetRecurrence() Recurrence {
	if d == nil || d.Recurrence == nil {
		return Recurrence{}
	}
	return *d.Recurrence
}

// GetRecurrenceOk returns a tuple with the Recurrence field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *Downtime) GetRecurrenceOk() (Recurrence, bool) {
	if d == nil || d.Recurrence == nil {
		return Recurrence{}, false
	}
	return *d.Recurrence, true
}

// HasRecurrence returns a boolean if a field has been set.
func (d *Downtime) HasRecurrence() bool {
	if d != nil && d.Recurrence != nil {
		return true
	}

	return false
}

// SetRecurrence allocates a new d.Recurrence and returns the pointer to it.
func (d *Downtime) SetRecurrence(v Recurrence) {
	d.Recurrence = &v
}

// GetStart returns the Start field if non-nil, zero value otherwise.
func (d *Downtime) GetStart() int {
	if d == nil || d.Start == nil {
		return 0
	}
	return *d.Start
}

// GetStartOk returns a tuple with the Start field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (d *Downtime) GetStartOk() (int, bool) {
	if d == nil || d.Start == nil {
		return 0, false
	}
	return *d.Start, true
}

// HasStart returns a boolean if a field has been set.
func (d *Downtime) HasStart() bool {
	if d != nil && d.Start != nil {
		return true
	}

	return false
}

// SetStart allocates a new d.Start and returns the pointer to it.
func (d *Downtime) SetStart(v int) {
	d.Start = &v
}

// GetAggregation returns the Aggregation field if non-nil, zero value otherwise.
func (e *Event) GetAggregation() string {
	if e == nil || e.Aggregation == nil {
		return ""
	}
	return *e.Aggregation
}

// GetAggregationOk returns a tuple with the Aggregation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (e *Event) GetAggregationOk() (string, bool) {
	if e == nil || e.Aggregation == nil {
		return "", false
	}
	return *e.Aggregation, true
}

// HasAggregation returns a boolean if a field has been set.
func (e *Event) HasAggregation() bool {
	if e != nil && e.Aggregation != nil {
		return true
	}

	return false
}

// SetAggregation allocates a new e.Aggregation and returns the pointer to it.
func (e *Event) SetAggregation(v string) {
	e.Aggregation = &v
}

// GetAlertType returns the AlertType field if non-nil, zero value otherwise.
func (e *Event) GetAlertType() string {
	if e == nil || e.AlertType == nil {
		return ""
	}
	return *e.AlertType
}

// GetAlertTypeOk returns a tuple with the AlertType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (e *Event) GetAlertTypeOk() (string, bool) {
	if e == nil || e.AlertType == nil {
		return "", false
	}
	return *e.AlertType, true
}

// HasAlertType returns a boolean if a field has been set.
func (e *Event) HasAlertType() bool {
	if e != nil && e.AlertType != nil {
		return true
	}

	return false
}

// SetAlertType allocates a new e.AlertType and returns the pointer to it.
func (e *Event) SetAlertType(v string) {
	e.AlertType = &v
}

// GetEventType returns the EventType field if non-nil, zero value otherwise.
func (e *Event) GetEventType() string {
	if e == nil || e.EventType == nil {
		return ""
	}
	return *e.EventType
}

// GetEventTypeOk returns a tuple with the EventType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (e *Event) GetEventTypeOk() (string, bool) {
	if e == nil || e.EventType == nil {
		return "", false
	}
	return *e.EventType, true
}

// HasEventType returns a boolean if a field has been set.
func (e *Event) HasEventType() bool {
	if e != nil && e.EventType != nil {
		return true
	}

	return false
}

// SetEventType allocates a new e.EventType and returns the pointer to it.
func (e *Event) SetEventType(v string) {
	e.EventType = &v
}

// GetHost returns the Host field if non-nil, zero value otherwise.
func (e *Event) GetHost() string {
	if e == nil || e.Host == nil {
		return ""
	}
	return *e.Host
}

// GetHostOk returns a tuple with the Host field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (e *Event) GetHostOk() (string, bool) {
	if e == nil || e.Host == nil {
		return "", false
	}
	return *e.Host, true
}

// HasHost returns a boolean if a field has been set.
func (e *Event) HasHost() bool {
	if e != nil && e.Host != nil {
		return true
	}

	return false
}

// SetHost allocates a new e.Host and returns the pointer to it.
func (e *Event) SetHost(v string) {
	e.Host = &v
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (e *Event) GetId() int {
	if e == nil || e.Id == nil {
		return 0
	}
	return *e.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (e *Event) GetIdOk() (int, bool) {
	if e == nil || e.Id == nil {
		return 0, false
	}
	return *e.Id, true
}

// HasId returns a boolean if a field has been set.
func (e *Event) HasId() bool {
	if e != nil && e.Id != nil {
		return true
	}

	return false
}

// SetId allocates a new e.Id and returns the pointer to it.
func (e *Event) SetId(v int) {
	e.Id = &v
}

// GetPriority returns the Priority field if non-nil, zero value otherwise.
func (e *Event) GetPriority() string {
	if e == nil || e.Priority == nil {
		return ""
	}
	return *e.Priority
}

// GetPriorityOk returns a tuple with the Priority field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (e *Event) GetPriorityOk() (string, bool) {
	if e == nil || e.Priority == nil {
		return "", false
	}
	return *e.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (e *Event) HasPriority() bool {
	if e != nil && e.Priority != nil {
		return true
	}

	return false
}

// SetPriority allocates a new e.Priority and returns the pointer to it.
func (e *Event) SetPriority(v string) {
	e.Priority = &v
}

// GetResource returns the Resource field if non-nil, zero value otherwise.
func (e *Event) GetResource() string {
	if e == nil || e.Resource == nil {
		return ""
	}
	return *e.Resource
}

// GetResourceOk returns a tuple with the Resource field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (e *Event) GetResourceOk() (string, bool) {
	if e == nil || e.Resource == nil {
		return "", false
	}
	return *e.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (e *Event) HasResource() bool {
	if e != nil && e.Resource != nil {
		return true
	}

	return false
}

// SetResource allocates a new e.Resource and returns the pointer to it.
func (e *Event) SetResource(v string) {
	e.Resource = &v
}

// GetSourceType returns the SourceType field if non-nil, zero value otherwise.
func (e *Event) GetSourceType() string {
	if e == nil || e.SourceType == nil {
		return ""
	}
	return *e.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (e *Event) GetSourceTypeOk() (string, bool) {
	if e == nil || e.SourceType == nil {
		return "", false
	}
	return *e.SourceType, true
}

// HasSourceType returns a boolean if a field has been set.
func (e *Event) HasSourceType() bool {
	if e != nil && e.SourceType != nil {
		return true
	}

	return false
}

// SetSourceType allocates a new e.SourceType and returns the pointer to it.
func (e *Event) SetSourceType(v string) {
	e.SourceType = &v
}

// GetText returns the Text field if non-nil, zero value otherwise.
func (e *Event) GetText() string {
	if e == nil || e.Text == nil {
		return ""
	}
	return *e.Text
}

// GetTextOk returns a tuple with the Text field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (e *Event) GetTextOk() (string, bool) {
	if e == nil || e.Text == nil {
		return "", false
	}
	return *e.Text, true
}

// HasText returns a boolean if a field has been set.
func (e *Event) HasText() bool {
	if e != nil && e.Text != nil {
		return true
	}

	return false
}

// SetText allocates a new e.Text and returns the pointer to it.
func (e *Event) SetText(v string) {
	e.Text = &v
}

// GetTime returns the Time field if non-nil, zero value otherwise.
func (e *Event) GetTime() int {
	if e == nil || e.Time == nil {
		return 0
	}
	return *e.Time
}

// GetTimeOk returns a tuple with the Time field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (e *Event) GetTimeOk() (int, bool) {
	if e == nil || e.Time == nil {
		return 0, false
	}
	return *e.Time, true
}

// HasTime returns a boolean if a field has been set.
func (e *Event) HasTime() bool {
	if e != nil && e.Time != nil {
		return true
	}

	return false
}

// SetTime allocates a new e.Time and returns the pointer to it.
func (e *Event) SetTime(v int) {
	e.Time = &v
}

// GetTitle returns the Title field if non-nil, zero value otherwise.
func (e *Event) GetTitle() string {
	if e == nil || e.Title == nil {
		return ""
	}
	return *e.Title
}

// GetTitleOk returns a tuple with the Title field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (e *Event) GetTitleOk() (string, bool) {
	if e == nil || e.Title == nil {
		return "", false
	}
	return *e.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (e *Event) HasTitle() bool {
	if e != nil && e.Title != nil {
		return true
	}

	return false
}

// SetTitle allocates a new e.Title and returns the pointer to it.
func (e *Event) SetTitle(v string) {
	e.Title = &v
}

// GetUrl returns the Url field if non-nil, zero value otherwise.
func (e *Event) GetUrl() string {
	if e == nil || e.Url == nil {
		return ""
	}
	return *e.Url
}

// GetUrlOk returns a tuple with the Url field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (e *Event) GetUrlOk() (string, bool) {
	if e == nil || e.Url == nil {
		return "", false
	}
	return *e.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (e *Event) HasUrl() bool {
	if e != nil && e.Url != nil {
		return true
	}

	return false
}

// SetUrl allocates a new e.Url and returns the pointer to it.
func (e *Event) SetUrl(v string) {
	e.Url = &v
}

// GetDefinition returns the Definition field if non-nil, zero value otherwise.
func (g *Graph) GetDefinition() GraphDefinition {
	if g == nil || g.Definition == nil {
		return GraphDefinition{}
	}
	return *g.Definition
}

// GetDefinitionOk returns a tuple with the Definition field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *Graph) GetDefinitionOk() (GraphDefinition, bool) {
	if g == nil || g.Definition == nil {
		return GraphDefinition{}, false
	}
	return *g.Definition, true
}

// HasDefinition returns a boolean if a field has been set.
func (g *Graph) HasDefinition() bool {
	if g != nil && g.Definition != nil {
		return true
	}

	return false
}

// SetDefinition allocates a new g.Definition and returns the pointer to it.
func (g *Graph) SetDefinition(v GraphDefinition) {
	g.Definition = &v
}

// GetTitle returns the Title field if non-nil, zero value otherwise.
func (g *Graph) GetTitle() string {
	if g == nil || g.Title == nil {
		return ""
	}
	return *g.Title
}

// GetTitleOk returns a tuple with the Title field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *Graph) GetTitleOk() (string, bool) {
	if g == nil || g.Title == nil {
		return "", false
	}
	return *g.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (g *Graph) HasTitle() bool {
	if g != nil && g.Title != nil {
		return true
	}

	return false
}

// SetTitle allocates a new g.Title and returns the pointer to it.
func (g *Graph) SetTitle(v string) {
	g.Title = &v
}

// GetAutoscale returns the Autoscale field if non-nil, zero value otherwise.
func (g *GraphDefinition) GetAutoscale() bool {
	if g == nil || g.Autoscale == nil {
		return false
	}
	return *g.Autoscale
}

// GetAutoscaleOk returns a tuple with the Autoscale field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinition) GetAutoscaleOk() (bool, bool) {
	if g == nil || g.Autoscale == nil {
		return false, false
	}
	return *g.Autoscale, true
}

// HasAutoscale returns a boolean if a field has been set.
func (g *GraphDefinition) HasAutoscale() bool {
	if g != nil && g.Autoscale != nil {
		return true
	}

	return false
}

// SetAutoscale allocates a new g.Autoscale and returns the pointer to it.
func (g *GraphDefinition) SetAutoscale(v bool) {
	g.Autoscale = &v
}

// GetCustomUnit returns the CustomUnit field if non-nil, zero value otherwise.
func (g *GraphDefinition) GetCustomUnit() string {
	if g == nil || g.CustomUnit == nil {
		return ""
	}
	return *g.CustomUnit
}

// GetCustomUnitOk returns a tuple with the CustomUnit field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinition) GetCustomUnitOk() (string, bool) {
	if g == nil || g.CustomUnit == nil {
		return "", false
	}
	return *g.CustomUnit, true
}

// HasCustomUnit returns a boolean if a field has been set.
func (g *GraphDefinition) HasCustomUnit() bool {
	if g != nil && g.CustomUnit != nil {
		return true
	}

	return false
}

// SetCustomUnit allocates a new g.CustomUnit and returns the pointer to it.
func (g *GraphDefinition) SetCustomUnit(v string) {
	g.CustomUnit = &v
}

// GetIncludeNoMetricHosts returns the IncludeNoMetricHosts field if non-nil, zero value otherwise.
func (g *GraphDefinition) GetIncludeNoMetricHosts() bool {
	if g == nil || g.IncludeNoMetricHosts == nil {
		return false
	}
	return *g.IncludeNoMetricHosts
}

// GetIncludeNoMetricHostsOk returns a tuple with the IncludeNoMetricHosts field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinition) GetIncludeNoMetricHostsOk() (bool, bool) {
	if g == nil || g.IncludeNoMetricHosts == nil {
		return false, false
	}
	return *g.IncludeNoMetricHosts, true
}

// HasIncludeNoMetricHosts returns a boolean if a field has been set.
func (g *GraphDefinition) HasIncludeNoMetricHosts() bool {
	if g != nil && g.IncludeNoMetricHosts != nil {
		return true
	}

	return false
}

// SetIncludeNoMetricHosts allocates a new g.IncludeNoMetricHosts and returns the pointer to it.
func (g *GraphDefinition) SetIncludeNoMetricHosts(v bool) {
	g.IncludeNoMetricHosts = &v
}

// GetIncludeUngroupedHosts returns the IncludeUngroupedHosts field if non-nil, zero value otherwise.
func (g *GraphDefinition) GetIncludeUngroupedHosts() bool {
	if g == nil || g.IncludeUngroupedHosts == nil {
		return false
	}
	return *g.IncludeUngroupedHosts
}

// GetIncludeUngroupedHostsOk returns a tuple with the IncludeUngroupedHosts field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinition) GetIncludeUngroupedHostsOk() (bool, bool) {
	if g == nil || g.IncludeUngroupedHosts == nil {
		return false, false
	}
	return *g.IncludeUngroupedHosts, true
}

// HasIncludeUngroupedHosts returns a boolean if a field has been set.
func (g *GraphDefinition) HasIncludeUngroupedHosts() bool {
	if g != nil && g.IncludeUngroupedHosts != nil {
		return true
	}

	return false
}

// SetIncludeUngroupedHosts allocates a new g.IncludeUngroupedHosts and returns the pointer to it.
func (g *GraphDefinition) SetIncludeUngroupedHosts(v bool) {
	g.IncludeUngroupedHosts = &v
}

// GetNodeType returns the NodeType field if non-nil, zero value otherwise.
func (g *GraphDefinition) GetNodeType() string {
	if g == nil || g.NodeType == nil {
		return ""
	}
	return *g.NodeType
}

// GetNodeTypeOk returns a tuple with the NodeType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinition) GetNodeTypeOk() (string, bool) {
	if g == nil || g.NodeType == nil {
		return "", false
	}
	return *g.NodeType, true
}

// HasNodeType returns a boolean if a field has been set.
func (g *GraphDefinition) HasNodeType() bool {
	if g != nil && g.NodeType != nil {
		return true
	}

	return false
}

// SetNodeType allocates a new g.NodeType and returns the pointer to it.
func (g *GraphDefinition) SetNodeType(v string) {
	g.NodeType = &v
}

// GetPrecision returns the Precision field if non-nil, zero value otherwise.
func (g *GraphDefinition) GetPrecision() json.Number {
	if g == nil || g.Precision == nil {
		return ""
	}
	return *g.Precision
}

// GetPrecisionOk returns a tuple with the Precision field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinition) GetPrecisionOk() (json.Number, bool) {
	if g == nil || g.Precision == nil {
		return "", false
	}
	return *g.Precision, true
}

// HasPrecision returns a boolean if a field has been set.
func (g *GraphDefinition) HasPrecision() bool {
	if g != nil && g.Precision != nil {
		return true
	}

	return false
}

// SetPrecision allocates a new g.Precision and returns the pointer to it.
func (g *GraphDefinition) SetPrecision(v json.Number) {
	g.Precision = &v
}

// GetStyle returns the Style field if non-nil, zero value otherwise.
func (g *GraphDefinition) GetStyle() Style {
	if g == nil || g.Style == nil {
		return Style{}
	}
	return *g.Style
}

// GetStyleOk returns a tuple with the Style field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinition) GetStyleOk() (Style, bool) {
	if g == nil || g.Style == nil {
		return Style{}, false
	}
	return *g.Style, true
}

// HasStyle returns a boolean if a field has been set.
func (g *GraphDefinition) HasStyle() bool {
	if g != nil && g.Style != nil {
		return true
	}

	return false
}

// SetStyle allocates a new g.Style and returns the pointer to it.
func (g *GraphDefinition) SetStyle(v Style) {
	g.Style = &v
}

// GetTextAlign returns the TextAlign field if non-nil, zero value otherwise.
func (g *GraphDefinition) GetTextAlign() string {
	if g == nil || g.TextAlign == nil {
		return ""
	}
	return *g.TextAlign
}

// GetTextAlignOk returns a tuple with the TextAlign field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinition) GetTextAlignOk() (string, bool) {
	if g == nil || g.TextAlign == nil {
		return "", false
	}
	return *g.TextAlign, true
}

// HasTextAlign returns a boolean if a field has been set.
func (g *GraphDefinition) HasTextAlign() bool {
	if g != nil && g.TextAlign != nil {
		return true
	}

	return false
}

// SetTextAlign allocates a new g.TextAlign and returns the pointer to it.
func (g *GraphDefinition) SetTextAlign(v string) {
	g.TextAlign = &v
}

// GetViz returns the Viz field if non-nil, zero value otherwise.
func (g *GraphDefinition) GetViz() string {
	if g == nil || g.Viz == nil {
		return ""
	}
	return *g.Viz
}

// GetVizOk returns a tuple with the Viz field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinition) GetVizOk() (string, bool) {
	if g == nil || g.Viz == nil {
		return "", false
	}
	return *g.Viz, true
}

// HasViz returns a boolean if a field has been set.
func (g *GraphDefinition) HasViz() bool {
	if g != nil && g.Viz != nil {
		return true
	}

	return false
}

// SetViz allocates a new g.Viz and returns the pointer to it.
func (g *GraphDefinition) SetViz(v string) {
	g.Viz = &v
}

// GetLabel returns the Label field if non-nil, zero value otherwise.
func (g *GraphDefinitionMarker) GetLabel() string {
	if g == nil || g.Label == nil {
		return ""
	}
	return *g.Label
}

// GetLabelOk returns a tuple with the Label field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinitionMarker) GetLabelOk() (string, bool) {
	if g == nil || g.Label == nil {
		return "", false
	}
	return *g.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (g *GraphDefinitionMarker) HasLabel() bool {
	if g != nil && g.Label != nil {
		return true
	}

	return false
}

// SetLabel allocates a new g.Label and returns the pointer to it.
func (g *GraphDefinitionMarker) SetLabel(v string) {
	g.Label = &v
}

// GetMax returns the Max field if non-nil, zero value otherwise.
func (g *GraphDefinitionMarker) GetMax() json.Number {
	if g == nil || g.Max == nil {
		return ""
	}
	return *g.Max
}

// GetMaxOk returns a tuple with the Max field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinitionMarker) GetMaxOk() (json.Number, bool) {
	if g == nil || g.Max == nil {
		return "", false
	}
	return *g.Max, true
}

// HasMax returns a boolean if a field has been set.
func (g *GraphDefinitionMarker) HasMax() bool {
	if g != nil && g.Max != nil {
		return true
	}

	return false
}

// SetMax allocates a new g.Max and returns the pointer to it.
func (g *GraphDefinitionMarker) SetMax(v json.Number) {
	g.Max = &v
}

// GetMin returns the Min field if non-nil, zero value otherwise.
func (g *GraphDefinitionMarker) GetMin() json.Number {
	if g == nil || g.Min == nil {
		return ""
	}
	return *g.Min
}

// GetMinOk returns a tuple with the Min field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinitionMarker) GetMinOk() (json.Number, bool) {
	if g == nil || g.Min == nil {
		return "", false
	}
	return *g.Min, true
}

// HasMin returns a boolean if a field has been set.
func (g *GraphDefinitionMarker) HasMin() bool {
	if g != nil && g.Min != nil {
		return true
	}

	return false
}

// SetMin allocates a new g.Min and returns the pointer to it.
func (g *GraphDefinitionMarker) SetMin(v json.Number) {
	g.Min = &v
}

// GetType returns the Type field if non-nil, zero value otherwise.
func (g *GraphDefinitionMarker) GetType() string {
	if g == nil || g.Type == nil {
		return ""
	}
	return *g.Type
}

// GetTypeOk returns a tuple with the Type field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinitionMarker) GetTypeOk() (string, bool) {
	if g == nil || g.Type == nil {
		return "", false
	}
	return *g.Type, true
}

// HasType returns a boolean if a field has been set.
func (g *GraphDefinitionMarker) HasType() bool {
	if g != nil && g.Type != nil {
		return true
	}

	return false
}

// SetType allocates a new g.Type and returns the pointer to it.
func (g *GraphDefinitionMarker) SetType(v string) {
	g.Type = &v
}

// GetVal returns the Val field if non-nil, zero value otherwise.
func (g *GraphDefinitionMarker) GetVal() json.Number {
	if g == nil || g.Val == nil {
		return ""
	}
	return *g.Val
}

// GetValOk returns a tuple with the Val field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinitionMarker) GetValOk() (json.Number, bool) {
	if g == nil || g.Val == nil {
		return "", false
	}
	return *g.Val, true
}

// HasVal returns a boolean if a field has been set.
func (g *GraphDefinitionMarker) HasVal() bool {
	if g != nil && g.Val != nil {
		return true
	}

	return false
}

// SetVal allocates a new g.Val and returns the pointer to it.
func (g *GraphDefinitionMarker) SetVal(v json.Number) {
	g.Val = &v
}

// GetValue returns the Value field if non-nil, zero value otherwise.
func (g *GraphDefinitionMarker) GetValue() string {
	if g == nil || g.Value == nil {
		return ""
	}
	return *g.Value
}

// GetValueOk returns a tuple with the Value field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinitionMarker) GetValueOk() (string, bool) {
	if g == nil || g.Value == nil {
		return "", false
	}
	return *g.Value, true
}

// HasValue returns a boolean if a field has been set.
func (g *GraphDefinitionMarker) HasValue() bool {
	if g != nil && g.Value != nil {
		return true
	}

	return false
}

// SetValue allocates a new g.Value and returns the pointer to it.
func (g *GraphDefinitionMarker) SetValue(v string) {
	g.Value = &v
}

// GetAggregator returns the Aggregator field if non-nil, zero value otherwise.
func (g *GraphDefinitionRequest) GetAggregator() string {
	if g == nil || g.Aggregator == nil {
		return ""
	}
	return *g.Aggregator
}

// GetAggregatorOk returns a tuple with the Aggregator field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinitionRequest) GetAggregatorOk() (string, bool) {
	if g == nil || g.Aggregator == nil {
		return "", false
	}
	return *g.Aggregator, true
}

// HasAggregator returns a boolean if a field has been set.
func (g *GraphDefinitionRequest) HasAggregator() bool {
	if g != nil && g.Aggregator != nil {
		return true
	}

	return false
}

// SetAggregator allocates a new g.Aggregator and returns the pointer to it.
func (g *GraphDefinitionRequest) SetAggregator(v string) {
	g.Aggregator = &v
}

// GetChangeType returns the ChangeType field if non-nil, zero value otherwise.
func (g *GraphDefinitionRequest) GetChangeType() string {
	if g == nil || g.ChangeType == nil {
		return ""
	}
	return *g.ChangeType
}

// GetChangeTypeOk returns a tuple with the ChangeType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinitionRequest) GetChangeTypeOk() (string, bool) {
	if g == nil || g.ChangeType == nil {
		return "", false
	}
	return *g.ChangeType, true
}

// HasChangeType returns a boolean if a field has been set.
func (g *GraphDefinitionRequest) HasChangeType() bool {
	if g != nil && g.ChangeType != nil {
		return true
	}

	return false
}

// SetChangeType allocates a new g.ChangeType and returns the pointer to it.
func (g *GraphDefinitionRequest) SetChangeType(v string) {
	g.ChangeType = &v
}

// GetCompareTo returns the CompareTo field if non-nil, zero value otherwise.
func (g *GraphDefinitionRequest) GetCompareTo() string {
	if g == nil || g.CompareTo == nil {
		return ""
	}
	return *g.CompareTo
}

// GetCompareToOk returns a tuple with the CompareTo field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinitionRequest) GetCompareToOk() (string, bool) {
	if g == nil || g.CompareTo == nil {
		return "", false
	}
	return *g.CompareTo, true
}

// HasCompareTo returns a boolean if a field has been set.
func (g *GraphDefinitionRequest) HasCompareTo() bool {
	if g != nil && g.CompareTo != nil {
		return true
	}

	return false
}

// SetCompareTo allocates a new g.CompareTo and returns the pointer to it.
func (g *GraphDefinitionRequest) SetCompareTo(v string) {
	g.CompareTo = &v
}

// GetExtraCol returns the ExtraCol field if non-nil, zero value otherwise.
func (g *GraphDefinitionRequest) GetExtraCol() string {
	if g == nil || g.ExtraCol == nil {
		return ""
	}
	return *g.ExtraCol
}

// GetExtraColOk returns a tuple with the ExtraCol field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinitionRequest) GetExtraColOk() (string, bool) {
	if g == nil || g.ExtraCol == nil {
		return "", false
	}
	return *g.ExtraCol, true
}

// HasExtraCol returns a boolean if a field has been set.
func (g *GraphDefinitionRequest) HasExtraCol() bool {
	if g != nil && g.ExtraCol != nil {
		return true
	}

	return false
}

// SetExtraCol allocates a new g.ExtraCol and returns the pointer to it.
func (g *GraphDefinitionRequest) SetExtraCol(v string) {
	g.ExtraCol = &v
}

// GetIncreaseGood returns the IncreaseGood field if non-nil, zero value otherwise.
func (g *GraphDefinitionRequest) GetIncreaseGood() bool {
	if g == nil || g.IncreaseGood == nil {
		return false
	}
	return *g.IncreaseGood
}

// GetIncreaseGoodOk returns a tuple with the IncreaseGood field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinitionRequest) GetIncreaseGoodOk() (bool, bool) {
	if g == nil || g.IncreaseGood == nil {
		return false, false
	}
	return *g.IncreaseGood, true
}

// HasIncreaseGood returns a boolean if a field has been set.
func (g *GraphDefinitionRequest) HasIncreaseGood() bool {
	if g != nil && g.IncreaseGood != nil {
		return true
	}

	return false
}

// SetIncreaseGood allocates a new g.IncreaseGood and returns the pointer to it.
func (g *GraphDefinitionRequest) SetIncreaseGood(v bool) {
	g.IncreaseGood = &v
}

// GetOrderBy returns the OrderBy field if non-nil, zero value otherwise.
func (g *GraphDefinitionRequest) GetOrderBy() string {
	if g == nil || g.OrderBy == nil {
		return ""
	}
	return *g.OrderBy
}

// GetOrderByOk returns a tuple with the OrderBy field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinitionRequest) GetOrderByOk() (string, bool) {
	if g == nil || g.OrderBy == nil {
		return "", false
	}
	return *g.OrderBy, true
}

// HasOrderBy returns a boolean if a field has been set.
func (g *GraphDefinitionRequest) HasOrderBy() bool {
	if g != nil && g.OrderBy != nil {
		return true
	}

	return false
}

// SetOrderBy allocates a new g.OrderBy and returns the pointer to it.
func (g *GraphDefinitionRequest) SetOrderBy(v string) {
	g.OrderBy = &v
}

// GetOrderDirection returns the OrderDirection field if non-nil, zero value otherwise.
func (g *GraphDefinitionRequest) GetOrderDirection() string {
	if g == nil || g.OrderDirection == nil {
		return ""
	}
	return *g.OrderDirection
}

// GetOrderDirectionOk returns a tuple with the OrderDirection field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinitionRequest) GetOrderDirectionOk() (string, bool) {
	if g == nil || g.OrderDirection == nil {
		return "", false
	}
	return *g.OrderDirection, true
}

// HasOrderDirection returns a boolean if a field has been set.
func (g *GraphDefinitionRequest) HasOrderDirection() bool {
	if g != nil && g.OrderDirection != nil {
		return true
	}

	return false
}

// SetOrderDirection allocates a new g.OrderDirection and returns the pointer to it.
func (g *GraphDefinitionRequest) SetOrderDirection(v string) {
	g.OrderDirection = &v
}

// GetQuery returns the Query field if non-nil, zero value otherwise.
func (g *GraphDefinitionRequest) GetQuery() string {
	if g == nil || g.Query == nil {
		return ""
	}
	return *g.Query
}

// GetQueryOk returns a tuple with the Query field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinitionRequest) GetQueryOk() (string, bool) {
	if g == nil || g.Query == nil {
		return "", false
	}
	return *g.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (g *GraphDefinitionRequest) HasQuery() bool {
	if g != nil && g.Query != nil {
		return true
	}

	return false
}

// SetQuery allocates a new g.Query and returns the pointer to it.
func (g *GraphDefinitionRequest) SetQuery(v string) {
	g.Query = &v
}

// GetStacked returns the Stacked field if non-nil, zero value otherwise.
func (g *GraphDefinitionRequest) GetStacked() bool {
	if g == nil || g.Stacked == nil {
		return false
	}
	return *g.Stacked
}

// GetStackedOk returns a tuple with the Stacked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinitionRequest) GetStackedOk() (bool, bool) {
	if g == nil || g.Stacked == nil {
		return false, false
	}
	return *g.Stacked, true
}

// HasStacked returns a boolean if a field has been set.
func (g *GraphDefinitionRequest) HasStacked() bool {
	if g != nil && g.Stacked != nil {
		return true
	}

	return false
}

// SetStacked allocates a new g.Stacked and returns the pointer to it.
func (g *GraphDefinitionRequest) SetStacked(v bool) {
	g.Stacked = &v
}

// GetStyle returns the Style field if non-nil, zero value otherwise.
func (g *GraphDefinitionRequest) GetStyle() GraphDefinitionRequestStyle {
	if g == nil || g.Style == nil {
		return GraphDefinitionRequestStyle{}
	}
	return *g.Style
}

// GetStyleOk returns a tuple with the Style field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinitionRequest) GetStyleOk() (GraphDefinitionRequestStyle, bool) {
	if g == nil || g.Style == nil {
		return GraphDefinitionRequestStyle{}, false
	}
	return *g.Style, true
}

// HasStyle returns a boolean if a field has been set.
func (g *GraphDefinitionRequest) HasStyle() bool {
	if g != nil && g.Style != nil {
		return true
	}

	return false
}

// SetStyle allocates a new g.Style and returns the pointer to it.
func (g *GraphDefinitionRequest) SetStyle(v GraphDefinitionRequestStyle) {
	g.Style = &v
}

// GetType returns the Type field if non-nil, zero value otherwise.
func (g *GraphDefinitionRequest) GetType() string {
	if g == nil || g.Type == nil {
		return ""
	}
	return *g.Type
}

// GetTypeOk returns a tuple with the Type field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinitionRequest) GetTypeOk() (string, bool) {
	if g == nil || g.Type == nil {
		return "", false
	}
	return *g.Type, true
}

// HasType returns a boolean if a field has been set.
func (g *GraphDefinitionRequest) HasType() bool {
	if g != nil && g.Type != nil {
		return true
	}

	return false
}

// SetType allocates a new g.Type and returns the pointer to it.
func (g *GraphDefinitionRequest) SetType(v string) {
	g.Type = &v
}

// GetPalette returns the Palette field if non-nil, zero value otherwise.
func (g *GraphDefinitionRequestStyle) GetPalette() string {
	if g == nil || g.Palette == nil {
		return ""
	}
	return *g.Palette
}

// GetPaletteOk returns a tuple with the Palette field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinitionRequestStyle) GetPaletteOk() (string, bool) {
	if g == nil || g.Palette == nil {
		return "", false
	}
	return *g.Palette, true
}

// HasPalette returns a boolean if a field has been set.
func (g *GraphDefinitionRequestStyle) HasPalette() bool {
	if g != nil && g.Palette != nil {
		return true
	}

	return false
}

// SetPalette allocates a new g.Palette and returns the pointer to it.
func (g *GraphDefinitionRequestStyle) SetPalette(v string) {
	g.Palette = &v
}

// GetType returns the Type field if non-nil, zero value otherwise.
func (g *GraphDefinitionRequestStyle) GetType() string {
	if g == nil || g.Type == nil {
		return ""
	}
	return *g.Type
}

// GetTypeOk returns a tuple with the Type field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinitionRequestStyle) GetTypeOk() (string, bool) {
	if g == nil || g.Type == nil {
		return "", false
	}
	return *g.Type, true
}

// HasType returns a boolean if a field has been set.
func (g *GraphDefinitionRequestStyle) HasType() bool {
	if g != nil && g.Type != nil {
		return true
	}

	return false
}

// SetType allocates a new g.Type and returns the pointer to it.
func (g *GraphDefinitionRequestStyle) SetType(v string) {
	g.Type = &v
}

// GetWidth returns the Width field if non-nil, zero value otherwise.
func (g *GraphDefinitionRequestStyle) GetWidth() string {
	if g == nil || g.Width == nil {
		return ""
	}
	return *g.Width
}

// GetWidthOk returns a tuple with the Width field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphDefinitionRequestStyle) GetWidthOk() (string, bool) {
	if g == nil || g.Width == nil {
		return "", false
	}
	return *g.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (g *GraphDefinitionRequestStyle) HasWidth() bool {
	if g != nil && g.Width != nil {
		return true
	}

	return false
}

// SetWidth allocates a new g.Width and returns the pointer to it.
func (g *GraphDefinitionRequestStyle) SetWidth(v string) {
	g.Width = &v
}

// GetQuery returns the Query field if non-nil, zero value otherwise.
func (g *GraphEvent) GetQuery() string {
	if g == nil || g.Query == nil {
		return ""
	}
	return *g.Query
}

// GetQueryOk returns a tuple with the Query field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GraphEvent) GetQueryOk() (string, bool) {
	if g == nil || g.Query == nil {
		return "", false
	}
	return *g.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (g *GraphEvent) HasQuery() bool {
	if g != nil && g.Query != nil {
		return true
	}

	return false
}

// SetQuery allocates a new g.Query and returns the pointer to it.
func (g *GraphEvent) SetQuery(v string) {
	g.Query = &v
}

// GetLastNoDataTs returns the LastNoDataTs field if non-nil, zero value otherwise.
func (g *GroupData) GetLastNoDataTs() int {
	if g == nil || g.LastNoDataTs == nil {
		return 0
	}
	return *g.LastNoDataTs
}

// GetLastNoDataTsOk returns a tuple with the LastNoDataTs field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GroupData) GetLastNoDataTsOk() (int, bool) {
	if g == nil || g.LastNoDataTs == nil {
		return 0, false
	}
	return *g.LastNoDataTs, true
}

// HasLastNoDataTs returns a boolean if a field has been set.
func (g *GroupData) HasLastNoDataTs() bool {
	if g != nil && g.LastNoDataTs != nil {
		return true
	}

	return false
}

// SetLastNoDataTs allocates a new g.LastNoDataTs and returns the pointer to it.
func (g *GroupData) SetLastNoDataTs(v int) {
	g.LastNoDataTs = &v
}

// GetLastNotifiedTs returns the LastNotifiedTs field if non-nil, zero value otherwise.
func (g *GroupData) GetLastNotifiedTs() int {
	if g == nil || g.LastNotifiedTs == nil {
		return 0
	}
	return *g.LastNotifiedTs
}

// GetLastNotifiedTsOk returns a tuple with the LastNotifiedTs field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GroupData) GetLastNotifiedTsOk() (int, bool) {
	if g == nil || g.LastNotifiedTs == nil {
		return 0, false
	}
	return *g.LastNotifiedTs, true
}

// HasLastNotifiedTs returns a boolean if a field has been set.
func (g *GroupData) HasLastNotifiedTs() bool {
	if g != nil && g.LastNotifiedTs != nil {
		return true
	}

	return false
}

// SetLastNotifiedTs allocates a new g.LastNotifiedTs and returns the pointer to it.
func (g *GroupData) SetLastNotifiedTs(v int) {
	g.LastNotifiedTs = &v
}

// GetLastResolvedTs returns the LastResolvedTs field if non-nil, zero value otherwise.
func (g *GroupData) GetLastResolvedTs() int {
	if g == nil || g.LastResolvedTs == nil {
		return 0
	}
	return *g.LastResolvedTs
}

// GetLastResolvedTsOk returns a tuple with the LastResolvedTs field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GroupData) GetLastResolvedTsOk() (int, bool) {
	if g == nil || g.LastResolvedTs == nil {
		return 0, false
	}
	return *g.LastResolvedTs, true
}

// HasLastResolvedTs returns a boolean if a field has been set.
func (g *GroupData) HasLastResolvedTs() bool {
	if g != nil && g.LastResolvedTs != nil {
		return true
	}

	return false
}

// SetLastResolvedTs allocates a new g.LastResolvedTs and returns the pointer to it.
func (g *GroupData) SetLastResolvedTs(v int) {
	g.LastResolvedTs = &v
}

// GetLastTriggeredTs returns the LastTriggeredTs field if non-nil, zero value otherwise.
func (g *GroupData) GetLastTriggeredTs() int {
	if g == nil || g.LastTriggeredTs == nil {
		return 0
	}
	return *g.LastTriggeredTs
}

// GetLastTriggeredTsOk returns a tuple with the LastTriggeredTs field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GroupData) GetLastTriggeredTsOk() (int, bool) {
	if g == nil || g.LastTriggeredTs == nil {
		return 0, false
	}
	return *g.LastTriggeredTs, true
}

// HasLastTriggeredTs returns a boolean if a field has been set.
func (g *GroupData) HasLastTriggeredTs() bool {
	if g != nil && g.LastTriggeredTs != nil {
		return true
	}

	return false
}

// SetLastTriggeredTs allocates a new g.LastTriggeredTs and returns the pointer to it.
func (g *GroupData) SetLastTriggeredTs(v int) {
	g.LastTriggeredTs = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (g *GroupData) GetName() string {
	if g == nil || g.Name == nil {
		return ""
	}
	return *g.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GroupData) GetNameOk() (string, bool) {
	if g == nil || g.Name == nil {
		return "", false
	}
	return *g.Name, true
}

// HasName returns a boolean if a field has been set.
func (g *GroupData) HasName() bool {
	if g != nil && g.Name != nil {
		return true
	}

	return false
}

// SetName allocates a new g.Name and returns the pointer to it.
func (g *GroupData) SetName(v string) {
	g.Name = &v
}

// GetStatus returns the Status field if non-nil, zero value otherwise.
func (g *GroupData) GetStatus() string {
	if g == nil || g.Status == nil {
		return ""
	}
	return *g.Status
}

// GetStatusOk returns a tuple with the Status field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GroupData) GetStatusOk() (string, bool) {
	if g == nil || g.Status == nil {
		return "", false
	}
	return *g.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (g *GroupData) HasStatus() bool {
	if g != nil && g.Status != nil {
		return true
	}

	return false
}

// SetStatus allocates a new g.Status and returns the pointer to it.
func (g *GroupData) SetStatus(v string) {
	g.Status = &v
}

// GetTriggeringValue returns the TriggeringValue field if non-nil, zero value otherwise.
func (g *GroupData) GetTriggeringValue() TriggeringValue {
	if g == nil || g.TriggeringValue == nil {
		return TriggeringValue{}
	}
	return *g.TriggeringValue
}

// GetTriggeringValueOk returns a tuple with the TriggeringValue field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (g *GroupData) GetTriggeringValueOk() (TriggeringValue, bool) {
	if g == nil || g.TriggeringValue == nil {
		return TriggeringValue{}, false
	}
	return *g.TriggeringValue, true
}

// HasTriggeringValue returns a boolean if a field has been set.
func (g *GroupData) HasTriggeringValue() bool {
	if g != nil && g.TriggeringValue != nil {
		return true
	}

	return false
}

// SetTriggeringValue allocates a new g.TriggeringValue and returns the pointer to it.
func (g *GroupData) SetTriggeringValue(v TriggeringValue) {
	g.TriggeringValue = &v
}

// GetEndTime returns the EndTime field if non-nil, zero value otherwise.
func (h *HostActionMute) GetEndTime() string {
	if h == nil || h.EndTime == nil {
		return ""
	}
	return *h.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (h *HostActionMute) GetEndTimeOk() (string, bool) {
	if h == nil || h.EndTime == nil {
		return "", false
	}
	return *h.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (h *HostActionMute) HasEndTime() bool {
	if h != nil && h.EndTime != nil {
		return true
	}

	return false
}

// SetEndTime allocates a new h.EndTime and returns the pointer to it.
func (h *HostActionMute) SetEndTime(v string) {
	h.EndTime = &v
}

// GetMessage returns the Message field if non-nil, zero value otherwise.
func (h *HostActionMute) GetMessage() string {
	if h == nil || h.Message == nil {
		return ""
	}
	return *h.Message
}

// GetMessageOk returns a tuple with the Message field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (h *HostActionMute) GetMessageOk() (string, bool) {
	if h == nil || h.Message == nil {
		return "", false
	}
	return *h.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (h *HostActionMute) HasMessage() bool {
	if h != nil && h.Message != nil {
		return true
	}

	return false
}

// SetMessage allocates a new h.Message and returns the pointer to it.
func (h *HostActionMute) SetMessage(v string) {
	h.Message = &v
}

// GetOverride returns the Override field if non-nil, zero value otherwise.
func (h *HostActionMute) GetOverride() bool {
	if h == nil || h.Override == nil {
		return false
	}
	return *h.Override
}

// GetOverrideOk returns a tuple with the Override field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (h *HostActionMute) GetOverrideOk() (bool, bool) {
	if h == nil || h.Override == nil {
		return false, false
	}
	return *h.Override, true
}

// HasOverride returns a boolean if a field has been set.
func (h *HostActionMute) HasOverride() bool {
	if h != nil && h.Override != nil {
		return true
	}

	return false
}

// SetOverride allocates a new h.Override and returns the pointer to it.
func (h *HostActionMute) SetOverride(v bool) {
	h.Override = &v
}

// GetAccountID returns the AccountID field if non-nil, zero value otherwise.
func (i *IntegrationAWSAccount) GetAccountID() string {
	if i == nil || i.AccountID == nil {
		return ""
	}
	return *i.AccountID
}

// GetAccountIDOk returns a tuple with the AccountID field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationAWSAccount) GetAccountIDOk() (string, bool) {
	if i == nil || i.AccountID == nil {
		return "", false
	}
	return *i.AccountID, true
}

// HasAccountID returns a boolean if a field has been set.
func (i *IntegrationAWSAccount) HasAccountID() bool {
	if i != nil && i.AccountID != nil {
		return true
	}

	return false
}

// SetAccountID allocates a new i.AccountID and returns the pointer to it.
func (i *IntegrationAWSAccount) SetAccountID(v string) {
	i.AccountID = &v
}

// GetRoleName returns the RoleName field if non-nil, zero value otherwise.
func (i *IntegrationAWSAccount) GetRoleName() string {
	if i == nil || i.RoleName == nil {
		return ""
	}
	return *i.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationAWSAccount) GetRoleNameOk() (string, bool) {
	if i == nil || i.RoleName == nil {
		return "", false
	}
	return *i.RoleName, true
}

// HasRoleName returns a boolean if a field has been set.
func (i *IntegrationAWSAccount) HasRoleName() bool {
	if i != nil && i.RoleName != nil {
		return true
	}

	return false
}

// SetRoleName allocates a new i.RoleName and returns the pointer to it.
func (i *IntegrationAWSAccount) SetRoleName(v string) {
	i.RoleName = &v
}

// GetAccountID returns the AccountID field if non-nil, zero value otherwise.
func (i *IntegrationAWSAccountDeleteRequest) GetAccountID() string {
	if i == nil || i.AccountID == nil {
		return ""
	}
	return *i.AccountID
}

// GetAccountIDOk returns a tuple with the AccountID field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationAWSAccountDeleteRequest) GetAccountIDOk() (string, bool) {
	if i == nil || i.AccountID == nil {
		return "", false
	}
	return *i.AccountID, true
}

// HasAccountID returns a boolean if a field has been set.
func (i *IntegrationAWSAccountDeleteRequest) HasAccountID() bool {
	if i != nil && i.AccountID != nil {
		return true
	}

	return false
}

// SetAccountID allocates a new i.AccountID and returns the pointer to it.
func (i *IntegrationAWSAccountDeleteRequest) SetAccountID(v string) {
	i.AccountID = &v
}

// GetRoleName returns the RoleName field if non-nil, zero value otherwise.
func (i *IntegrationAWSAccountDeleteRequest) GetRoleName() string {
	if i == nil || i.RoleName == nil {
		return ""
	}
	return *i.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationAWSAccountDeleteRequest) GetRoleNameOk() (string, bool) {
	if i == nil || i.RoleName == nil {
		return "", false
	}
	return *i.RoleName, true
}

// HasRoleName returns a boolean if a field has been set.
func (i *IntegrationAWSAccountDeleteRequest) HasRoleName() bool {
	if i != nil && i.RoleName != nil {
		return true
	}

	return false
}

// SetRoleName allocates a new i.RoleName and returns the pointer to it.
func (i *IntegrationAWSAccountDeleteRequest) SetRoleName(v string) {
	i.RoleName = &v
}

// GetClientEmail returns the ClientEmail field if non-nil, zero value otherwise.
func (i *IntegrationGCP) GetClientEmail() string {
	if i == nil || i.ClientEmail == nil {
		return ""
	}
	return *i.ClientEmail
}

// GetClientEmailOk returns a tuple with the ClientEmail field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationGCP) GetClientEmailOk() (string, bool) {
	if i == nil || i.ClientEmail == nil {
		return "", false
	}
	return *i.ClientEmail, true
}

// HasClientEmail returns a boolean if a field has been set.
func (i *IntegrationGCP) HasClientEmail() bool {
	if i != nil && i.ClientEmail != nil {
		return true
	}

	return false
}

// SetClientEmail allocates a new i.ClientEmail and returns the pointer to it.
func (i *IntegrationGCP) SetClientEmail(v string) {
	i.ClientEmail = &v
}

// GetHostFilters returns the HostFilters field if non-nil, zero value otherwise.
func (i *IntegrationGCP) GetHostFilters() string {
	if i == nil || i.HostFilters == nil {
		return ""
	}
	return *i.HostFilters
}

// GetHostFiltersOk returns a tuple with the HostFilters field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationGCP) GetHostFiltersOk() (string, bool) {
	if i == nil || i.HostFilters == nil {
		return "", false
	}
	return *i.HostFilters, true
}

// HasHostFilters returns a boolean if a field has been set.
func (i *IntegrationGCP) HasHostFilters() bool {
	if i != nil && i.HostFilters != nil {
		return true
	}

	return false
}

// SetHostFilters allocates a new i.HostFilters and returns the pointer to it.
func (i *IntegrationGCP) SetHostFilters(v string) {
	i.HostFilters = &v
}

// GetProjectID returns the ProjectID field if non-nil, zero value otherwise.
func (i *IntegrationGCP) GetProjectID() string {
	if i == nil || i.ProjectID == nil {
		return ""
	}
	return *i.ProjectID
}

// GetProjectIDOk returns a tuple with the ProjectID field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationGCP) GetProjectIDOk() (string, bool) {
	if i == nil || i.ProjectID == nil {
		return "", false
	}
	return *i.ProjectID, true
}

// HasProjectID returns a boolean if a field has been set.
func (i *IntegrationGCP) HasProjectID() bool {
	if i != nil && i.ProjectID != nil {
		return true
	}

	return false
}

// SetProjectID allocates a new i.ProjectID and returns the pointer to it.
func (i *IntegrationGCP) SetProjectID(v string) {
	i.ProjectID = &v
}

// GetAuthProviderX509CertURL returns the AuthProviderX509CertURL field if non-nil, zero value otherwise.
func (i *IntegrationGCPCreateRequest) GetAuthProviderX509CertURL() string {
	if i == nil || i.AuthProviderX509CertURL == nil {
		return ""
	}
	return *i.AuthProviderX509CertURL
}

// GetAuthProviderX509CertURLOk returns a tuple with the AuthProviderX509CertURL field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationGCPCreateRequest) GetAuthProviderX509CertURLOk() (string, bool) {
	if i == nil || i.AuthProviderX509CertURL == nil {
		return "", false
	}
	return *i.AuthProviderX509CertURL, true
}

// HasAuthProviderX509CertURL returns a boolean if a field has been set.
func (i *IntegrationGCPCreateRequest) HasAuthProviderX509CertURL() bool {
	if i != nil && i.AuthProviderX509CertURL != nil {
		return true
	}

	return false
}

// SetAuthProviderX509CertURL allocates a new i.AuthProviderX509CertURL and returns the pointer to it.
func (i *IntegrationGCPCreateRequest) SetAuthProviderX509CertURL(v string) {
	i.AuthProviderX509CertURL = &v
}

// GetAuthURI returns the AuthURI field if non-nil, zero value otherwise.
func (i *IntegrationGCPCreateRequest) GetAuthURI() string {
	if i == nil || i.AuthURI == nil {
		return ""
	}
	return *i.AuthURI
}

// GetAuthURIOk returns a tuple with the AuthURI field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationGCPCreateRequest) GetAuthURIOk() (string, bool) {
	if i == nil || i.AuthURI == nil {
		return "", false
	}
	return *i.AuthURI, true
}

// HasAuthURI returns a boolean if a field has been set.
func (i *IntegrationGCPCreateRequest) HasAuthURI() bool {
	if i != nil && i.AuthURI != nil {
		return true
	}

	return false
}

// SetAuthURI allocates a new i.AuthURI and returns the pointer to it.
func (i *IntegrationGCPCreateRequest) SetAuthURI(v string) {
	i.AuthURI = &v
}

// GetClientEmail returns the ClientEmail field if non-nil, zero value otherwise.
func (i *IntegrationGCPCreateRequest) GetClientEmail() string {
	if i == nil || i.ClientEmail == nil {
		return ""
	}
	return *i.ClientEmail
}

// GetClientEmailOk returns a tuple with the ClientEmail field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationGCPCreateRequest) GetClientEmailOk() (string, bool) {
	if i == nil || i.ClientEmail == nil {
		return "", false
	}
	return *i.ClientEmail, true
}

// HasClientEmail returns a boolean if a field has been set.
func (i *IntegrationGCPCreateRequest) HasClientEmail() bool {
	if i != nil && i.ClientEmail != nil {
		return true
	}

	return false
}

// SetClientEmail allocates a new i.ClientEmail and returns the pointer to it.
func (i *IntegrationGCPCreateRequest) SetClientEmail(v string) {
	i.ClientEmail = &v
}

// GetClientID returns the ClientID field if non-nil, zero value otherwise.
func (i *IntegrationGCPCreateRequest) GetClientID() string {
	if i == nil || i.ClientID == nil {
		return ""
	}
	return *i.ClientID
}

// GetClientIDOk returns a tuple with the ClientID field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationGCPCreateRequest) GetClientIDOk() (string, bool) {
	if i == nil || i.ClientID == nil {
		return "", false
	}
	return *i.ClientID, true
}

// HasClientID returns a boolean if a field has been set.
func (i *IntegrationGCPCreateRequest) HasClientID() bool {
	if i != nil && i.ClientID != nil {
		return true
	}

	return false
}

// SetClientID allocates a new i.ClientID and returns the pointer to it.
func (i *IntegrationGCPCreateRequest) SetClientID(v string) {
	i.ClientID = &v
}

// GetClientX509CertURL returns the ClientX509CertURL field if non-nil, zero value otherwise.
func (i *IntegrationGCPCreateRequest) GetClientX509CertURL() string {
	if i == nil || i.ClientX509CertURL == nil {
		return ""
	}
	return *i.ClientX509CertURL
}

// GetClientX509CertURLOk returns a tuple with the ClientX509CertURL field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationGCPCreateRequest) GetClientX509CertURLOk() (string, bool) {
	if i == nil || i.ClientX509CertURL == nil {
		return "", false
	}
	return *i.ClientX509CertURL, true
}

// HasClientX509CertURL returns a boolean if a field has been set.
func (i *IntegrationGCPCreateRequest) HasClientX509CertURL() bool {
	if i != nil && i.ClientX509CertURL != nil {
		return true
	}

	return false
}

// SetClientX509CertURL allocates a new i.ClientX509CertURL and returns the pointer to it.
func (i *IntegrationGCPCreateRequest) SetClientX509CertURL(v string) {
	i.ClientX509CertURL = &v
}

// GetHostFilters returns the HostFilters field if non-nil, zero value otherwise.
func (i *IntegrationGCPCreateRequest) GetHostFilters() string {
	if i == nil || i.HostFilters == nil {
		return ""
	}
	return *i.HostFilters
}

// GetHostFiltersOk returns a tuple with the HostFilters field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationGCPCreateRequest) GetHostFiltersOk() (string, bool) {
	if i == nil || i.HostFilters == nil {
		return "", false
	}
	return *i.HostFilters, true
}

// HasHostFilters returns a boolean if a field has been set.
func (i *IntegrationGCPCreateRequest) HasHostFilters() bool {
	if i != nil && i.HostFilters != nil {
		return true
	}

	return false
}

// SetHostFilters allocates a new i.HostFilters and returns the pointer to it.
func (i *IntegrationGCPCreateRequest) SetHostFilters(v string) {
	i.HostFilters = &v
}

// GetPrivateKey returns the PrivateKey field if non-nil, zero value otherwise.
func (i *IntegrationGCPCreateRequest) GetPrivateKey() string {
	if i == nil || i.PrivateKey == nil {
		return ""
	}
	return *i.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationGCPCreateRequest) GetPrivateKeyOk() (string, bool) {
	if i == nil || i.PrivateKey == nil {
		return "", false
	}
	return *i.PrivateKey, true
}

// HasPrivateKey returns a boolean if a field has been set.
func (i *IntegrationGCPCreateRequest) HasPrivateKey() bool {
	if i != nil && i.PrivateKey != nil {
		return true
	}

	return false
}

// SetPrivateKey allocates a new i.PrivateKey and returns the pointer to it.
func (i *IntegrationGCPCreateRequest) SetPrivateKey(v string) {
	i.PrivateKey = &v
}

// GetPrivateKeyID returns the PrivateKeyID field if non-nil, zero value otherwise.
func (i *IntegrationGCPCreateRequest) GetPrivateKeyID() string {
	if i == nil || i.PrivateKeyID == nil {
		return ""
	}
	return *i.PrivateKeyID
}

// GetPrivateKeyIDOk returns a tuple with the PrivateKeyID field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationGCPCreateRequest) GetPrivateKeyIDOk() (string, bool) {
	if i == nil || i.PrivateKeyID == nil {
		return "", false
	}
	return *i.PrivateKeyID, true
}

// HasPrivateKeyID returns a boolean if a field has been set.
func (i *IntegrationGCPCreateRequest) HasPrivateKeyID() bool {
	if i != nil && i.PrivateKeyID != nil {
		return true
	}

	return false
}

// SetPrivateKeyID allocates a new i.PrivateKeyID and returns the pointer to it.
func (i *IntegrationGCPCreateRequest) SetPrivateKeyID(v string) {
	i.PrivateKeyID = &v
}

// GetProjectID returns the ProjectID field if non-nil, zero value otherwise.
func (i *IntegrationGCPCreateRequest) GetProjectID() string {
	if i == nil || i.ProjectID == nil {
		return ""
	}
	return *i.ProjectID
}

// GetProjectIDOk returns a tuple with the ProjectID field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationGCPCreateRequest) GetProjectIDOk() (string, bool) {
	if i == nil || i.ProjectID == nil {
		return "", false
	}
	return *i.ProjectID, true
}

// HasProjectID returns a boolean if a field has been set.
func (i *IntegrationGCPCreateRequest) HasProjectID() bool {
	if i != nil && i.ProjectID != nil {
		return true
	}

	return false
}

// SetProjectID allocates a new i.ProjectID and returns the pointer to it.
func (i *IntegrationGCPCreateRequest) SetProjectID(v string) {
	i.ProjectID = &v
}

// GetTokenURI returns the TokenURI field if non-nil, zero value otherwise.
func (i *IntegrationGCPCreateRequest) GetTokenURI() string {
	if i == nil || i.TokenURI == nil {
		return ""
	}
	return *i.TokenURI
}

// GetTokenURIOk returns a tuple with the TokenURI field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationGCPCreateRequest) GetTokenURIOk() (string, bool) {
	if i == nil || i.TokenURI == nil {
		return "", false
	}
	return *i.TokenURI, true
}

// HasTokenURI returns a boolean if a field has been set.
func (i *IntegrationGCPCreateRequest) HasTokenURI() bool {
	if i != nil && i.TokenURI != nil {
		return true
	}

	return false
}

// SetTokenURI allocates a new i.TokenURI and returns the pointer to it.
func (i *IntegrationGCPCreateRequest) SetTokenURI(v string) {
	i.TokenURI = &v
}

// GetType returns the Type field if non-nil, zero value otherwise.
func (i *IntegrationGCPCreateRequest) GetType() string {
	if i == nil || i.Type == nil {
		return ""
	}
	return *i.Type
}

// GetTypeOk returns a tuple with the Type field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationGCPCreateRequest) GetTypeOk() (string, bool) {
	if i == nil || i.Type == nil {
		return "", false
	}
	return *i.Type, true
}

// HasType returns a boolean if a field has been set.
func (i *IntegrationGCPCreateRequest) HasType() bool {
	if i != nil && i.Type != nil {
		return true
	}

	return false
}

// SetType allocates a new i.Type and returns the pointer to it.
func (i *IntegrationGCPCreateRequest) SetType(v string) {
	i.Type = &v
}

// GetClientEmail returns the ClientEmail field if non-nil, zero value otherwise.
func (i *IntegrationGCPDeleteRequest) GetClientEmail() string {
	if i == nil || i.ClientEmail == nil {
		return ""
	}
	return *i.ClientEmail
}

// GetClientEmailOk returns a tuple with the ClientEmail field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationGCPDeleteRequest) GetClientEmailOk() (string, bool) {
	if i == nil || i.ClientEmail == nil {
		return "", false
	}
	return *i.ClientEmail, true
}

// HasClientEmail returns a boolean if a field has been set.
func (i *IntegrationGCPDeleteRequest) HasClientEmail() bool {
	if i != nil && i.ClientEmail != nil {
		return true
	}

	return false
}

// SetClientEmail allocates a new i.ClientEmail and returns the pointer to it.
func (i *IntegrationGCPDeleteRequest) SetClientEmail(v string) {
	i.ClientEmail = &v
}

// GetProjectID returns the ProjectID field if non-nil, zero value otherwise.
func (i *IntegrationGCPDeleteRequest) GetProjectID() string {
	if i == nil || i.ProjectID == nil {
		return ""
	}
	return *i.ProjectID
}

// GetProjectIDOk returns a tuple with the ProjectID field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationGCPDeleteRequest) GetProjectIDOk() (string, bool) {
	if i == nil || i.ProjectID == nil {
		return "", false
	}
	return *i.ProjectID, true
}

// HasProjectID returns a boolean if a field has been set.
func (i *IntegrationGCPDeleteRequest) HasProjectID() bool {
	if i != nil && i.ProjectID != nil {
		return true
	}

	return false
}

// SetProjectID allocates a new i.ProjectID and returns the pointer to it.
func (i *IntegrationGCPDeleteRequest) SetProjectID(v string) {
	i.ProjectID = &v
}

// GetClientEmail returns the ClientEmail field if non-nil, zero value otherwise.
func (i *IntegrationGCPUpdateRequest) GetClientEmail() string {
	if i == nil || i.ClientEmail == nil {
		return ""
	}
	return *i.ClientEmail
}

// GetClientEmailOk returns a tuple with the ClientEmail field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationGCPUpdateRequest) GetClientEmailOk() (string, bool) {
	if i == nil || i.ClientEmail == nil {
		return "", false
	}
	return *i.ClientEmail, true
}

// HasClientEmail returns a boolean if a field has been set.
func (i *IntegrationGCPUpdateRequest) HasClientEmail() bool {
	if i != nil && i.ClientEmail != nil {
		return true
	}

	return false
}

// SetClientEmail allocates a new i.ClientEmail and returns the pointer to it.
func (i *IntegrationGCPUpdateRequest) SetClientEmail(v string) {
	i.ClientEmail = &v
}

// GetHostFilters returns the HostFilters field if non-nil, zero value otherwise.
func (i *IntegrationGCPUpdateRequest) GetHostFilters() string {
	if i == nil || i.HostFilters == nil {
		return ""
	}
	return *i.HostFilters
}

// GetHostFiltersOk returns a tuple with the HostFilters field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationGCPUpdateRequest) GetHostFiltersOk() (string, bool) {
	if i == nil || i.HostFilters == nil {
		return "", false
	}
	return *i.HostFilters, true
}

// HasHostFilters returns a boolean if a field has been set.
func (i *IntegrationGCPUpdateRequest) HasHostFilters() bool {
	if i != nil && i.HostFilters != nil {
		return true
	}

	return false
}

// SetHostFilters allocates a new i.HostFilters and returns the pointer to it.
func (i *IntegrationGCPUpdateRequest) SetHostFilters(v string) {
	i.HostFilters = &v
}

// GetProjectID returns the ProjectID field if non-nil, zero value otherwise.
func (i *IntegrationGCPUpdateRequest) GetProjectID() string {
	if i == nil || i.ProjectID == nil {
		return ""
	}
	return *i.ProjectID
}

// GetProjectIDOk returns a tuple with the ProjectID field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationGCPUpdateRequest) GetProjectIDOk() (string, bool) {
	if i == nil || i.ProjectID == nil {
		return "", false
	}
	return *i.ProjectID, true
}

// HasProjectID returns a boolean if a field has been set.
func (i *IntegrationGCPUpdateRequest) HasProjectID() bool {
	if i != nil && i.ProjectID != nil {
		return true
	}

	return false
}

// SetProjectID allocates a new i.ProjectID and returns the pointer to it.
func (i *IntegrationGCPUpdateRequest) SetProjectID(v string) {
	i.ProjectID = &v
}

// GetAPIToken returns the APIToken field if non-nil, zero value otherwise.
func (i *integrationPD) GetAPIToken() string {
	if i == nil || i.APIToken == nil {
		return ""
	}
	return *i.APIToken
}

// GetAPITokenOk returns a tuple with the APIToken field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *integrationPD) GetAPITokenOk() (string, bool) {
	if i == nil || i.APIToken == nil {
		return "", false
	}
	return *i.APIToken, true
}

// HasAPIToken returns a boolean if a field has been set.
func (i *integrationPD) HasAPIToken() bool {
	if i != nil && i.APIToken != nil {
		return true
	}

	return false
}

// SetAPIToken allocates a new i.APIToken and returns the pointer to it.
func (i *integrationPD) SetAPIToken(v string) {
	i.APIToken = &v
}

// GetSubdomain returns the Subdomain field if non-nil, zero value otherwise.
func (i *integrationPD) GetSubdomain() string {
	if i == nil || i.Subdomain == nil {
		return ""
	}
	return *i.Subdomain
}

// GetSubdomainOk returns a tuple with the Subdomain field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *integrationPD) GetSubdomainOk() (string, bool) {
	if i == nil || i.Subdomain == nil {
		return "", false
	}
	return *i.Subdomain, true
}

// HasSubdomain returns a boolean if a field has been set.
func (i *integrationPD) HasSubdomain() bool {
	if i != nil && i.Subdomain != nil {
		return true
	}

	return false
}

// SetSubdomain allocates a new i.Subdomain and returns the pointer to it.
func (i *integrationPD) SetSubdomain(v string) {
	i.Subdomain = &v
}

// GetAPIToken returns the APIToken field if non-nil, zero value otherwise.
func (i *IntegrationPDRequest) GetAPIToken() string {
	if i == nil || i.APIToken == nil {
		return ""
	}
	return *i.APIToken
}

// GetAPITokenOk returns a tuple with the APIToken field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationPDRequest) GetAPITokenOk() (string, bool) {
	if i == nil || i.APIToken == nil {
		return "", false
	}
	return *i.APIToken, true
}

// HasAPIToken returns a boolean if a field has been set.
func (i *IntegrationPDRequest) HasAPIToken() bool {
	if i != nil && i.APIToken != nil {
		return true
	}

	return false
}

// SetAPIToken allocates a new i.APIToken and returns the pointer to it.
func (i *IntegrationPDRequest) SetAPIToken(v string) {
	i.APIToken = &v
}

// GetRunCheck returns the RunCheck field if non-nil, zero value otherwise.
func (i *IntegrationPDRequest) GetRunCheck() bool {
	if i == nil || i.RunCheck == nil {
		return false
	}
	return *i.RunCheck
}

// GetRunCheckOk returns a tuple with the RunCheck field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationPDRequest) GetRunCheckOk() (bool, bool) {
	if i == nil || i.RunCheck == nil {
		return false, false
	}
	return *i.RunCheck, true
}

// HasRunCheck returns a boolean if a field has been set.
func (i *IntegrationPDRequest) HasRunCheck() bool {
	if i != nil && i.RunCheck != nil {
		return true
	}

	return false
}

// SetRunCheck allocates a new i.RunCheck and returns the pointer to it.
func (i *IntegrationPDRequest) SetRunCheck(v bool) {
	i.RunCheck = &v
}

// GetSubdomain returns the Subdomain field if non-nil, zero value otherwise.
func (i *IntegrationPDRequest) GetSubdomain() string {
	if i == nil || i.Subdomain == nil {
		return ""
	}
	return *i.Subdomain
}

// GetSubdomainOk returns a tuple with the Subdomain field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationPDRequest) GetSubdomainOk() (string, bool) {
	if i == nil || i.Subdomain == nil {
		return "", false
	}
	return *i.Subdomain, true
}

// HasSubdomain returns a boolean if a field has been set.
func (i *IntegrationPDRequest) HasSubdomain() bool {
	if i != nil && i.Subdomain != nil {
		return true
	}

	return false
}

// SetSubdomain allocates a new i.Subdomain and returns the pointer to it.
func (i *IntegrationPDRequest) SetSubdomain(v string) {
	i.Subdomain = &v
}

// GetRunCheck returns the RunCheck field if non-nil, zero value otherwise.
func (i *IntegrationSlackRequest) GetRunCheck() bool {
	if i == nil || i.RunCheck == nil {
		return false
	}
	return *i.RunCheck
}

// GetRunCheckOk returns a tuple with the RunCheck field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (i *IntegrationSlackRequest) GetRunCheckOk() (bool, bool) {
	if i == nil || i.RunCheck == nil {
		return false, false
	}
	return *i.RunCheck, true
}

// HasRunCheck returns a boolean if a field has been set.
func (i *IntegrationSlackRequest) HasRunCheck() bool {
	if i != nil && i.RunCheck != nil {
		return true
	}

	return false
}

// SetRunCheck allocates a new i.RunCheck and returns the pointer to it.
func (i *IntegrationSlackRequest) SetRunCheck(v bool) {
	i.RunCheck = &v
}

// GetHost returns the Host field if non-nil, zero value otherwise.
func (m *Metric) GetHost() string {
	if m == nil || m.Host == nil {
		return ""
	}
	return *m.Host
}

// GetHostOk returns a tuple with the Host field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (m *Metric) GetHostOk() (string, bool) {
	if m == nil || m.Host == nil {
		return "", false
	}
	return *m.Host, true
}

// HasHost returns a boolean if a field has been set.
func (m *Metric) HasHost() bool {
	if m != nil && m.Host != nil {
		return true
	}

	return false
}

// SetHost allocates a new m.Host and returns the pointer to it.
func (m *Metric) SetHost(v string) {
	m.Host = &v
}

// GetMetric returns the Metric field if non-nil, zero value otherwise.
func (m *Metric) GetMetric() string {
	if m == nil || m.Metric == nil {
		return ""
	}
	return *m.Metric
}

// GetMetricOk returns a tuple with the Metric field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (m *Metric) GetMetricOk() (string, bool) {
	if m == nil || m.Metric == nil {
		return "", false
	}
	return *m.Metric, true
}

// HasMetric returns a boolean if a field has been set.
func (m *Metric) HasMetric() bool {
	if m != nil && m.Metric != nil {
		return true
	}

	return false
}

// SetMetric allocates a new m.Metric and returns the pointer to it.
func (m *Metric) SetMetric(v string) {
	m.Metric = &v
}

// GetType returns the Type field if non-nil, zero value otherwise.
func (m *Metric) GetType() string {
	if m == nil || m.Type == nil {
		return ""
	}
	return *m.Type
}

// GetTypeOk returns a tuple with the Type field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (m *Metric) GetTypeOk() (string, bool) {
	if m == nil || m.Type == nil {
		return "", false
	}
	return *m.Type, true
}

// HasType returns a boolean if a field has been set.
func (m *Metric) HasType() bool {
	if m != nil && m.Type != nil {
		return true
	}

	return false
}

// SetType allocates a new m.Type and returns the pointer to it.
func (m *Metric) SetType(v string) {
	m.Type = &v
}

// GetUnit returns the Unit field if non-nil, zero value otherwise.
func (m *Metric) GetUnit() string {
	if m == nil || m.Unit == nil {
		return ""
	}
	return *m.Unit
}

// GetUnitOk returns a tuple with the Unit field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (m *Metric) GetUnitOk() (string, bool) {
	if m == nil || m.Unit == nil {
		return "", false
	}
	return *m.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (m *Metric) HasUnit() bool {
	if m != nil && m.Unit != nil {
		return true
	}

	return false
}

// SetUnit allocates a new m.Unit and returns the pointer to it.
func (m *Metric) SetUnit(v string) {
	m.Unit = &v
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (m *MetricMetadata) GetDescription() string {
	if m == nil || m.Description == nil {
		return ""
	}
	return *m.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (m *MetricMetadata) GetDescriptionOk() (string, bool) {
	if m == nil || m.Description == nil {
		return "", false
	}
	return *m.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (m *MetricMetadata) HasDescription() bool {
	if m != nil && m.Description != nil {
		return true
	}

	return false
}

// SetDescription allocates a new m.Description and returns the pointer to it.
func (m *MetricMetadata) SetDescription(v string) {
	m.Description = &v
}

// GetPerUnit returns the PerUnit field if non-nil, zero value otherwise.
func (m *MetricMetadata) GetPerUnit() string {
	if m == nil || m.PerUnit == nil {
		return ""
	}
	return *m.PerUnit
}

// GetPerUnitOk returns a tuple with the PerUnit field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (m *MetricMetadata) GetPerUnitOk() (string, bool) {
	if m == nil || m.PerUnit == nil {
		return "", false
	}
	return *m.PerUnit, true
}

// HasPerUnit returns a boolean if a field has been set.
func (m *MetricMetadata) HasPerUnit() bool {
	if m != nil && m.PerUnit != nil {
		return true
	}

	return false
}

// SetPerUnit allocates a new m.PerUnit and returns the pointer to it.
func (m *MetricMetadata) SetPerUnit(v string) {
	m.PerUnit = &v
}

// GetShortName returns the ShortName field if non-nil, zero value otherwise.
func (m *MetricMetadata) GetShortName() string {
	if m == nil || m.ShortName == nil {
		return ""
	}
	return *m.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (m *MetricMetadata) GetShortNameOk() (string, bool) {
	if m == nil || m.ShortName == nil {
		return "", false
	}
	return *m.ShortName, true
}

// HasShortName returns a boolean if a field has been set.
func (m *MetricMetadata) HasShortName() bool {
	if m != nil && m.ShortName != nil {
		return true
	}

	return false
}

// SetShortName allocates a new m.ShortName and returns the pointer to it.
func (m *MetricMetadata) SetShortName(v string) {
	m.ShortName = &v
}

// GetStatsdInterval returns the StatsdInterval field if non-nil, zero value otherwise.
func (m *MetricMetadata) GetStatsdInterval() int {
	if m == nil || m.StatsdInterval == nil {
		return 0
	}
	return *m.StatsdInterval
}

// GetStatsdIntervalOk returns a tuple with the StatsdInterval field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (m *MetricMetadata) GetStatsdIntervalOk() (int, bool) {
	if m == nil || m.StatsdInterval == nil {
		return 0, false
	}
	return *m.StatsdInterval, true
}

// HasStatsdInterval returns a boolean if a field has been set.
func (m *MetricMetadata) HasStatsdInterval() bool {
	if m != nil && m.StatsdInterval != nil {
		return true
	}

	return false
}

// SetStatsdInterval allocates a new m.StatsdInterval and returns the pointer to it.
func (m *MetricMetadata) SetStatsdInterval(v int) {
	m.StatsdInterval = &v
}

// GetType returns the Type field if non-nil, zero value otherwise.
func (m *MetricMetadata) GetType() string {
	if m == nil || m.Type == nil {
		return ""
	}
	return *m.Type
}

// GetTypeOk returns a tuple with the Type field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (m *MetricMetadata) GetTypeOk() (string, bool) {
	if m == nil || m.Type == nil {
		return "", false
	}
	return *m.Type, true
}

// HasType returns a boolean if a field has been set.
func (m *MetricMetadata) HasType() bool {
	if m != nil && m.Type != nil {
		return true
	}

	return false
}

// SetType allocates a new m.Type and returns the pointer to it.
func (m *MetricMetadata) SetType(v string) {
	m.Type = &v
}

// GetUnit returns the Unit field if non-nil, zero value otherwise.
func (m *MetricMetadata) GetUnit() string {
	if m == nil || m.Unit == nil {
		return ""
	}
	return *m.Unit
}

// GetUnitOk returns a tuple with the Unit field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (m *MetricMetadata) GetUnitOk() (string, bool) {
	if m == nil || m.Unit == nil {
		return "", false
	}
	return *m.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (m *MetricMetadata) HasUnit() bool {
	if m != nil && m.Unit != nil {
		return true
	}

	return false
}

// SetUnit allocates a new m.Unit and returns the pointer to it.
func (m *MetricMetadata) SetUnit(v string) {
	m.Unit = &v
}

// GetCreator returns the Creator field if non-nil, zero value otherwise.
func (m *Monitor) GetCreator() Creator {
	if m == nil || m.Creator == nil {
		return Creator{}
	}
	return *m.Creator
}

// GetCreatorOk returns a tuple with the Creator field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (m *Monitor) GetCreatorOk() (Creator, bool) {
	if m == nil || m.Creator == nil {
		return Creator{}, false
	}
	return *m.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (m *Monitor) HasCreator() bool {
	if m != nil && m.Creator != nil {
		return true
	}

	return false
}

// SetCreator allocates a new m.Creator and returns the pointer to it.
func (m *Monitor) SetCreator(v Creator) {
	m.Creator = &v
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (m *Monitor) GetId() int {
	if m == nil || m.Id == nil {
		return 0
	}
	return *m.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (m *Monitor) GetIdOk() (int, bool) {
	if m == nil || m.Id == nil {
		return 0, false
	}
	return *m.Id, true
}

// HasId returns a boolean if a field has been set.
func (m *Monitor) HasId() bool {
	if m != nil && m.Id != nil {
		return true
	}

	return false
}

// SetId allocates a new m.Id and returns the pointer to it.
func (m *Monitor) SetId(v int) {
	m.Id = &v
}

// GetMessage returns the Message field if non-nil, zero value otherwise.
func (m *Monitor) GetMessage() string {
	if m == nil || m.Message == nil {
		return ""
	}
	return *m.Message
}

// GetMessageOk returns a tuple with the Message field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (m *Monitor) GetMessageOk() (string, bool) {
	if m == nil || m.Message == nil {
		return "", false
	}
	return *m.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (m *Monitor) HasMessage() bool {
	if m != nil && m.Message != nil {
		return true
	}

	return false
}

// SetMessage allocates a new m.Message and returns the pointer to it.
func (m *Monitor) SetMessage(v string) {
	m.Message = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (m *Monitor) GetName() string {
	if m == nil || m.Name == nil {
		return ""
	}
	return *m.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (m *Monitor) GetNameOk() (string, bool) {
	if m == nil || m.Name == nil {
		return "", false
	}
	return *m.Name, true
}

// HasName returns a boolean if a field has been set.
func (m *Monitor) HasName() bool {
	if m != nil && m.Name != nil {
		return true
	}

	return false
}

// SetName allocates a new m.Name and returns the pointer to it.
func (m *Monitor) SetName(v string) {
	m.Name = &v
}

// GetOptions returns the Options field if non-nil, zero value otherwise.
func (m *Monitor) GetOptions() Options {
	if m == nil || m.Options == nil {
		return Options{}
	}
	return *m.Options
}

// GetOptionsOk returns a tuple with the Options field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (m *Monitor) GetOptionsOk() (Options, bool) {
	if m == nil || m.Options == nil {
		return Options{}, false
	}
	return *m.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (m *Monitor) HasOptions() bool {
	if m != nil && m.Options != nil {
		return true
	}

	return false
}

// SetOptions allocates a new m.Options and returns the pointer to it.
func (m *Monitor) SetOptions(v Options) {
	m.Options = &v
}

// GetOverallState returns the OverallState field if non-nil, zero value otherwise.
func (m *Monitor) GetOverallState() string {
	if m == nil || m.OverallState == nil {
		return ""
	}
	return *m.OverallState
}

// GetOverallStateOk returns a tuple with the OverallState field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (m *Monitor) GetOverallStateOk() (string, bool) {
	if m == nil || m.OverallState == nil {
		return "", false
	}
	return *m.OverallState, true
}

// HasOverallState returns a boolean if a field has been set.
func (m *Monitor) HasOverallState() bool {
	if m != nil && m.OverallState != nil {
		return true
	}

	return false
}

// SetOverallState allocates a new m.OverallState and returns the pointer to it.
func (m *Monitor) SetOverallState(v string) {
	m.OverallState = &v
}

// GetOverallStateModified returns the OverallStateModified field if non-nil, zero value otherwise.
func (m *Monitor) GetOverallStateModified() string {
	if m == nil || m.OverallStateModified == nil {
		return ""
	}
	return *m.OverallStateModified
}

// GetOverallStateModifiedOk returns a tuple with the OverallStateModified field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (m *Monitor) GetOverallStateModifiedOk() (string, bool) {
	if m == nil || m.OverallStateModified == nil {
		return "", false
	}
	return *m.OverallStateModified, true
}

// HasOverallStateModified returns a boolean if a field has been set.
func (m *Monitor) HasOverallStateModified() bool {
	if m != nil && m.OverallStateModified != nil {
		return true
	}

	return false
}

// SetOverallStateModified allocates a new m.OverallStateModified and returns the pointer to it.
func (m *Monitor) SetOverallStateModified(v string) {
	m.OverallStateModified = &v
}

// GetQuery returns the Query field if non-nil, zero value otherwise.
func (m *Monitor) GetQuery() string {
	if m == nil || m.Query == nil {
		return ""
	}
	return *m.Query
}

// GetQueryOk returns a tuple with the Query field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (m *Monitor) GetQueryOk() (string, bool) {
	if m == nil || m.Query == nil {
		return "", false
	}
	return *m.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (m *Monitor) HasQuery() bool {
	if m != nil && m.Query != nil {
		return true
	}

	return false
}

// SetQuery allocates a new m.Query and returns the pointer to it.
func (m *Monitor) SetQuery(v string) {
	m.Query = &v
}

// GetType returns the Type field if non-nil, zero value otherwise.
func (m *Monitor) GetType() string {
	if m == nil || m.Type == nil {
		return ""
	}
	return *m.Type
}

// GetTypeOk returns a tuple with the Type field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (m *Monitor) GetTypeOk() (string, bool) {
	if m == nil || m.Type == nil {
		return "", false
	}
	return *m.Type, true
}

// HasType returns a boolean if a field has been set.
func (m *Monitor) HasType() bool {
	if m != nil && m.Type != nil {
		return true
	}

	return false
}

// SetType allocates a new m.Type and returns the pointer to it.
func (m *Monitor) SetType(v string) {
	m.Type = &v
}

// GetEscalationMessage returns the EscalationMessage field if non-nil, zero value otherwise.
func (o *Options) GetEscalationMessage() string {
	if o == nil || o.EscalationMessage == nil {
		return ""
	}
	return *o.EscalationMessage
}

// GetEscalationMessageOk returns a tuple with the EscalationMessage field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Options) GetEscalationMessageOk() (string, bool) {
	if o == nil || o.EscalationMessage == nil {
		return "", false
	}
	return *o.EscalationMessage, true
}

// HasEscalationMessage returns a boolean if a field has been set.
func (o *Options) HasEscalationMessage() bool {
	if o != nil && o.EscalationMessage != nil {
		return true
	}

	return false
}

// SetEscalationMessage allocates a new o.EscalationMessage and returns the pointer to it.
func (o *Options) SetEscalationMessage(v string) {
	o.EscalationMessage = &v
}

// GetEvaluationDelay returns the EvaluationDelay field if non-nil, zero value otherwise.
func (o *Options) GetEvaluationDelay() int {
	if o == nil || o.EvaluationDelay == nil {
		return 0
	}
	return *o.EvaluationDelay
}

// GetEvaluationDelayOk returns a tuple with the EvaluationDelay field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Options) GetEvaluationDelayOk() (int, bool) {
	if o == nil || o.EvaluationDelay == nil {
		return 0, false
	}
	return *o.EvaluationDelay, true
}

// HasEvaluationDelay returns a boolean if a field has been set.
func (o *Options) HasEvaluationDelay() bool {
	if o != nil && o.EvaluationDelay != nil {
		return true
	}

	return false
}

// SetEvaluationDelay allocates a new o.EvaluationDelay and returns the pointer to it.
func (o *Options) SetEvaluationDelay(v int) {
	o.EvaluationDelay = &v
}

// GetIncludeTags returns the IncludeTags field if non-nil, zero value otherwise.
func (o *Options) GetIncludeTags() bool {
	if o == nil || o.IncludeTags == nil {
		return false
	}
	return *o.IncludeTags
}

// GetIncludeTagsOk returns a tuple with the IncludeTags field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Options) GetIncludeTagsOk() (bool, bool) {
	if o == nil || o.IncludeTags == nil {
		return false, false
	}
	return *o.IncludeTags, true
}

// HasIncludeTags returns a boolean if a field has been set.
func (o *Options) HasIncludeTags() bool {
	if o != nil && o.IncludeTags != nil {
		return true
	}

	return false
}

// SetIncludeTags allocates a new o.IncludeTags and returns the pointer to it.
func (o *Options) SetIncludeTags(v bool) {
	o.IncludeTags = &v
}

// GetLocked returns the Locked field if non-nil, zero value otherwise.
func (o *Options) GetLocked() bool {
	if o == nil || o.Locked == nil {
		return false
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Options) GetLockedOk() (bool, bool) {
	if o == nil || o.Locked == nil {
		return false, false
	}
	return *o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *Options) HasLocked() bool {
	if o != nil && o.Locked != nil {
		return true
	}

	return false
}

// SetLocked allocates a new o.Locked and returns the pointer to it.
func (o *Options) SetLocked(v bool) {
	o.Locked = &v
}

// GetNewHostDelay returns the NewHostDelay field if non-nil, zero value otherwise.
func (o *Options) GetNewHostDelay() int {
	if o == nil || o.NewHostDelay == nil {
		return 0
	}
	return *o.NewHostDelay
}

// GetNewHostDelayOk returns a tuple with the NewHostDelay field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Options) GetNewHostDelayOk() (int, bool) {
	if o == nil || o.NewHostDelay == nil {
		return 0, false
	}
	return *o.NewHostDelay, true
}

// HasNewHostDelay returns a boolean if a field has been set.
func (o *Options) HasNewHostDelay() bool {
	if o != nil && o.NewHostDelay != nil {
		return true
	}

	return false
}

// SetNewHostDelay allocates a new o.NewHostDelay and returns the pointer to it.
func (o *Options) SetNewHostDelay(v int) {
	o.NewHostDelay = &v
}

// GetNotifyAudit returns the NotifyAudit field if non-nil, zero value otherwise.
func (o *Options) GetNotifyAudit() bool {
	if o == nil || o.NotifyAudit == nil {
		return false
	}
	return *o.NotifyAudit
}

// GetNotifyAuditOk returns a tuple with the NotifyAudit field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Options) GetNotifyAuditOk() (bool, bool) {
	if o == nil || o.NotifyAudit == nil {
		return false, false
	}
	return *o.NotifyAudit, true
}

// HasNotifyAudit returns a boolean if a field has been set.
func (o *Options) HasNotifyAudit() bool {
	if o != nil && o.NotifyAudit != nil {
		return true
	}

	return false
}

// SetNotifyAudit allocates a new o.NotifyAudit and returns the pointer to it.
func (o *Options) SetNotifyAudit(v bool) {
	o.NotifyAudit = &v
}

// GetNotifyNoData returns the NotifyNoData field if non-nil, zero value otherwise.
func (o *Options) GetNotifyNoData() bool {
	if o == nil || o.NotifyNoData == nil {
		return false
	}
	return *o.NotifyNoData
}

// GetNotifyNoDataOk returns a tuple with the NotifyNoData field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Options) GetNotifyNoDataOk() (bool, bool) {
	if o == nil || o.NotifyNoData == nil {
		return false, false
	}
	return *o.NotifyNoData, true
}

// HasNotifyNoData returns a boolean if a field has been set.
func (o *Options) HasNotifyNoData() bool {
	if o != nil && o.NotifyNoData != nil {
		return true
	}

	return false
}

// SetNotifyNoData allocates a new o.NotifyNoData and returns the pointer to it.
func (o *Options) SetNotifyNoData(v bool) {
	o.NotifyNoData = &v
}

// GetRenotifyInterval returns the RenotifyInterval field if non-nil, zero value otherwise.
func (o *Options) GetRenotifyInterval() int {
	if o == nil || o.RenotifyInterval == nil {
		return 0
	}
	return *o.RenotifyInterval
}

// GetRenotifyIntervalOk returns a tuple with the RenotifyInterval field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Options) GetRenotifyIntervalOk() (int, bool) {
	if o == nil || o.RenotifyInterval == nil {
		return 0, false
	}
	return *o.RenotifyInterval, true
}

// HasRenotifyInterval returns a boolean if a field has been set.
func (o *Options) HasRenotifyInterval() bool {
	if o != nil && o.RenotifyInterval != nil {
		return true
	}

	return false
}

// SetRenotifyInterval allocates a new o.RenotifyInterval and returns the pointer to it.
func (o *Options) SetRenotifyInterval(v int) {
	o.RenotifyInterval = &v
}

// GetRequireFullWindow returns the RequireFullWindow field if non-nil, zero value otherwise.
func (o *Options) GetRequireFullWindow() bool {
	if o == nil || o.RequireFullWindow == nil {
		return false
	}
	return *o.RequireFullWindow
}

// GetRequireFullWindowOk returns a tuple with the RequireFullWindow field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Options) GetRequireFullWindowOk() (bool, bool) {
	if o == nil || o.RequireFullWindow == nil {
		return false, false
	}
	return *o.RequireFullWindow, true
}

// HasRequireFullWindow returns a boolean if a field has been set.
func (o *Options) HasRequireFullWindow() bool {
	if o != nil && o.RequireFullWindow != nil {
		return true
	}

	return false
}

// SetRequireFullWindow allocates a new o.RequireFullWindow and returns the pointer to it.
func (o *Options) SetRequireFullWindow(v bool) {
	o.RequireFullWindow = &v
}

// GetThresholds returns the Thresholds field if non-nil, zero value otherwise.
func (o *Options) GetThresholds() ThresholdCount {
	if o == nil || o.Thresholds == nil {
		return ThresholdCount{}
	}
	return *o.Thresholds
}

// GetThresholdsOk returns a tuple with the Thresholds field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Options) GetThresholdsOk() (ThresholdCount, bool) {
	if o == nil || o.Thresholds == nil {
		return ThresholdCount{}, false
	}
	return *o.Thresholds, true
}

// HasThresholds returns a boolean if a field has been set.
func (o *Options) HasThresholds() bool {
	if o != nil && o.Thresholds != nil {
		return true
	}

	return false
}

// SetThresholds allocates a new o.Thresholds and returns the pointer to it.
func (o *Options) SetThresholds(v ThresholdCount) {
	o.Thresholds = &v
}

// GetThresholdWindows returns the ThresholdWindows field if non-nil, zero value otherwise.
func (o *Options) GetThresholdWindows() ThresholdWindows {
	if o == nil || o.ThresholdWindows == nil {
		return ThresholdWindows{}
	}
	return *o.ThresholdWindows
}

// GetThresholdWindowsOk returns a tuple with the ThresholdWindows field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Options) GetThresholdWindowsOk() (ThresholdWindows, bool) {
	if o == nil || o.ThresholdWindows == nil {
		return ThresholdWindows{}, false
	}
	return *o.ThresholdWindows, true
}

// HasThresholdWindows returns a boolean if a field has been set.
func (o *Options) HasThresholdWindows() bool {
	if o != nil && o.ThresholdWindows != nil {
		return true
	}

	return false
}

// SetThresholdWindows allocates a new o.ThresholdWindows and returns the pointer to it.
func (o *Options) SetThresholdWindows(v ThresholdWindows) {
	o.ThresholdWindows = &v
}

// GetTimeoutH returns the TimeoutH field if non-nil, zero value otherwise.
func (o *Options) GetTimeoutH() int {
	if o == nil || o.TimeoutH == nil {
		return 0
	}
	return *o.TimeoutH
}

// GetTimeoutHOk returns a tuple with the TimeoutH field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Options) GetTimeoutHOk() (int, bool) {
	if o == nil || o.TimeoutH == nil {
		return 0, false
	}
	return *o.TimeoutH, true
}

// HasTimeoutH returns a boolean if a field has been set.
func (o *Options) HasTimeoutH() bool {
	if o != nil && o.TimeoutH != nil {
		return true
	}

	return false
}

// SetTimeoutH allocates a new o.TimeoutH and returns the pointer to it.
func (o *Options) SetTimeoutH(v int) {
	o.TimeoutH = &v
}

// GetCount returns the Count field if non-nil, zero value otherwise.
func (p *Params) GetCount() string {
	if p == nil || p.Count == nil {
		return ""
	}
	return *p.Count
}

// GetCountOk returns a tuple with the Count field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (p *Params) GetCountOk() (string, bool) {
	if p == nil || p.Count == nil {
		return "", false
	}
	return *p.Count, true
}

// HasCount returns a boolean if a field has been set.
func (p *Params) HasCount() bool {
	if p != nil && p.Count != nil {
		return true
	}

	return false
}

// SetCount allocates a new p.Count and returns the pointer to it.
func (p *Params) SetCount(v string) {
	p.Count = &v
}

// GetSort returns the Sort field if non-nil, zero value otherwise.
func (p *Params) GetSort() string {
	if p == nil || p.Sort == nil {
		return ""
	}
	return *p.Sort
}

// GetSortOk returns a tuple with the Sort field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (p *Params) GetSortOk() (string, bool) {
	if p == nil || p.Sort == nil {
		return "", false
	}
	return *p.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (p *Params) HasSort() bool {
	if p != nil && p.Sort != nil {
		return true
	}

	return false
}

// SetSort allocates a new p.Sort and returns the pointer to it.
func (p *Params) SetSort(v string) {
	p.Sort = &v
}

// GetStart returns the Start field if non-nil, zero value otherwise.
func (p *Params) GetStart() string {
	if p == nil || p.Start == nil {
		return ""
	}
	return *p.Start
}

// GetStartOk returns a tuple with the Start field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (p *Params) GetStartOk() (string, bool) {
	if p == nil || p.Start == nil {
		return "", false
	}
	return *p.Start, true
}

// HasStart returns a boolean if a field has been set.
func (p *Params) HasStart() bool {
	if p != nil && p.Start != nil {
		return true
	}

	return false
}

// SetStart allocates a new p.Start and returns the pointer to it.
func (p *Params) SetStart(v string) {
	p.Start = &v
}

// GetText returns the Text field if non-nil, zero value otherwise.
func (p *Params) GetText() string {
	if p == nil || p.Text == nil {
		return ""
	}
	return *p.Text
}

// GetTextOk returns a tuple with the Text field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (p *Params) GetTextOk() (string, bool) {
	if p == nil || p.Text == nil {
		return "", false
	}
	return *p.Text, true
}

// HasText returns a boolean if a field has been set.
func (p *Params) HasText() bool {
	if p != nil && p.Text != nil {
		return true
	}

	return false
}

// SetText allocates a new p.Text and returns the pointer to it.
func (p *Params) SetText(v string) {
	p.Text = &v
}

// GetPeriod returns the Period field if non-nil, zero value otherwise.
func (r *Recurrence) GetPeriod() int {
	if r == nil || r.Period == nil {
		return 0
	}
	return *r.Period
}

// GetPeriodOk returns a tuple with the Period field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (r *Recurrence) GetPeriodOk() (int, bool) {
	if r == nil || r.Period == nil {
		return 0, false
	}
	return *r.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (r *Recurrence) HasPeriod() bool {
	if r != nil && r.Period != nil {
		return true
	}

	return false
}

// SetPeriod allocates a new r.Period and returns the pointer to it.
func (r *Recurrence) SetPeriod(v int) {
	r.Period = &v
}

// GetType returns the Type field if non-nil, zero value otherwise.
func (r *Recurrence) GetType() string {
	if r == nil || r.Type == nil {
		return ""
	}
	return *r.Type
}

// GetTypeOk returns a tuple with the Type field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (r *Recurrence) GetTypeOk() (string, bool) {
	if r == nil || r.Type == nil {
		return "", false
	}
	return *r.Type, true
}

// HasType returns a boolean if a field has been set.
func (r *Recurrence) HasType() bool {
	if r != nil && r.Type != nil {
		return true
	}

	return false
}

// SetType allocates a new r.Type and returns the pointer to it.
func (r *Recurrence) SetType(v string) {
	r.Type = &v
}

// GetUntilDate returns the UntilDate field if non-nil, zero value otherwise.
func (r *Recurrence) GetUntilDate() int {
	if r == nil || r.UntilDate == nil {
		return 0
	}
	return *r.UntilDate
}

// GetUntilDateOk returns a tuple with the UntilDate field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (r *Recurrence) GetUntilDateOk() (int, bool) {
	if r == nil || r.UntilDate == nil {
		return 0, false
	}
	return *r.UntilDate, true
}

// HasUntilDate returns a boolean if a field has been set.
func (r *Recurrence) HasUntilDate() bool {
	if r != nil && r.UntilDate != nil {
		return true
	}

	return false
}

// SetUntilDate allocates a new r.UntilDate and returns the pointer to it.
func (r *Recurrence) SetUntilDate(v int) {
	r.UntilDate = &v
}

// GetUntilOccurrences returns the UntilOccurrences field if non-nil, zero value otherwise.
func (r *Recurrence) GetUntilOccurrences() int {
	if r == nil || r.UntilOccurrences == nil {
		return 0
	}
	return *r.UntilOccurrences
}

// GetUntilOccurrencesOk returns a tuple with the UntilOccurrences field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (r *Recurrence) GetUntilOccurrencesOk() (int, bool) {
	if r == nil || r.UntilOccurrences == nil {
		return 0, false
	}
	return *r.UntilOccurrences, true
}

// HasUntilOccurrences returns a boolean if a field has been set.
func (r *Recurrence) HasUntilOccurrences() bool {
	if r != nil && r.UntilOccurrences != nil {
		return true
	}

	return false
}

// SetUntilOccurrences allocates a new r.UntilOccurrences and returns the pointer to it.
func (r *Recurrence) SetUntilOccurrences(v int) {
	r.UntilOccurrences = &v
}

// GetComment returns the Comment field if non-nil, zero value otherwise.
func (r *reqComment) GetComment() Comment {
	if r == nil || r.Comment == nil {
		return Comment{}
	}
	return *r.Comment
}

// GetCommentOk returns a tuple with the Comment field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (r *reqComment) GetCommentOk() (Comment, bool) {
	if r == nil || r.Comment == nil {
		return Comment{}, false
	}
	return *r.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (r *reqComment) HasComment() bool {
	if r != nil && r.Comment != nil {
		return true
	}

	return false
}

// SetComment allocates a new r.Comment and returns the pointer to it.
func (r *reqComment) SetComment(v Comment) {
	r.Comment = &v
}

// GetDashboard returns the Dashboard field if non-nil, zero value otherwise.
func (r *reqGetDashboard) GetDashboard() Dashboard {
	if r == nil || r.Dashboard == nil {
		return Dashboard{}
	}
	return *r.Dashboard
}

// GetDashboardOk returns a tuple with the Dashboard field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (r *reqGetDashboard) GetDashboardOk() (Dashboard, bool) {
	if r == nil || r.Dashboard == nil {
		return Dashboard{}, false
	}
	return *r.Dashboard, true
}

// HasDashboard returns a boolean if a field has been set.
func (r *reqGetDashboard) HasDashboard() bool {
	if r != nil && r.Dashboard != nil {
		return true
	}

	return false
}

// SetDashboard allocates a new r.Dashboard and returns the pointer to it.
func (r *reqGetDashboard) SetDashboard(v Dashboard) {
	r.Dashboard = &v
}

// GetResource returns the Resource field if non-nil, zero value otherwise.
func (r *reqGetDashboard) GetResource() string {
	if r == nil || r.Resource == nil {
		return ""
	}
	return *r.Resource
}

// GetResourceOk returns a tuple with the Resource field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (r *reqGetDashboard) GetResourceOk() (string, bool) {
	if r == nil || r.Resource == nil {
		return "", false
	}
	return *r.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (r *reqGetDashboard) HasResource() bool {
	if r != nil && r.Resource != nil {
		return true
	}

	return false
}

// SetResource allocates a new r.Resource and returns the pointer to it.
func (r *reqGetDashboard) SetResource(v string) {
	r.Resource = &v
}

// GetUrl returns the Url field if non-nil, zero value otherwise.
func (r *reqGetDashboard) GetUrl() string {
	if r == nil || r.Url == nil {
		return ""
	}
	return *r.Url
}

// GetUrlOk returns a tuple with the Url field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (r *reqGetDashboard) GetUrlOk() (string, bool) {
	if r == nil || r.Url == nil {
		return "", false
	}
	return *r.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (r *reqGetDashboard) HasUrl() bool {
	if r != nil && r.Url != nil {
		return true
	}

	return false
}

// SetUrl allocates a new r.Url and returns the pointer to it.
func (r *reqGetDashboard) SetUrl(v string) {
	r.Url = &v
}

// GetEvent returns the Event field if non-nil, zero value otherwise.
func (r *reqGetEvent) GetEvent() Event {
	if r == nil || r.Event == nil {
		return Event{}
	}
	return *r.Event
}

// GetEventOk returns a tuple with the Event field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (r *reqGetEvent) GetEventOk() (Event, bool) {
	if r == nil || r.Event == nil {
		return Event{}, false
	}
	return *r.Event, true
}

// HasEvent returns a boolean if a field has been set.
func (r *reqGetEvent) HasEvent() bool {
	if r != nil && r.Event != nil {
		return true
	}

	return false
}

// SetEvent allocates a new r.Event and returns the pointer to it.
func (r *reqGetEvent) SetEvent(v Event) {
	r.Event = &v
}

// GetTags returns the Tags field if non-nil, zero value otherwise.
func (r *reqGetTags) GetTags() TagMap {
	if r == nil || r.Tags == nil {
		return TagMap{}
	}
	return *r.Tags
}

// GetTagsOk returns a tuple with the Tags field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (r *reqGetTags) GetTagsOk() (TagMap, bool) {
	if r == nil || r.Tags == nil {
		return TagMap{}, false
	}
	return *r.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (r *reqGetTags) HasTags() bool {
	if r != nil && r.Tags != nil {
		return true
	}

	return false
}

// SetTags allocates a new r.Tags and returns the pointer to it.
func (r *reqGetTags) SetTags(v TagMap) {
	r.Tags = &v
}

// GetColor returns the Color field if non-nil, zero value otherwise.
func (r *Rule) GetColor() string {
	if r == nil || r.Color == nil {
		return ""
	}
	return *r.Color
}

// GetColorOk returns a tuple with the Color field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (r *Rule) GetColorOk() (string, bool) {
	if r == nil || r.Color == nil {
		return "", false
	}
	return *r.Color, true
}

// HasColor returns a boolean if a field has been set.
func (r *Rule) HasColor() bool {
	if r != nil && r.Color != nil {
		return true
	}

	return false
}

// SetColor allocates a new r.Color and returns the pointer to it.
func (r *Rule) SetColor(v string) {
	r.Color = &v
}

// GetThreshold returns the Threshold field if non-nil, zero value otherwise.
func (r *Rule) GetThreshold() json.Number {
	if r == nil || r.Threshold == nil {
		return ""
	}
	return *r.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (r *Rule) GetThresholdOk() (json.Number, bool) {
	if r == nil || r.Threshold == nil {
		return "", false
	}
	return *r.Threshold, true
}

// HasThreshold returns a boolean if a field has been set.
func (r *Rule) HasThreshold() bool {
	if r != nil && r.Threshold != nil {
		return true
	}

	return false
}

// SetThreshold allocates a new r.Threshold and returns the pointer to it.
func (r *Rule) SetThreshold(v json.Number) {
	r.Threshold = &v
}

// GetTimeframe returns the Timeframe field if non-nil, zero value otherwise.
func (r *Rule) GetTimeframe() string {
	if r == nil || r.Timeframe == nil {
		return ""
	}
	return *r.Timeframe
}

// GetTimeframeOk returns a tuple with the Timeframe field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (r *Rule) GetTimeframeOk() (string, bool) {
	if r == nil || r.Timeframe == nil {
		return "", false
	}
	return *r.Timeframe, true
}

// HasTimeframe returns a boolean if a field has been set.
func (r *Rule) HasTimeframe() bool {
	if r != nil && r.Timeframe != nil {
		return true
	}

	return false
}

// SetTimeframe allocates a new r.Timeframe and returns the pointer to it.
func (r *Rule) SetTimeframe(v string) {
	r.Timeframe = &v
}

// GetHeight returns the Height field if non-nil, zero value otherwise.
func (s *Screenboard) GetHeight() int {
	if s == nil || s.Height == nil {
		return 0
	}
	return *s.Height
}

// GetHeightOk returns a tuple with the Height field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *Screenboard) GetHeightOk() (int, bool) {
	if s == nil || s.Height == nil {
		return 0, false
	}
	return *s.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (s *Screenboard) HasHeight() bool {
	if s != nil && s.Height != nil {
		return true
	}

	return false
}

// SetHeight allocates a new s.Height and returns the pointer to it.
func (s *Screenboard) SetHeight(v int) {
	s.Height = &v
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (s *Screenboard) GetId() int {
	if s == nil || s.Id == nil {
		return 0
	}
	return *s.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *Screenboard) GetIdOk() (int, bool) {
	if s == nil || s.Id == nil {
		return 0, false
	}
	return *s.Id, true
}

// HasId returns a boolean if a field has been set.
func (s *Screenboard) HasId() bool {
	if s != nil && s.Id != nil {
		return true
	}

	return false
}

// SetId allocates a new s.Id and returns the pointer to it.
func (s *Screenboard) SetId(v int) {
	s.Id = &v
}

// GetReadOnly returns the ReadOnly field if non-nil, zero value otherwise.
func (s *Screenboard) GetReadOnly() bool {
	if s == nil || s.ReadOnly == nil {
		return false
	}
	return *s.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *Screenboard) GetReadOnlyOk() (bool, bool) {
	if s == nil || s.ReadOnly == nil {
		return false, false
	}
	return *s.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (s *Screenboard) HasReadOnly() bool {
	if s != nil && s.ReadOnly != nil {
		return true
	}

	return false
}

// SetReadOnly allocates a new s.ReadOnly and returns the pointer to it.
func (s *Screenboard) SetReadOnly(v bool) {
	s.ReadOnly = &v
}

// GetShared returns the Shared field if non-nil, zero value otherwise.
func (s *Screenboard) GetShared() bool {
	if s == nil || s.Shared == nil {
		return false
	}
	return *s.Shared
}

// GetSharedOk returns a tuple with the Shared field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *Screenboard) GetSharedOk() (bool, bool) {
	if s == nil || s.Shared == nil {
		return false, false
	}
	return *s.Shared, true
}

// HasShared returns a boolean if a field has been set.
func (s *Screenboard) HasShared() bool {
	if s != nil && s.Shared != nil {
		return true
	}

	return false
}

// SetShared allocates a new s.Shared and returns the pointer to it.
func (s *Screenboard) SetShared(v bool) {
	s.Shared = &v
}

// GetTitle returns the Title field if non-nil, zero value otherwise.
func (s *Screenboard) GetTitle() string {
	if s == nil || s.Title == nil {
		return ""
	}
	return *s.Title
}

// GetTitleOk returns a tuple with the Title field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *Screenboard) GetTitleOk() (string, bool) {
	if s == nil || s.Title == nil {
		return "", false
	}
	return *s.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (s *Screenboard) HasTitle() bool {
	if s != nil && s.Title != nil {
		return true
	}

	return false
}

// SetTitle allocates a new s.Title and returns the pointer to it.
func (s *Screenboard) SetTitle(v string) {
	s.Title = &v
}

// GetWidth returns the Width field if non-nil, zero value otherwise.
func (s *Screenboard) GetWidth() int {
	if s == nil || s.Width == nil {
		return 0
	}
	return *s.Width
}

// GetWidthOk returns a tuple with the Width field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *Screenboard) GetWidthOk() (int, bool) {
	if s == nil || s.Width == nil {
		return 0, false
	}
	return *s.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (s *Screenboard) HasWidth() bool {
	if s != nil && s.Width != nil {
		return true
	}

	return false
}

// SetWidth allocates a new s.Width and returns the pointer to it.
func (s *Screenboard) SetWidth(v int) {
	s.Width = &v
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (s *ScreenboardLite) GetId() int {
	if s == nil || s.Id == nil {
		return 0
	}
	return *s.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *ScreenboardLite) GetIdOk() (int, bool) {
	if s == nil || s.Id == nil {
		return 0, false
	}
	return *s.Id, true
}

// HasId returns a boolean if a field has been set.
func (s *ScreenboardLite) HasId() bool {
	if s != nil && s.Id != nil {
		return true
	}

	return false
}

// SetId allocates a new s.Id and returns the pointer to it.
func (s *ScreenboardLite) SetId(v int) {
	s.Id = &v
}

// GetResource returns the Resource field if non-nil, zero value otherwise.
func (s *ScreenboardLite) GetResource() string {
	if s == nil || s.Resource == nil {
		return ""
	}
	return *s.Resource
}

// GetResourceOk returns a tuple with the Resource field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *ScreenboardLite) GetResourceOk() (string, bool) {
	if s == nil || s.Resource == nil {
		return "", false
	}
	return *s.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (s *ScreenboardLite) HasResource() bool {
	if s != nil && s.Resource != nil {
		return true
	}

	return false
}

// SetResource allocates a new s.Resource and returns the pointer to it.
func (s *ScreenboardLite) SetResource(v string) {
	s.Resource = &v
}

// GetTitle returns the Title field if non-nil, zero value otherwise.
func (s *ScreenboardLite) GetTitle() string {
	if s == nil || s.Title == nil {
		return ""
	}
	return *s.Title
}

// GetTitleOk returns a tuple with the Title field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *ScreenboardLite) GetTitleOk() (string, bool) {
	if s == nil || s.Title == nil {
		return "", false
	}
	return *s.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (s *ScreenboardLite) HasTitle() bool {
	if s != nil && s.Title != nil {
		return true
	}

	return false
}

// SetTitle allocates a new s.Title and returns the pointer to it.
func (s *ScreenboardLite) SetTitle(v string) {
	s.Title = &v
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (s *ScreenboardMonitor) GetId() int {
	if s == nil || s.Id == nil {
		return 0
	}
	return *s.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *ScreenboardMonitor) GetIdOk() (int, bool) {
	if s == nil || s.Id == nil {
		return 0, false
	}
	return *s.Id, true
}

// HasId returns a boolean if a field has been set.
func (s *ScreenboardMonitor) HasId() bool {
	if s != nil && s.Id != nil {
		return true
	}

	return false
}

// SetId allocates a new s.Id and returns the pointer to it.
func (s *ScreenboardMonitor) SetId(v int) {
	s.Id = &v
}

// GetAggr returns the Aggr field if non-nil, zero value otherwise.
func (s *Series) GetAggr() string {
	if s == nil || s.Aggr == nil {
		return ""
	}
	return *s.Aggr
}

// GetAggrOk returns a tuple with the Aggr field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *Series) GetAggrOk() (string, bool) {
	if s == nil || s.Aggr == nil {
		return "", false
	}
	return *s.Aggr, true
}

// HasAggr returns a boolean if a field has been set.
func (s *Series) HasAggr() bool {
	if s != nil && s.Aggr != nil {
		return true
	}

	return false
}

// SetAggr allocates a new s.Aggr and returns the pointer to it.
func (s *Series) SetAggr(v string) {
	s.Aggr = &v
}

// GetDisplayName returns the DisplayName field if non-nil, zero value otherwise.
func (s *Series) GetDisplayName() string {
	if s == nil || s.DisplayName == nil {
		return ""
	}
	return *s.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *Series) GetDisplayNameOk() (string, bool) {
	if s == nil || s.DisplayName == nil {
		return "", false
	}
	return *s.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (s *Series) HasDisplayName() bool {
	if s != nil && s.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName allocates a new s.DisplayName and returns the pointer to it.
func (s *Series) SetDisplayName(v string) {
	s.DisplayName = &v
}

// GetEnd returns the End field if non-nil, zero value otherwise.
func (s *Series) GetEnd() float64 {
	if s == nil || s.End == nil {
		return 0
	}
	return *s.End
}

// GetEndOk returns a tuple with the End field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *Series) GetEndOk() (float64, bool) {
	if s == nil || s.End == nil {
		return 0, false
	}
	return *s.End, true
}

// HasEnd returns a boolean if a field has been set.
func (s *Series) HasEnd() bool {
	if s != nil && s.End != nil {
		return true
	}

	return false
}

// SetEnd allocates a new s.End and returns the pointer to it.
func (s *Series) SetEnd(v float64) {
	s.End = &v
}

// GetExpression returns the Expression field if non-nil, zero value otherwise.
func (s *Series) GetExpression() string {
	if s == nil || s.Expression == nil {
		return ""
	}
	return *s.Expression
}

// GetExpressionOk returns a tuple with the Expression field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *Series) GetExpressionOk() (string, bool) {
	if s == nil || s.Expression == nil {
		return "", false
	}
	return *s.Expression, true
}

// HasExpression returns a boolean if a field has been set.
func (s *Series) HasExpression() bool {
	if s != nil && s.Expression != nil {
		return true
	}

	return false
}

// SetExpression allocates a new s.Expression and returns the pointer to it.
func (s *Series) SetExpression(v string) {
	s.Expression = &v
}

// GetInterval returns the Interval field if non-nil, zero value otherwise.
func (s *Series) GetInterval() int {
	if s == nil || s.Interval == nil {
		return 0
	}
	return *s.Interval
}

// GetIntervalOk returns a tuple with the Interval field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *Series) GetIntervalOk() (int, bool) {
	if s == nil || s.Interval == nil {
		return 0, false
	}
	return *s.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (s *Series) HasInterval() bool {
	if s != nil && s.Interval != nil {
		return true
	}

	return false
}

// SetInterval allocates a new s.Interval and returns the pointer to it.
func (s *Series) SetInterval(v int) {
	s.Interval = &v
}

// GetLength returns the Length field if non-nil, zero value otherwise.
func (s *Series) GetLength() int {
	if s == nil || s.Length == nil {
		return 0
	}
	return *s.Length
}

// GetLengthOk returns a tuple with the Length field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *Series) GetLengthOk() (int, bool) {
	if s == nil || s.Length == nil {
		return 0, false
	}
	return *s.Length, true
}

// HasLength returns a boolean if a field has been set.
func (s *Series) HasLength() bool {
	if s != nil && s.Length != nil {
		return true
	}

	return false
}

// SetLength allocates a new s.Length and returns the pointer to it.
func (s *Series) SetLength(v int) {
	s.Length = &v
}

// GetMetric returns the Metric field if non-nil, zero value otherwise.
func (s *Series) GetMetric() string {
	if s == nil || s.Metric == nil {
		return ""
	}
	return *s.Metric
}

// GetMetricOk returns a tuple with the Metric field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *Series) GetMetricOk() (string, bool) {
	if s == nil || s.Metric == nil {
		return "", false
	}
	return *s.Metric, true
}

// HasMetric returns a boolean if a field has been set.
func (s *Series) HasMetric() bool {
	if s != nil && s.Metric != nil {
		return true
	}

	return false
}

// SetMetric allocates a new s.Metric and returns the pointer to it.
func (s *Series) SetMetric(v string) {
	s.Metric = &v
}

// GetScope returns the Scope field if non-nil, zero value otherwise.
func (s *Series) GetScope() string {
	if s == nil || s.Scope == nil {
		return ""
	}
	return *s.Scope
}

// GetScopeOk returns a tuple with the Scope field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *Series) GetScopeOk() (string, bool) {
	if s == nil || s.Scope == nil {
		return "", false
	}
	return *s.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (s *Series) HasScope() bool {
	if s != nil && s.Scope != nil {
		return true
	}

	return false
}

// SetScope allocates a new s.Scope and returns the pointer to it.
func (s *Series) SetScope(v string) {
	s.Scope = &v
}

// GetStart returns the Start field if non-nil, zero value otherwise.
func (s *Series) GetStart() float64 {
	if s == nil || s.Start == nil {
		return 0
	}
	return *s.Start
}

// GetStartOk returns a tuple with the Start field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *Series) GetStartOk() (float64, bool) {
	if s == nil || s.Start == nil {
		return 0, false
	}
	return *s.Start, true
}

// HasStart returns a boolean if a field has been set.
func (s *Series) HasStart() bool {
	if s != nil && s.Start != nil {
		return true
	}

	return false
}

// SetStart allocates a new s.Start and returns the pointer to it.
func (s *Series) SetStart(v float64) {
	s.Start = &v
}

// GetUnits returns the Units field if non-nil, zero value otherwise.
func (s *Series) GetUnits() UnitPair {
	if s == nil || s.Units == nil {
		return UnitPair{}
	}
	return *s.Units
}

// GetUnitsOk returns a tuple with the Units field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *Series) GetUnitsOk() (UnitPair, bool) {
	if s == nil || s.Units == nil {
		return UnitPair{}, false
	}
	return *s.Units, true
}

// HasUnits returns a boolean if a field has been set.
func (s *Series) HasUnits() bool {
	if s != nil && s.Units != nil {
		return true
	}

	return false
}

// SetUnits allocates a new s.Units and returns the pointer to it.
func (s *Series) SetUnits(v UnitPair) {
	s.Units = &v
}

// GetAccount returns the Account field if non-nil, zero value otherwise.
func (s *ServiceHookSlackRequest) GetAccount() string {
	if s == nil || s.Account == nil {
		return ""
	}
	return *s.Account
}

// GetAccountOk returns a tuple with the Account field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *ServiceHookSlackRequest) GetAccountOk() (string, bool) {
	if s == nil || s.Account == nil {
		return "", false
	}
	return *s.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (s *ServiceHookSlackRequest) HasAccount() bool {
	if s != nil && s.Account != nil {
		return true
	}

	return false
}

// SetAccount allocates a new s.Account and returns the pointer to it.
func (s *ServiceHookSlackRequest) SetAccount(v string) {
	s.Account = &v
}

// GetUrl returns the Url field if non-nil, zero value otherwise.
func (s *ServiceHookSlackRequest) GetUrl() string {
	if s == nil || s.Url == nil {
		return ""
	}
	return *s.Url
}

// GetUrlOk returns a tuple with the Url field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *ServiceHookSlackRequest) GetUrlOk() (string, bool) {
	if s == nil || s.Url == nil {
		return "", false
	}
	return *s.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (s *ServiceHookSlackRequest) HasUrl() bool {
	if s != nil && s.Url != nil {
		return true
	}

	return false
}

// SetUrl allocates a new s.Url and returns the pointer to it.
func (s *ServiceHookSlackRequest) SetUrl(v string) {
	s.Url = &v
}

// GetServiceKey returns the ServiceKey field if non-nil, zero value otherwise.
func (s *servicePD) GetServiceKey() string {
	if s == nil || s.ServiceKey == nil {
		return ""
	}
	return *s.ServiceKey
}

// GetServiceKeyOk returns a tuple with the ServiceKey field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *servicePD) GetServiceKeyOk() (string, bool) {
	if s == nil || s.ServiceKey == nil {
		return "", false
	}
	return *s.ServiceKey, true
}

// HasServiceKey returns a boolean if a field has been set.
func (s *servicePD) HasServiceKey() bool {
	if s != nil && s.ServiceKey != nil {
		return true
	}

	return false
}

// SetServiceKey allocates a new s.ServiceKey and returns the pointer to it.
func (s *servicePD) SetServiceKey(v string) {
	s.ServiceKey = &v
}

// GetServiceName returns the ServiceName field if non-nil, zero value otherwise.
func (s *servicePD) GetServiceName() string {
	if s == nil || s.ServiceName == nil {
		return ""
	}
	return *s.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *servicePD) GetServiceNameOk() (string, bool) {
	if s == nil || s.ServiceName == nil {
		return "", false
	}
	return *s.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (s *servicePD) HasServiceName() bool {
	if s != nil && s.ServiceName != nil {
		return true
	}

	return false
}

// SetServiceName allocates a new s.ServiceName and returns the pointer to it.
func (s *servicePD) SetServiceName(v string) {
	s.ServiceName = &v
}

// GetServiceKey returns the ServiceKey field if non-nil, zero value otherwise.
func (s *ServicePDRequest) GetServiceKey() string {
	if s == nil || s.ServiceKey == nil {
		return ""
	}
	return *s.ServiceKey
}

// GetServiceKeyOk returns a tuple with the ServiceKey field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *ServicePDRequest) GetServiceKeyOk() (string, bool) {
	if s == nil || s.ServiceKey == nil {
		return "", false
	}
	return *s.ServiceKey, true
}

// HasServiceKey returns a boolean if a field has been set.
func (s *ServicePDRequest) HasServiceKey() bool {
	if s != nil && s.ServiceKey != nil {
		return true
	}

	return false
}

// SetServiceKey allocates a new s.ServiceKey and returns the pointer to it.
func (s *ServicePDRequest) SetServiceKey(v string) {
	s.ServiceKey = &v
}

// GetServiceName returns the ServiceName field if non-nil, zero value otherwise.
func (s *ServicePDRequest) GetServiceName() string {
	if s == nil || s.ServiceName == nil {
		return ""
	}
	return *s.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *ServicePDRequest) GetServiceNameOk() (string, bool) {
	if s == nil || s.ServiceName == nil {
		return "", false
	}
	return *s.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (s *ServicePDRequest) HasServiceName() bool {
	if s != nil && s.ServiceName != nil {
		return true
	}

	return false
}

// SetServiceName allocates a new s.ServiceName and returns the pointer to it.
func (s *ServicePDRequest) SetServiceName(v string) {
	s.ServiceName = &v
}

// GetFillMax returns the FillMax field if non-nil, zero value otherwise.
func (s *Style) GetFillMax() json.Number {
	if s == nil || s.FillMax == nil {
		return ""
	}
	return *s.FillMax
}

// GetFillMaxOk returns a tuple with the FillMax field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *Style) GetFillMaxOk() (json.Number, bool) {
	if s == nil || s.FillMax == nil {
		return "", false
	}
	return *s.FillMax, true
}

// HasFillMax returns a boolean if a field has been set.
func (s *Style) HasFillMax() bool {
	if s != nil && s.FillMax != nil {
		return true
	}

	return false
}

// SetFillMax allocates a new s.FillMax and returns the pointer to it.
func (s *Style) SetFillMax(v json.Number) {
	s.FillMax = &v
}

// GetFillMin returns the FillMin field if non-nil, zero value otherwise.
func (s *Style) GetFillMin() json.Number {
	if s == nil || s.FillMin == nil {
		return ""
	}
	return *s.FillMin
}

// GetFillMinOk returns a tuple with the FillMin field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *Style) GetFillMinOk() (json.Number, bool) {
	if s == nil || s.FillMin == nil {
		return "", false
	}
	return *s.FillMin, true
}

// HasFillMin returns a boolean if a field has been set.
func (s *Style) HasFillMin() bool {
	if s != nil && s.FillMin != nil {
		return true
	}

	return false
}

// SetFillMin allocates a new s.FillMin and returns the pointer to it.
func (s *Style) SetFillMin(v json.Number) {
	s.FillMin = &v
}

// GetPalette returns the Palette field if non-nil, zero value otherwise.
func (s *Style) GetPalette() string {
	if s == nil || s.Palette == nil {
		return ""
	}
	return *s.Palette
}

// GetPaletteOk returns a tuple with the Palette field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *Style) GetPaletteOk() (string, bool) {
	if s == nil || s.Palette == nil {
		return "", false
	}
	return *s.Palette, true
}

// HasPalette returns a boolean if a field has been set.
func (s *Style) HasPalette() bool {
	if s != nil && s.Palette != nil {
		return true
	}

	return false
}

// SetPalette allocates a new s.Palette and returns the pointer to it.
func (s *Style) SetPalette(v string) {
	s.Palette = &v
}

// GetPaletteFlip returns the PaletteFlip field if non-nil, zero value otherwise.
func (s *Style) GetPaletteFlip() bool {
	if s == nil || s.PaletteFlip == nil {
		return false
	}
	return *s.PaletteFlip
}

// GetPaletteFlipOk returns a tuple with the PaletteFlip field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (s *Style) GetPaletteFlipOk() (bool, bool) {
	if s == nil || s.PaletteFlip == nil {
		return false, false
	}
	return *s.PaletteFlip, true
}

// HasPaletteFlip returns a boolean if a field has been set.
func (s *Style) HasPaletteFlip() bool {
	if s != nil && s.PaletteFlip != nil {
		return true
	}

	return false
}

// SetPaletteFlip allocates a new s.PaletteFlip and returns the pointer to it.
func (s *Style) SetPaletteFlip(v bool) {
	s.PaletteFlip = &v
}

// GetDefault returns the Default field if non-nil, zero value otherwise.
func (t *TemplateVariable) GetDefault() string {
	if t == nil || t.Default == nil {
		return ""
	}
	return *t.Default
}

// GetDefaultOk returns a tuple with the Default field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TemplateVariable) GetDefaultOk() (string, bool) {
	if t == nil || t.Default == nil {
		return "", false
	}
	return *t.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (t *TemplateVariable) HasDefault() bool {
	if t != nil && t.Default != nil {
		return true
	}

	return false
}

// SetDefault allocates a new t.Default and returns the pointer to it.
func (t *TemplateVariable) SetDefault(v string) {
	t.Default = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (t *TemplateVariable) GetName() string {
	if t == nil || t.Name == nil {
		return ""
	}
	return *t.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TemplateVariable) GetNameOk() (string, bool) {
	if t == nil || t.Name == nil {
		return "", false
	}
	return *t.Name, true
}

// HasName returns a boolean if a field has been set.
func (t *TemplateVariable) HasName() bool {
	if t != nil && t.Name != nil {
		return true
	}

	return false
}

// SetName allocates a new t.Name and returns the pointer to it.
func (t *TemplateVariable) SetName(v string) {
	t.Name = &v
}

// GetPrefix returns the Prefix field if non-nil, zero value otherwise.
func (t *TemplateVariable) GetPrefix() string {
	if t == nil || t.Prefix == nil {
		return ""
	}
	return *t.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TemplateVariable) GetPrefixOk() (string, bool) {
	if t == nil || t.Prefix == nil {
		return "", false
	}
	return *t.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (t *TemplateVariable) HasPrefix() bool {
	if t != nil && t.Prefix != nil {
		return true
	}

	return false
}

// SetPrefix allocates a new t.Prefix and returns the pointer to it.
func (t *TemplateVariable) SetPrefix(v string) {
	t.Prefix = &v
}

// GetCritical returns the Critical field if non-nil, zero value otherwise.
func (t *ThresholdCount) GetCritical() json.Number {
	if t == nil || t.Critical == nil {
		return ""
	}
	return *t.Critical
}

// GetCriticalOk returns a tuple with the Critical field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *ThresholdCount) GetCriticalOk() (json.Number, bool) {
	if t == nil || t.Critical == nil {
		return "", false
	}
	return *t.Critical, true
}

// HasCritical returns a boolean if a field has been set.
func (t *ThresholdCount) HasCritical() bool {
	if t != nil && t.Critical != nil {
		return true
	}

	return false
}

// SetCritical allocates a new t.Critical and returns the pointer to it.
func (t *ThresholdCount) SetCritical(v json.Number) {
	t.Critical = &v
}

// GetCriticalRecovery returns the CriticalRecovery field if non-nil, zero value otherwise.
func (t *ThresholdCount) GetCriticalRecovery() json.Number {
	if t == nil || t.CriticalRecovery == nil {
		return ""
	}
	return *t.CriticalRecovery
}

// GetCriticalRecoveryOk returns a tuple with the CriticalRecovery field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *ThresholdCount) GetCriticalRecoveryOk() (json.Number, bool) {
	if t == nil || t.CriticalRecovery == nil {
		return "", false
	}
	return *t.CriticalRecovery, true
}

// HasCriticalRecovery returns a boolean if a field has been set.
func (t *ThresholdCount) HasCriticalRecovery() bool {
	if t != nil && t.CriticalRecovery != nil {
		return true
	}

	return false
}

// SetCriticalRecovery allocates a new t.CriticalRecovery and returns the pointer to it.
func (t *ThresholdCount) SetCriticalRecovery(v json.Number) {
	t.CriticalRecovery = &v
}

// GetOk returns the Ok field if non-nil, zero value otherwise.
func (t *ThresholdCount) GetOk() json.Number {
	if t == nil || t.Ok == nil {
		return ""
	}
	return *t.Ok
}

// GetOkOk returns a tuple with the Ok field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *ThresholdCount) GetOkOk() (json.Number, bool) {
	if t == nil || t.Ok == nil {
		return "", false
	}
	return *t.Ok, true
}

// HasOk returns a boolean if a field has been set.
func (t *ThresholdCount) HasOk() bool {
	if t != nil && t.Ok != nil {
		return true
	}

	return false
}

// SetOk allocates a new t.Ok and returns the pointer to it.
func (t *ThresholdCount) SetOk(v json.Number) {
	t.Ok = &v
}

// GetUnknown returns the Unknown field if non-nil, zero value otherwise.
func (t *ThresholdCount) GetUnknown() json.Number {
	if t == nil || t.Unknown == nil {
		return ""
	}
	return *t.Unknown
}

// GetUnknownOk returns a tuple with the Unknown field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *ThresholdCount) GetUnknownOk() (json.Number, bool) {
	if t == nil || t.Unknown == nil {
		return "", false
	}
	return *t.Unknown, true
}

// HasUnknown returns a boolean if a field has been set.
func (t *ThresholdCount) HasUnknown() bool {
	if t != nil && t.Unknown != nil {
		return true
	}

	return false
}

// SetUnknown allocates a new t.Unknown and returns the pointer to it.
func (t *ThresholdCount) SetUnknown(v json.Number) {
	t.Unknown = &v
}

// GetWarning returns the Warning field if non-nil, zero value otherwise.
func (t *ThresholdCount) GetWarning() json.Number {
	if t == nil || t.Warning == nil {
		return ""
	}
	return *t.Warning
}

// GetWarningOk returns a tuple with the Warning field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *ThresholdCount) GetWarningOk() (json.Number, bool) {
	if t == nil || t.Warning == nil {
		return "", false
	}
	return *t.Warning, true
}

// HasWarning returns a boolean if a field has been set.
func (t *ThresholdCount) HasWarning() bool {
	if t != nil && t.Warning != nil {
		return true
	}

	return false
}

// SetWarning allocates a new t.Warning and returns the pointer to it.
func (t *ThresholdCount) SetWarning(v json.Number) {
	t.Warning = &v
}

// GetWarningRecovery returns the WarningRecovery field if non-nil, zero value otherwise.
func (t *ThresholdCount) GetWarningRecovery() json.Number {
	if t == nil || t.WarningRecovery == nil {
		return ""
	}
	return *t.WarningRecovery
}

// GetWarningRecoveryOk returns a tuple with the WarningRecovery field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *ThresholdCount) GetWarningRecoveryOk() (json.Number, bool) {
	if t == nil || t.WarningRecovery == nil {
		return "", false
	}
	return *t.WarningRecovery, true
}

// HasWarningRecovery returns a boolean if a field has been set.
func (t *ThresholdCount) HasWarningRecovery() bool {
	if t != nil && t.WarningRecovery != nil {
		return true
	}

	return false
}

// SetWarningRecovery allocates a new t.WarningRecovery and returns the pointer to it.
func (t *ThresholdCount) SetWarningRecovery(v json.Number) {
	t.WarningRecovery = &v
}

// GetRecoveryWindow returns the RecoveryWindow field if non-nil, zero value otherwise.
func (t *ThresholdWindows) GetRecoveryWindow() string {
	if t == nil || t.RecoveryWindow == nil {
		return ""
	}
	return *t.RecoveryWindow
}

// GetRecoveryWindowOk returns a tuple with the RecoveryWindow field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *ThresholdWindows) GetRecoveryWindowOk() (string, bool) {
	if t == nil || t.RecoveryWindow == nil {
		return "", false
	}
	return *t.RecoveryWindow, true
}

// HasRecoveryWindow returns a boolean if a field has been set.
func (t *ThresholdWindows) HasRecoveryWindow() bool {
	if t != nil && t.RecoveryWindow != nil {
		return true
	}

	return false
}

// SetRecoveryWindow allocates a new t.RecoveryWindow and returns the pointer to it.
func (t *ThresholdWindows) SetRecoveryWindow(v string) {
	t.RecoveryWindow = &v
}

// GetTriggerWindow returns the TriggerWindow field if non-nil, zero value otherwise.
func (t *ThresholdWindows) GetTriggerWindow() string {
	if t == nil || t.TriggerWindow == nil {
		return ""
	}
	return *t.TriggerWindow
}

// GetTriggerWindowOk returns a tuple with the TriggerWindow field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *ThresholdWindows) GetTriggerWindowOk() (string, bool) {
	if t == nil || t.TriggerWindow == nil {
		return "", false
	}
	return *t.TriggerWindow, true
}

// HasTriggerWindow returns a boolean if a field has been set.
func (t *ThresholdWindows) HasTriggerWindow() bool {
	if t != nil && t.TriggerWindow != nil {
		return true
	}

	return false
}

// SetTriggerWindow allocates a new t.TriggerWindow and returns the pointer to it.
func (t *ThresholdWindows) SetTriggerWindow(v string) {
	t.TriggerWindow = &v
}

// GetAutoscale returns the Autoscale field if non-nil, zero value otherwise.
func (t *TileDef) GetAutoscale() bool {
	if t == nil || t.Autoscale == nil {
		return false
	}
	return *t.Autoscale
}

// GetAutoscaleOk returns a tuple with the Autoscale field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDef) GetAutoscaleOk() (bool, bool) {
	if t == nil || t.Autoscale == nil {
		return false, false
	}
	return *t.Autoscale, true
}

// HasAutoscale returns a boolean if a field has been set.
func (t *TileDef) HasAutoscale() bool {
	if t != nil && t.Autoscale != nil {
		return true
	}

	return false
}

// SetAutoscale allocates a new t.Autoscale and returns the pointer to it.
func (t *TileDef) SetAutoscale(v bool) {
	t.Autoscale = &v
}

// GetCustomUnit returns the CustomUnit field if non-nil, zero value otherwise.
func (t *TileDef) GetCustomUnit() string {
	if t == nil || t.CustomUnit == nil {
		return ""
	}
	return *t.CustomUnit
}

// GetCustomUnitOk returns a tuple with the CustomUnit field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDef) GetCustomUnitOk() (string, bool) {
	if t == nil || t.CustomUnit == nil {
		return "", false
	}
	return *t.CustomUnit, true
}

// HasCustomUnit returns a boolean if a field has been set.
func (t *TileDef) HasCustomUnit() bool {
	if t != nil && t.CustomUnit != nil {
		return true
	}

	return false
}

// SetCustomUnit allocates a new t.CustomUnit and returns the pointer to it.
func (t *TileDef) SetCustomUnit(v string) {
	t.CustomUnit = &v
}

// GetNodeType returns the NodeType field if non-nil, zero value otherwise.
func (t *TileDef) GetNodeType() string {
	if t == nil || t.NodeType == nil {
		return ""
	}
	return *t.NodeType
}

// GetNodeTypeOk returns a tuple with the NodeType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDef) GetNodeTypeOk() (string, bool) {
	if t == nil || t.NodeType == nil {
		return "", false
	}
	return *t.NodeType, true
}

// HasNodeType returns a boolean if a field has been set.
func (t *TileDef) HasNodeType() bool {
	if t != nil && t.NodeType != nil {
		return true
	}

	return false
}

// SetNodeType allocates a new t.NodeType and returns the pointer to it.
func (t *TileDef) SetNodeType(v string) {
	t.NodeType = &v
}

// GetNoGroupHosts returns the NoGroupHosts field if non-nil, zero value otherwise.
func (t *TileDef) GetNoGroupHosts() bool {
	if t == nil || t.NoGroupHosts == nil {
		return false
	}
	return *t.NoGroupHosts
}

// GetNoGroupHostsOk returns a tuple with the NoGroupHosts field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDef) GetNoGroupHostsOk() (bool, bool) {
	if t == nil || t.NoGroupHosts == nil {
		return false, false
	}
	return *t.NoGroupHosts, true
}

// HasNoGroupHosts returns a boolean if a field has been set.
func (t *TileDef) HasNoGroupHosts() bool {
	if t != nil && t.NoGroupHosts != nil {
		return true
	}

	return false
}

// SetNoGroupHosts allocates a new t.NoGroupHosts and returns the pointer to it.
func (t *TileDef) SetNoGroupHosts(v bool) {
	t.NoGroupHosts = &v
}

// GetNoMetricHosts returns the NoMetricHosts field if non-nil, zero value otherwise.
func (t *TileDef) GetNoMetricHosts() bool {
	if t == nil || t.NoMetricHosts == nil {
		return false
	}
	return *t.NoMetricHosts
}

// GetNoMetricHostsOk returns a tuple with the NoMetricHosts field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDef) GetNoMetricHostsOk() (bool, bool) {
	if t == nil || t.NoMetricHosts == nil {
		return false, false
	}
	return *t.NoMetricHosts, true
}

// HasNoMetricHosts returns a boolean if a field has been set.
func (t *TileDef) HasNoMetricHosts() bool {
	if t != nil && t.NoMetricHosts != nil {
		return true
	}

	return false
}

// SetNoMetricHosts allocates a new t.NoMetricHosts and returns the pointer to it.
func (t *TileDef) SetNoMetricHosts(v bool) {
	t.NoMetricHosts = &v
}

// GetPrecision returns the Precision field if non-nil, zero value otherwise.
func (t *TileDef) GetPrecision() json.Number {
	if t == nil || t.Precision == nil {
		return ""
	}
	return *t.Precision
}

// GetPrecisionOk returns a tuple with the Precision field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDef) GetPrecisionOk() (json.Number, bool) {
	if t == nil || t.Precision == nil {
		return "", false
	}
	return *t.Precision, true
}

// HasPrecision returns a boolean if a field has been set.
func (t *TileDef) HasPrecision() bool {
	if t != nil && t.Precision != nil {
		return true
	}

	return false
}

// SetPrecision allocates a new t.Precision and returns the pointer to it.
func (t *TileDef) SetPrecision(v json.Number) {
	t.Precision = &v
}

// GetStyle returns the Style field if non-nil, zero value otherwise.
func (t *TileDef) GetStyle() TileDefStyle {
	if t == nil || t.Style == nil {
		return TileDefStyle{}
	}
	return *t.Style
}

// GetStyleOk returns a tuple with the Style field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDef) GetStyleOk() (TileDefStyle, bool) {
	if t == nil || t.Style == nil {
		return TileDefStyle{}, false
	}
	return *t.Style, true
}

// HasStyle returns a boolean if a field has been set.
func (t *TileDef) HasStyle() bool {
	if t != nil && t.Style != nil {
		return true
	}

	return false
}

// SetStyle allocates a new t.Style and returns the pointer to it.
func (t *TileDef) SetStyle(v TileDefStyle) {
	t.Style = &v
}

// GetTextAlign returns the TextAlign field if non-nil, zero value otherwise.
func (t *TileDef) GetTextAlign() string {
	if t == nil || t.TextAlign == nil {
		return ""
	}
	return *t.TextAlign
}

// GetTextAlignOk returns a tuple with the TextAlign field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDef) GetTextAlignOk() (string, bool) {
	if t == nil || t.TextAlign == nil {
		return "", false
	}
	return *t.TextAlign, true
}

// HasTextAlign returns a boolean if a field has been set.
func (t *TileDef) HasTextAlign() bool {
	if t != nil && t.TextAlign != nil {
		return true
	}

	return false
}

// SetTextAlign allocates a new t.TextAlign and returns the pointer to it.
func (t *TileDef) SetTextAlign(v string) {
	t.TextAlign = &v
}

// GetViz returns the Viz field if non-nil, zero value otherwise.
func (t *TileDef) GetViz() string {
	if t == nil || t.Viz == nil {
		return ""
	}
	return *t.Viz
}

// GetVizOk returns a tuple with the Viz field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDef) GetVizOk() (string, bool) {
	if t == nil || t.Viz == nil {
		return "", false
	}
	return *t.Viz, true
}

// HasViz returns a boolean if a field has been set.
func (t *TileDef) HasViz() bool {
	if t != nil && t.Viz != nil {
		return true
	}

	return false
}

// SetViz allocates a new t.Viz and returns the pointer to it.
func (t *TileDef) SetViz(v string) {
	t.Viz = &v
}

// GetQuery returns the Query field if non-nil, zero value otherwise.
func (t *TileDefEvent) GetQuery() string {
	if t == nil || t.Query == nil {
		return ""
	}
	return *t.Query
}

// GetQueryOk returns a tuple with the Query field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefEvent) GetQueryOk() (string, bool) {
	if t == nil || t.Query == nil {
		return "", false
	}
	return *t.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (t *TileDefEvent) HasQuery() bool {
	if t != nil && t.Query != nil {
		return true
	}

	return false
}

// SetQuery allocates a new t.Query and returns the pointer to it.
func (t *TileDefEvent) SetQuery(v string) {
	t.Query = &v
}

// GetLabel returns the Label field if non-nil, zero value otherwise.
func (t *TileDefMarker) GetLabel() string {
	if t == nil || t.Label == nil {
		return ""
	}
	return *t.Label
}

// GetLabelOk returns a tuple with the Label field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefMarker) GetLabelOk() (string, bool) {
	if t == nil || t.Label == nil {
		return "", false
	}
	return *t.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (t *TileDefMarker) HasLabel() bool {
	if t != nil && t.Label != nil {
		return true
	}

	return false
}

// SetLabel allocates a new t.Label and returns the pointer to it.
func (t *TileDefMarker) SetLabel(v string) {
	t.Label = &v
}

// GetType returns the Type field if non-nil, zero value otherwise.
func (t *TileDefMarker) GetType() string {
	if t == nil || t.Type == nil {
		return ""
	}
	return *t.Type
}

// GetTypeOk returns a tuple with the Type field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefMarker) GetTypeOk() (string, bool) {
	if t == nil || t.Type == nil {
		return "", false
	}
	return *t.Type, true
}

// HasType returns a boolean if a field has been set.
func (t *TileDefMarker) HasType() bool {
	if t != nil && t.Type != nil {
		return true
	}

	return false
}

// SetType allocates a new t.Type and returns the pointer to it.
func (t *TileDefMarker) SetType(v string) {
	t.Type = &v
}

// GetValue returns the Value field if non-nil, zero value otherwise.
func (t *TileDefMarker) GetValue() string {
	if t == nil || t.Value == nil {
		return ""
	}
	return *t.Value
}

// GetValueOk returns a tuple with the Value field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefMarker) GetValueOk() (string, bool) {
	if t == nil || t.Value == nil {
		return "", false
	}
	return *t.Value, true
}

// HasValue returns a boolean if a field has been set.
func (t *TileDefMarker) HasValue() bool {
	if t != nil && t.Value != nil {
		return true
	}

	return false
}

// SetValue allocates a new t.Value and returns the pointer to it.
func (t *TileDefMarker) SetValue(v string) {
	t.Value = &v
}

// GetAggregator returns the Aggregator field if non-nil, zero value otherwise.
func (t *TileDefRequest) GetAggregator() string {
	if t == nil || t.Aggregator == nil {
		return ""
	}
	return *t.Aggregator
}

// GetAggregatorOk returns a tuple with the Aggregator field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefRequest) GetAggregatorOk() (string, bool) {
	if t == nil || t.Aggregator == nil {
		return "", false
	}
	return *t.Aggregator, true
}

// HasAggregator returns a boolean if a field has been set.
func (t *TileDefRequest) HasAggregator() bool {
	if t != nil && t.Aggregator != nil {
		return true
	}

	return false
}

// SetAggregator allocates a new t.Aggregator and returns the pointer to it.
func (t *TileDefRequest) SetAggregator(v string) {
	t.Aggregator = &v
}

// GetChangeType returns the ChangeType field if non-nil, zero value otherwise.
func (t *TileDefRequest) GetChangeType() string {
	if t == nil || t.ChangeType == nil {
		return ""
	}
	return *t.ChangeType
}

// GetChangeTypeOk returns a tuple with the ChangeType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefRequest) GetChangeTypeOk() (string, bool) {
	if t == nil || t.ChangeType == nil {
		return "", false
	}
	return *t.ChangeType, true
}

// HasChangeType returns a boolean if a field has been set.
func (t *TileDefRequest) HasChangeType() bool {
	if t != nil && t.ChangeType != nil {
		return true
	}

	return false
}

// SetChangeType allocates a new t.ChangeType and returns the pointer to it.
func (t *TileDefRequest) SetChangeType(v string) {
	t.ChangeType = &v
}

// GetCompareTo returns the CompareTo field if non-nil, zero value otherwise.
func (t *TileDefRequest) GetCompareTo() string {
	if t == nil || t.CompareTo == nil {
		return ""
	}
	return *t.CompareTo
}

// GetCompareToOk returns a tuple with the CompareTo field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefRequest) GetCompareToOk() (string, bool) {
	if t == nil || t.CompareTo == nil {
		return "", false
	}
	return *t.CompareTo, true
}

// HasCompareTo returns a boolean if a field has been set.
func (t *TileDefRequest) HasCompareTo() bool {
	if t != nil && t.CompareTo != nil {
		return true
	}

	return false
}

// SetCompareTo allocates a new t.CompareTo and returns the pointer to it.
func (t *TileDefRequest) SetCompareTo(v string) {
	t.CompareTo = &v
}

// GetExtraCol returns the ExtraCol field if non-nil, zero value otherwise.
func (t *TileDefRequest) GetExtraCol() string {
	if t == nil || t.ExtraCol == nil {
		return ""
	}
	return *t.ExtraCol
}

// GetExtraColOk returns a tuple with the ExtraCol field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefRequest) GetExtraColOk() (string, bool) {
	if t == nil || t.ExtraCol == nil {
		return "", false
	}
	return *t.ExtraCol, true
}

// HasExtraCol returns a boolean if a field has been set.
func (t *TileDefRequest) HasExtraCol() bool {
	if t != nil && t.ExtraCol != nil {
		return true
	}

	return false
}

// SetExtraCol allocates a new t.ExtraCol and returns the pointer to it.
func (t *TileDefRequest) SetExtraCol(v string) {
	t.ExtraCol = &v
}

// GetIncreaseGood returns the IncreaseGood field if non-nil, zero value otherwise.
func (t *TileDefRequest) GetIncreaseGood() bool {
	if t == nil || t.IncreaseGood == nil {
		return false
	}
	return *t.IncreaseGood
}

// GetIncreaseGoodOk returns a tuple with the IncreaseGood field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefRequest) GetIncreaseGoodOk() (bool, bool) {
	if t == nil || t.IncreaseGood == nil {
		return false, false
	}
	return *t.IncreaseGood, true
}

// HasIncreaseGood returns a boolean if a field has been set.
func (t *TileDefRequest) HasIncreaseGood() bool {
	if t != nil && t.IncreaseGood != nil {
		return true
	}

	return false
}

// SetIncreaseGood allocates a new t.IncreaseGood and returns the pointer to it.
func (t *TileDefRequest) SetIncreaseGood(v bool) {
	t.IncreaseGood = &v
}

// GetLimit returns the Limit field if non-nil, zero value otherwise.
func (t *TileDefRequest) GetLimit() int {
	if t == nil || t.Limit == nil {
		return 0
	}
	return *t.Limit
}

// GetLimitOk returns a tuple with the Limit field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefRequest) GetLimitOk() (int, bool) {
	if t == nil || t.Limit == nil {
		return 0, false
	}
	return *t.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (t *TileDefRequest) HasLimit() bool {
	if t != nil && t.Limit != nil {
		return true
	}

	return false
}

// SetLimit allocates a new t.Limit and returns the pointer to it.
func (t *TileDefRequest) SetLimit(v int) {
	t.Limit = &v
}

// GetMetric returns the Metric field if non-nil, zero value otherwise.
func (t *TileDefRequest) GetMetric() string {
	if t == nil || t.Metric == nil {
		return ""
	}
	return *t.Metric
}

// GetMetricOk returns a tuple with the Metric field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefRequest) GetMetricOk() (string, bool) {
	if t == nil || t.Metric == nil {
		return "", false
	}
	return *t.Metric, true
}

// HasMetric returns a boolean if a field has been set.
func (t *TileDefRequest) HasMetric() bool {
	if t != nil && t.Metric != nil {
		return true
	}

	return false
}

// SetMetric allocates a new t.Metric and returns the pointer to it.
func (t *TileDefRequest) SetMetric(v string) {
	t.Metric = &v
}

// GetOrderBy returns the OrderBy field if non-nil, zero value otherwise.
func (t *TileDefRequest) GetOrderBy() string {
	if t == nil || t.OrderBy == nil {
		return ""
	}
	return *t.OrderBy
}

// GetOrderByOk returns a tuple with the OrderBy field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefRequest) GetOrderByOk() (string, bool) {
	if t == nil || t.OrderBy == nil {
		return "", false
	}
	return *t.OrderBy, true
}

// HasOrderBy returns a boolean if a field has been set.
func (t *TileDefRequest) HasOrderBy() bool {
	if t != nil && t.OrderBy != nil {
		return true
	}

	return false
}

// SetOrderBy allocates a new t.OrderBy and returns the pointer to it.
func (t *TileDefRequest) SetOrderBy(v string) {
	t.OrderBy = &v
}

// GetOrderDir returns the OrderDir field if non-nil, zero value otherwise.
func (t *TileDefRequest) GetOrderDir() string {
	if t == nil || t.OrderDir == nil {
		return ""
	}
	return *t.OrderDir
}

// GetOrderDirOk returns a tuple with the OrderDir field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefRequest) GetOrderDirOk() (string, bool) {
	if t == nil || t.OrderDir == nil {
		return "", false
	}
	return *t.OrderDir, true
}

// HasOrderDir returns a boolean if a field has been set.
func (t *TileDefRequest) HasOrderDir() bool {
	if t != nil && t.OrderDir != nil {
		return true
	}

	return false
}

// SetOrderDir allocates a new t.OrderDir and returns the pointer to it.
func (t *TileDefRequest) SetOrderDir(v string) {
	t.OrderDir = &v
}

// GetQuery returns the Query field if non-nil, zero value otherwise.
func (t *TileDefRequest) GetQuery() string {
	if t == nil || t.Query == nil {
		return ""
	}
	return *t.Query
}

// GetQueryOk returns a tuple with the Query field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefRequest) GetQueryOk() (string, bool) {
	if t == nil || t.Query == nil {
		return "", false
	}
	return *t.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (t *TileDefRequest) HasQuery() bool {
	if t != nil && t.Query != nil {
		return true
	}

	return false
}

// SetQuery allocates a new t.Query and returns the pointer to it.
func (t *TileDefRequest) SetQuery(v string) {
	t.Query = &v
}

// GetQueryType returns the QueryType field if non-nil, zero value otherwise.
func (t *TileDefRequest) GetQueryType() string {
	if t == nil || t.QueryType == nil {
		return ""
	}
	return *t.QueryType
}

// GetQueryTypeOk returns a tuple with the QueryType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefRequest) GetQueryTypeOk() (string, bool) {
	if t == nil || t.QueryType == nil {
		return "", false
	}
	return *t.QueryType, true
}

// HasQueryType returns a boolean if a field has been set.
func (t *TileDefRequest) HasQueryType() bool {
	if t != nil && t.QueryType != nil {
		return true
	}

	return false
}

// SetQueryType allocates a new t.QueryType and returns the pointer to it.
func (t *TileDefRequest) SetQueryType(v string) {
	t.QueryType = &v
}

// GetStyle returns the Style field if non-nil, zero value otherwise.
func (t *TileDefRequest) GetStyle() TileDefRequestStyle {
	if t == nil || t.Style == nil {
		return TileDefRequestStyle{}
	}
	return *t.Style
}

// GetStyleOk returns a tuple with the Style field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefRequest) GetStyleOk() (TileDefRequestStyle, bool) {
	if t == nil || t.Style == nil {
		return TileDefRequestStyle{}, false
	}
	return *t.Style, true
}

// HasStyle returns a boolean if a field has been set.
func (t *TileDefRequest) HasStyle() bool {
	if t != nil && t.Style != nil {
		return true
	}

	return false
}

// SetStyle allocates a new t.Style and returns the pointer to it.
func (t *TileDefRequest) SetStyle(v TileDefRequestStyle) {
	t.Style = &v
}

// GetTextFilter returns the TextFilter field if non-nil, zero value otherwise.
func (t *TileDefRequest) GetTextFilter() string {
	if t == nil || t.TextFilter == nil {
		return ""
	}
	return *t.TextFilter
}

// GetTextFilterOk returns a tuple with the TextFilter field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefRequest) GetTextFilterOk() (string, bool) {
	if t == nil || t.TextFilter == nil {
		return "", false
	}
	return *t.TextFilter, true
}

// HasTextFilter returns a boolean if a field has been set.
func (t *TileDefRequest) HasTextFilter() bool {
	if t != nil && t.TextFilter != nil {
		return true
	}

	return false
}

// SetTextFilter allocates a new t.TextFilter and returns the pointer to it.
func (t *TileDefRequest) SetTextFilter(v string) {
	t.TextFilter = &v
}

// GetType returns the Type field if non-nil, zero value otherwise.
func (t *TileDefRequest) GetType() string {
	if t == nil || t.Type == nil {
		return ""
	}
	return *t.Type
}

// GetTypeOk returns a tuple with the Type field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefRequest) GetTypeOk() (string, bool) {
	if t == nil || t.Type == nil {
		return "", false
	}
	return *t.Type, true
}

// HasType returns a boolean if a field has been set.
func (t *TileDefRequest) HasType() bool {
	if t != nil && t.Type != nil {
		return true
	}

	return false
}

// SetType allocates a new t.Type and returns the pointer to it.
func (t *TileDefRequest) SetType(v string) {
	t.Type = &v
}

// GetPalette returns the Palette field if non-nil, zero value otherwise.
func (t *TileDefRequestStyle) GetPalette() string {
	if t == nil || t.Palette == nil {
		return ""
	}
	return *t.Palette
}

// GetPaletteOk returns a tuple with the Palette field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefRequestStyle) GetPaletteOk() (string, bool) {
	if t == nil || t.Palette == nil {
		return "", false
	}
	return *t.Palette, true
}

// HasPalette returns a boolean if a field has been set.
func (t *TileDefRequestStyle) HasPalette() bool {
	if t != nil && t.Palette != nil {
		return true
	}

	return false
}

// SetPalette allocates a new t.Palette and returns the pointer to it.
func (t *TileDefRequestStyle) SetPalette(v string) {
	t.Palette = &v
}

// GetType returns the Type field if non-nil, zero value otherwise.
func (t *TileDefRequestStyle) GetType() string {
	if t == nil || t.Type == nil {
		return ""
	}
	return *t.Type
}

// GetTypeOk returns a tuple with the Type field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefRequestStyle) GetTypeOk() (string, bool) {
	if t == nil || t.Type == nil {
		return "", false
	}
	return *t.Type, true
}

// HasType returns a boolean if a field has been set.
func (t *TileDefRequestStyle) HasType() bool {
	if t != nil && t.Type != nil {
		return true
	}

	return false
}

// SetType allocates a new t.Type and returns the pointer to it.
func (t *TileDefRequestStyle) SetType(v string) {
	t.Type = &v
}

// GetWidth returns the Width field if non-nil, zero value otherwise.
func (t *TileDefRequestStyle) GetWidth() string {
	if t == nil || t.Width == nil {
		return ""
	}
	return *t.Width
}

// GetWidthOk returns a tuple with the Width field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefRequestStyle) GetWidthOk() (string, bool) {
	if t == nil || t.Width == nil {
		return "", false
	}
	return *t.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (t *TileDefRequestStyle) HasWidth() bool {
	if t != nil && t.Width != nil {
		return true
	}

	return false
}

// SetWidth allocates a new t.Width and returns the pointer to it.
func (t *TileDefRequestStyle) SetWidth(v string) {
	t.Width = &v
}

// GetFillMax returns the FillMax field if non-nil, zero value otherwise.
func (t *TileDefStyle) GetFillMax() string {
	if t == nil || t.FillMax == nil {
		return ""
	}
	return *t.FillMax
}

// GetFillMaxOk returns a tuple with the FillMax field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefStyle) GetFillMaxOk() (string, bool) {
	if t == nil || t.FillMax == nil {
		return "", false
	}
	return *t.FillMax, true
}

// HasFillMax returns a boolean if a field has been set.
func (t *TileDefStyle) HasFillMax() bool {
	if t != nil && t.FillMax != nil {
		return true
	}

	return false
}

// SetFillMax allocates a new t.FillMax and returns the pointer to it.
func (t *TileDefStyle) SetFillMax(v string) {
	t.FillMax = &v
}

// GetFillMin returns the FillMin field if non-nil, zero value otherwise.
func (t *TileDefStyle) GetFillMin() string {
	if t == nil || t.FillMin == nil {
		return ""
	}
	return *t.FillMin
}

// GetFillMinOk returns a tuple with the FillMin field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefStyle) GetFillMinOk() (string, bool) {
	if t == nil || t.FillMin == nil {
		return "", false
	}
	return *t.FillMin, true
}

// HasFillMin returns a boolean if a field has been set.
func (t *TileDefStyle) HasFillMin() bool {
	if t != nil && t.FillMin != nil {
		return true
	}

	return false
}

// SetFillMin allocates a new t.FillMin and returns the pointer to it.
func (t *TileDefStyle) SetFillMin(v string) {
	t.FillMin = &v
}

// GetPalette returns the Palette field if non-nil, zero value otherwise.
func (t *TileDefStyle) GetPalette() string {
	if t == nil || t.Palette == nil {
		return ""
	}
	return *t.Palette
}

// GetPaletteOk returns a tuple with the Palette field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefStyle) GetPaletteOk() (string, bool) {
	if t == nil || t.Palette == nil {
		return "", false
	}
	return *t.Palette, true
}

// HasPalette returns a boolean if a field has been set.
func (t *TileDefStyle) HasPalette() bool {
	if t != nil && t.Palette != nil {
		return true
	}

	return false
}

// SetPalette allocates a new t.Palette and returns the pointer to it.
func (t *TileDefStyle) SetPalette(v string) {
	t.Palette = &v
}

// GetPaletteFlip returns the PaletteFlip field if non-nil, zero value otherwise.
func (t *TileDefStyle) GetPaletteFlip() string {
	if t == nil || t.PaletteFlip == nil {
		return ""
	}
	return *t.PaletteFlip
}

// GetPaletteFlipOk returns a tuple with the PaletteFlip field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TileDefStyle) GetPaletteFlipOk() (string, bool) {
	if t == nil || t.PaletteFlip == nil {
		return "", false
	}
	return *t.PaletteFlip, true
}

// HasPaletteFlip returns a boolean if a field has been set.
func (t *TileDefStyle) HasPaletteFlip() bool {
	if t != nil && t.PaletteFlip != nil {
		return true
	}

	return false
}

// SetPaletteFlip allocates a new t.PaletteFlip and returns the pointer to it.
func (t *TileDefStyle) SetPaletteFlip(v string) {
	t.PaletteFlip = &v
}

// GetLiveSpan returns the LiveSpan field if non-nil, zero value otherwise.
func (t *Time) GetLiveSpan() string {
	if t == nil || t.LiveSpan == nil {
		return ""
	}
	return *t.LiveSpan
}

// GetLiveSpanOk returns a tuple with the LiveSpan field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *Time) GetLiveSpanOk() (string, bool) {
	if t == nil || t.LiveSpan == nil {
		return "", false
	}
	return *t.LiveSpan, true
}

// HasLiveSpan returns a boolean if a field has been set.
func (t *Time) HasLiveSpan() bool {
	if t != nil && t.LiveSpan != nil {
		return true
	}

	return false
}

// SetLiveSpan allocates a new t.LiveSpan and returns the pointer to it.
func (t *Time) SetLiveSpan(v string) {
	t.LiveSpan = &v
}

// GetFromTs returns the FromTs field if non-nil, zero value otherwise.
func (t *TriggeringValue) GetFromTs() int {
	if t == nil || t.FromTs == nil {
		return 0
	}
	return *t.FromTs
}

// GetFromTsOk returns a tuple with the FromTs field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TriggeringValue) GetFromTsOk() (int, bool) {
	if t == nil || t.FromTs == nil {
		return 0, false
	}
	return *t.FromTs, true
}

// HasFromTs returns a boolean if a field has been set.
func (t *TriggeringValue) HasFromTs() bool {
	if t != nil && t.FromTs != nil {
		return true
	}

	return false
}

// SetFromTs allocates a new t.FromTs and returns the pointer to it.
func (t *TriggeringValue) SetFromTs(v int) {
	t.FromTs = &v
}

// GetToTs returns the ToTs field if non-nil, zero value otherwise.
func (t *TriggeringValue) GetToTs() int {
	if t == nil || t.ToTs == nil {
		return 0
	}
	return *t.ToTs
}

// GetToTsOk returns a tuple with the ToTs field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TriggeringValue) GetToTsOk() (int, bool) {
	if t == nil || t.ToTs == nil {
		return 0, false
	}
	return *t.ToTs, true
}

// HasToTs returns a boolean if a field has been set.
func (t *TriggeringValue) HasToTs() bool {
	if t != nil && t.ToTs != nil {
		return true
	}

	return false
}

// SetToTs allocates a new t.ToTs and returns the pointer to it.
func (t *TriggeringValue) SetToTs(v int) {
	t.ToTs = &v
}

// GetValue returns the Value field if non-nil, zero value otherwise.
func (t *TriggeringValue) GetValue() int {
	if t == nil || t.Value == nil {
		return 0
	}
	return *t.Value
}

// GetValueOk returns a tuple with the Value field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (t *TriggeringValue) GetValueOk() (int, bool) {
	if t == nil || t.Value == nil {
		return 0, false
	}
	return *t.Value, true
}

// HasValue returns a boolean if a field has been set.
func (t *TriggeringValue) HasValue() bool {
	if t != nil && t.Value != nil {
		return true
	}

	return false
}

// SetValue allocates a new t.Value and returns the pointer to it.
func (t *TriggeringValue) SetValue(v int) {
	t.Value = &v
}

// GetAccessRole returns the AccessRole field if non-nil, zero value otherwise.
func (u *User) GetAccessRole() string {
	if u == nil || u.AccessRole == nil {
		return ""
	}
	return *u.AccessRole
}

// GetAccessRoleOk returns a tuple with the AccessRole field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (u *User) GetAccessRoleOk() (string, bool) {
	if u == nil || u.AccessRole == nil {
		return "", false
	}
	return *u.AccessRole, true
}

// HasAccessRole returns a boolean if a field has been set.
func (u *User) HasAccessRole() bool {
	if u != nil && u.AccessRole != nil {
		return true
	}

	return false
}

// SetAccessRole allocates a new u.AccessRole and returns the pointer to it.
func (u *User) SetAccessRole(v string) {
	u.AccessRole = &v
}

// GetDisabled returns the Disabled field if non-nil, zero value otherwise.
func (u *User) GetDisabled() bool {
	if u == nil || u.Disabled == nil {
		return false
	}
	return *u.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (u *User) GetDisabledOk() (bool, bool) {
	if u == nil || u.Disabled == nil {
		return false, false
	}
	return *u.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (u *User) HasDisabled() bool {
	if u != nil && u.Disabled != nil {
		return true
	}

	return false
}

// SetDisabled allocates a new u.Disabled and returns the pointer to it.
func (u *User) SetDisabled(v bool) {
	u.Disabled = &v
}

// GetEmail returns the Email field if non-nil, zero value otherwise.
func (u *User) GetEmail() string {
	if u == nil || u.Email == nil {
		return ""
	}
	return *u.Email
}

// GetEmailOk returns a tuple with the Email field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (u *User) GetEmailOk() (string, bool) {
	if u == nil || u.Email == nil {
		return "", false
	}
	return *u.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (u *User) HasEmail() bool {
	if u != nil && u.Email != nil {
		return true
	}

	return false
}

// SetEmail allocates a new u.Email and returns the pointer to it.
func (u *User) SetEmail(v string) {
	u.Email = &v
}

// GetHandle returns the Handle field if non-nil, zero value otherwise.
func (u *User) GetHandle() string {
	if u == nil || u.Handle == nil {
		return ""
	}
	return *u.Handle
}

// GetHandleOk returns a tuple with the Handle field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (u *User) GetHandleOk() (string, bool) {
	if u == nil || u.Handle == nil {
		return "", false
	}
	return *u.Handle, true
}

// HasHandle returns a boolean if a field has been set.
func (u *User) HasHandle() bool {
	if u != nil && u.Handle != nil {
		return true
	}

	return false
}

// SetHandle allocates a new u.Handle and returns the pointer to it.
func (u *User) SetHandle(v string) {
	u.Handle = &v
}

// GetIsAdmin returns the IsAdmin field if non-nil, zero value otherwise.
func (u *User) GetIsAdmin() bool {
	if u == nil || u.IsAdmin == nil {
		return false
	}
	return *u.IsAdmin
}

// GetIsAdminOk returns a tuple with the IsAdmin field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (u *User) GetIsAdminOk() (bool, bool) {
	if u == nil || u.IsAdmin == nil {
		return false, false
	}
	return *u.IsAdmin, true
}

// HasIsAdmin returns a boolean if a field has been set.
func (u *User) HasIsAdmin() bool {
	if u != nil && u.IsAdmin != nil {
		return true
	}

	return false
}

// SetIsAdmin allocates a new u.IsAdmin and returns the pointer to it.
func (u *User) SetIsAdmin(v bool) {
	u.IsAdmin = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (u *User) GetName() string {
	if u == nil || u.Name == nil {
		return ""
	}
	return *u.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (u *User) GetNameOk() (string, bool) {
	if u == nil || u.Name == nil {
		return "", false
	}
	return *u.Name, true
}

// HasName returns a boolean if a field has been set.
func (u *User) HasName() bool {
	if u != nil && u.Name != nil {
		return true
	}

	return false
}

// SetName allocates a new u.Name and returns the pointer to it.
func (u *User) SetName(v string) {
	u.Name = &v
}

// GetRole returns the Role field if non-nil, zero value otherwise.
func (u *User) GetRole() string {
	if u == nil || u.Role == nil {
		return ""
	}
	return *u.Role
}

// GetRoleOk returns a tuple with the Role field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (u *User) GetRoleOk() (string, bool) {
	if u == nil || u.Role == nil {
		return "", false
	}
	return *u.Role, true
}

// HasRole returns a boolean if a field has been set.
func (u *User) HasRole() bool {
	if u != nil && u.Role != nil {
		return true
	}

	return false
}

// SetRole allocates a new u.Role and returns the pointer to it.
func (u *User) SetRole(v string) {
	u.Role = &v
}

// GetVerified returns the Verified field if non-nil, zero value otherwise.
func (u *User) GetVerified() bool {
	if u == nil || u.Verified == nil {
		return false
	}
	return *u.Verified
}

// GetVerifiedOk returns a tuple with the Verified field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (u *User) GetVerifiedOk() (bool, bool) {
	if u == nil || u.Verified == nil {
		return false, false
	}
	return *u.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (u *User) HasVerified() bool {
	if u != nil && u.Verified != nil {
		return true
	}

	return false
}

// SetVerified allocates a new u.Verified and returns the pointer to it.
func (u *User) SetVerified(v bool) {
	u.Verified = &v
}

// GetAlertID returns the AlertID field if non-nil, zero value otherwise.
func (w *Widget) GetAlertID() int {
	if w == nil || w.AlertID == nil {
		return 0
	}
	return *w.AlertID
}

// GetAlertIDOk returns a tuple with the AlertID field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetAlertIDOk() (int, bool) {
	if w == nil || w.AlertID == nil {
		return 0, false
	}
	return *w.AlertID, true
}

// HasAlertID returns a boolean if a field has been set.
func (w *Widget) HasAlertID() bool {
	if w != nil && w.AlertID != nil {
		return true
	}

	return false
}

// SetAlertID allocates a new w.AlertID and returns the pointer to it.
func (w *Widget) SetAlertID(v int) {
	w.AlertID = &v
}

// GetAutoRefresh returns the AutoRefresh field if non-nil, zero value otherwise.
func (w *Widget) GetAutoRefresh() bool {
	if w == nil || w.AutoRefresh == nil {
		return false
	}
	return *w.AutoRefresh
}

// GetAutoRefreshOk returns a tuple with the AutoRefresh field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetAutoRefreshOk() (bool, bool) {
	if w == nil || w.AutoRefresh == nil {
		return false, false
	}
	return *w.AutoRefresh, true
}

// HasAutoRefresh returns a boolean if a field has been set.
func (w *Widget) HasAutoRefresh() bool {
	if w != nil && w.AutoRefresh != nil {
		return true
	}

	return false
}

// SetAutoRefresh allocates a new w.AutoRefresh and returns the pointer to it.
func (w *Widget) SetAutoRefresh(v bool) {
	w.AutoRefresh = &v
}

// GetBgcolor returns the Bgcolor field if non-nil, zero value otherwise.
func (w *Widget) GetBgcolor() string {
	if w == nil || w.Bgcolor == nil {
		return ""
	}
	return *w.Bgcolor
}

// GetBgcolorOk returns a tuple with the Bgcolor field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetBgcolorOk() (string, bool) {
	if w == nil || w.Bgcolor == nil {
		return "", false
	}
	return *w.Bgcolor, true
}

// HasBgcolor returns a boolean if a field has been set.
func (w *Widget) HasBgcolor() bool {
	if w != nil && w.Bgcolor != nil {
		return true
	}

	return false
}

// SetBgcolor allocates a new w.Bgcolor and returns the pointer to it.
func (w *Widget) SetBgcolor(v string) {
	w.Bgcolor = &v
}

// GetCheck returns the Check field if non-nil, zero value otherwise.
func (w *Widget) GetCheck() string {
	if w == nil || w.Check == nil {
		return ""
	}
	return *w.Check
}

// GetCheckOk returns a tuple with the Check field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetCheckOk() (string, bool) {
	if w == nil || w.Check == nil {
		return "", false
	}
	return *w.Check, true
}

// HasCheck returns a boolean if a field has been set.
func (w *Widget) HasCheck() bool {
	if w != nil && w.Check != nil {
		return true
	}

	return false
}

// SetCheck allocates a new w.Check and returns the pointer to it.
func (w *Widget) SetCheck(v string) {
	w.Check = &v
}

// GetColor returns the Color field if non-nil, zero value otherwise.
func (w *Widget) GetColor() string {
	if w == nil || w.Color == nil {
		return ""
	}
	return *w.Color
}

// GetColorOk returns a tuple with the Color field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetColorOk() (string, bool) {
	if w == nil || w.Color == nil {
		return "", false
	}
	return *w.Color, true
}

// HasColor returns a boolean if a field has been set.
func (w *Widget) HasColor() bool {
	if w != nil && w.Color != nil {
		return true
	}

	return false
}

// SetColor allocates a new w.Color and returns the pointer to it.
func (w *Widget) SetColor(v string) {
	w.Color = &v
}

// GetColorPreference returns the ColorPreference field if non-nil, zero value otherwise.
func (w *Widget) GetColorPreference() string {
	if w == nil || w.ColorPreference == nil {
		return ""
	}
	return *w.ColorPreference
}

// GetColorPreferenceOk returns a tuple with the ColorPreference field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetColorPreferenceOk() (string, bool) {
	if w == nil || w.ColorPreference == nil {
		return "", false
	}
	return *w.ColorPreference, true
}

// HasColorPreference returns a boolean if a field has been set.
func (w *Widget) HasColorPreference() bool {
	if w != nil && w.ColorPreference != nil {
		return true
	}

	return false
}

// SetColorPreference allocates a new w.ColorPreference and returns the pointer to it.
func (w *Widget) SetColorPreference(v string) {
	w.ColorPreference = &v
}

// GetColumns returns the Columns field if non-nil, zero value otherwise.
func (w *Widget) GetColumns() string {
	if w == nil || w.Columns == nil {
		return ""
	}
	return *w.Columns
}

// GetColumnsOk returns a tuple with the Columns field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetColumnsOk() (string, bool) {
	if w == nil || w.Columns == nil {
		return "", false
	}
	return *w.Columns, true
}

// HasColumns returns a boolean if a field has been set.
func (w *Widget) HasColumns() bool {
	if w != nil && w.Columns != nil {
		return true
	}

	return false
}

// SetColumns allocates a new w.Columns and returns the pointer to it.
func (w *Widget) SetColumns(v string) {
	w.Columns = &v
}

// GetDisplayFormat returns the DisplayFormat field if non-nil, zero value otherwise.
func (w *Widget) GetDisplayFormat() string {
	if w == nil || w.DisplayFormat == nil {
		return ""
	}
	return *w.DisplayFormat
}

// GetDisplayFormatOk returns a tuple with the DisplayFormat field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetDisplayFormatOk() (string, bool) {
	if w == nil || w.DisplayFormat == nil {
		return "", false
	}
	return *w.DisplayFormat, true
}

// HasDisplayFormat returns a boolean if a field has been set.
func (w *Widget) HasDisplayFormat() bool {
	if w != nil && w.DisplayFormat != nil {
		return true
	}

	return false
}

// SetDisplayFormat allocates a new w.DisplayFormat and returns the pointer to it.
func (w *Widget) SetDisplayFormat(v string) {
	w.DisplayFormat = &v
}

// GetEnv returns the Env field if non-nil, zero value otherwise.
func (w *Widget) GetEnv() string {
	if w == nil || w.Env == nil {
		return ""
	}
	return *w.Env
}

// GetEnvOk returns a tuple with the Env field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetEnvOk() (string, bool) {
	if w == nil || w.Env == nil {
		return "", false
	}
	return *w.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (w *Widget) HasEnv() bool {
	if w != nil && w.Env != nil {
		return true
	}

	return false
}

// SetEnv allocates a new w.Env and returns the pointer to it.
func (w *Widget) SetEnv(v string) {
	w.Env = &v
}

// GetEventSize returns the EventSize field if non-nil, zero value otherwise.
func (w *Widget) GetEventSize() string {
	if w == nil || w.EventSize == nil {
		return ""
	}
	return *w.EventSize
}

// GetEventSizeOk returns a tuple with the EventSize field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetEventSizeOk() (string, bool) {
	if w == nil || w.EventSize == nil {
		return "", false
	}
	return *w.EventSize, true
}

// HasEventSize returns a boolean if a field has been set.
func (w *Widget) HasEventSize() bool {
	if w != nil && w.EventSize != nil {
		return true
	}

	return false
}

// SetEventSize allocates a new w.EventSize and returns the pointer to it.
func (w *Widget) SetEventSize(v string) {
	w.EventSize = &v
}

// GetFontSize returns the FontSize field if non-nil, zero value otherwise.
func (w *Widget) GetFontSize() string {
	if w == nil || w.FontSize == nil {
		return ""
	}
	return *w.FontSize
}

// GetFontSizeOk returns a tuple with the FontSize field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetFontSizeOk() (string, bool) {
	if w == nil || w.FontSize == nil {
		return "", false
	}
	return *w.FontSize, true
}

// HasFontSize returns a boolean if a field has been set.
func (w *Widget) HasFontSize() bool {
	if w != nil && w.FontSize != nil {
		return true
	}

	return false
}

// SetFontSize allocates a new w.FontSize and returns the pointer to it.
func (w *Widget) SetFontSize(v string) {
	w.FontSize = &v
}

// GetGroup returns the Group field if non-nil, zero value otherwise.
func (w *Widget) GetGroup() string {
	if w == nil || w.Group == nil {
		return ""
	}
	return *w.Group
}

// GetGroupOk returns a tuple with the Group field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetGroupOk() (string, bool) {
	if w == nil || w.Group == nil {
		return "", false
	}
	return *w.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (w *Widget) HasGroup() bool {
	if w != nil && w.Group != nil {
		return true
	}

	return false
}

// SetGroup allocates a new w.Group and returns the pointer to it.
func (w *Widget) SetGroup(v string) {
	w.Group = &v
}

// GetGrouping returns the Grouping field if non-nil, zero value otherwise.
func (w *Widget) GetGrouping() string {
	if w == nil || w.Grouping == nil {
		return ""
	}
	return *w.Grouping
}

// GetGroupingOk returns a tuple with the Grouping field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetGroupingOk() (string, bool) {
	if w == nil || w.Grouping == nil {
		return "", false
	}
	return *w.Grouping, true
}

// HasGrouping returns a boolean if a field has been set.
func (w *Widget) HasGrouping() bool {
	if w != nil && w.Grouping != nil {
		return true
	}

	return false
}

// SetGrouping allocates a new w.Grouping and returns the pointer to it.
func (w *Widget) SetGrouping(v string) {
	w.Grouping = &v
}

// GetHeight returns the Height field if non-nil, zero value otherwise.
func (w *Widget) GetHeight() int {
	if w == nil || w.Height == nil {
		return 0
	}
	return *w.Height
}

// GetHeightOk returns a tuple with the Height field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetHeightOk() (int, bool) {
	if w == nil || w.Height == nil {
		return 0, false
	}
	return *w.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (w *Widget) HasHeight() bool {
	if w != nil && w.Height != nil {
		return true
	}

	return false
}

// SetHeight allocates a new w.Height and returns the pointer to it.
func (w *Widget) SetHeight(v int) {
	w.Height = &v
}

// GetHideZeroCounts returns the HideZeroCounts field if non-nil, zero value otherwise.
func (w *Widget) GetHideZeroCounts() bool {
	if w == nil || w.HideZeroCounts == nil {
		return false
	}
	return *w.HideZeroCounts
}

// GetHideZeroCountsOk returns a tuple with the HideZeroCounts field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetHideZeroCountsOk() (bool, bool) {
	if w == nil || w.HideZeroCounts == nil {
		return false, false
	}
	return *w.HideZeroCounts, true
}

// HasHideZeroCounts returns a boolean if a field has been set.
func (w *Widget) HasHideZeroCounts() bool {
	if w != nil && w.HideZeroCounts != nil {
		return true
	}

	return false
}

// SetHideZeroCounts allocates a new w.HideZeroCounts and returns the pointer to it.
func (w *Widget) SetHideZeroCounts(v bool) {
	w.HideZeroCounts = &v
}

// GetHTML returns the HTML field if non-nil, zero value otherwise.
func (w *Widget) GetHTML() string {
	if w == nil || w.HTML == nil {
		return ""
	}
	return *w.HTML
}

// GetHTMLOk returns a tuple with the HTML field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetHTMLOk() (string, bool) {
	if w == nil || w.HTML == nil {
		return "", false
	}
	return *w.HTML, true
}

// HasHTML returns a boolean if a field has been set.
func (w *Widget) HasHTML() bool {
	if w != nil && w.HTML != nil {
		return true
	}

	return false
}

// SetHTML allocates a new w.HTML and returns the pointer to it.
func (w *Widget) SetHTML(v string) {
	w.HTML = &v
}

// GetLayoutVersion returns the LayoutVersion field if non-nil, zero value otherwise.
func (w *Widget) GetLayoutVersion() string {
	if w == nil || w.LayoutVersion == nil {
		return ""
	}
	return *w.LayoutVersion
}

// GetLayoutVersionOk returns a tuple with the LayoutVersion field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetLayoutVersionOk() (string, bool) {
	if w == nil || w.LayoutVersion == nil {
		return "", false
	}
	return *w.LayoutVersion, true
}

// HasLayoutVersion returns a boolean if a field has been set.
func (w *Widget) HasLayoutVersion() bool {
	if w != nil && w.LayoutVersion != nil {
		return true
	}

	return false
}

// SetLayoutVersion allocates a new w.LayoutVersion and returns the pointer to it.
func (w *Widget) SetLayoutVersion(v string) {
	w.LayoutVersion = &v
}

// GetLegend returns the Legend field if non-nil, zero value otherwise.
func (w *Widget) GetLegend() bool {
	if w == nil || w.Legend == nil {
		return false
	}
	return *w.Legend
}

// GetLegendOk returns a tuple with the Legend field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetLegendOk() (bool, bool) {
	if w == nil || w.Legend == nil {
		return false, false
	}
	return *w.Legend, true
}

// HasLegend returns a boolean if a field has been set.
func (w *Widget) HasLegend() bool {
	if w != nil && w.Legend != nil {
		return true
	}

	return false
}

// SetLegend allocates a new w.Legend and returns the pointer to it.
func (w *Widget) SetLegend(v bool) {
	w.Legend = &v
}

// GetLegendSize returns the LegendSize field if non-nil, zero value otherwise.
func (w *Widget) GetLegendSize() string {
	if w == nil || w.LegendSize == nil {
		return ""
	}
	return *w.LegendSize
}

// GetLegendSizeOk returns a tuple with the LegendSize field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetLegendSizeOk() (string, bool) {
	if w == nil || w.LegendSize == nil {
		return "", false
	}
	return *w.LegendSize, true
}

// HasLegendSize returns a boolean if a field has been set.
func (w *Widget) HasLegendSize() bool {
	if w != nil && w.LegendSize != nil {
		return true
	}

	return false
}

// SetLegendSize allocates a new w.LegendSize and returns the pointer to it.
func (w *Widget) SetLegendSize(v string) {
	w.LegendSize = &v
}

// GetLogset returns the Logset field if non-nil, zero value otherwise.
func (w *Widget) GetLogset() string {
	if w == nil || w.Logset == nil {
		return ""
	}
	return *w.Logset
}

// GetLogsetOk returns a tuple with the Logset field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetLogsetOk() (string, bool) {
	if w == nil || w.Logset == nil {
		return "", false
	}
	return *w.Logset, true
}

// HasLogset returns a boolean if a field has been set.
func (w *Widget) HasLogset() bool {
	if w != nil && w.Logset != nil {
		return true
	}

	return false
}

// SetLogset allocates a new w.Logset and returns the pointer to it.
func (w *Widget) SetLogset(v string) {
	w.Logset = &v
}

// GetManageStatusShowTitle returns the ManageStatusShowTitle field if non-nil, zero value otherwise.
func (w *Widget) GetManageStatusShowTitle() bool {
	if w == nil || w.ManageStatusShowTitle == nil {
		return false
	}
	return *w.ManageStatusShowTitle
}

// GetManageStatusShowTitleOk returns a tuple with the ManageStatusShowTitle field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetManageStatusShowTitleOk() (bool, bool) {
	if w == nil || w.ManageStatusShowTitle == nil {
		return false, false
	}
	return *w.ManageStatusShowTitle, true
}

// HasManageStatusShowTitle returns a boolean if a field has been set.
func (w *Widget) HasManageStatusShowTitle() bool {
	if w != nil && w.ManageStatusShowTitle != nil {
		return true
	}

	return false
}

// SetManageStatusShowTitle allocates a new w.ManageStatusShowTitle and returns the pointer to it.
func (w *Widget) SetManageStatusShowTitle(v bool) {
	w.ManageStatusShowTitle = &v
}

// GetManageStatusTitleAlign returns the ManageStatusTitleAlign field if non-nil, zero value otherwise.
func (w *Widget) GetManageStatusTitleAlign() string {
	if w == nil || w.ManageStatusTitleAlign == nil {
		return ""
	}
	return *w.ManageStatusTitleAlign
}

// GetManageStatusTitleAlignOk returns a tuple with the ManageStatusTitleAlign field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetManageStatusTitleAlignOk() (string, bool) {
	if w == nil || w.ManageStatusTitleAlign == nil {
		return "", false
	}
	return *w.ManageStatusTitleAlign, true
}

// HasManageStatusTitleAlign returns a boolean if a field has been set.
func (w *Widget) HasManageStatusTitleAlign() bool {
	if w != nil && w.ManageStatusTitleAlign != nil {
		return true
	}

	return false
}

// SetManageStatusTitleAlign allocates a new w.ManageStatusTitleAlign and returns the pointer to it.
func (w *Widget) SetManageStatusTitleAlign(v string) {
	w.ManageStatusTitleAlign = &v
}

// GetManageStatusTitleSize returns the ManageStatusTitleSize field if non-nil, zero value otherwise.
func (w *Widget) GetManageStatusTitleSize() string {
	if w == nil || w.ManageStatusTitleSize == nil {
		return ""
	}
	return *w.ManageStatusTitleSize
}

// GetManageStatusTitleSizeOk returns a tuple with the ManageStatusTitleSize field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetManageStatusTitleSizeOk() (string, bool) {
	if w == nil || w.ManageStatusTitleSize == nil {
		return "", false
	}
	return *w.ManageStatusTitleSize, true
}

// HasManageStatusTitleSize returns a boolean if a field has been set.
func (w *Widget) HasManageStatusTitleSize() bool {
	if w != nil && w.ManageStatusTitleSize != nil {
		return true
	}

	return false
}

// SetManageStatusTitleSize allocates a new w.ManageStatusTitleSize and returns the pointer to it.
func (w *Widget) SetManageStatusTitleSize(v string) {
	w.ManageStatusTitleSize = &v
}

// GetManageStatusTitleText returns the ManageStatusTitleText field if non-nil, zero value otherwise.
func (w *Widget) GetManageStatusTitleText() string {
	if w == nil || w.ManageStatusTitleText == nil {
		return ""
	}
	return *w.ManageStatusTitleText
}

// GetManageStatusTitleTextOk returns a tuple with the ManageStatusTitleText field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetManageStatusTitleTextOk() (string, bool) {
	if w == nil || w.ManageStatusTitleText == nil {
		return "", false
	}
	return *w.ManageStatusTitleText, true
}

// HasManageStatusTitleText returns a boolean if a field has been set.
func (w *Widget) HasManageStatusTitleText() bool {
	if w != nil && w.ManageStatusTitleText != nil {
		return true
	}

	return false
}

// SetManageStatusTitleText allocates a new w.ManageStatusTitleText and returns the pointer to it.
func (w *Widget) SetManageStatusTitleText(v string) {
	w.ManageStatusTitleText = &v
}

// GetMargin returns the Margin field if non-nil, zero value otherwise.
func (w *Widget) GetMargin() string {
	if w == nil || w.Margin == nil {
		return ""
	}
	return *w.Margin
}

// GetMarginOk returns a tuple with the Margin field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetMarginOk() (string, bool) {
	if w == nil || w.Margin == nil {
		return "", false
	}
	return *w.Margin, true
}

// HasMargin returns a boolean if a field has been set.
func (w *Widget) HasMargin() bool {
	if w != nil && w.Margin != nil {
		return true
	}

	return false
}

// SetMargin allocates a new w.Margin and returns the pointer to it.
func (w *Widget) SetMargin(v string) {
	w.Margin = &v
}

// GetMonitor returns the Monitor field if non-nil, zero value otherwise.
func (w *Widget) GetMonitor() ScreenboardMonitor {
	if w == nil || w.Monitor == nil {
		return ScreenboardMonitor{}
	}
	return *w.Monitor
}

// GetMonitorOk returns a tuple with the Monitor field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetMonitorOk() (ScreenboardMonitor, bool) {
	if w == nil || w.Monitor == nil {
		return ScreenboardMonitor{}, false
	}
	return *w.Monitor, true
}

// HasMonitor returns a boolean if a field has been set.
func (w *Widget) HasMonitor() bool {
	if w != nil && w.Monitor != nil {
		return true
	}

	return false
}

// SetMonitor allocates a new w.Monitor and returns the pointer to it.
func (w *Widget) SetMonitor(v ScreenboardMonitor) {
	w.Monitor = &v
}

// GetMustShowBreakdown returns the MustShowBreakdown field if non-nil, zero value otherwise.
func (w *Widget) GetMustShowBreakdown() bool {
	if w == nil || w.MustShowBreakdown == nil {
		return false
	}
	return *w.MustShowBreakdown
}

// GetMustShowBreakdownOk returns a tuple with the MustShowBreakdown field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetMustShowBreakdownOk() (bool, bool) {
	if w == nil || w.MustShowBreakdown == nil {
		return false, false
	}
	return *w.MustShowBreakdown, true
}

// HasMustShowBreakdown returns a boolean if a field has been set.
func (w *Widget) HasMustShowBreakdown() bool {
	if w != nil && w.MustShowBreakdown != nil {
		return true
	}

	return false
}

// SetMustShowBreakdown allocates a new w.MustShowBreakdown and returns the pointer to it.
func (w *Widget) SetMustShowBreakdown(v bool) {
	w.MustShowBreakdown = &v
}

// GetMustShowDistribution returns the MustShowDistribution field if non-nil, zero value otherwise.
func (w *Widget) GetMustShowDistribution() bool {
	if w == nil || w.MustShowDistribution == nil {
		return false
	}
	return *w.MustShowDistribution
}

// GetMustShowDistributionOk returns a tuple with the MustShowDistribution field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetMustShowDistributionOk() (bool, bool) {
	if w == nil || w.MustShowDistribution == nil {
		return false, false
	}
	return *w.MustShowDistribution, true
}

// HasMustShowDistribution returns a boolean if a field has been set.
func (w *Widget) HasMustShowDistribution() bool {
	if w != nil && w.MustShowDistribution != nil {
		return true
	}

	return false
}

// SetMustShowDistribution allocates a new w.MustShowDistribution and returns the pointer to it.
func (w *Widget) SetMustShowDistribution(v bool) {
	w.MustShowDistribution = &v
}

// GetMustShowErrors returns the MustShowErrors field if non-nil, zero value otherwise.
func (w *Widget) GetMustShowErrors() bool {
	if w == nil || w.MustShowErrors == nil {
		return false
	}
	return *w.MustShowErrors
}

// GetMustShowErrorsOk returns a tuple with the MustShowErrors field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetMustShowErrorsOk() (bool, bool) {
	if w == nil || w.MustShowErrors == nil {
		return false, false
	}
	return *w.MustShowErrors, true
}

// HasMustShowErrors returns a boolean if a field has been set.
func (w *Widget) HasMustShowErrors() bool {
	if w != nil && w.MustShowErrors != nil {
		return true
	}

	return false
}

// SetMustShowErrors allocates a new w.MustShowErrors and returns the pointer to it.
func (w *Widget) SetMustShowErrors(v bool) {
	w.MustShowErrors = &v
}

// GetMustShowHits returns the MustShowHits field if non-nil, zero value otherwise.
func (w *Widget) GetMustShowHits() bool {
	if w == nil || w.MustShowHits == nil {
		return false
	}
	return *w.MustShowHits
}

// GetMustShowHitsOk returns a tuple with the MustShowHits field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetMustShowHitsOk() (bool, bool) {
	if w == nil || w.MustShowHits == nil {
		return false, false
	}
	return *w.MustShowHits, true
}

// HasMustShowHits returns a boolean if a field has been set.
func (w *Widget) HasMustShowHits() bool {
	if w != nil && w.MustShowHits != nil {
		return true
	}

	return false
}

// SetMustShowHits allocates a new w.MustShowHits and returns the pointer to it.
func (w *Widget) SetMustShowHits(v bool) {
	w.MustShowHits = &v
}

// GetMustShowLatency returns the MustShowLatency field if non-nil, zero value otherwise.
func (w *Widget) GetMustShowLatency() bool {
	if w == nil || w.MustShowLatency == nil {
		return false
	}
	return *w.MustShowLatency
}

// GetMustShowLatencyOk returns a tuple with the MustShowLatency field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetMustShowLatencyOk() (bool, bool) {
	if w == nil || w.MustShowLatency == nil {
		return false, false
	}
	return *w.MustShowLatency, true
}

// HasMustShowLatency returns a boolean if a field has been set.
func (w *Widget) HasMustShowLatency() bool {
	if w != nil && w.MustShowLatency != nil {
		return true
	}

	return false
}

// SetMustShowLatency allocates a new w.MustShowLatency and returns the pointer to it.
func (w *Widget) SetMustShowLatency(v bool) {
	w.MustShowLatency = &v
}

// GetMustShowResourceList returns the MustShowResourceList field if non-nil, zero value otherwise.
func (w *Widget) GetMustShowResourceList() bool {
	if w == nil || w.MustShowResourceList == nil {
		return false
	}
	return *w.MustShowResourceList
}

// GetMustShowResourceListOk returns a tuple with the MustShowResourceList field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetMustShowResourceListOk() (bool, bool) {
	if w == nil || w.MustShowResourceList == nil {
		return false, false
	}
	return *w.MustShowResourceList, true
}

// HasMustShowResourceList returns a boolean if a field has been set.
func (w *Widget) HasMustShowResourceList() bool {
	if w != nil && w.MustShowResourceList != nil {
		return true
	}

	return false
}

// SetMustShowResourceList allocates a new w.MustShowResourceList and returns the pointer to it.
func (w *Widget) SetMustShowResourceList(v bool) {
	w.MustShowResourceList = &v
}

// GetParams returns the Params field if non-nil, zero value otherwise.
func (w *Widget) GetParams() Params {
	if w == nil || w.Params == nil {
		return Params{}
	}
	return *w.Params
}

// GetParamsOk returns a tuple with the Params field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetParamsOk() (Params, bool) {
	if w == nil || w.Params == nil {
		return Params{}, false
	}
	return *w.Params, true
}

// HasParams returns a boolean if a field has been set.
func (w *Widget) HasParams() bool {
	if w != nil && w.Params != nil {
		return true
	}

	return false
}

// SetParams allocates a new w.Params and returns the pointer to it.
func (w *Widget) SetParams(v Params) {
	w.Params = &v
}

// GetPrecision returns the Precision field if non-nil, zero value otherwise.
func (w *Widget) GetPrecision() string {
	if w == nil || w.Precision == nil {
		return ""
	}
	return *w.Precision
}

// GetPrecisionOk returns a tuple with the Precision field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetPrecisionOk() (string, bool) {
	if w == nil || w.Precision == nil {
		return "", false
	}
	return *w.Precision, true
}

// HasPrecision returns a boolean if a field has been set.
func (w *Widget) HasPrecision() bool {
	if w != nil && w.Precision != nil {
		return true
	}

	return false
}

// SetPrecision allocates a new w.Precision and returns the pointer to it.
func (w *Widget) SetPrecision(v string) {
	w.Precision = &v
}

// GetQuery returns the Query field if non-nil, zero value otherwise.
func (w *Widget) GetQuery() string {
	if w == nil || w.Query == nil {
		return ""
	}
	return *w.Query
}

// GetQueryOk returns a tuple with the Query field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetQueryOk() (string, bool) {
	if w == nil || w.Query == nil {
		return "", false
	}
	return *w.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (w *Widget) HasQuery() bool {
	if w != nil && w.Query != nil {
		return true
	}

	return false
}

// SetQuery allocates a new w.Query and returns the pointer to it.
func (w *Widget) SetQuery(v string) {
	w.Query = &v
}

// GetServiceName returns the ServiceName field if non-nil, zero value otherwise.
func (w *Widget) GetServiceName() string {
	if w == nil || w.ServiceName == nil {
		return ""
	}
	return *w.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetServiceNameOk() (string, bool) {
	if w == nil || w.ServiceName == nil {
		return "", false
	}
	return *w.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (w *Widget) HasServiceName() bool {
	if w != nil && w.ServiceName != nil {
		return true
	}

	return false
}

// SetServiceName allocates a new w.ServiceName and returns the pointer to it.
func (w *Widget) SetServiceName(v string) {
	w.ServiceName = &v
}

// GetServiceService returns the ServiceService field if non-nil, zero value otherwise.
func (w *Widget) GetServiceService() string {
	if w == nil || w.ServiceService == nil {
		return ""
	}
	return *w.ServiceService
}

// GetServiceServiceOk returns a tuple with the ServiceService field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetServiceServiceOk() (string, bool) {
	if w == nil || w.ServiceService == nil {
		return "", false
	}
	return *w.ServiceService, true
}

// HasServiceService returns a boolean if a field has been set.
func (w *Widget) HasServiceService() bool {
	if w != nil && w.ServiceService != nil {
		return true
	}

	return false
}

// SetServiceService allocates a new w.ServiceService and returns the pointer to it.
func (w *Widget) SetServiceService(v string) {
	w.ServiceService = &v
}

// GetSizeVersion returns the SizeVersion field if non-nil, zero value otherwise.
func (w *Widget) GetSizeVersion() string {
	if w == nil || w.SizeVersion == nil {
		return ""
	}
	return *w.SizeVersion
}

// GetSizeVersionOk returns a tuple with the SizeVersion field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetSizeVersionOk() (string, bool) {
	if w == nil || w.SizeVersion == nil {
		return "", false
	}
	return *w.SizeVersion, true
}

// HasSizeVersion returns a boolean if a field has been set.
func (w *Widget) HasSizeVersion() bool {
	if w != nil && w.SizeVersion != nil {
		return true
	}

	return false
}

// SetSizeVersion allocates a new w.SizeVersion and returns the pointer to it.
func (w *Widget) SetSizeVersion(v string) {
	w.SizeVersion = &v
}

// GetSizing returns the Sizing field if non-nil, zero value otherwise.
func (w *Widget) GetSizing() string {
	if w == nil || w.Sizing == nil {
		return ""
	}
	return *w.Sizing
}

// GetSizingOk returns a tuple with the Sizing field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetSizingOk() (string, bool) {
	if w == nil || w.Sizing == nil {
		return "", false
	}
	return *w.Sizing, true
}

// HasSizing returns a boolean if a field has been set.
func (w *Widget) HasSizing() bool {
	if w != nil && w.Sizing != nil {
		return true
	}

	return false
}

// SetSizing allocates a new w.Sizing and returns the pointer to it.
func (w *Widget) SetSizing(v string) {
	w.Sizing = &v
}

// GetText returns the Text field if non-nil, zero value otherwise.
func (w *Widget) GetText() string {
	if w == nil || w.Text == nil {
		return ""
	}
	return *w.Text
}

// GetTextOk returns a tuple with the Text field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetTextOk() (string, bool) {
	if w == nil || w.Text == nil {
		return "", false
	}
	return *w.Text, true
}

// HasText returns a boolean if a field has been set.
func (w *Widget) HasText() bool {
	if w != nil && w.Text != nil {
		return true
	}

	return false
}

// SetText allocates a new w.Text and returns the pointer to it.
func (w *Widget) SetText(v string) {
	w.Text = &v
}

// GetTextAlign returns the TextAlign field if non-nil, zero value otherwise.
func (w *Widget) GetTextAlign() string {
	if w == nil || w.TextAlign == nil {
		return ""
	}
	return *w.TextAlign
}

// GetTextAlignOk returns a tuple with the TextAlign field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetTextAlignOk() (string, bool) {
	if w == nil || w.TextAlign == nil {
		return "", false
	}
	return *w.TextAlign, true
}

// HasTextAlign returns a boolean if a field has been set.
func (w *Widget) HasTextAlign() bool {
	if w != nil && w.TextAlign != nil {
		return true
	}

	return false
}

// SetTextAlign allocates a new w.TextAlign and returns the pointer to it.
func (w *Widget) SetTextAlign(v string) {
	w.TextAlign = &v
}

// GetTextSize returns the TextSize field if non-nil, zero value otherwise.
func (w *Widget) GetTextSize() string {
	if w == nil || w.TextSize == nil {
		return ""
	}
	return *w.TextSize
}

// GetTextSizeOk returns a tuple with the TextSize field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetTextSizeOk() (string, bool) {
	if w == nil || w.TextSize == nil {
		return "", false
	}
	return *w.TextSize, true
}

// HasTextSize returns a boolean if a field has been set.
func (w *Widget) HasTextSize() bool {
	if w != nil && w.TextSize != nil {
		return true
	}

	return false
}

// SetTextSize allocates a new w.TextSize and returns the pointer to it.
func (w *Widget) SetTextSize(v string) {
	w.TextSize = &v
}

// GetTick returns the Tick field if non-nil, zero value otherwise.
func (w *Widget) GetTick() bool {
	if w == nil || w.Tick == nil {
		return false
	}
	return *w.Tick
}

// GetTickOk returns a tuple with the Tick field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetTickOk() (bool, bool) {
	if w == nil || w.Tick == nil {
		return false, false
	}
	return *w.Tick, true
}

// HasTick returns a boolean if a field has been set.
func (w *Widget) HasTick() bool {
	if w != nil && w.Tick != nil {
		return true
	}

	return false
}

// SetTick allocates a new w.Tick and returns the pointer to it.
func (w *Widget) SetTick(v bool) {
	w.Tick = &v
}

// GetTickEdge returns the TickEdge field if non-nil, zero value otherwise.
func (w *Widget) GetTickEdge() string {
	if w == nil || w.TickEdge == nil {
		return ""
	}
	return *w.TickEdge
}

// GetTickEdgeOk returns a tuple with the TickEdge field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetTickEdgeOk() (string, bool) {
	if w == nil || w.TickEdge == nil {
		return "", false
	}
	return *w.TickEdge, true
}

// HasTickEdge returns a boolean if a field has been set.
func (w *Widget) HasTickEdge() bool {
	if w != nil && w.TickEdge != nil {
		return true
	}

	return false
}

// SetTickEdge allocates a new w.TickEdge and returns the pointer to it.
func (w *Widget) SetTickEdge(v string) {
	w.TickEdge = &v
}

// GetTickPos returns the TickPos field if non-nil, zero value otherwise.
func (w *Widget) GetTickPos() string {
	if w == nil || w.TickPos == nil {
		return ""
	}
	return *w.TickPos
}

// GetTickPosOk returns a tuple with the TickPos field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetTickPosOk() (string, bool) {
	if w == nil || w.TickPos == nil {
		return "", false
	}
	return *w.TickPos, true
}

// HasTickPos returns a boolean if a field has been set.
func (w *Widget) HasTickPos() bool {
	if w != nil && w.TickPos != nil {
		return true
	}

	return false
}

// SetTickPos allocates a new w.TickPos and returns the pointer to it.
func (w *Widget) SetTickPos(v string) {
	w.TickPos = &v
}

// GetTileDef returns the TileDef field if non-nil, zero value otherwise.
func (w *Widget) GetTileDef() TileDef {
	if w == nil || w.TileDef == nil {
		return TileDef{}
	}
	return *w.TileDef
}

// GetTileDefOk returns a tuple with the TileDef field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetTileDefOk() (TileDef, bool) {
	if w == nil || w.TileDef == nil {
		return TileDef{}, false
	}
	return *w.TileDef, true
}

// HasTileDef returns a boolean if a field has been set.
func (w *Widget) HasTileDef() bool {
	if w != nil && w.TileDef != nil {
		return true
	}

	return false
}

// SetTileDef allocates a new w.TileDef and returns the pointer to it.
func (w *Widget) SetTileDef(v TileDef) {
	w.TileDef = &v
}

// GetTime returns the Time field if non-nil, zero value otherwise.
func (w *Widget) GetTime() Time {
	if w == nil || w.Time == nil {
		return Time{}
	}
	return *w.Time
}

// GetTimeOk returns a tuple with the Time field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetTimeOk() (Time, bool) {
	if w == nil || w.Time == nil {
		return Time{}, false
	}
	return *w.Time, true
}

// HasTime returns a boolean if a field has been set.
func (w *Widget) HasTime() bool {
	if w != nil && w.Time != nil {
		return true
	}

	return false
}

// SetTime allocates a new w.Time and returns the pointer to it.
func (w *Widget) SetTime(v Time) {
	w.Time = &v
}

// GetTitle returns the Title field if non-nil, zero value otherwise.
func (w *Widget) GetTitle() bool {
	if w == nil || w.Title == nil {
		return false
	}
	return *w.Title
}

// GetTitleOk returns a tuple with the Title field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetTitleOk() (bool, bool) {
	if w == nil || w.Title == nil {
		return false, false
	}
	return *w.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (w *Widget) HasTitle() bool {
	if w != nil && w.Title != nil {
		return true
	}

	return false
}

// SetTitle allocates a new w.Title and returns the pointer to it.
func (w *Widget) SetTitle(v bool) {
	w.Title = &v
}

// GetTitleAlign returns the TitleAlign field if non-nil, zero value otherwise.
func (w *Widget) GetTitleAlign() string {
	if w == nil || w.TitleAlign == nil {
		return ""
	}
	return *w.TitleAlign
}

// GetTitleAlignOk returns a tuple with the TitleAlign field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetTitleAlignOk() (string, bool) {
	if w == nil || w.TitleAlign == nil {
		return "", false
	}
	return *w.TitleAlign, true
}

// HasTitleAlign returns a boolean if a field has been set.
func (w *Widget) HasTitleAlign() bool {
	if w != nil && w.TitleAlign != nil {
		return true
	}

	return false
}

// SetTitleAlign allocates a new w.TitleAlign and returns the pointer to it.
func (w *Widget) SetTitleAlign(v string) {
	w.TitleAlign = &v
}

// GetTitleSize returns the TitleSize field if non-nil, zero value otherwise.
func (w *Widget) GetTitleSize() int {
	if w == nil || w.TitleSize == nil {
		return 0
	}
	return *w.TitleSize
}

// GetTitleSizeOk returns a tuple with the TitleSize field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetTitleSizeOk() (int, bool) {
	if w == nil || w.TitleSize == nil {
		return 0, false
	}
	return *w.TitleSize, true
}

// HasTitleSize returns a boolean if a field has been set.
func (w *Widget) HasTitleSize() bool {
	if w != nil && w.TitleSize != nil {
		return true
	}

	return false
}

// SetTitleSize allocates a new w.TitleSize and returns the pointer to it.
func (w *Widget) SetTitleSize(v int) {
	w.TitleSize = &v
}

// GetTitleText returns the TitleText field if non-nil, zero value otherwise.
func (w *Widget) GetTitleText() string {
	if w == nil || w.TitleText == nil {
		return ""
	}
	return *w.TitleText
}

// GetTitleTextOk returns a tuple with the TitleText field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetTitleTextOk() (string, bool) {
	if w == nil || w.TitleText == nil {
		return "", false
	}
	return *w.TitleText, true
}

// HasTitleText returns a boolean if a field has been set.
func (w *Widget) HasTitleText() bool {
	if w != nil && w.TitleText != nil {
		return true
	}

	return false
}

// SetTitleText allocates a new w.TitleText and returns the pointer to it.
func (w *Widget) SetTitleText(v string) {
	w.TitleText = &v
}

// GetType returns the Type field if non-nil, zero value otherwise.
func (w *Widget) GetType() string {
	if w == nil || w.Type == nil {
		return ""
	}
	return *w.Type
}

// GetTypeOk returns a tuple with the Type field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetTypeOk() (string, bool) {
	if w == nil || w.Type == nil {
		return "", false
	}
	return *w.Type, true
}

// HasType returns a boolean if a field has been set.
func (w *Widget) HasType() bool {
	if w != nil && w.Type != nil {
		return true
	}

	return false
}

// SetType allocates a new w.Type and returns the pointer to it.
func (w *Widget) SetType(v string) {
	w.Type = &v
}

// GetUnit returns the Unit field if non-nil, zero value otherwise.
func (w *Widget) GetUnit() string {
	if w == nil || w.Unit == nil {
		return ""
	}
	return *w.Unit
}

// GetUnitOk returns a tuple with the Unit field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetUnitOk() (string, bool) {
	if w == nil || w.Unit == nil {
		return "", false
	}
	return *w.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (w *Widget) HasUnit() bool {
	if w != nil && w.Unit != nil {
		return true
	}

	return false
}

// SetUnit allocates a new w.Unit and returns the pointer to it.
func (w *Widget) SetUnit(v string) {
	w.Unit = &v
}

// GetURL returns the URL field if non-nil, zero value otherwise.
func (w *Widget) GetURL() string {
	if w == nil || w.URL == nil {
		return ""
	}
	return *w.URL
}

// GetURLOk returns a tuple with the URL field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetURLOk() (string, bool) {
	if w == nil || w.URL == nil {
		return "", false
	}
	return *w.URL, true
}

// HasURL returns a boolean if a field has been set.
func (w *Widget) HasURL() bool {
	if w != nil && w.URL != nil {
		return true
	}

	return false
}

// SetURL allocates a new w.URL and returns the pointer to it.
func (w *Widget) SetURL(v string) {
	w.URL = &v
}

// GetVizType returns the VizType field if non-nil, zero value otherwise.
func (w *Widget) GetVizType() string {
	if w == nil || w.VizType == nil {
		return ""
	}
	return *w.VizType
}

// GetVizTypeOk returns a tuple with the VizType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetVizTypeOk() (string, bool) {
	if w == nil || w.VizType == nil {
		return "", false
	}
	return *w.VizType, true
}

// HasVizType returns a boolean if a field has been set.
func (w *Widget) HasVizType() bool {
	if w != nil && w.VizType != nil {
		return true
	}

	return false
}

// SetVizType allocates a new w.VizType and returns the pointer to it.
func (w *Widget) SetVizType(v string) {
	w.VizType = &v
}

// GetWidth returns the Width field if non-nil, zero value otherwise.
func (w *Widget) GetWidth() int {
	if w == nil || w.Width == nil {
		return 0
	}
	return *w.Width
}

// GetWidthOk returns a tuple with the Width field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetWidthOk() (int, bool) {
	if w == nil || w.Width == nil {
		return 0, false
	}
	return *w.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (w *Widget) HasWidth() bool {
	if w != nil && w.Width != nil {
		return true
	}

	return false
}

// SetWidth allocates a new w.Width and returns the pointer to it.
func (w *Widget) SetWidth(v int) {
	w.Width = &v
}

// GetX returns the X field if non-nil, zero value otherwise.
func (w *Widget) GetX() int {
	if w == nil || w.X == nil {
		return 0
	}
	return *w.X
}

// GetXOk returns a tuple with the X field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetXOk() (int, bool) {
	if w == nil || w.X == nil {
		return 0, false
	}
	return *w.X, true
}

// HasX returns a boolean if a field has been set.
func (w *Widget) HasX() bool {
	if w != nil && w.X != nil {
		return true
	}

	return false
}

// SetX allocates a new w.X and returns the pointer to it.
func (w *Widget) SetX(v int) {
	w.X = &v
}

// GetY returns the Y field if non-nil, zero value otherwise.
func (w *Widget) GetY() int {
	if w == nil || w.Y == nil {
		return 0
	}
	return *w.Y
}

// GetYOk returns a tuple with the Y field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (w *Widget) GetYOk() (int, bool) {
	if w == nil || w.Y == nil {
		return 0, false
	}
	return *w.Y, true
}

// HasY returns a boolean if a field has been set.
func (w *Widget) HasY() bool {
	if w != nil && w.Y != nil {
		return true
	}

	return false
}

// SetY allocates a new w.Y and returns the pointer to it.
func (w *Widget) SetY(v int) {
	w.Y = &v
}

// GetIncludeUnits returns the IncludeUnits field if non-nil, zero value otherwise.
func (y *Yaxis) GetIncludeUnits() bool {
	if y == nil || y.IncludeUnits == nil {
		return false
	}
	return *y.IncludeUnits
}

// GetIncludeUnitsOk returns a tuple with the IncludeUnits field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (y *Yaxis) GetIncludeUnitsOk() (bool, bool) {
	if y == nil || y.IncludeUnits == nil {
		return false, false
	}
	return *y.IncludeUnits, true
}

// HasIncludeUnits returns a boolean if a field has been set.
func (y *Yaxis) HasIncludeUnits() bool {
	if y != nil && y.IncludeUnits != nil {
		return true
	}

	return false
}

// SetIncludeUnits allocates a new y.IncludeUnits and returns the pointer to it.
func (y *Yaxis) SetIncludeUnits(v bool) {
	y.IncludeUnits = &v
}

// GetIncludeZero returns the IncludeZero field if non-nil, zero value otherwise.
func (y *Yaxis) GetIncludeZero() bool {
	if y == nil || y.IncludeZero == nil {
		return false
	}
	return *y.IncludeZero
}

// GetIncludeZeroOk returns a tuple with the IncludeZero field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (y *Yaxis) GetIncludeZeroOk() (bool, bool) {
	if y == nil || y.IncludeZero == nil {
		return false, false
	}
	return *y.IncludeZero, true
}

// HasIncludeZero returns a boolean if a field has been set.
func (y *Yaxis) HasIncludeZero() bool {
	if y != nil && y.IncludeZero != nil {
		return true
	}

	return false
}

// SetIncludeZero allocates a new y.IncludeZero and returns the pointer to it.
func (y *Yaxis) SetIncludeZero(v bool) {
	y.IncludeZero = &v
}

// GetMax returns the Max field if non-nil, zero value otherwise.
func (y *Yaxis) GetMax() float64 {
	if y == nil || y.Max == nil {
		return 0
	}
	return *y.Max
}

// GetMaxOk returns a tuple with the Max field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (y *Yaxis) GetMaxOk() (float64, bool) {
	if y == nil || y.Max == nil {
		return 0, false
	}
	return *y.Max, true
}

// HasMax returns a boolean if a field has been set.
func (y *Yaxis) HasMax() bool {
	if y != nil && y.Max != nil {
		return true
	}

	return false
}

// SetMax allocates a new y.Max and returns the pointer to it.
func (y *Yaxis) SetMax(v float64) {
	y.Max = &v
}

// GetMin returns the Min field if non-nil, zero value otherwise.
func (y *Yaxis) GetMin() float64 {
	if y == nil || y.Min == nil {
		return 0
	}
	return *y.Min
}

// GetMinOk returns a tuple with the Min field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (y *Yaxis) GetMinOk() (float64, bool) {
	if y == nil || y.Min == nil {
		return 0, false
	}
	return *y.Min, true
}

// HasMin returns a boolean if a field has been set.
func (y *Yaxis) HasMin() bool {
	if y != nil && y.Min != nil {
		return true
	}

	return false
}

// SetMin allocates a new y.Min and returns the pointer to it.
func (y *Yaxis) SetMin(v float64) {
	y.Min = &v
}

// GetScale returns the Scale field if non-nil, zero value otherwise.
func (y *Yaxis) GetScale() string {
	if y == nil || y.Scale == nil {
		return ""
	}
	return *y.Scale
}

// GetScaleOk returns a tuple with the Scale field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (y *Yaxis) GetScaleOk() (string, bool) {
	if y == nil || y.Scale == nil {
		return "", false
	}
	return *y.Scale, true
}

// HasScale returns a boolean if a field has been set.
func (y *Yaxis) HasScale() bool {
	if y != nil && y.Scale != nil {
		return true
	}

	return false
}

// SetScale allocates a new y.Scale and returns the pointer to it.
func (y *Yaxis) SetScale(v string) {
	y.Scale = &v
}
