/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// IncidentCreateAttributes The incident's attributes for a create request.
type IncidentCreateAttributes struct {
	// A flag indicating whether the incident caused customer impact.
	CustomerImpacted bool `json:"customer_impacted"`
	// A condensed view of the user-defined fields for which to create initial selections.
	Fields *map[string]IncidentFieldAttributes `json:"fields,omitempty"`
	// An array of initial timeline cells to be placed at the beginning of the incident timeline.
	InitialTimelineCells *[]IncidentTimelineCellCreateAttributes `json:"initial_timeline_cells,omitempty"`
	// Notification handles that will be notified of the incident at creation.
	NotificationHandles *[]string `json:"notification_handles,omitempty"`
	// The title of the incident, which summarizes what happened.
	Title string `json:"title"`
}

// NewIncidentCreateAttributes instantiates a new IncidentCreateAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentCreateAttributes(customerImpacted bool, title string) *IncidentCreateAttributes {
	this := IncidentCreateAttributes{}
	this.CustomerImpacted = customerImpacted
	this.Title = title
	return &this
}

// NewIncidentCreateAttributesWithDefaults instantiates a new IncidentCreateAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentCreateAttributesWithDefaults() *IncidentCreateAttributes {
	this := IncidentCreateAttributes{}
	return &this
}

// GetCustomerImpacted returns the CustomerImpacted field value
func (o *IncidentCreateAttributes) GetCustomerImpacted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CustomerImpacted
}

// GetCustomerImpactedOk returns a tuple with the CustomerImpacted field value
// and a boolean to check if the value has been set.
func (o *IncidentCreateAttributes) GetCustomerImpactedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerImpacted, true
}

// SetCustomerImpacted sets field value
func (o *IncidentCreateAttributes) SetCustomerImpacted(v bool) {
	o.CustomerImpacted = v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *IncidentCreateAttributes) GetFields() map[string]IncidentFieldAttributes {
	if o == nil || o.Fields == nil {
		var ret map[string]IncidentFieldAttributes
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentCreateAttributes) GetFieldsOk() (*map[string]IncidentFieldAttributes, bool) {
	if o == nil || o.Fields == nil {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *IncidentCreateAttributes) HasFields() bool {
	if o != nil && o.Fields != nil {
		return true
	}

	return false
}

// SetFields gets a reference to the given map[string]IncidentFieldAttributes and assigns it to the Fields field.
func (o *IncidentCreateAttributes) SetFields(v map[string]IncidentFieldAttributes) {
	o.Fields = &v
}

// GetInitialTimelineCells returns the InitialTimelineCells field value if set, zero value otherwise.
func (o *IncidentCreateAttributes) GetInitialTimelineCells() []IncidentTimelineCellCreateAttributes {
	if o == nil || o.InitialTimelineCells == nil {
		var ret []IncidentTimelineCellCreateAttributes
		return ret
	}
	return *o.InitialTimelineCells
}

// GetInitialTimelineCellsOk returns a tuple with the InitialTimelineCells field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentCreateAttributes) GetInitialTimelineCellsOk() (*[]IncidentTimelineCellCreateAttributes, bool) {
	if o == nil || o.InitialTimelineCells == nil {
		return nil, false
	}
	return o.InitialTimelineCells, true
}

// HasInitialTimelineCells returns a boolean if a field has been set.
func (o *IncidentCreateAttributes) HasInitialTimelineCells() bool {
	if o != nil && o.InitialTimelineCells != nil {
		return true
	}

	return false
}

// SetInitialTimelineCells gets a reference to the given []IncidentTimelineCellCreateAttributes and assigns it to the InitialTimelineCells field.
func (o *IncidentCreateAttributes) SetInitialTimelineCells(v []IncidentTimelineCellCreateAttributes) {
	o.InitialTimelineCells = &v
}

// GetNotificationHandles returns the NotificationHandles field value if set, zero value otherwise.
func (o *IncidentCreateAttributes) GetNotificationHandles() []string {
	if o == nil || o.NotificationHandles == nil {
		var ret []string
		return ret
	}
	return *o.NotificationHandles
}

// GetNotificationHandlesOk returns a tuple with the NotificationHandles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentCreateAttributes) GetNotificationHandlesOk() (*[]string, bool) {
	if o == nil || o.NotificationHandles == nil {
		return nil, false
	}
	return o.NotificationHandles, true
}

// HasNotificationHandles returns a boolean if a field has been set.
func (o *IncidentCreateAttributes) HasNotificationHandles() bool {
	if o != nil && o.NotificationHandles != nil {
		return true
	}

	return false
}

// SetNotificationHandles gets a reference to the given []string and assigns it to the NotificationHandles field.
func (o *IncidentCreateAttributes) SetNotificationHandles(v []string) {
	o.NotificationHandles = &v
}

// GetTitle returns the Title field value
func (o *IncidentCreateAttributes) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *IncidentCreateAttributes) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *IncidentCreateAttributes) SetTitle(v string) {
	o.Title = v
}

func (o IncidentCreateAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["customer_impacted"] = o.CustomerImpacted
	}
	if o.Fields != nil {
		toSerialize["fields"] = o.Fields
	}
	if o.InitialTimelineCells != nil {
		toSerialize["initial_timeline_cells"] = o.InitialTimelineCells
	}
	if o.NotificationHandles != nil {
		toSerialize["notification_handles"] = o.NotificationHandles
	}
	if true {
		toSerialize["title"] = o.Title
	}
	return json.Marshal(toSerialize)
}

type NullableIncidentCreateAttributes struct {
	value *IncidentCreateAttributes
	isSet bool
}

func (v NullableIncidentCreateAttributes) Get() *IncidentCreateAttributes {
	return v.value
}

func (v *NullableIncidentCreateAttributes) Set(val *IncidentCreateAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentCreateAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentCreateAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentCreateAttributes(val *IncidentCreateAttributes) *NullableIncidentCreateAttributes {
	return &NullableIncidentCreateAttributes{value: val, isSet: true}
}

func (v NullableIncidentCreateAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentCreateAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
