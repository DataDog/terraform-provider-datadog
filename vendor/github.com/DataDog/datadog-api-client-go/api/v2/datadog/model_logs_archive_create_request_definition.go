/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// LogsArchiveCreateRequestDefinition The definition of an archive.
type LogsArchiveCreateRequestDefinition struct {
	Attributes *LogsArchiveCreateRequestAttributes `json:"attributes,omitempty"`
	// The type of the resource. The value should always be archives.
	Type string `json:"type"`
}

// NewLogsArchiveCreateRequestDefinition instantiates a new LogsArchiveCreateRequestDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogsArchiveCreateRequestDefinition(type_ string) *LogsArchiveCreateRequestDefinition {
	this := LogsArchiveCreateRequestDefinition{}
	this.Type = type_
	return &this
}

// NewLogsArchiveCreateRequestDefinitionWithDefaults instantiates a new LogsArchiveCreateRequestDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogsArchiveCreateRequestDefinitionWithDefaults() *LogsArchiveCreateRequestDefinition {
	this := LogsArchiveCreateRequestDefinition{}
	var type_ string = "archives"
	this.Type = type_
	return &this
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *LogsArchiveCreateRequestDefinition) GetAttributes() LogsArchiveCreateRequestAttributes {
	if o == nil || o.Attributes == nil {
		var ret LogsArchiveCreateRequestAttributes
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsArchiveCreateRequestDefinition) GetAttributesOk() (*LogsArchiveCreateRequestAttributes, bool) {
	if o == nil || o.Attributes == nil {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *LogsArchiveCreateRequestDefinition) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given LogsArchiveCreateRequestAttributes and assigns it to the Attributes field.
func (o *LogsArchiveCreateRequestDefinition) SetAttributes(v LogsArchiveCreateRequestAttributes) {
	o.Attributes = &v
}

// GetType returns the Type field value
func (o *LogsArchiveCreateRequestDefinition) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *LogsArchiveCreateRequestDefinition) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *LogsArchiveCreateRequestDefinition) SetType(v string) {
	o.Type = v
}

func (o LogsArchiveCreateRequestDefinition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableLogsArchiveCreateRequestDefinition struct {
	value *LogsArchiveCreateRequestDefinition
	isSet bool
}

func (v NullableLogsArchiveCreateRequestDefinition) Get() *LogsArchiveCreateRequestDefinition {
	return v.value
}

func (v *NullableLogsArchiveCreateRequestDefinition) Set(val *LogsArchiveCreateRequestDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableLogsArchiveCreateRequestDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableLogsArchiveCreateRequestDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogsArchiveCreateRequestDefinition(val *LogsArchiveCreateRequestDefinition) *NullableLogsArchiveCreateRequestDefinition {
	return &NullableLogsArchiveCreateRequestDefinition{value: val, isSet: true}
}

func (v NullableLogsArchiveCreateRequestDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogsArchiveCreateRequestDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
