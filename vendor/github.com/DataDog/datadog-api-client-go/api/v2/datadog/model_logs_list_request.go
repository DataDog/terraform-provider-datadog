/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// LogsListRequest The request for a logs list.
type LogsListRequest struct {
	Filter  *LogsQueryFilter     `json:"filter,omitempty"`
	Options *LogsQueryOptions    `json:"options,omitempty"`
	Page    *LogsListRequestPage `json:"page,omitempty"`
	Sort    *LogsSort            `json:"sort,omitempty"`
}

// NewLogsListRequest instantiates a new LogsListRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogsListRequest() *LogsListRequest {
	this := LogsListRequest{}
	return &this
}

// NewLogsListRequestWithDefaults instantiates a new LogsListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogsListRequestWithDefaults() *LogsListRequest {
	this := LogsListRequest{}
	return &this
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *LogsListRequest) GetFilter() LogsQueryFilter {
	if o == nil || o.Filter == nil {
		var ret LogsQueryFilter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsListRequest) GetFilterOk() (*LogsQueryFilter, bool) {
	if o == nil || o.Filter == nil {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *LogsListRequest) HasFilter() bool {
	if o != nil && o.Filter != nil {
		return true
	}

	return false
}

// SetFilter gets a reference to the given LogsQueryFilter and assigns it to the Filter field.
func (o *LogsListRequest) SetFilter(v LogsQueryFilter) {
	o.Filter = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *LogsListRequest) GetOptions() LogsQueryOptions {
	if o == nil || o.Options == nil {
		var ret LogsQueryOptions
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsListRequest) GetOptionsOk() (*LogsQueryOptions, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *LogsListRequest) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given LogsQueryOptions and assigns it to the Options field.
func (o *LogsListRequest) SetOptions(v LogsQueryOptions) {
	o.Options = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *LogsListRequest) GetPage() LogsListRequestPage {
	if o == nil || o.Page == nil {
		var ret LogsListRequestPage
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsListRequest) GetPageOk() (*LogsListRequestPage, bool) {
	if o == nil || o.Page == nil {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *LogsListRequest) HasPage() bool {
	if o != nil && o.Page != nil {
		return true
	}

	return false
}

// SetPage gets a reference to the given LogsListRequestPage and assigns it to the Page field.
func (o *LogsListRequest) SetPage(v LogsListRequestPage) {
	o.Page = &v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *LogsListRequest) GetSort() LogsSort {
	if o == nil || o.Sort == nil {
		var ret LogsSort
		return ret
	}
	return *o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsListRequest) GetSortOk() (*LogsSort, bool) {
	if o == nil || o.Sort == nil {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *LogsListRequest) HasSort() bool {
	if o != nil && o.Sort != nil {
		return true
	}

	return false
}

// SetSort gets a reference to the given LogsSort and assigns it to the Sort field.
func (o *LogsListRequest) SetSort(v LogsSort) {
	o.Sort = &v
}

func (o LogsListRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Filter != nil {
		toSerialize["filter"] = o.Filter
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	if o.Page != nil {
		toSerialize["page"] = o.Page
	}
	if o.Sort != nil {
		toSerialize["sort"] = o.Sort
	}
	return json.Marshal(toSerialize)
}

type NullableLogsListRequest struct {
	value *LogsListRequest
	isSet bool
}

func (v NullableLogsListRequest) Get() *LogsListRequest {
	return v.value
}

func (v *NullableLogsListRequest) Set(val *LogsListRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLogsListRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLogsListRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogsListRequest(val *LogsListRequest) *NullableLogsListRequest {
	return &NullableLogsListRequest{value: val, isSet: true}
}

func (v NullableLogsListRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogsListRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
