/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// ServiceUpdateAttributes The service's attributes for an update request.
type ServiceUpdateAttributes struct {
	// Name of the service.
	Name string `json:"name"`
}

// NewServiceUpdateAttributes instantiates a new ServiceUpdateAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceUpdateAttributes(name string) *ServiceUpdateAttributes {
	this := ServiceUpdateAttributes{}
	this.Name = name
	return &this
}

// NewServiceUpdateAttributesWithDefaults instantiates a new ServiceUpdateAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceUpdateAttributesWithDefaults() *ServiceUpdateAttributes {
	this := ServiceUpdateAttributes{}
	return &this
}

// GetName returns the Name field value
func (o *ServiceUpdateAttributes) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServiceUpdateAttributes) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ServiceUpdateAttributes) SetName(v string) {
	o.Name = v
}

func (o ServiceUpdateAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableServiceUpdateAttributes struct {
	value *ServiceUpdateAttributes
	isSet bool
}

func (v NullableServiceUpdateAttributes) Get() *ServiceUpdateAttributes {
	return v.value
}

func (v *NullableServiceUpdateAttributes) Set(val *ServiceUpdateAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceUpdateAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceUpdateAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceUpdateAttributes(val *ServiceUpdateAttributes) *NullableServiceUpdateAttributes {
	return &NullableServiceUpdateAttributes{value: val, isSet: true}
}

func (v NullableServiceUpdateAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceUpdateAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
