/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// LogsMetricResponseGroupBy A group by rule.
type LogsMetricResponseGroupBy struct {
	// The path to the value the log-based metric will be aggregated over.
	Path *string `json:"path,omitempty"`
	// Eventual name of the tag that gets created. By default, the path attribute is used as the tag name.
	TagName *string `json:"tag_name,omitempty"`
}

// NewLogsMetricResponseGroupBy instantiates a new LogsMetricResponseGroupBy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogsMetricResponseGroupBy() *LogsMetricResponseGroupBy {
	this := LogsMetricResponseGroupBy{}
	return &this
}

// NewLogsMetricResponseGroupByWithDefaults instantiates a new LogsMetricResponseGroupBy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogsMetricResponseGroupByWithDefaults() *LogsMetricResponseGroupBy {
	this := LogsMetricResponseGroupBy{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *LogsMetricResponseGroupBy) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsMetricResponseGroupBy) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *LogsMetricResponseGroupBy) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *LogsMetricResponseGroupBy) SetPath(v string) {
	o.Path = &v
}

// GetTagName returns the TagName field value if set, zero value otherwise.
func (o *LogsMetricResponseGroupBy) GetTagName() string {
	if o == nil || o.TagName == nil {
		var ret string
		return ret
	}
	return *o.TagName
}

// GetTagNameOk returns a tuple with the TagName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsMetricResponseGroupBy) GetTagNameOk() (*string, bool) {
	if o == nil || o.TagName == nil {
		return nil, false
	}
	return o.TagName, true
}

// HasTagName returns a boolean if a field has been set.
func (o *LogsMetricResponseGroupBy) HasTagName() bool {
	if o != nil && o.TagName != nil {
		return true
	}

	return false
}

// SetTagName gets a reference to the given string and assigns it to the TagName field.
func (o *LogsMetricResponseGroupBy) SetTagName(v string) {
	o.TagName = &v
}

func (o LogsMetricResponseGroupBy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.TagName != nil {
		toSerialize["tag_name"] = o.TagName
	}
	return json.Marshal(toSerialize)
}

type NullableLogsMetricResponseGroupBy struct {
	value *LogsMetricResponseGroupBy
	isSet bool
}

func (v NullableLogsMetricResponseGroupBy) Get() *LogsMetricResponseGroupBy {
	return v.value
}

func (v *NullableLogsMetricResponseGroupBy) Set(val *LogsMetricResponseGroupBy) {
	v.value = val
	v.isSet = true
}

func (v NullableLogsMetricResponseGroupBy) IsSet() bool {
	return v.isSet
}

func (v *NullableLogsMetricResponseGroupBy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogsMetricResponseGroupBy(val *LogsMetricResponseGroupBy) *NullableLogsMetricResponseGroupBy {
	return &NullableLogsMetricResponseGroupBy{value: val, isSet: true}
}

func (v NullableLogsMetricResponseGroupBy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogsMetricResponseGroupBy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
