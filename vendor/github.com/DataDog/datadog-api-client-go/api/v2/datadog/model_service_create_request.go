/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// ServiceCreateRequest Create request with a service payload.
type ServiceCreateRequest struct {
	Data ServiceCreateData `json:"data"`
}

// NewServiceCreateRequest instantiates a new ServiceCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceCreateRequest(data ServiceCreateData) *ServiceCreateRequest {
	this := ServiceCreateRequest{}
	this.Data = data
	return &this
}

// NewServiceCreateRequestWithDefaults instantiates a new ServiceCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceCreateRequestWithDefaults() *ServiceCreateRequest {
	this := ServiceCreateRequest{}
	return &this
}

// GetData returns the Data field value
func (o *ServiceCreateRequest) GetData() ServiceCreateData {
	if o == nil {
		var ret ServiceCreateData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ServiceCreateRequest) GetDataOk() (*ServiceCreateData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *ServiceCreateRequest) SetData(v ServiceCreateData) {
	o.Data = v
}

func (o ServiceCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableServiceCreateRequest struct {
	value *ServiceCreateRequest
	isSet bool
}

func (v NullableServiceCreateRequest) Get() *ServiceCreateRequest {
	return v.value
}

func (v *NullableServiceCreateRequest) Set(val *ServiceCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceCreateRequest(val *ServiceCreateRequest) *NullableServiceCreateRequest {
	return &NullableServiceCreateRequest{value: val, isSet: true}
}

func (v NullableServiceCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
