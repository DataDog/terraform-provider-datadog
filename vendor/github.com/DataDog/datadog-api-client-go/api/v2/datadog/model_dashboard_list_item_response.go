/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// DashboardListItemResponse A dashboard within a list.
type DashboardListItemResponse struct {
	// ID of the dashboard.
	Id   string        `json:"id"`
	Type DashboardType `json:"type"`
}

// NewDashboardListItemResponse instantiates a new DashboardListItemResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashboardListItemResponse(id string, type_ DashboardType) *DashboardListItemResponse {
	this := DashboardListItemResponse{}
	this.Id = id
	this.Type = type_
	return &this
}

// NewDashboardListItemResponseWithDefaults instantiates a new DashboardListItemResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashboardListItemResponseWithDefaults() *DashboardListItemResponse {
	this := DashboardListItemResponse{}
	return &this
}

// GetId returns the Id field value
func (o *DashboardListItemResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DashboardListItemResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DashboardListItemResponse) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value
func (o *DashboardListItemResponse) GetType() DashboardType {
	if o == nil {
		var ret DashboardType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *DashboardListItemResponse) GetTypeOk() (*DashboardType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *DashboardListItemResponse) SetType(v DashboardType) {
	o.Type = v
}

func (o DashboardListItemResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableDashboardListItemResponse struct {
	value *DashboardListItemResponse
	isSet bool
}

func (v NullableDashboardListItemResponse) Get() *DashboardListItemResponse {
	return v.value
}

func (v *NullableDashboardListItemResponse) Set(val *DashboardListItemResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardListItemResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardListItemResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardListItemResponse(val *DashboardListItemResponse) *NullableDashboardListItemResponse {
	return &NullableDashboardListItemResponse{value: val, isSet: true}
}

func (v NullableDashboardListItemResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardListItemResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
