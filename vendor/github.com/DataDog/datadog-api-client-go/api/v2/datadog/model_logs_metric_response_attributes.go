/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// LogsMetricResponseAttributes The object describing a Datadog log-based metric.
type LogsMetricResponseAttributes struct {
	Compute *LogsMetricResponseCompute `json:"compute,omitempty"`
	Filter  *LogsMetricResponseFilter  `json:"filter,omitempty"`
	// The rules for the group by.
	GroupBy *[]LogsMetricResponseGroupBy `json:"group_by,omitempty"`
}

// NewLogsMetricResponseAttributes instantiates a new LogsMetricResponseAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogsMetricResponseAttributes() *LogsMetricResponseAttributes {
	this := LogsMetricResponseAttributes{}
	return &this
}

// NewLogsMetricResponseAttributesWithDefaults instantiates a new LogsMetricResponseAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogsMetricResponseAttributesWithDefaults() *LogsMetricResponseAttributes {
	this := LogsMetricResponseAttributes{}
	return &this
}

// GetCompute returns the Compute field value if set, zero value otherwise.
func (o *LogsMetricResponseAttributes) GetCompute() LogsMetricResponseCompute {
	if o == nil || o.Compute == nil {
		var ret LogsMetricResponseCompute
		return ret
	}
	return *o.Compute
}

// GetComputeOk returns a tuple with the Compute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsMetricResponseAttributes) GetComputeOk() (*LogsMetricResponseCompute, bool) {
	if o == nil || o.Compute == nil {
		return nil, false
	}
	return o.Compute, true
}

// HasCompute returns a boolean if a field has been set.
func (o *LogsMetricResponseAttributes) HasCompute() bool {
	if o != nil && o.Compute != nil {
		return true
	}

	return false
}

// SetCompute gets a reference to the given LogsMetricResponseCompute and assigns it to the Compute field.
func (o *LogsMetricResponseAttributes) SetCompute(v LogsMetricResponseCompute) {
	o.Compute = &v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *LogsMetricResponseAttributes) GetFilter() LogsMetricResponseFilter {
	if o == nil || o.Filter == nil {
		var ret LogsMetricResponseFilter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsMetricResponseAttributes) GetFilterOk() (*LogsMetricResponseFilter, bool) {
	if o == nil || o.Filter == nil {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *LogsMetricResponseAttributes) HasFilter() bool {
	if o != nil && o.Filter != nil {
		return true
	}

	return false
}

// SetFilter gets a reference to the given LogsMetricResponseFilter and assigns it to the Filter field.
func (o *LogsMetricResponseAttributes) SetFilter(v LogsMetricResponseFilter) {
	o.Filter = &v
}

// GetGroupBy returns the GroupBy field value if set, zero value otherwise.
func (o *LogsMetricResponseAttributes) GetGroupBy() []LogsMetricResponseGroupBy {
	if o == nil || o.GroupBy == nil {
		var ret []LogsMetricResponseGroupBy
		return ret
	}
	return *o.GroupBy
}

// GetGroupByOk returns a tuple with the GroupBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsMetricResponseAttributes) GetGroupByOk() (*[]LogsMetricResponseGroupBy, bool) {
	if o == nil || o.GroupBy == nil {
		return nil, false
	}
	return o.GroupBy, true
}

// HasGroupBy returns a boolean if a field has been set.
func (o *LogsMetricResponseAttributes) HasGroupBy() bool {
	if o != nil && o.GroupBy != nil {
		return true
	}

	return false
}

// SetGroupBy gets a reference to the given []LogsMetricResponseGroupBy and assigns it to the GroupBy field.
func (o *LogsMetricResponseAttributes) SetGroupBy(v []LogsMetricResponseGroupBy) {
	o.GroupBy = &v
}

func (o LogsMetricResponseAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Compute != nil {
		toSerialize["compute"] = o.Compute
	}
	if o.Filter != nil {
		toSerialize["filter"] = o.Filter
	}
	if o.GroupBy != nil {
		toSerialize["group_by"] = o.GroupBy
	}
	return json.Marshal(toSerialize)
}

type NullableLogsMetricResponseAttributes struct {
	value *LogsMetricResponseAttributes
	isSet bool
}

func (v NullableLogsMetricResponseAttributes) Get() *LogsMetricResponseAttributes {
	return v.value
}

func (v *NullableLogsMetricResponseAttributes) Set(val *LogsMetricResponseAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableLogsMetricResponseAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableLogsMetricResponseAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogsMetricResponseAttributes(val *LogsMetricResponseAttributes) *NullableLogsMetricResponseAttributes {
	return &NullableLogsMetricResponseAttributes{value: val, isSet: true}
}

func (v NullableLogsMetricResponseAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogsMetricResponseAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
