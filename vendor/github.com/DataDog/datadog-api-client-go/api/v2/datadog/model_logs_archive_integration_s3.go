/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// LogsArchiveIntegrationS3 The S3 Archive's integration destination.
type LogsArchiveIntegrationS3 struct {
	// The account ID for the integration.
	AccountId string `json:"account_id"`
	// The path of the integration.
	RoleName string `json:"role_name"`
}

// NewLogsArchiveIntegrationS3 instantiates a new LogsArchiveIntegrationS3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogsArchiveIntegrationS3(accountId string, roleName string) *LogsArchiveIntegrationS3 {
	this := LogsArchiveIntegrationS3{}
	this.AccountId = accountId
	this.RoleName = roleName
	return &this
}

// NewLogsArchiveIntegrationS3WithDefaults instantiates a new LogsArchiveIntegrationS3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogsArchiveIntegrationS3WithDefaults() *LogsArchiveIntegrationS3 {
	this := LogsArchiveIntegrationS3{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *LogsArchiveIntegrationS3) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *LogsArchiveIntegrationS3) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *LogsArchiveIntegrationS3) SetAccountId(v string) {
	o.AccountId = v
}

// GetRoleName returns the RoleName field value
func (o *LogsArchiveIntegrationS3) GetRoleName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value
// and a boolean to check if the value has been set.
func (o *LogsArchiveIntegrationS3) GetRoleNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleName, true
}

// SetRoleName sets field value
func (o *LogsArchiveIntegrationS3) SetRoleName(v string) {
	o.RoleName = v
}

func (o LogsArchiveIntegrationS3) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["account_id"] = o.AccountId
	}
	if true {
		toSerialize["role_name"] = o.RoleName
	}
	return json.Marshal(toSerialize)
}

type NullableLogsArchiveIntegrationS3 struct {
	value *LogsArchiveIntegrationS3
	isSet bool
}

func (v NullableLogsArchiveIntegrationS3) Get() *LogsArchiveIntegrationS3 {
	return v.value
}

func (v *NullableLogsArchiveIntegrationS3) Set(val *LogsArchiveIntegrationS3) {
	v.value = val
	v.isSet = true
}

func (v NullableLogsArchiveIntegrationS3) IsSet() bool {
	return v.isSet
}

func (v *NullableLogsArchiveIntegrationS3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogsArchiveIntegrationS3(val *LogsArchiveIntegrationS3) *NullableLogsArchiveIntegrationS3 {
	return &NullableLogsArchiveIntegrationS3{value: val, isSet: true}
}

func (v NullableLogsArchiveIntegrationS3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogsArchiveIntegrationS3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
