/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// LogsMetricResponseData The log-based metric properties.
type LogsMetricResponseData struct {
	Attributes *LogsMetricResponseAttributes `json:"attributes,omitempty"`
	// The name of the log-based metric.
	Id   *string         `json:"id,omitempty"`
	Type *LogsMetricType `json:"type,omitempty"`
}

// NewLogsMetricResponseData instantiates a new LogsMetricResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogsMetricResponseData() *LogsMetricResponseData {
	this := LogsMetricResponseData{}
	var type_ LogsMetricType = "logs_metrics"
	this.Type = &type_
	return &this
}

// NewLogsMetricResponseDataWithDefaults instantiates a new LogsMetricResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogsMetricResponseDataWithDefaults() *LogsMetricResponseData {
	this := LogsMetricResponseData{}
	var type_ LogsMetricType = "logs_metrics"
	this.Type = &type_
	return &this
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *LogsMetricResponseData) GetAttributes() LogsMetricResponseAttributes {
	if o == nil || o.Attributes == nil {
		var ret LogsMetricResponseAttributes
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsMetricResponseData) GetAttributesOk() (*LogsMetricResponseAttributes, bool) {
	if o == nil || o.Attributes == nil {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *LogsMetricResponseData) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given LogsMetricResponseAttributes and assigns it to the Attributes field.
func (o *LogsMetricResponseData) SetAttributes(v LogsMetricResponseAttributes) {
	o.Attributes = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LogsMetricResponseData) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsMetricResponseData) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LogsMetricResponseData) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *LogsMetricResponseData) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *LogsMetricResponseData) GetType() LogsMetricType {
	if o == nil || o.Type == nil {
		var ret LogsMetricType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsMetricResponseData) GetTypeOk() (*LogsMetricType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *LogsMetricResponseData) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given LogsMetricType and assigns it to the Type field.
func (o *LogsMetricResponseData) SetType(v LogsMetricType) {
	o.Type = &v
}

func (o LogsMetricResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableLogsMetricResponseData struct {
	value *LogsMetricResponseData
	isSet bool
}

func (v NullableLogsMetricResponseData) Get() *LogsMetricResponseData {
	return v.value
}

func (v *NullableLogsMetricResponseData) Set(val *LogsMetricResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableLogsMetricResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableLogsMetricResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogsMetricResponseData(val *LogsMetricResponseData) *NullableLogsMetricResponseData {
	return &NullableLogsMetricResponseData{value: val, isSet: true}
}

func (v NullableLogsMetricResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogsMetricResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
