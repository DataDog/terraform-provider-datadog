/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// LogsArchiveAttributes The attributes associated with the archive.
type LogsArchiveAttributes struct {
	Destination NullableLogsArchiveDestination `json:"destination"`
	// The archive name.
	Name string `json:"name"`
	// The archive query/filter. Logs matching this query are included in the archive.
	Query string            `json:"query"`
	State *LogsArchiveState `json:"state,omitempty"`
}

// NewLogsArchiveAttributes instantiates a new LogsArchiveAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogsArchiveAttributes(destination NullableLogsArchiveDestination, name string, query string) *LogsArchiveAttributes {
	this := LogsArchiveAttributes{}
	this.Destination = destination
	this.Name = name
	this.Query = query
	return &this
}

// NewLogsArchiveAttributesWithDefaults instantiates a new LogsArchiveAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogsArchiveAttributesWithDefaults() *LogsArchiveAttributes {
	this := LogsArchiveAttributes{}
	return &this
}

// GetDestination returns the Destination field value
// If the value is explicit nil, the zero value for LogsArchiveDestination will be returned
func (o *LogsArchiveAttributes) GetDestination() LogsArchiveDestination {
	if o == nil || o.Destination.Get() == nil {
		var ret LogsArchiveDestination
		return ret
	}

	return *o.Destination.Get()
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogsArchiveAttributes) GetDestinationOk() (*LogsArchiveDestination, bool) {
	if o == nil {
		return nil, false
	}
	return o.Destination.Get(), o.Destination.IsSet()
}

// SetDestination sets field value
func (o *LogsArchiveAttributes) SetDestination(v LogsArchiveDestination) {
	o.Destination.Set(&v)
}

// GetName returns the Name field value
func (o *LogsArchiveAttributes) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LogsArchiveAttributes) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LogsArchiveAttributes) SetName(v string) {
	o.Name = v
}

// GetQuery returns the Query field value
func (o *LogsArchiveAttributes) GetQuery() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Query
}

// GetQueryOk returns a tuple with the Query field value
// and a boolean to check if the value has been set.
func (o *LogsArchiveAttributes) GetQueryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Query, true
}

// SetQuery sets field value
func (o *LogsArchiveAttributes) SetQuery(v string) {
	o.Query = v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *LogsArchiveAttributes) GetState() LogsArchiveState {
	if o == nil || o.State == nil {
		var ret LogsArchiveState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsArchiveAttributes) GetStateOk() (*LogsArchiveState, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *LogsArchiveAttributes) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given LogsArchiveState and assigns it to the State field.
func (o *LogsArchiveAttributes) SetState(v LogsArchiveState) {
	o.State = &v
}

func (o LogsArchiveAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["destination"] = o.Destination.Get()
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["query"] = o.Query
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableLogsArchiveAttributes struct {
	value *LogsArchiveAttributes
	isSet bool
}

func (v NullableLogsArchiveAttributes) Get() *LogsArchiveAttributes {
	return v.value
}

func (v *NullableLogsArchiveAttributes) Set(val *LogsArchiveAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableLogsArchiveAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableLogsArchiveAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogsArchiveAttributes(val *LogsArchiveAttributes) *NullableLogsArchiveAttributes {
	return &NullableLogsArchiveAttributes{value: val, isSet: true}
}

func (v NullableLogsArchiveAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogsArchiveAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
