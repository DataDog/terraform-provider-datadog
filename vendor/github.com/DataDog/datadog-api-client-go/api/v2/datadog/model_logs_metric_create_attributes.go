/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// LogsMetricCreateAttributes The object describing the Datadog log-based metric to create.
type LogsMetricCreateAttributes struct {
	Compute LogsMetricCompute `json:"compute"`
	Filter  *LogsMetricFilter `json:"filter,omitempty"`
	// The rules for the group by.
	GroupBy *[]LogsMetricGroupBy `json:"group_by,omitempty"`
}

// NewLogsMetricCreateAttributes instantiates a new LogsMetricCreateAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogsMetricCreateAttributes(compute LogsMetricCompute) *LogsMetricCreateAttributes {
	this := LogsMetricCreateAttributes{}
	this.Compute = compute
	return &this
}

// NewLogsMetricCreateAttributesWithDefaults instantiates a new LogsMetricCreateAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogsMetricCreateAttributesWithDefaults() *LogsMetricCreateAttributes {
	this := LogsMetricCreateAttributes{}
	return &this
}

// GetCompute returns the Compute field value
func (o *LogsMetricCreateAttributes) GetCompute() LogsMetricCompute {
	if o == nil {
		var ret LogsMetricCompute
		return ret
	}

	return o.Compute
}

// GetComputeOk returns a tuple with the Compute field value
// and a boolean to check if the value has been set.
func (o *LogsMetricCreateAttributes) GetComputeOk() (*LogsMetricCompute, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Compute, true
}

// SetCompute sets field value
func (o *LogsMetricCreateAttributes) SetCompute(v LogsMetricCompute) {
	o.Compute = v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *LogsMetricCreateAttributes) GetFilter() LogsMetricFilter {
	if o == nil || o.Filter == nil {
		var ret LogsMetricFilter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsMetricCreateAttributes) GetFilterOk() (*LogsMetricFilter, bool) {
	if o == nil || o.Filter == nil {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *LogsMetricCreateAttributes) HasFilter() bool {
	if o != nil && o.Filter != nil {
		return true
	}

	return false
}

// SetFilter gets a reference to the given LogsMetricFilter and assigns it to the Filter field.
func (o *LogsMetricCreateAttributes) SetFilter(v LogsMetricFilter) {
	o.Filter = &v
}

// GetGroupBy returns the GroupBy field value if set, zero value otherwise.
func (o *LogsMetricCreateAttributes) GetGroupBy() []LogsMetricGroupBy {
	if o == nil || o.GroupBy == nil {
		var ret []LogsMetricGroupBy
		return ret
	}
	return *o.GroupBy
}

// GetGroupByOk returns a tuple with the GroupBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsMetricCreateAttributes) GetGroupByOk() (*[]LogsMetricGroupBy, bool) {
	if o == nil || o.GroupBy == nil {
		return nil, false
	}
	return o.GroupBy, true
}

// HasGroupBy returns a boolean if a field has been set.
func (o *LogsMetricCreateAttributes) HasGroupBy() bool {
	if o != nil && o.GroupBy != nil {
		return true
	}

	return false
}

// SetGroupBy gets a reference to the given []LogsMetricGroupBy and assigns it to the GroupBy field.
func (o *LogsMetricCreateAttributes) SetGroupBy(v []LogsMetricGroupBy) {
	o.GroupBy = &v
}

func (o LogsMetricCreateAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["compute"] = o.Compute
	}
	if o.Filter != nil {
		toSerialize["filter"] = o.Filter
	}
	if o.GroupBy != nil {
		toSerialize["group_by"] = o.GroupBy
	}
	return json.Marshal(toSerialize)
}

type NullableLogsMetricCreateAttributes struct {
	value *LogsMetricCreateAttributes
	isSet bool
}

func (v NullableLogsMetricCreateAttributes) Get() *LogsMetricCreateAttributes {
	return v.value
}

func (v *NullableLogsMetricCreateAttributes) Set(val *LogsMetricCreateAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableLogsMetricCreateAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableLogsMetricCreateAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogsMetricCreateAttributes(val *LogsMetricCreateAttributes) *NullableLogsMetricCreateAttributes {
	return &NullableLogsMetricCreateAttributes{value: val, isSet: true}
}

func (v NullableLogsMetricCreateAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogsMetricCreateAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
