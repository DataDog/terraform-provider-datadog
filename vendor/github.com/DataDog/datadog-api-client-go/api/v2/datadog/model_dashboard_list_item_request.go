/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// DashboardListItemRequest A dashboard within a list.
type DashboardListItemRequest struct {
	// ID of the dashboard.
	Id   string        `json:"id"`
	Type DashboardType `json:"type"`
}

// NewDashboardListItemRequest instantiates a new DashboardListItemRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashboardListItemRequest(id string, type_ DashboardType) *DashboardListItemRequest {
	this := DashboardListItemRequest{}
	this.Id = id
	this.Type = type_
	return &this
}

// NewDashboardListItemRequestWithDefaults instantiates a new DashboardListItemRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashboardListItemRequestWithDefaults() *DashboardListItemRequest {
	this := DashboardListItemRequest{}
	return &this
}

// GetId returns the Id field value
func (o *DashboardListItemRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DashboardListItemRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DashboardListItemRequest) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value
func (o *DashboardListItemRequest) GetType() DashboardType {
	if o == nil {
		var ret DashboardType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *DashboardListItemRequest) GetTypeOk() (*DashboardType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *DashboardListItemRequest) SetType(v DashboardType) {
	o.Type = v
}

func (o DashboardListItemRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableDashboardListItemRequest struct {
	value *DashboardListItemRequest
	isSet bool
}

func (v NullableDashboardListItemRequest) Get() *DashboardListItemRequest {
	return v.value
}

func (v *NullableDashboardListItemRequest) Set(val *DashboardListItemRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardListItemRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardListItemRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardListItemRequest(val *DashboardListItemRequest) *NullableDashboardListItemRequest {
	return &NullableDashboardListItemRequest{value: val, isSet: true}
}

func (v NullableDashboardListItemRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardListItemRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
