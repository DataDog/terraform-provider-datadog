/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// LogsAggregateResponseData The query results
type LogsAggregateResponseData struct {
	// The list of matching buckets, one item per bucket
	Buckets *[]LogsAggregateBucket `json:"buckets,omitempty"`
}

// NewLogsAggregateResponseData instantiates a new LogsAggregateResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogsAggregateResponseData() *LogsAggregateResponseData {
	this := LogsAggregateResponseData{}
	return &this
}

// NewLogsAggregateResponseDataWithDefaults instantiates a new LogsAggregateResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogsAggregateResponseDataWithDefaults() *LogsAggregateResponseData {
	this := LogsAggregateResponseData{}
	return &this
}

// GetBuckets returns the Buckets field value if set, zero value otherwise.
func (o *LogsAggregateResponseData) GetBuckets() []LogsAggregateBucket {
	if o == nil || o.Buckets == nil {
		var ret []LogsAggregateBucket
		return ret
	}
	return *o.Buckets
}

// GetBucketsOk returns a tuple with the Buckets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsAggregateResponseData) GetBucketsOk() (*[]LogsAggregateBucket, bool) {
	if o == nil || o.Buckets == nil {
		return nil, false
	}
	return o.Buckets, true
}

// HasBuckets returns a boolean if a field has been set.
func (o *LogsAggregateResponseData) HasBuckets() bool {
	if o != nil && o.Buckets != nil {
		return true
	}

	return false
}

// SetBuckets gets a reference to the given []LogsAggregateBucket and assigns it to the Buckets field.
func (o *LogsAggregateResponseData) SetBuckets(v []LogsAggregateBucket) {
	o.Buckets = &v
}

func (o LogsAggregateResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Buckets != nil {
		toSerialize["buckets"] = o.Buckets
	}
	return json.Marshal(toSerialize)
}

type NullableLogsAggregateResponseData struct {
	value *LogsAggregateResponseData
	isSet bool
}

func (v NullableLogsAggregateResponseData) Get() *LogsAggregateResponseData {
	return v.value
}

func (v *NullableLogsAggregateResponseData) Set(val *LogsAggregateResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableLogsAggregateResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableLogsAggregateResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogsAggregateResponseData(val *LogsAggregateResponseData) *NullableLogsAggregateResponseData {
	return &NullableLogsAggregateResponseData{value: val, isSet: true}
}

func (v NullableLogsAggregateResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogsAggregateResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
