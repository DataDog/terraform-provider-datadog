/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
	"time"
)

// LogsListRequestFilter Search filters for listing logs.
type LogsListRequestFilter struct {
	// Minimum timestamp for requested logs.
	From *time.Time `json:"from,omitempty"`
	// For customers with multiple indexes, the indexes to search. Defaults to '*' which means all indexes.
	Indexes *[]string `json:"indexes,omitempty"`
	// Search query following logs syntax.
	Query *string `json:"query,omitempty"`
	// Maximum timestamp for requested logs.
	To *time.Time `json:"to,omitempty"`
}

// NewLogsListRequestFilter instantiates a new LogsListRequestFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogsListRequestFilter() *LogsListRequestFilter {
	this := LogsListRequestFilter{}
	return &this
}

// NewLogsListRequestFilterWithDefaults instantiates a new LogsListRequestFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogsListRequestFilterWithDefaults() *LogsListRequestFilter {
	this := LogsListRequestFilter{}
	return &this
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *LogsListRequestFilter) GetFrom() time.Time {
	if o == nil || o.From == nil {
		var ret time.Time
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsListRequestFilter) GetFromOk() (*time.Time, bool) {
	if o == nil || o.From == nil {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *LogsListRequestFilter) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given time.Time and assigns it to the From field.
func (o *LogsListRequestFilter) SetFrom(v time.Time) {
	o.From = &v
}

// GetIndexes returns the Indexes field value if set, zero value otherwise.
func (o *LogsListRequestFilter) GetIndexes() []string {
	if o == nil || o.Indexes == nil {
		var ret []string
		return ret
	}
	return *o.Indexes
}

// GetIndexesOk returns a tuple with the Indexes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsListRequestFilter) GetIndexesOk() (*[]string, bool) {
	if o == nil || o.Indexes == nil {
		return nil, false
	}
	return o.Indexes, true
}

// HasIndexes returns a boolean if a field has been set.
func (o *LogsListRequestFilter) HasIndexes() bool {
	if o != nil && o.Indexes != nil {
		return true
	}

	return false
}

// SetIndexes gets a reference to the given []string and assigns it to the Indexes field.
func (o *LogsListRequestFilter) SetIndexes(v []string) {
	o.Indexes = &v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *LogsListRequestFilter) GetQuery() string {
	if o == nil || o.Query == nil {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsListRequestFilter) GetQueryOk() (*string, bool) {
	if o == nil || o.Query == nil {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *LogsListRequestFilter) HasQuery() bool {
	if o != nil && o.Query != nil {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *LogsListRequestFilter) SetQuery(v string) {
	o.Query = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *LogsListRequestFilter) GetTo() time.Time {
	if o == nil || o.To == nil {
		var ret time.Time
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsListRequestFilter) GetToOk() (*time.Time, bool) {
	if o == nil || o.To == nil {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *LogsListRequestFilter) HasTo() bool {
	if o != nil && o.To != nil {
		return true
	}

	return false
}

// SetTo gets a reference to the given time.Time and assigns it to the To field.
func (o *LogsListRequestFilter) SetTo(v time.Time) {
	o.To = &v
}

func (o LogsListRequestFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.From != nil {
		toSerialize["from"] = o.From
	}
	if o.Indexes != nil {
		toSerialize["indexes"] = o.Indexes
	}
	if o.Query != nil {
		toSerialize["query"] = o.Query
	}
	if o.To != nil {
		toSerialize["to"] = o.To
	}
	return json.Marshal(toSerialize)
}

type NullableLogsListRequestFilter struct {
	value *LogsListRequestFilter
	isSet bool
}

func (v NullableLogsListRequestFilter) Get() *LogsListRequestFilter {
	return v.value
}

func (v *NullableLogsListRequestFilter) Set(val *LogsListRequestFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableLogsListRequestFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableLogsListRequestFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogsListRequestFilter(val *LogsListRequestFilter) *NullableLogsListRequestFilter {
	return &NullableLogsListRequestFilter{value: val, isSet: true}
}

func (v NullableLogsListRequestFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogsListRequestFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
