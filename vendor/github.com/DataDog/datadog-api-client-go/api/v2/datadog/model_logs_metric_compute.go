/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// LogsMetricCompute The compute rule to compute the log-based metric.
type LogsMetricCompute struct {
	AggregationType LogsMetricComputeAggregationType `json:"aggregation_type"`
	// The path to the value the log-based metric will aggregate on (only used if the aggregation type is a \"distribution\").
	Path *string `json:"path,omitempty"`
}

// NewLogsMetricCompute instantiates a new LogsMetricCompute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogsMetricCompute(aggregationType LogsMetricComputeAggregationType) *LogsMetricCompute {
	this := LogsMetricCompute{}
	this.AggregationType = aggregationType
	return &this
}

// NewLogsMetricComputeWithDefaults instantiates a new LogsMetricCompute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogsMetricComputeWithDefaults() *LogsMetricCompute {
	this := LogsMetricCompute{}
	return &this
}

// GetAggregationType returns the AggregationType field value
func (o *LogsMetricCompute) GetAggregationType() LogsMetricComputeAggregationType {
	if o == nil {
		var ret LogsMetricComputeAggregationType
		return ret
	}

	return o.AggregationType
}

// GetAggregationTypeOk returns a tuple with the AggregationType field value
// and a boolean to check if the value has been set.
func (o *LogsMetricCompute) GetAggregationTypeOk() (*LogsMetricComputeAggregationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AggregationType, true
}

// SetAggregationType sets field value
func (o *LogsMetricCompute) SetAggregationType(v LogsMetricComputeAggregationType) {
	o.AggregationType = v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *LogsMetricCompute) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsMetricCompute) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *LogsMetricCompute) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *LogsMetricCompute) SetPath(v string) {
	o.Path = &v
}

func (o LogsMetricCompute) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["aggregation_type"] = o.AggregationType
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	return json.Marshal(toSerialize)
}

type NullableLogsMetricCompute struct {
	value *LogsMetricCompute
	isSet bool
}

func (v NullableLogsMetricCompute) Get() *LogsMetricCompute {
	return v.value
}

func (v *NullableLogsMetricCompute) Set(val *LogsMetricCompute) {
	v.value = val
	v.isSet = true
}

func (v NullableLogsMetricCompute) IsSet() bool {
	return v.isSet
}

func (v *NullableLogsMetricCompute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogsMetricCompute(val *LogsMetricCompute) *NullableLogsMetricCompute {
	return &NullableLogsMetricCompute{value: val, isSet: true}
}

func (v NullableLogsMetricCompute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogsMetricCompute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
