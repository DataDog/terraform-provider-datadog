/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// ServicesResponseMetaPagination Pagination properties.
type ServicesResponseMetaPagination struct {
	// The index of the first element in the next page of results. Equal to page size added to the current offset.
	NextOffset *int64 `json:"next_offset,omitempty"`
	// The index of the first element in the results.
	Offset *int64 `json:"offset,omitempty"`
	// Maximum size of pages to return.
	Size *int64 `json:"size,omitempty"`
}

// NewServicesResponseMetaPagination instantiates a new ServicesResponseMetaPagination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicesResponseMetaPagination() *ServicesResponseMetaPagination {
	this := ServicesResponseMetaPagination{}
	return &this
}

// NewServicesResponseMetaPaginationWithDefaults instantiates a new ServicesResponseMetaPagination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicesResponseMetaPaginationWithDefaults() *ServicesResponseMetaPagination {
	this := ServicesResponseMetaPagination{}
	return &this
}

// GetNextOffset returns the NextOffset field value if set, zero value otherwise.
func (o *ServicesResponseMetaPagination) GetNextOffset() int64 {
	if o == nil || o.NextOffset == nil {
		var ret int64
		return ret
	}
	return *o.NextOffset
}

// GetNextOffsetOk returns a tuple with the NextOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesResponseMetaPagination) GetNextOffsetOk() (*int64, bool) {
	if o == nil || o.NextOffset == nil {
		return nil, false
	}
	return o.NextOffset, true
}

// HasNextOffset returns a boolean if a field has been set.
func (o *ServicesResponseMetaPagination) HasNextOffset() bool {
	if o != nil && o.NextOffset != nil {
		return true
	}

	return false
}

// SetNextOffset gets a reference to the given int64 and assigns it to the NextOffset field.
func (o *ServicesResponseMetaPagination) SetNextOffset(v int64) {
	o.NextOffset = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *ServicesResponseMetaPagination) GetOffset() int64 {
	if o == nil || o.Offset == nil {
		var ret int64
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesResponseMetaPagination) GetOffsetOk() (*int64, bool) {
	if o == nil || o.Offset == nil {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *ServicesResponseMetaPagination) HasOffset() bool {
	if o != nil && o.Offset != nil {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int64 and assigns it to the Offset field.
func (o *ServicesResponseMetaPagination) SetOffset(v int64) {
	o.Offset = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *ServicesResponseMetaPagination) GetSize() int64 {
	if o == nil || o.Size == nil {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesResponseMetaPagination) GetSizeOk() (*int64, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *ServicesResponseMetaPagination) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *ServicesResponseMetaPagination) SetSize(v int64) {
	o.Size = &v
}

func (o ServicesResponseMetaPagination) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NextOffset != nil {
		toSerialize["next_offset"] = o.NextOffset
	}
	if o.Offset != nil {
		toSerialize["offset"] = o.Offset
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	return json.Marshal(toSerialize)
}

type NullableServicesResponseMetaPagination struct {
	value *ServicesResponseMetaPagination
	isSet bool
}

func (v NullableServicesResponseMetaPagination) Get() *ServicesResponseMetaPagination {
	return v.value
}

func (v *NullableServicesResponseMetaPagination) Set(val *ServicesResponseMetaPagination) {
	v.value = val
	v.isSet = true
}

func (v NullableServicesResponseMetaPagination) IsSet() bool {
	return v.isSet
}

func (v *NullableServicesResponseMetaPagination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicesResponseMetaPagination(val *ServicesResponseMetaPagination) *NullableServicesResponseMetaPagination {
	return &NullableServicesResponseMetaPagination{value: val, isSet: true}
}

func (v NullableServicesResponseMetaPagination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicesResponseMetaPagination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
