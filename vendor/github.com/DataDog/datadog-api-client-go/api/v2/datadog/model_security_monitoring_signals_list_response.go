/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// SecurityMonitoringSignalsListResponse The response object with all security signals matching the request and pagination information.
type SecurityMonitoringSignalsListResponse struct {
	// An array of security signals matching the request.
	Data  *[]SecurityMonitoringSignal                 `json:"data,omitempty"`
	Links *SecurityMonitoringSignalsListResponseLinks `json:"links,omitempty"`
	Meta  *SecurityMonitoringSignalsListResponseMeta  `json:"meta,omitempty"`
}

// NewSecurityMonitoringSignalsListResponse instantiates a new SecurityMonitoringSignalsListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityMonitoringSignalsListResponse() *SecurityMonitoringSignalsListResponse {
	this := SecurityMonitoringSignalsListResponse{}
	return &this
}

// NewSecurityMonitoringSignalsListResponseWithDefaults instantiates a new SecurityMonitoringSignalsListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityMonitoringSignalsListResponseWithDefaults() *SecurityMonitoringSignalsListResponse {
	this := SecurityMonitoringSignalsListResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *SecurityMonitoringSignalsListResponse) GetData() []SecurityMonitoringSignal {
	if o == nil || o.Data == nil {
		var ret []SecurityMonitoringSignal
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityMonitoringSignalsListResponse) GetDataOk() (*[]SecurityMonitoringSignal, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *SecurityMonitoringSignalsListResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []SecurityMonitoringSignal and assigns it to the Data field.
func (o *SecurityMonitoringSignalsListResponse) SetData(v []SecurityMonitoringSignal) {
	o.Data = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *SecurityMonitoringSignalsListResponse) GetLinks() SecurityMonitoringSignalsListResponseLinks {
	if o == nil || o.Links == nil {
		var ret SecurityMonitoringSignalsListResponseLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityMonitoringSignalsListResponse) GetLinksOk() (*SecurityMonitoringSignalsListResponseLinks, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *SecurityMonitoringSignalsListResponse) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given SecurityMonitoringSignalsListResponseLinks and assigns it to the Links field.
func (o *SecurityMonitoringSignalsListResponse) SetLinks(v SecurityMonitoringSignalsListResponseLinks) {
	o.Links = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *SecurityMonitoringSignalsListResponse) GetMeta() SecurityMonitoringSignalsListResponseMeta {
	if o == nil || o.Meta == nil {
		var ret SecurityMonitoringSignalsListResponseMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityMonitoringSignalsListResponse) GetMetaOk() (*SecurityMonitoringSignalsListResponseMeta, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *SecurityMonitoringSignalsListResponse) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given SecurityMonitoringSignalsListResponseMeta and assigns it to the Meta field.
func (o *SecurityMonitoringSignalsListResponse) SetMeta(v SecurityMonitoringSignalsListResponseMeta) {
	o.Meta = &v
}

func (o SecurityMonitoringSignalsListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	return json.Marshal(toSerialize)
}

type NullableSecurityMonitoringSignalsListResponse struct {
	value *SecurityMonitoringSignalsListResponse
	isSet bool
}

func (v NullableSecurityMonitoringSignalsListResponse) Get() *SecurityMonitoringSignalsListResponse {
	return v.value
}

func (v *NullableSecurityMonitoringSignalsListResponse) Set(val *SecurityMonitoringSignalsListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityMonitoringSignalsListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityMonitoringSignalsListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityMonitoringSignalsListResponse(val *SecurityMonitoringSignalsListResponse) *NullableSecurityMonitoringSignalsListResponse {
	return &NullableSecurityMonitoringSignalsListResponse{value: val, isSet: true}
}

func (v NullableSecurityMonitoringSignalsListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityMonitoringSignalsListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
