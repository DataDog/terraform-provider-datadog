/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// LogsArchiveOrderAttributes The attributes associated with the archive order.
type LogsArchiveOrderAttributes struct {
	// An ordered array of `<ARCHIVE_ID>` strings, the order of archive IDs in the array define the overall archives order for Datadog.
	ArchiveIds []string `json:"archive_ids"`
}

// NewLogsArchiveOrderAttributes instantiates a new LogsArchiveOrderAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogsArchiveOrderAttributes(archiveIds []string) *LogsArchiveOrderAttributes {
	this := LogsArchiveOrderAttributes{}
	this.ArchiveIds = archiveIds
	return &this
}

// NewLogsArchiveOrderAttributesWithDefaults instantiates a new LogsArchiveOrderAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogsArchiveOrderAttributesWithDefaults() *LogsArchiveOrderAttributes {
	this := LogsArchiveOrderAttributes{}
	return &this
}

// GetArchiveIds returns the ArchiveIds field value
func (o *LogsArchiveOrderAttributes) GetArchiveIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ArchiveIds
}

// GetArchiveIdsOk returns a tuple with the ArchiveIds field value
// and a boolean to check if the value has been set.
func (o *LogsArchiveOrderAttributes) GetArchiveIdsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ArchiveIds, true
}

// SetArchiveIds sets field value
func (o *LogsArchiveOrderAttributes) SetArchiveIds(v []string) {
	o.ArchiveIds = v
}

func (o LogsArchiveOrderAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["archive_ids"] = o.ArchiveIds
	}
	return json.Marshal(toSerialize)
}

type NullableLogsArchiveOrderAttributes struct {
	value *LogsArchiveOrderAttributes
	isSet bool
}

func (v NullableLogsArchiveOrderAttributes) Get() *LogsArchiveOrderAttributes {
	return v.value
}

func (v *NullableLogsArchiveOrderAttributes) Set(val *LogsArchiveOrderAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableLogsArchiveOrderAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableLogsArchiveOrderAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogsArchiveOrderAttributes(val *LogsArchiveOrderAttributes) *NullableLogsArchiveOrderAttributes {
	return &NullableLogsArchiveOrderAttributes{value: val, isSet: true}
}

func (v NullableLogsArchiveOrderAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogsArchiveOrderAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
