/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
	"fmt"
)

// UsageAttributionSort The field to sort by.
type UsageAttributionSort string

// List of UsageAttributionSort
const (
	USAGEATTRIBUTIONSORT_API_PERCENTAGE               UsageAttributionSort = "api_percentage"
	USAGEATTRIBUTIONSORT_SNMP_USAGE                   UsageAttributionSort = "snmp_usage"
	USAGEATTRIBUTIONSORT_LAMBDA_PERCENTAGE            UsageAttributionSort = "lambda_percentage"
	USAGEATTRIBUTIONSORT_APM_HOST_USAGE               UsageAttributionSort = "apm_host_usage"
	USAGEATTRIBUTIONSORT_API_USAGE                    UsageAttributionSort = "api_usage"
	USAGEATTRIBUTIONSORT_CONTAINER_USAGE              UsageAttributionSort = "container_usage"
	USAGEATTRIBUTIONSORT_CUSTOM_TIMESERIES_PERCENTAGE UsageAttributionSort = "custom_timeseries_percentage"
	USAGEATTRIBUTIONSORT_CONTAINER_PERCENTAGE         UsageAttributionSort = "container_percentage"
	USAGEATTRIBUTIONSORT_LAMBDA_USAGE                 UsageAttributionSort = "lambda_usage"
	USAGEATTRIBUTIONSORT_APM_HOST_PERCENTAGE          UsageAttributionSort = "apm_host_percentage"
	USAGEATTRIBUTIONSORT_NPM_HOST_PERCENTAGE          UsageAttributionSort = "npm_host_percentage"
	USAGEATTRIBUTIONSORT_BROWSER_PERCENTAGE           UsageAttributionSort = "browser_percentage"
	USAGEATTRIBUTIONSORT_BROWSER_USAGE                UsageAttributionSort = "browser_usage"
	USAGEATTRIBUTIONSORT_INFRA_HOST_PERCENTAGE        UsageAttributionSort = "infra_host_percentage"
	USAGEATTRIBUTIONSORT_SNMP_PERCENTAGE              UsageAttributionSort = "snmp_percentage"
	USAGEATTRIBUTIONSORT_NPM_HOST_USAGE               UsageAttributionSort = "npm_host_usage"
	USAGEATTRIBUTIONSORT_INFRA_HOST_USAGE             UsageAttributionSort = "infra_host_usage"
	USAGEATTRIBUTIONSORT_CUSTOM_TIMESERIES_USAGE      UsageAttributionSort = "custom_timeseries_usage"
)

func (v *UsageAttributionSort) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := UsageAttributionSort(value)
	for _, existing := range []UsageAttributionSort{"api_percentage", "snmp_usage", "lambda_percentage", "apm_host_usage", "api_usage", "container_usage", "custom_timeseries_percentage", "container_percentage", "lambda_usage", "apm_host_percentage", "npm_host_percentage", "browser_percentage", "browser_usage", "infra_host_percentage", "snmp_percentage", "npm_host_usage", "infra_host_usage", "custom_timeseries_usage"} {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid UsageAttributionSort", value)
}

// Ptr returns reference to UsageAttributionSort value
func (v UsageAttributionSort) Ptr() *UsageAttributionSort {
	return &v
}

type NullableUsageAttributionSort struct {
	value *UsageAttributionSort
	isSet bool
}

func (v NullableUsageAttributionSort) Get() *UsageAttributionSort {
	return v.value
}

func (v *NullableUsageAttributionSort) Set(val *UsageAttributionSort) {
	v.value = val
	v.isSet = true
}

func (v NullableUsageAttributionSort) IsSet() bool {
	return v.isSet
}

func (v *NullableUsageAttributionSort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsageAttributionSort(val *UsageAttributionSort) *NullableUsageAttributionSort {
	return &NullableUsageAttributionSort{value: val, isSet: true}
}

func (v NullableUsageAttributionSort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsageAttributionSort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
