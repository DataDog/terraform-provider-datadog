/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// AWSLogsListServicesResponse The list of current AWS services for which Datadog offers automatic log collection.
type AWSLogsListServicesResponse struct {
	// Key value in returned object.
	Id *string `json:"id,omitempty"`
	// Name of service available for configuration with Datadog logs.
	Label *string `json:"label,omitempty"`
}

// NewAWSLogsListServicesResponse instantiates a new AWSLogsListServicesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAWSLogsListServicesResponse() *AWSLogsListServicesResponse {
	this := AWSLogsListServicesResponse{}
	return &this
}

// NewAWSLogsListServicesResponseWithDefaults instantiates a new AWSLogsListServicesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSLogsListServicesResponseWithDefaults() *AWSLogsListServicesResponse {
	this := AWSLogsListServicesResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AWSLogsListServicesResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AWSLogsListServicesResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AWSLogsListServicesResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AWSLogsListServicesResponse) SetId(v string) {
	o.Id = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *AWSLogsListServicesResponse) GetLabel() string {
	if o == nil || o.Label == nil {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AWSLogsListServicesResponse) GetLabelOk() (*string, bool) {
	if o == nil || o.Label == nil {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *AWSLogsListServicesResponse) HasLabel() bool {
	if o != nil && o.Label != nil {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *AWSLogsListServicesResponse) SetLabel(v string) {
	o.Label = &v
}

func (o AWSLogsListServicesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Label != nil {
		toSerialize["label"] = o.Label
	}
	return json.Marshal(toSerialize)
}

type NullableAWSLogsListServicesResponse struct {
	value *AWSLogsListServicesResponse
	isSet bool
}

func (v NullableAWSLogsListServicesResponse) Get() *AWSLogsListServicesResponse {
	return v.value
}

func (v *NullableAWSLogsListServicesResponse) Set(val *AWSLogsListServicesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAWSLogsListServicesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAWSLogsListServicesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAWSLogsListServicesResponse(val *AWSLogsListServicesResponse) *NullableAWSLogsListServicesResponse {
	return &NullableAWSLogsListServicesResponse{value: val, isSet: true}
}

func (v NullableAWSLogsListServicesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAWSLogsListServicesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
