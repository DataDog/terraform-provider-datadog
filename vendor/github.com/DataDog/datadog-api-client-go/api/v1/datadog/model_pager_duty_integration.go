/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// PagerDutyIntegration New Datadog-PagerDuty integration.
type PagerDutyIntegration struct {
	// Your PagerDuty API token.
	ApiToken *string `json:"api_token,omitempty"`
	// The array of your schedule URLs.
	Schedules *[]string `json:"schedules,omitempty"`
	// The array of PagerDuty service objects.
	Services *[]PagerDutyService `json:"services,omitempty"`
	// Your PagerDuty subdomain.
	Subdomain *string `json:"subdomain,omitempty"`
}

// NewPagerDutyIntegration instantiates a new PagerDutyIntegration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPagerDutyIntegration() *PagerDutyIntegration {
	this := PagerDutyIntegration{}
	return &this
}

// NewPagerDutyIntegrationWithDefaults instantiates a new PagerDutyIntegration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPagerDutyIntegrationWithDefaults() *PagerDutyIntegration {
	this := PagerDutyIntegration{}
	return &this
}

// GetApiToken returns the ApiToken field value if set, zero value otherwise.
func (o *PagerDutyIntegration) GetApiToken() string {
	if o == nil || o.ApiToken == nil {
		var ret string
		return ret
	}
	return *o.ApiToken
}

// GetApiTokenOk returns a tuple with the ApiToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagerDutyIntegration) GetApiTokenOk() (*string, bool) {
	if o == nil || o.ApiToken == nil {
		return nil, false
	}
	return o.ApiToken, true
}

// HasApiToken returns a boolean if a field has been set.
func (o *PagerDutyIntegration) HasApiToken() bool {
	if o != nil && o.ApiToken != nil {
		return true
	}

	return false
}

// SetApiToken gets a reference to the given string and assigns it to the ApiToken field.
func (o *PagerDutyIntegration) SetApiToken(v string) {
	o.ApiToken = &v
}

// GetSchedules returns the Schedules field value if set, zero value otherwise.
func (o *PagerDutyIntegration) GetSchedules() []string {
	if o == nil || o.Schedules == nil {
		var ret []string
		return ret
	}
	return *o.Schedules
}

// GetSchedulesOk returns a tuple with the Schedules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagerDutyIntegration) GetSchedulesOk() (*[]string, bool) {
	if o == nil || o.Schedules == nil {
		return nil, false
	}
	return o.Schedules, true
}

// HasSchedules returns a boolean if a field has been set.
func (o *PagerDutyIntegration) HasSchedules() bool {
	if o != nil && o.Schedules != nil {
		return true
	}

	return false
}

// SetSchedules gets a reference to the given []string and assigns it to the Schedules field.
func (o *PagerDutyIntegration) SetSchedules(v []string) {
	o.Schedules = &v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *PagerDutyIntegration) GetServices() []PagerDutyService {
	if o == nil || o.Services == nil {
		var ret []PagerDutyService
		return ret
	}
	return *o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagerDutyIntegration) GetServicesOk() (*[]PagerDutyService, bool) {
	if o == nil || o.Services == nil {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *PagerDutyIntegration) HasServices() bool {
	if o != nil && o.Services != nil {
		return true
	}

	return false
}

// SetServices gets a reference to the given []PagerDutyService and assigns it to the Services field.
func (o *PagerDutyIntegration) SetServices(v []PagerDutyService) {
	o.Services = &v
}

// GetSubdomain returns the Subdomain field value if set, zero value otherwise.
func (o *PagerDutyIntegration) GetSubdomain() string {
	if o == nil || o.Subdomain == nil {
		var ret string
		return ret
	}
	return *o.Subdomain
}

// GetSubdomainOk returns a tuple with the Subdomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagerDutyIntegration) GetSubdomainOk() (*string, bool) {
	if o == nil || o.Subdomain == nil {
		return nil, false
	}
	return o.Subdomain, true
}

// HasSubdomain returns a boolean if a field has been set.
func (o *PagerDutyIntegration) HasSubdomain() bool {
	if o != nil && o.Subdomain != nil {
		return true
	}

	return false
}

// SetSubdomain gets a reference to the given string and assigns it to the Subdomain field.
func (o *PagerDutyIntegration) SetSubdomain(v string) {
	o.Subdomain = &v
}

func (o PagerDutyIntegration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiToken != nil {
		toSerialize["api_token"] = o.ApiToken
	}
	if o.Schedules != nil {
		toSerialize["schedules"] = o.Schedules
	}
	if o.Services != nil {
		toSerialize["services"] = o.Services
	}
	if o.Subdomain != nil {
		toSerialize["subdomain"] = o.Subdomain
	}
	return json.Marshal(toSerialize)
}

type NullablePagerDutyIntegration struct {
	value *PagerDutyIntegration
	isSet bool
}

func (v NullablePagerDutyIntegration) Get() *PagerDutyIntegration {
	return v.value
}

func (v *NullablePagerDutyIntegration) Set(val *PagerDutyIntegration) {
	v.value = val
	v.isSet = true
}

func (v NullablePagerDutyIntegration) IsSet() bool {
	return v.isSet
}

func (v *NullablePagerDutyIntegration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePagerDutyIntegration(val *PagerDutyIntegration) *NullablePagerDutyIntegration {
	return &NullablePagerDutyIntegration{value: val, isSet: true}
}

func (v NullablePagerDutyIntegration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePagerDutyIntegration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
