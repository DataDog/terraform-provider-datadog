/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
	"fmt"
)

// MonitorOverallStates The different states your monitor can be in.
type MonitorOverallStates string

// List of MonitorOverallStates
const (
	MONITOROVERALLSTATES_ALERT   MonitorOverallStates = "Alert"
	MONITOROVERALLSTATES_IGNORED MonitorOverallStates = "Ignored"
	MONITOROVERALLSTATES_NO_DATA MonitorOverallStates = "No Data"
	MONITOROVERALLSTATES_OK      MonitorOverallStates = "OK"
	MONITOROVERALLSTATES_SKIPPED MonitorOverallStates = "Skipped"
	MONITOROVERALLSTATES_UNKNOWN MonitorOverallStates = "Unknown"
	MONITOROVERALLSTATES_WARN    MonitorOverallStates = "Warn"
)

func (v *MonitorOverallStates) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MonitorOverallStates(value)
	for _, existing := range []MonitorOverallStates{"Alert", "Ignored", "No Data", "OK", "Skipped", "Unknown", "Warn"} {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MonitorOverallStates", value)
}

// Ptr returns reference to MonitorOverallStates value
func (v MonitorOverallStates) Ptr() *MonitorOverallStates {
	return &v
}

type NullableMonitorOverallStates struct {
	value *MonitorOverallStates
	isSet bool
}

func (v NullableMonitorOverallStates) Get() *MonitorOverallStates {
	return v.value
}

func (v *NullableMonitorOverallStates) Set(val *MonitorOverallStates) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorOverallStates) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorOverallStates) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorOverallStates(val *MonitorOverallStates) *NullableMonitorOverallStates {
	return &NullableMonitorOverallStates{value: val, isSet: true}
}

func (v NullableMonitorOverallStates) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorOverallStates) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
