/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// PagerDutyServiceName PagerDuty service object name.
type PagerDutyServiceName struct {
	// Your service name associated service key in PagerDuty.
	ServiceName string `json:"service_name"`
}

// NewPagerDutyServiceName instantiates a new PagerDutyServiceName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPagerDutyServiceName(serviceName string) *PagerDutyServiceName {
	this := PagerDutyServiceName{}
	this.ServiceName = serviceName
	return &this
}

// NewPagerDutyServiceNameWithDefaults instantiates a new PagerDutyServiceName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPagerDutyServiceNameWithDefaults() *PagerDutyServiceName {
	this := PagerDutyServiceName{}
	return &this
}

// GetServiceName returns the ServiceName field value
func (o *PagerDutyServiceName) GetServiceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value
// and a boolean to check if the value has been set.
func (o *PagerDutyServiceName) GetServiceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceName, true
}

// SetServiceName sets field value
func (o *PagerDutyServiceName) SetServiceName(v string) {
	o.ServiceName = v
}

func (o PagerDutyServiceName) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["service_name"] = o.ServiceName
	}
	return json.Marshal(toSerialize)
}

type NullablePagerDutyServiceName struct {
	value *PagerDutyServiceName
	isSet bool
}

func (v NullablePagerDutyServiceName) Get() *PagerDutyServiceName {
	return v.value
}

func (v *NullablePagerDutyServiceName) Set(val *PagerDutyServiceName) {
	v.value = val
	v.isSet = true
}

func (v NullablePagerDutyServiceName) IsSet() bool {
	return v.isSet
}

func (v *NullablePagerDutyServiceName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePagerDutyServiceName(val *PagerDutyServiceName) *NullablePagerDutyServiceName {
	return &NullablePagerDutyServiceName{value: val, isSet: true}
}

func (v NullablePagerDutyServiceName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePagerDutyServiceName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
