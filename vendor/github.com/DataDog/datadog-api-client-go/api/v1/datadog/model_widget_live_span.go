/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
	"fmt"
)

// WidgetLiveSpan The available timeframes depend on the widget you are using.
type WidgetLiveSpan string

// List of WidgetLiveSpan
const (
	WIDGETLIVESPAN_PAST_ONE_MINUTE      WidgetLiveSpan = "1m"
	WIDGETLIVESPAN_PAST_FIVE_MINUTES    WidgetLiveSpan = "5m"
	WIDGETLIVESPAN_PAST_TEN_MINUTES     WidgetLiveSpan = "10m"
	WIDGETLIVESPAN_PAST_FIFTEEN_MINUTES WidgetLiveSpan = "15m"
	WIDGETLIVESPAN_PAST_THIRTY_MINUTES  WidgetLiveSpan = "30m"
	WIDGETLIVESPAN_PAST_ONE_HOUR        WidgetLiveSpan = "1h"
	WIDGETLIVESPAN_PAST_FOUR_HOURS      WidgetLiveSpan = "4h"
	WIDGETLIVESPAN_PAST_ONE_DAY         WidgetLiveSpan = "1d"
	WIDGETLIVESPAN_PAST_TWO_DAYS        WidgetLiveSpan = "2d"
	WIDGETLIVESPAN_PAST_ONE_WEEK        WidgetLiveSpan = "1w"
	WIDGETLIVESPAN_PAST_ONE_MONTH       WidgetLiveSpan = "1mo"
	WIDGETLIVESPAN_PAST_THREE_MONTHS    WidgetLiveSpan = "3mo"
	WIDGETLIVESPAN_PAST_SIX_MONTHS      WidgetLiveSpan = "6mo"
	WIDGETLIVESPAN_PAST_ONE_YEAR        WidgetLiveSpan = "1y"
	WIDGETLIVESPAN_ALERT                WidgetLiveSpan = "alert"
)

func (v *WidgetLiveSpan) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WidgetLiveSpan(value)
	for _, existing := range []WidgetLiveSpan{"1m", "5m", "10m", "15m", "30m", "1h", "4h", "1d", "2d", "1w", "1mo", "3mo", "6mo", "1y", "alert"} {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid WidgetLiveSpan", value)
}

// Ptr returns reference to WidgetLiveSpan value
func (v WidgetLiveSpan) Ptr() *WidgetLiveSpan {
	return &v
}

type NullableWidgetLiveSpan struct {
	value *WidgetLiveSpan
	isSet bool
}

func (v NullableWidgetLiveSpan) Get() *WidgetLiveSpan {
	return v.value
}

func (v *NullableWidgetLiveSpan) Set(val *WidgetLiveSpan) {
	v.value = val
	v.isSet = true
}

func (v NullableWidgetLiveSpan) IsSet() bool {
	return v.isSet
}

func (v *NullableWidgetLiveSpan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWidgetLiveSpan(val *WidgetLiveSpan) *NullableWidgetLiveSpan {
	return &NullableWidgetLiveSpan{value: val, isSet: true}
}

func (v NullableWidgetLiveSpan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWidgetLiveSpan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
