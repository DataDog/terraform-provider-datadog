/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// SLOCorrectionListResponse A list of  SLO correction objects
type SLOCorrectionListResponse struct {
	// The list of of SLO corrections objects
	Data *[]SLOCorrectionListResponseData `json:"data,omitempty"`
}

// NewSLOCorrectionListResponse instantiates a new SLOCorrectionListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSLOCorrectionListResponse() *SLOCorrectionListResponse {
	this := SLOCorrectionListResponse{}
	return &this
}

// NewSLOCorrectionListResponseWithDefaults instantiates a new SLOCorrectionListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSLOCorrectionListResponseWithDefaults() *SLOCorrectionListResponse {
	this := SLOCorrectionListResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *SLOCorrectionListResponse) GetData() []SLOCorrectionListResponseData {
	if o == nil || o.Data == nil {
		var ret []SLOCorrectionListResponseData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SLOCorrectionListResponse) GetDataOk() (*[]SLOCorrectionListResponseData, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *SLOCorrectionListResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []SLOCorrectionListResponseData and assigns it to the Data field.
func (o *SLOCorrectionListResponse) SetData(v []SLOCorrectionListResponseData) {
	o.Data = &v
}

func (o SLOCorrectionListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableSLOCorrectionListResponse struct {
	value *SLOCorrectionListResponse
	isSet bool
}

func (v NullableSLOCorrectionListResponse) Get() *SLOCorrectionListResponse {
	return v.value
}

func (v *NullableSLOCorrectionListResponse) Set(val *SLOCorrectionListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSLOCorrectionListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSLOCorrectionListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSLOCorrectionListResponse(val *SLOCorrectionListResponse) *NullableSLOCorrectionListResponse {
	return &NullableSLOCorrectionListResponse{value: val, isSet: true}
}

func (v NullableSLOCorrectionListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSLOCorrectionListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
