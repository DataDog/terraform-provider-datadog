/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// WidgetCustomLink Custom links help you connect a data value to a URL, like a Datadog page or your AWS console.
type WidgetCustomLink struct {
	// The label for the custom link URL. Keep the label short and descriptive. Use metrics and tags as variables.
	Label string `json:"label"`
	// The URL of the custom link. URL must include `http` or `https`. A relative URL must start with `/`.
	Link string `json:"link"`
}

// NewWidgetCustomLink instantiates a new WidgetCustomLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWidgetCustomLink(label string, link string) *WidgetCustomLink {
	this := WidgetCustomLink{}
	this.Label = label
	this.Link = link
	return &this
}

// NewWidgetCustomLinkWithDefaults instantiates a new WidgetCustomLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWidgetCustomLinkWithDefaults() *WidgetCustomLink {
	this := WidgetCustomLink{}
	return &this
}

// GetLabel returns the Label field value
func (o *WidgetCustomLink) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *WidgetCustomLink) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *WidgetCustomLink) SetLabel(v string) {
	o.Label = v
}

// GetLink returns the Link field value
func (o *WidgetCustomLink) GetLink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Link
}

// GetLinkOk returns a tuple with the Link field value
// and a boolean to check if the value has been set.
func (o *WidgetCustomLink) GetLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Link, true
}

// SetLink sets field value
func (o *WidgetCustomLink) SetLink(v string) {
	o.Link = v
}

func (o WidgetCustomLink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["label"] = o.Label
	}
	if true {
		toSerialize["link"] = o.Link
	}
	return json.Marshal(toSerialize)
}

type NullableWidgetCustomLink struct {
	value *WidgetCustomLink
	isSet bool
}

func (v NullableWidgetCustomLink) Get() *WidgetCustomLink {
	return v.value
}

func (v *NullableWidgetCustomLink) Set(val *WidgetCustomLink) {
	v.value = val
	v.isSet = true
}

func (v NullableWidgetCustomLink) IsSet() bool {
	return v.isSet
}

func (v *NullableWidgetCustomLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWidgetCustomLink(val *WidgetCustomLink) *NullableWidgetCustomLink {
	return &NullableWidgetCustomLink{value: val, isSet: true}
}

func (v NullableWidgetCustomLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWidgetCustomLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
