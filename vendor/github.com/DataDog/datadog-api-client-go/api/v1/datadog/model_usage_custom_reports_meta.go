/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// UsageCustomReportsMeta The object containing document metadata.
type UsageCustomReportsMeta struct {
	Page *UsageCustomReportsPage `json:"page,omitempty"`
}

// NewUsageCustomReportsMeta instantiates a new UsageCustomReportsMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsageCustomReportsMeta() *UsageCustomReportsMeta {
	this := UsageCustomReportsMeta{}
	return &this
}

// NewUsageCustomReportsMetaWithDefaults instantiates a new UsageCustomReportsMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsageCustomReportsMetaWithDefaults() *UsageCustomReportsMeta {
	this := UsageCustomReportsMeta{}
	return &this
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *UsageCustomReportsMeta) GetPage() UsageCustomReportsPage {
	if o == nil || o.Page == nil {
		var ret UsageCustomReportsPage
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageCustomReportsMeta) GetPageOk() (*UsageCustomReportsPage, bool) {
	if o == nil || o.Page == nil {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *UsageCustomReportsMeta) HasPage() bool {
	if o != nil && o.Page != nil {
		return true
	}

	return false
}

// SetPage gets a reference to the given UsageCustomReportsPage and assigns it to the Page field.
func (o *UsageCustomReportsMeta) SetPage(v UsageCustomReportsPage) {
	o.Page = &v
}

func (o UsageCustomReportsMeta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Page != nil {
		toSerialize["page"] = o.Page
	}
	return json.Marshal(toSerialize)
}

type NullableUsageCustomReportsMeta struct {
	value *UsageCustomReportsMeta
	isSet bool
}

func (v NullableUsageCustomReportsMeta) Get() *UsageCustomReportsMeta {
	return v.value
}

func (v *NullableUsageCustomReportsMeta) Set(val *UsageCustomReportsMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableUsageCustomReportsMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableUsageCustomReportsMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsageCustomReportsMeta(val *UsageCustomReportsMeta) *NullableUsageCustomReportsMeta {
	return &NullableUsageCustomReportsMeta{value: val, isSet: true}
}

func (v NullableUsageCustomReportsMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsageCustomReportsMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
