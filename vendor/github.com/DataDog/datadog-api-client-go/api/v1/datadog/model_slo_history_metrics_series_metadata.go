/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// SLOHistoryMetricsSeriesMetadata Query metadata.
type SLOHistoryMetricsSeriesMetadata struct {
	// Query aggregator function.
	Aggr *string `json:"aggr,omitempty"`
	// Query expression.
	Expression *string `json:"expression,omitempty"`
	// Query metric used.
	Metric *string `json:"metric,omitempty"`
	// Query index from original combined query.
	QueryIndex *int64 `json:"query_index,omitempty"`
	// Query scope.
	Scope *string `json:"scope,omitempty"`
	// Query units (if available).
	Unit *string `json:"unit,omitempty"`
}

// NewSLOHistoryMetricsSeriesMetadata instantiates a new SLOHistoryMetricsSeriesMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSLOHistoryMetricsSeriesMetadata() *SLOHistoryMetricsSeriesMetadata {
	this := SLOHistoryMetricsSeriesMetadata{}
	return &this
}

// NewSLOHistoryMetricsSeriesMetadataWithDefaults instantiates a new SLOHistoryMetricsSeriesMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSLOHistoryMetricsSeriesMetadataWithDefaults() *SLOHistoryMetricsSeriesMetadata {
	this := SLOHistoryMetricsSeriesMetadata{}
	return &this
}

// GetAggr returns the Aggr field value if set, zero value otherwise.
func (o *SLOHistoryMetricsSeriesMetadata) GetAggr() string {
	if o == nil || o.Aggr == nil {
		var ret string
		return ret
	}
	return *o.Aggr
}

// GetAggrOk returns a tuple with the Aggr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SLOHistoryMetricsSeriesMetadata) GetAggrOk() (*string, bool) {
	if o == nil || o.Aggr == nil {
		return nil, false
	}
	return o.Aggr, true
}

// HasAggr returns a boolean if a field has been set.
func (o *SLOHistoryMetricsSeriesMetadata) HasAggr() bool {
	if o != nil && o.Aggr != nil {
		return true
	}

	return false
}

// SetAggr gets a reference to the given string and assigns it to the Aggr field.
func (o *SLOHistoryMetricsSeriesMetadata) SetAggr(v string) {
	o.Aggr = &v
}

// GetExpression returns the Expression field value if set, zero value otherwise.
func (o *SLOHistoryMetricsSeriesMetadata) GetExpression() string {
	if o == nil || o.Expression == nil {
		var ret string
		return ret
	}
	return *o.Expression
}

// GetExpressionOk returns a tuple with the Expression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SLOHistoryMetricsSeriesMetadata) GetExpressionOk() (*string, bool) {
	if o == nil || o.Expression == nil {
		return nil, false
	}
	return o.Expression, true
}

// HasExpression returns a boolean if a field has been set.
func (o *SLOHistoryMetricsSeriesMetadata) HasExpression() bool {
	if o != nil && o.Expression != nil {
		return true
	}

	return false
}

// SetExpression gets a reference to the given string and assigns it to the Expression field.
func (o *SLOHistoryMetricsSeriesMetadata) SetExpression(v string) {
	o.Expression = &v
}

// GetMetric returns the Metric field value if set, zero value otherwise.
func (o *SLOHistoryMetricsSeriesMetadata) GetMetric() string {
	if o == nil || o.Metric == nil {
		var ret string
		return ret
	}
	return *o.Metric
}

// GetMetricOk returns a tuple with the Metric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SLOHistoryMetricsSeriesMetadata) GetMetricOk() (*string, bool) {
	if o == nil || o.Metric == nil {
		return nil, false
	}
	return o.Metric, true
}

// HasMetric returns a boolean if a field has been set.
func (o *SLOHistoryMetricsSeriesMetadata) HasMetric() bool {
	if o != nil && o.Metric != nil {
		return true
	}

	return false
}

// SetMetric gets a reference to the given string and assigns it to the Metric field.
func (o *SLOHistoryMetricsSeriesMetadata) SetMetric(v string) {
	o.Metric = &v
}

// GetQueryIndex returns the QueryIndex field value if set, zero value otherwise.
func (o *SLOHistoryMetricsSeriesMetadata) GetQueryIndex() int64 {
	if o == nil || o.QueryIndex == nil {
		var ret int64
		return ret
	}
	return *o.QueryIndex
}

// GetQueryIndexOk returns a tuple with the QueryIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SLOHistoryMetricsSeriesMetadata) GetQueryIndexOk() (*int64, bool) {
	if o == nil || o.QueryIndex == nil {
		return nil, false
	}
	return o.QueryIndex, true
}

// HasQueryIndex returns a boolean if a field has been set.
func (o *SLOHistoryMetricsSeriesMetadata) HasQueryIndex() bool {
	if o != nil && o.QueryIndex != nil {
		return true
	}

	return false
}

// SetQueryIndex gets a reference to the given int64 and assigns it to the QueryIndex field.
func (o *SLOHistoryMetricsSeriesMetadata) SetQueryIndex(v int64) {
	o.QueryIndex = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *SLOHistoryMetricsSeriesMetadata) GetScope() string {
	if o == nil || o.Scope == nil {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SLOHistoryMetricsSeriesMetadata) GetScopeOk() (*string, bool) {
	if o == nil || o.Scope == nil {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *SLOHistoryMetricsSeriesMetadata) HasScope() bool {
	if o != nil && o.Scope != nil {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *SLOHistoryMetricsSeriesMetadata) SetScope(v string) {
	o.Scope = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *SLOHistoryMetricsSeriesMetadata) GetUnit() string {
	if o == nil || o.Unit == nil {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SLOHistoryMetricsSeriesMetadata) GetUnitOk() (*string, bool) {
	if o == nil || o.Unit == nil {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *SLOHistoryMetricsSeriesMetadata) HasUnit() bool {
	if o != nil && o.Unit != nil {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *SLOHistoryMetricsSeriesMetadata) SetUnit(v string) {
	o.Unit = &v
}

func (o SLOHistoryMetricsSeriesMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Aggr != nil {
		toSerialize["aggr"] = o.Aggr
	}
	if o.Expression != nil {
		toSerialize["expression"] = o.Expression
	}
	if o.Metric != nil {
		toSerialize["metric"] = o.Metric
	}
	if o.QueryIndex != nil {
		toSerialize["query_index"] = o.QueryIndex
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	if o.Unit != nil {
		toSerialize["unit"] = o.Unit
	}
	return json.Marshal(toSerialize)
}

type NullableSLOHistoryMetricsSeriesMetadata struct {
	value *SLOHistoryMetricsSeriesMetadata
	isSet bool
}

func (v NullableSLOHistoryMetricsSeriesMetadata) Get() *SLOHistoryMetricsSeriesMetadata {
	return v.value
}

func (v *NullableSLOHistoryMetricsSeriesMetadata) Set(val *SLOHistoryMetricsSeriesMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableSLOHistoryMetricsSeriesMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableSLOHistoryMetricsSeriesMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSLOHistoryMetricsSeriesMetadata(val *SLOHistoryMetricsSeriesMetadata) *NullableSLOHistoryMetricsSeriesMetadata {
	return &NullableSLOHistoryMetricsSeriesMetadata{value: val, isSet: true}
}

func (v NullableSLOHistoryMetricsSeriesMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSLOHistoryMetricsSeriesMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
