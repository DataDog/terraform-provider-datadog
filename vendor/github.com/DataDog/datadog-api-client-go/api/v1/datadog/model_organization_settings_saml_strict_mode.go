/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// OrganizationSettingsSamlStrictMode Has one property enabled (boolean).
type OrganizationSettingsSamlStrictMode struct {
	// Whether or not the SAML strict mode is enabled. If true, all users must log in with SAML. Learn more on the [SAML Strict documentation](https://docs.datadoghq.com/account_management/saml/#saml-strict).
	Enabled *bool `json:"enabled,omitempty"`
}

// NewOrganizationSettingsSamlStrictMode instantiates a new OrganizationSettingsSamlStrictMode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationSettingsSamlStrictMode() *OrganizationSettingsSamlStrictMode {
	this := OrganizationSettingsSamlStrictMode{}
	return &this
}

// NewOrganizationSettingsSamlStrictModeWithDefaults instantiates a new OrganizationSettingsSamlStrictMode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationSettingsSamlStrictModeWithDefaults() *OrganizationSettingsSamlStrictMode {
	this := OrganizationSettingsSamlStrictMode{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *OrganizationSettingsSamlStrictMode) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationSettingsSamlStrictMode) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *OrganizationSettingsSamlStrictMode) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *OrganizationSettingsSamlStrictMode) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o OrganizationSettingsSamlStrictMode) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationSettingsSamlStrictMode struct {
	value *OrganizationSettingsSamlStrictMode
	isSet bool
}

func (v NullableOrganizationSettingsSamlStrictMode) Get() *OrganizationSettingsSamlStrictMode {
	return v.value
}

func (v *NullableOrganizationSettingsSamlStrictMode) Set(val *OrganizationSettingsSamlStrictMode) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationSettingsSamlStrictMode) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationSettingsSamlStrictMode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationSettingsSamlStrictMode(val *OrganizationSettingsSamlStrictMode) *NullableOrganizationSettingsSamlStrictMode {
	return &NullableOrganizationSettingsSamlStrictMode{value: val, isSet: true}
}

func (v NullableOrganizationSettingsSamlStrictMode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationSettingsSamlStrictMode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
