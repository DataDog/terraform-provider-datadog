/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// ApiKeyListResponse List of API and application keys available for a given organization.
type ApiKeyListResponse struct {
	// Array of API keys.
	ApiKeys *[]ApiKey `json:"api_keys,omitempty"`
}

// NewApiKeyListResponse instantiates a new ApiKeyListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiKeyListResponse() *ApiKeyListResponse {
	this := ApiKeyListResponse{}
	return &this
}

// NewApiKeyListResponseWithDefaults instantiates a new ApiKeyListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiKeyListResponseWithDefaults() *ApiKeyListResponse {
	this := ApiKeyListResponse{}
	return &this
}

// GetApiKeys returns the ApiKeys field value if set, zero value otherwise.
func (o *ApiKeyListResponse) GetApiKeys() []ApiKey {
	if o == nil || o.ApiKeys == nil {
		var ret []ApiKey
		return ret
	}
	return *o.ApiKeys
}

// GetApiKeysOk returns a tuple with the ApiKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyListResponse) GetApiKeysOk() (*[]ApiKey, bool) {
	if o == nil || o.ApiKeys == nil {
		return nil, false
	}
	return o.ApiKeys, true
}

// HasApiKeys returns a boolean if a field has been set.
func (o *ApiKeyListResponse) HasApiKeys() bool {
	if o != nil && o.ApiKeys != nil {
		return true
	}

	return false
}

// SetApiKeys gets a reference to the given []ApiKey and assigns it to the ApiKeys field.
func (o *ApiKeyListResponse) SetApiKeys(v []ApiKey) {
	o.ApiKeys = &v
}

func (o ApiKeyListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiKeys != nil {
		toSerialize["api_keys"] = o.ApiKeys
	}
	return json.Marshal(toSerialize)
}

type NullableApiKeyListResponse struct {
	value *ApiKeyListResponse
	isSet bool
}

func (v NullableApiKeyListResponse) Get() *ApiKeyListResponse {
	return v.value
}

func (v *NullableApiKeyListResponse) Set(val *ApiKeyListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableApiKeyListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableApiKeyListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiKeyListResponse(val *ApiKeyListResponse) *NullableApiKeyListResponse {
	return &NullableApiKeyListResponse{value: val, isSet: true}
}

func (v NullableApiKeyListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiKeyListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
