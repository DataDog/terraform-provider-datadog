/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// SyntheticsTriggerCITestsResponseResults struct for SyntheticsTriggerCITestsResponseResults
type SyntheticsTriggerCITestsResponseResults struct {
	Device *SyntheticsDeviceID `json:"device,omitempty"`
	// The location ID of the test run.
	Location *float32 `json:"location,omitempty"`
	// The public ID of the Synthetics test.
	PublicId *string `json:"public_id,omitempty"`
	// ID of the result.
	ResultId *string `json:"result_id,omitempty"`
}

// NewSyntheticsTriggerCITestsResponseResults instantiates a new SyntheticsTriggerCITestsResponseResults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyntheticsTriggerCITestsResponseResults() *SyntheticsTriggerCITestsResponseResults {
	this := SyntheticsTriggerCITestsResponseResults{}
	return &this
}

// NewSyntheticsTriggerCITestsResponseResultsWithDefaults instantiates a new SyntheticsTriggerCITestsResponseResults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyntheticsTriggerCITestsResponseResultsWithDefaults() *SyntheticsTriggerCITestsResponseResults {
	this := SyntheticsTriggerCITestsResponseResults{}
	return &this
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *SyntheticsTriggerCITestsResponseResults) GetDevice() SyntheticsDeviceID {
	if o == nil || o.Device == nil {
		var ret SyntheticsDeviceID
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsTriggerCITestsResponseResults) GetDeviceOk() (*SyntheticsDeviceID, bool) {
	if o == nil || o.Device == nil {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *SyntheticsTriggerCITestsResponseResults) HasDevice() bool {
	if o != nil && o.Device != nil {
		return true
	}

	return false
}

// SetDevice gets a reference to the given SyntheticsDeviceID and assigns it to the Device field.
func (o *SyntheticsTriggerCITestsResponseResults) SetDevice(v SyntheticsDeviceID) {
	o.Device = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *SyntheticsTriggerCITestsResponseResults) GetLocation() float32 {
	if o == nil || o.Location == nil {
		var ret float32
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsTriggerCITestsResponseResults) GetLocationOk() (*float32, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *SyntheticsTriggerCITestsResponseResults) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given float32 and assigns it to the Location field.
func (o *SyntheticsTriggerCITestsResponseResults) SetLocation(v float32) {
	o.Location = &v
}

// GetPublicId returns the PublicId field value if set, zero value otherwise.
func (o *SyntheticsTriggerCITestsResponseResults) GetPublicId() string {
	if o == nil || o.PublicId == nil {
		var ret string
		return ret
	}
	return *o.PublicId
}

// GetPublicIdOk returns a tuple with the PublicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsTriggerCITestsResponseResults) GetPublicIdOk() (*string, bool) {
	if o == nil || o.PublicId == nil {
		return nil, false
	}
	return o.PublicId, true
}

// HasPublicId returns a boolean if a field has been set.
func (o *SyntheticsTriggerCITestsResponseResults) HasPublicId() bool {
	if o != nil && o.PublicId != nil {
		return true
	}

	return false
}

// SetPublicId gets a reference to the given string and assigns it to the PublicId field.
func (o *SyntheticsTriggerCITestsResponseResults) SetPublicId(v string) {
	o.PublicId = &v
}

// GetResultId returns the ResultId field value if set, zero value otherwise.
func (o *SyntheticsTriggerCITestsResponseResults) GetResultId() string {
	if o == nil || o.ResultId == nil {
		var ret string
		return ret
	}
	return *o.ResultId
}

// GetResultIdOk returns a tuple with the ResultId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsTriggerCITestsResponseResults) GetResultIdOk() (*string, bool) {
	if o == nil || o.ResultId == nil {
		return nil, false
	}
	return o.ResultId, true
}

// HasResultId returns a boolean if a field has been set.
func (o *SyntheticsTriggerCITestsResponseResults) HasResultId() bool {
	if o != nil && o.ResultId != nil {
		return true
	}

	return false
}

// SetResultId gets a reference to the given string and assigns it to the ResultId field.
func (o *SyntheticsTriggerCITestsResponseResults) SetResultId(v string) {
	o.ResultId = &v
}

func (o SyntheticsTriggerCITestsResponseResults) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Device != nil {
		toSerialize["device"] = o.Device
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.PublicId != nil {
		toSerialize["public_id"] = o.PublicId
	}
	if o.ResultId != nil {
		toSerialize["result_id"] = o.ResultId
	}
	return json.Marshal(toSerialize)
}

type NullableSyntheticsTriggerCITestsResponseResults struct {
	value *SyntheticsTriggerCITestsResponseResults
	isSet bool
}

func (v NullableSyntheticsTriggerCITestsResponseResults) Get() *SyntheticsTriggerCITestsResponseResults {
	return v.value
}

func (v *NullableSyntheticsTriggerCITestsResponseResults) Set(val *SyntheticsTriggerCITestsResponseResults) {
	v.value = val
	v.isSet = true
}

func (v NullableSyntheticsTriggerCITestsResponseResults) IsSet() bool {
	return v.isSet
}

func (v *NullableSyntheticsTriggerCITestsResponseResults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyntheticsTriggerCITestsResponseResults(val *SyntheticsTriggerCITestsResponseResults) *NullableSyntheticsTriggerCITestsResponseResults {
	return &NullableSyntheticsTriggerCITestsResponseResults{value: val, isSet: true}
}

func (v NullableSyntheticsTriggerCITestsResponseResults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyntheticsTriggerCITestsResponseResults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
