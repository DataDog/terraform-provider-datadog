/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
	"fmt"
)

// WidgetComparator Comparator to apply.
type WidgetComparator string

// List of WidgetComparator
const (
	WIDGETCOMPARATOR_GREATER_THAN             WidgetComparator = ">"
	WIDGETCOMPARATOR_GREATER_THAN_OR_EQUAL_TO WidgetComparator = ">="
	WIDGETCOMPARATOR_LESS_THAN                WidgetComparator = "<"
	WIDGETCOMPARATOR_LESS_THAN_OR_EQUAL_TO    WidgetComparator = "<="
)

func (v *WidgetComparator) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WidgetComparator(value)
	for _, existing := range []WidgetComparator{">", ">=", "<", "<="} {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid WidgetComparator", value)
}

// Ptr returns reference to WidgetComparator value
func (v WidgetComparator) Ptr() *WidgetComparator {
	return &v
}

type NullableWidgetComparator struct {
	value *WidgetComparator
	isSet bool
}

func (v NullableWidgetComparator) Get() *WidgetComparator {
	return v.value
}

func (v *NullableWidgetComparator) Set(val *WidgetComparator) {
	v.value = val
	v.isSet = true
}

func (v NullableWidgetComparator) IsSet() bool {
	return v.isSet
}

func (v *NullableWidgetComparator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWidgetComparator(val *WidgetComparator) *NullableWidgetComparator {
	return &NullableWidgetComparator{value: val, isSet: true}
}

func (v NullableWidgetComparator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWidgetComparator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
