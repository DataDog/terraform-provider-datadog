/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
	"fmt"
)

// UsageSort The field to sort by.
type UsageSort string

// List of UsageSort
const (
	USAGESORT_COMPUTED_ON UsageSort = "computed_on"
	USAGESORT_SIZE        UsageSort = "size"
	USAGESORT_START_DATE  UsageSort = "start_date"
	USAGESORT_END_DATE    UsageSort = "end_date"
)

func (v *UsageSort) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := UsageSort(value)
	for _, existing := range []UsageSort{"computed_on", "size", "start_date", "end_date"} {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid UsageSort", *v)
}

// Ptr returns reference to UsageSort value
func (v UsageSort) Ptr() *UsageSort {
	return &v
}

type NullableUsageSort struct {
	value *UsageSort
	isSet bool
}

func (v NullableUsageSort) Get() *UsageSort {
	return v.value
}

func (v *NullableUsageSort) Set(val *UsageSort) {
	v.value = val
	v.isSet = true
}

func (v NullableUsageSort) IsSet() bool {
	return v.isSet
}

func (v *NullableUsageSort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsageSort(val *UsageSort) *NullableUsageSort {
	return &NullableUsageSort{value: val, isSet: true}
}

func (v NullableUsageSort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsageSort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
