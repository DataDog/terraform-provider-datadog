/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// SyntheticsGlobalVariable Synthetics global variable.
type SyntheticsGlobalVariable struct {
	// Description of the global variable.
	Description string `json:"description"`
	// Unique identifier of the global variable.
	Id *string `json:"id,omitempty"`
	// Name of the global variable.
	Name string `json:"name"`
	// Tags of the global variable.
	Tags  []string                      `json:"tags"`
	Value SyntheticsGlobalVariableValue `json:"value"`
}

// NewSyntheticsGlobalVariable instantiates a new SyntheticsGlobalVariable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyntheticsGlobalVariable(description string, name string, tags []string, value SyntheticsGlobalVariableValue) *SyntheticsGlobalVariable {
	this := SyntheticsGlobalVariable{}
	this.Description = description
	this.Name = name
	this.Tags = tags
	this.Value = value
	return &this
}

// NewSyntheticsGlobalVariableWithDefaults instantiates a new SyntheticsGlobalVariable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyntheticsGlobalVariableWithDefaults() *SyntheticsGlobalVariable {
	this := SyntheticsGlobalVariable{}
	return &this
}

// GetDescription returns the Description field value
func (o *SyntheticsGlobalVariable) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *SyntheticsGlobalVariable) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *SyntheticsGlobalVariable) SetDescription(v string) {
	o.Description = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SyntheticsGlobalVariable) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsGlobalVariable) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SyntheticsGlobalVariable) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SyntheticsGlobalVariable) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *SyntheticsGlobalVariable) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SyntheticsGlobalVariable) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SyntheticsGlobalVariable) SetName(v string) {
	o.Name = v
}

// GetTags returns the Tags field value
func (o *SyntheticsGlobalVariable) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *SyntheticsGlobalVariable) GetTagsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tags, true
}

// SetTags sets field value
func (o *SyntheticsGlobalVariable) SetTags(v []string) {
	o.Tags = v
}

// GetValue returns the Value field value
func (o *SyntheticsGlobalVariable) GetValue() SyntheticsGlobalVariableValue {
	if o == nil {
		var ret SyntheticsGlobalVariableValue
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *SyntheticsGlobalVariable) GetValueOk() (*SyntheticsGlobalVariableValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *SyntheticsGlobalVariable) SetValue(v SyntheticsGlobalVariableValue) {
	o.Value = v
}

func (o SyntheticsGlobalVariable) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["description"] = o.Description
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["tags"] = o.Tags
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableSyntheticsGlobalVariable struct {
	value *SyntheticsGlobalVariable
	isSet bool
}

func (v NullableSyntheticsGlobalVariable) Get() *SyntheticsGlobalVariable {
	return v.value
}

func (v *NullableSyntheticsGlobalVariable) Set(val *SyntheticsGlobalVariable) {
	v.value = val
	v.isSet = true
}

func (v NullableSyntheticsGlobalVariable) IsSet() bool {
	return v.isSet
}

func (v *NullableSyntheticsGlobalVariable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyntheticsGlobalVariable(val *SyntheticsGlobalVariable) *NullableSyntheticsGlobalVariable {
	return &NullableSyntheticsGlobalVariable{value: val, isSet: true}
}

func (v NullableSyntheticsGlobalVariable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyntheticsGlobalVariable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
