/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// PagerDutyServicesAndSchedules Define new services and schedules to your Datadog-PagerDuty integration.
type PagerDutyServicesAndSchedules struct {
	// The array of your schedule URLs.
	Schedules *[]string `json:"schedules,omitempty"`
	// The array of PagerDuty service objects.
	Services *[]PagerDutyService `json:"services,omitempty"`
}

// NewPagerDutyServicesAndSchedules instantiates a new PagerDutyServicesAndSchedules object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPagerDutyServicesAndSchedules() *PagerDutyServicesAndSchedules {
	this := PagerDutyServicesAndSchedules{}
	return &this
}

// NewPagerDutyServicesAndSchedulesWithDefaults instantiates a new PagerDutyServicesAndSchedules object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPagerDutyServicesAndSchedulesWithDefaults() *PagerDutyServicesAndSchedules {
	this := PagerDutyServicesAndSchedules{}
	return &this
}

// GetSchedules returns the Schedules field value if set, zero value otherwise.
func (o *PagerDutyServicesAndSchedules) GetSchedules() []string {
	if o == nil || o.Schedules == nil {
		var ret []string
		return ret
	}
	return *o.Schedules
}

// GetSchedulesOk returns a tuple with the Schedules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagerDutyServicesAndSchedules) GetSchedulesOk() (*[]string, bool) {
	if o == nil || o.Schedules == nil {
		return nil, false
	}
	return o.Schedules, true
}

// HasSchedules returns a boolean if a field has been set.
func (o *PagerDutyServicesAndSchedules) HasSchedules() bool {
	if o != nil && o.Schedules != nil {
		return true
	}

	return false
}

// SetSchedules gets a reference to the given []string and assigns it to the Schedules field.
func (o *PagerDutyServicesAndSchedules) SetSchedules(v []string) {
	o.Schedules = &v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *PagerDutyServicesAndSchedules) GetServices() []PagerDutyService {
	if o == nil || o.Services == nil {
		var ret []PagerDutyService
		return ret
	}
	return *o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagerDutyServicesAndSchedules) GetServicesOk() (*[]PagerDutyService, bool) {
	if o == nil || o.Services == nil {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *PagerDutyServicesAndSchedules) HasServices() bool {
	if o != nil && o.Services != nil {
		return true
	}

	return false
}

// SetServices gets a reference to the given []PagerDutyService and assigns it to the Services field.
func (o *PagerDutyServicesAndSchedules) SetServices(v []PagerDutyService) {
	o.Services = &v
}

func (o PagerDutyServicesAndSchedules) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Schedules != nil {
		toSerialize["schedules"] = o.Schedules
	}
	if o.Services != nil {
		toSerialize["services"] = o.Services
	}
	return json.Marshal(toSerialize)
}

type NullablePagerDutyServicesAndSchedules struct {
	value *PagerDutyServicesAndSchedules
	isSet bool
}

func (v NullablePagerDutyServicesAndSchedules) Get() *PagerDutyServicesAndSchedules {
	return v.value
}

func (v *NullablePagerDutyServicesAndSchedules) Set(val *PagerDutyServicesAndSchedules) {
	v.value = val
	v.isSet = true
}

func (v NullablePagerDutyServicesAndSchedules) IsSet() bool {
	return v.isSet
}

func (v *NullablePagerDutyServicesAndSchedules) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePagerDutyServicesAndSchedules(val *PagerDutyServicesAndSchedules) *NullablePagerDutyServicesAndSchedules {
	return &NullablePagerDutyServicesAndSchedules{value: val, isSet: true}
}

func (v NullablePagerDutyServicesAndSchedules) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePagerDutyServicesAndSchedules) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
