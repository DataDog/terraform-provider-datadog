/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// AWSTagFilterListResponse An array of tag filter rules by `namespace` and tag filter string.
type AWSTagFilterListResponse struct {
	// An array of tag filters.
	Filters *[]AWSTagFilterListResponseFilters `json:"filters,omitempty"`
}

// NewAWSTagFilterListResponse instantiates a new AWSTagFilterListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAWSTagFilterListResponse() *AWSTagFilterListResponse {
	this := AWSTagFilterListResponse{}
	return &this
}

// NewAWSTagFilterListResponseWithDefaults instantiates a new AWSTagFilterListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSTagFilterListResponseWithDefaults() *AWSTagFilterListResponse {
	this := AWSTagFilterListResponse{}
	return &this
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *AWSTagFilterListResponse) GetFilters() []AWSTagFilterListResponseFilters {
	if o == nil || o.Filters == nil {
		var ret []AWSTagFilterListResponseFilters
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AWSTagFilterListResponse) GetFiltersOk() (*[]AWSTagFilterListResponseFilters, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *AWSTagFilterListResponse) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []AWSTagFilterListResponseFilters and assigns it to the Filters field.
func (o *AWSTagFilterListResponse) SetFilters(v []AWSTagFilterListResponseFilters) {
	o.Filters = &v
}

func (o AWSTagFilterListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Filters != nil {
		toSerialize["filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableAWSTagFilterListResponse struct {
	value *AWSTagFilterListResponse
	isSet bool
}

func (v NullableAWSTagFilterListResponse) Get() *AWSTagFilterListResponse {
	return v.value
}

func (v *NullableAWSTagFilterListResponse) Set(val *AWSTagFilterListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAWSTagFilterListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAWSTagFilterListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAWSTagFilterListResponse(val *AWSTagFilterListResponse) *NullableAWSTagFilterListResponse {
	return &NullableAWSTagFilterListResponse{value: val, isSet: true}
}

func (v NullableAWSTagFilterListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAWSTagFilterListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
