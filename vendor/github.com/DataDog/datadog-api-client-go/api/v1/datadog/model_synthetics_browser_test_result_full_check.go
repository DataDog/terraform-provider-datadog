/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// SyntheticsBrowserTestResultFullCheck Object describing the browser test configuration.
type SyntheticsBrowserTestResultFullCheck struct {
	Config SyntheticsTestConfig `json:"config"`
}

// NewSyntheticsBrowserTestResultFullCheck instantiates a new SyntheticsBrowserTestResultFullCheck object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyntheticsBrowserTestResultFullCheck(config SyntheticsTestConfig) *SyntheticsBrowserTestResultFullCheck {
	this := SyntheticsBrowserTestResultFullCheck{}
	this.Config = config
	return &this
}

// NewSyntheticsBrowserTestResultFullCheckWithDefaults instantiates a new SyntheticsBrowserTestResultFullCheck object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyntheticsBrowserTestResultFullCheckWithDefaults() *SyntheticsBrowserTestResultFullCheck {
	this := SyntheticsBrowserTestResultFullCheck{}
	return &this
}

// GetConfig returns the Config field value
func (o *SyntheticsBrowserTestResultFullCheck) GetConfig() SyntheticsTestConfig {
	if o == nil {
		var ret SyntheticsTestConfig
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *SyntheticsBrowserTestResultFullCheck) GetConfigOk() (*SyntheticsTestConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *SyntheticsBrowserTestResultFullCheck) SetConfig(v SyntheticsTestConfig) {
	o.Config = v
}

func (o SyntheticsBrowserTestResultFullCheck) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["config"] = o.Config
	}
	return json.Marshal(toSerialize)
}

type NullableSyntheticsBrowserTestResultFullCheck struct {
	value *SyntheticsBrowserTestResultFullCheck
	isSet bool
}

func (v NullableSyntheticsBrowserTestResultFullCheck) Get() *SyntheticsBrowserTestResultFullCheck {
	return v.value
}

func (v *NullableSyntheticsBrowserTestResultFullCheck) Set(val *SyntheticsBrowserTestResultFullCheck) {
	v.value = val
	v.isSet = true
}

func (v NullableSyntheticsBrowserTestResultFullCheck) IsSet() bool {
	return v.isSet
}

func (v *NullableSyntheticsBrowserTestResultFullCheck) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyntheticsBrowserTestResultFullCheck(val *SyntheticsBrowserTestResultFullCheck) *NullableSyntheticsBrowserTestResultFullCheck {
	return &NullableSyntheticsBrowserTestResultFullCheck{value: val, isSet: true}
}

func (v NullableSyntheticsBrowserTestResultFullCheck) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyntheticsBrowserTestResultFullCheck) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
