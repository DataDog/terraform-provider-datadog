{%- macro resourceExample(name, primaryId, createOperationParams) -%}
resource "datadog_{{ name }}" "foo" {
{%- for name, parameter in createOperationParams.items() %}
    {%- if name != primaryId["name"] %}
        {%- set parameterSchema = parameter|parameter_schema %}
        {%- if parameterSchema|is_json_api %}
            {%- set jsonAttributeSchema = json_api_attributes_schema(parameterSchema) %}
            {%- for attr, schema in jsonAttributeSchema.properties.items() %}
                {%- set isRequired = attr in jsonAttributeSchema.get("required", []) %}
                {{- baseSchema(attr, schema, required=isRequired) }}
            {%- endfor %}
        {%- else %}
            {{- baseSchema(name, parameterSchema, required=parameter.get("required")) }}
        {%- endif %}
    {%- endif %}
{%- endfor %}
}
{%- endmacro %}

{%- macro baseSchema(name, schema, required=False) %}
    {%- if schema|is_primitive %}
        {{- typePrimitiveSchema(name, schema, required) }}
    {%- elif schema.type == "object" %}
        {{- typeObjectSchema(name, schema, required) }}
    {%- elif schema.type == "array" %}
        {{- typeArraySchema(name, schema, required) }}
    {%- endif %}
{%- endmacro %}

{%- macro typePrimitiveSchema(name, schema, required=False) %}
    {{ name }} = {% if schema.get("example") %}{% if schema.type == "string" %}"{% endif %}{{ schema.example }}{% if schema.type == "string" %}"{% endif %}{% else %}"UPDATE ME" {%- endif %}
{%- endmacro %}

{%- macro typeObjectSchema(name, schema, required=False) %}
    {{ name }} {
        {%- for attr, childSchema in schema.get("properties", {}).items() %}
            {%- set isRequired = attr in childSchema.get("required", []) %}
            {{- baseSchema(attr, childSchema, required=isRequired) }}
        {%- endfor%}
    }
{%- endmacro %}

{%- macro typeArraySchema(name, schema, required=False) %}
    {%- if schema.get("items")|is_primitive %}
    {{ name }} = {% if schema.get("example") %}{{ schema.example|replace("'", "\"") }}{% else %}"UPDATE ME" {%- endif %}
    {%- else %}
    {{ name }} {
        {%- for attr, childSchema in schema.get("items").get("properties", {}).items() %}
            {%- set isRequired = attr in childSchema.get("required", []) %}
            {{- baseSchema(attr, childSchema, required=isRequired) }}
        {%- endfor%}
    }
    {%- endif %}
{%- endmacro %}
