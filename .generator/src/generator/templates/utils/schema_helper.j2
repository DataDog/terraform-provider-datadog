{%- macro baseSchema(name, schema, required=False) %}
    {%- if schema|is_primitive %}
        {{- typePrimitiveSchema(name, schema, required) }}
    {%- elif schema.type == "object" %}
        {{- typeObjectSchema(name, schema, required) }}
    {%- elif schema.type == "array" %}
        {{- typeArraySchema(name, schema, required) }}
    {%- endif %}
{%- endmacro %}

{%- macro typePrimitiveSchema(name, schema, required=False) %}
"{{ name }}": {
    Type:        schema.{{ get_terraform_schema_type(schema) }},
    {% if required %}Required:    true,{% else %}Optional:    true,{% endif %}
    Description: "{{ schema.description|sanitize_description if schema.description else "UPDATE ME" }}",
},
{%- endmacro %}

{%- macro typeObjectSchema(name, schema, required=False) %}
"{{ name }}": {
    Type:        schema.TypeList,
    {% if required %}Required:    true,{% else %}Optional:    true,{% endif %}
    MaxItems:    1,
    Description: "{{ schema.description|sanitize_description if schema.description else "UPDATE ME" }}",
    Elem: &schema.Resource{
        Schema: map[string]*schema.Schema{
        {%- for attr, childSchema in schema.get("properties", {}).items() %}
            {%- set isRequired = attr in childSchema.get("required", []) %}
            {{- baseSchema(attr, childSchema, required=isRequired) }}
        {%- endfor%}
        },
    },
},
{%- endmacro %}

{%- macro typeArraySchema(name, schema, required=False) %}
"{{ name }}": {
    Type:        schema.TypeList,
    {% if required %}Required:    true,{% else %}Optional:    true,{% endif %}
    Description: "{{ schema.description|sanitize_description if schema.description else "UPDATE ME" }}",
    {%- if schema.get("items")|is_primitive%}
    Elem:        &schema.Schema{Type: schema.{{ get_terraform_schema_type(schema.get("items")) }}},
    {%- else %}
    Elem: &schema.Resource{
        Schema: map[string]*schema.Schema{
        {%- for attr, childSchema in schema.get("items").get("properties", {}).items() %}
            {%- set isRequired = attr in childSchema.get("required", []) %}
            {{- baseSchema(attr, childSchema, required=isRequired) }}
        {%- endfor%}
        },
    },
    {%- endif %}

},
{%- endmacro %}
