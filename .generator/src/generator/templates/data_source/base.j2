{%- set apiName = operations["singular"]["schema"]["tags"][0].replace(" ", "") + "Api" %}
package fwprovider

import (
    "context"

	"github.com/DataDog/datadog-api-client-go/v2/api/datadogV2"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/terraform-providers/terraform-provider-datadog/datadog/internal/utils"
)

var (
    _ datasource.DataSource = &{{ name|camel_case|untitle_case }}DataSource{}
)

{%- include "data_source/types.j2" %}

func New{{ name|camel_case }}DataSource() datasource.DataSource {
	return &{{ name|camel_case|untitle_case }}DataSource{}
}

func (r *{{ name|camel_case|untitle_case }}DataSource) Configure(_ context.Context, request datasource.ConfigureRequest, response *datasource.ConfigureResponse) {
	providerData, _ := request.ProviderData.(*FrameworkProvider)
	r.Api = providerData.DatadogApiInstances.Get{{ apiName }}{{ version }}()
	r.Auth = providerData.Auth
}

func (r *{{ name|camel_case|untitle_case }}DataSource) Metadata(_ context.Context, request datasource.MetadataRequest, response *datasource.MetadataResponse) {
	response.TypeName = "{{ name|snake_case }}"
}

{%- include "data_source/schema.j2"%}
