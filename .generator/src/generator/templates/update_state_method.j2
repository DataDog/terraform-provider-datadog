{%- import "utils/update_state_helper.j2" as updateStateMacros %}

{#- Use the read operation response type. #}
{#- TODO: Add support for different updateState methods if responseType is different per operation. #}
{%- set readResponseType, readResponseSchema = operations[GET_OPERATION]["schema"]|return_type %}
func update{{ name|camel_case }}State(d *schema.ResourceData, resp *datadog{{ version|upperfirst }}.{{ readResponseType }}) diag.Diagnostics {
    {%- if readResponseSchema|is_json_api %}
        {%- set jsonApiAttributesSchema = get_json_api_attributes_schema(readResponseSchema) %}
        data := resp.GetData()
		attributes := data.GetAttributes()
        
        {%- for attr, schema in jsonApiAttributesSchema.properties.items() %}
            {%- set isRequired = attr in jsonApiAttributesSchema.get("required", []) %}
            {{ updateStateMacros.baseStateSetter(attr, schema, baseAccessor="attributes", required=isRequired) }}
        {%- endfor %}
    {%- endif %}

    return nil
}
