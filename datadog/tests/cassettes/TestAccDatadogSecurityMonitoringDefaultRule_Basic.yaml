---
version: 1
interactions:
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
      Dd-Operation-Id:
      - ListSecurityMonitoringRules
      User-Agent:
      - terraform-provider-datadog/dev (terraform 2.4.4; terraform-cli 0.14.7) datadog-api-client-go/1.0.0-beta.19 (go go1.16.3; os darwin; arch amd64)
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=0&page%5Bsize%5D=100
    method: GET
  response:
    body: '{"meta":{"page":{"total_filtered_count":100,"total_count":121}},"data":[{"creationAuthorId":0,"tags":["scope:iam","source:guardduty","technique:T1069-permission-groups-discovery","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is enumerating IAM principals.\n\n### Strategy\nThis rule lets you leverage GuardDuty to detect when an attacker is enumerating IAM principals. The GuardDuty Findings which trigger this signal:\n\n* [Recon:IAMUser/NetworkPermissions][1]\n* [Recon:IAMUser/ResourcePermissions][2]\n* [Recon:IAMUser/UserPermissions][3] \n\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon7\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon8\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon9","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870276065,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Recon\\:IAMUser\\/NetworkPermissions OR Recon\\:IAMUser\\/ResourcePermissions OR Recon\\:IAMUser\\/UserPermissions)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"u2j-xph-kc7","isDefault":true,"name":"AWS IAM principal enumeration"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is communicating with a cryptocurrency server\n\n### Strategy\nThis rule lets you leverage GuardDuty to detect when an EC2 instance has made a DNS request or is communicating with an IP that is associated with cryptocurrency operations. The following GuardDuty Findings trigger this signal:\n\n* [CryptoCurrency:EC2/BitcoinTool.B!DNS][1]\n* [CryptoCurrency:EC2/BitcoinTool.B][2]\n\n\n### Triage & Response\n1. Determine which domain name or IP address triggered the signal. This can be found in the samples. \n2. If the domain or IP address should not have been requested, open a security investigation, and determine which process requested the domain name or IP address.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_crypto.html#crypto3\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_crypto.html#crypto4","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870276326,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(CryptoCurrency\\:EC2\\/BitcoinTool.B\\!DNS OR CryptoCurrency\\:EC2\\/BitcoinTool.B)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ky3-ds4-ipb","isDefault":true,"name":"AWS EC2 instance communicating with a cryptocurrency server"},{"creationAuthorId":0,"tags":["technique:T1485-data-destruction","tactic:TA0040-impact","source:cloudtrail","scope:rds","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is destroying a RDS Cluster.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting a RDS cluster:\n\n* [DeleteDBCluster][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/rds/delete-db-cluster.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870276546,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteDBCluster","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"6ng-pk1-ukh","isDefault":true,"name":"AWS RDS Cluster deleted"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","scope:template","technique:T1110-brute-force","security:attack"],"isEnabled":false,"hasExtendedTitle":true,"message":"### Goal\nDetect Account Take Over (ATO) through brute force attempts\n\n### Strategy\nTo determine a successful attempt: Detect a high amount of failed logins and at least one successful login for a given user. This will generate a `HIGH` severity signal.\nTo determine an attempt: Detect a high amount of failed logins. This will generate an `INFO` severity signal.\n\n### Triage & Response\n1. Inspect the logs to see if this was a valid login attempt.\n2. See if 2FA was authenticated.\n3. If the user was compromised, rotate user credentials.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":7200,"keepAlive":3600},"version":3,"createdAt":1585870276794,"filters":[],"queries":[{"distinctFields":[],"name":"failed_login","aggregation":"count","groupByFields":["@usr.name"],"query":"@evt.name:authentication @evt.outcome:failure @usr.name:*","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@usr.name"],"query":"@evt.name:authentication @evt.outcome:success @usr.name:*","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":["@slack-secops"],"name":"Successful","condition":"failed_login > 50 && successful_login > 0"},{"status":"info","notifications":["@slack-secops"],"name":"Attempt","condition":"failed_login > 5"}],"type":"log_detection","id":"jhi-klp-smm","isDefault":true,"name":"TEMPLATE - Brute Force Attack Grouped By User"},{"creationAuthorId":0,"tags":["scope:eventbridge","technique:T1089-disabling-security-tools","source:cloudtrail","tactic:TA0005-defense-evasion","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is trying to evade defenses by deleting or disabling EventBridge rules.\n\n### Strategy\nThis rule lets you monitor these CloudTrail API calls to detect if an attacker is modifying or disabling EventBridge rules:\n\n* [DeleteRule][1]\n* [DisableRule][2]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DeleteRule.html\n[2]: https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DisableRule.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870277044,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DeleteRule OR DisableRule)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"mq6-cjx-h9o","isDefault":true,"name":"AWS EventBridge rule disabled or deleted"},{"creationAuthorId":0,"tags":["scope:ec2","source:cloudtrail","tactic:TA0005-defense-evasion","technique:T1066-indicator-removal-from-tools","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is removing FlowLogs to cover their tracks.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting FlowLogs:\n\n* [DeleteFlowLogs][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFlowLogs.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870278493,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteFlowLogs","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"cws-b4f-uoh","isDefault":true,"name":"AWS FlowLogs removed"},{"creationAuthorId":0,"tags":["technique:T1089-disabling-security-tools","scope:guardduty","source:cloudtrail","tactic:TA0005-defense-evasion","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is trying to evade defenses by deleting a GuardDuty detector.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting a GuardDuty Detector:\n\n* [DeleteDetector][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/delete-detector.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870279177,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteDetector","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"pzi-led-yyc","isDefault":true,"name":"AWS GuardDuty detector deleted"},{"creationAuthorId":0,"tags":["scope:ecs","technique:T1485-data-destruction","tactic:TA0040-impact","source:cloudtrail","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is destroying an ECS Cluster\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an ECS cluster is deleted:\n\n* [DeleteCluster][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeleteCluster.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870279810,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteCluster","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"vwu-6id-9lz","isDefault":true,"name":"AWS ECS cluster deleted"},{"creationAuthorId":0,"tags":["security:compliance","scope:s3","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when the S3 Public Access Block configuration has been removed \n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting the S3 Public Access Block configuration:\n\n* [DeleteAccountPublicAccessBlock][1]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and inform them of best practices of enabling Public Access Block on S3 buckets.\n3. Re-enable Public Access Block on the S3 bucket.\n\nMore details on S3 Public Block Public Access can be found [here][2].\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/s3api/delete-public-access-block.html\n[2]: https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870280316,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteAccountPublicAccessBlock","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"uxr-5wk-8hk","isDefault":true,"name":"AWS S3 Public Access Block removed"},{"creationAuthorId":0,"tags":["control:cis-3.14","security:compliance","scope:ec2","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is destroying a VPC.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting a VPC:\n\n* [DeleteVpc][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-vpc.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1585870280906,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DeleteVpc OR CreateVpc OR ModifyVpcAttribute OR AcceptVpcPeeringConnection OR CreateVpcPeeringConnection OR DeleteVpcPeeringConnection OR RejectVpcPeeringConnection OR  AttachClassicLinkVpc OR  DetachClassicLinkVpc OR DisableVpcClassicLink OR EnableVpcClassicLink)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"igj-dr4-ico","isDefault":true,"name":"AWS VPC created or modified"},{"creationAuthorId":0,"tags":["source:gsuite","scope:gsuite","security:threat-intel"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user attempts to log in with a password which is known to be compromised.\n\n### Strategy\nThis rule allows you to monitor this Google Activity API call to detect if an attacker is trying to login with a leaked password: \n\n* [Leaked password][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the compromised password.\n2. Contact the user and ensure they rotate the password on Google and any other accounts where they may have reused this password. Ensure the user is aware of strong password guidelines.\n\n[1]: https://developers.google.com/admin-sdk/reports/v1/appendix/activity/login#account_disabled_password_leak","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870280553,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@actor.email"],"query":"source:gsuite @event.type:account_warning @event.name:account_disabled_password_leak","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"9zi-bom-nmh","isDefault":true,"name":"User attempted login with leaked password"},{"creationAuthorId":0,"tags":["technique:T1083-file-and-directory-discovery","scope:s3","source:cloudtrail","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance makes an API call to AWS to list all of the S3 Buckets.\n\n### Strategy\nThis rule lets you monitor CloudTrail to detect a [ListBuckets][1] API call with the session name prefixed with `i-`. A session name prefixed with `i-` typically indicates that it is an EC2 instance using an [Instance Profile][2] to communicate with other AWS services, which is a common attacker technique to see the full list of S3 buckets in your AWS account.\n Determine if the EC2 instance should be making this API call. \n* If not, rotate the credentials, verify what else may have been accessed and open an investigation into how this instance was compromised.\n   * If the application or legitimate user on the EC2 instance is making the `ListBuckets` API call, consider whether this API call is really needed.  \n\n[1]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html\n[2]: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html#ec2-instance-profile","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870281123,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @userIdentity.session_name:i-* @evt.name:ListBuckets","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"t6r-kqt-hxb","isDefault":true,"name":"AWS S3 Buckets enumerated"},{"creationAuthorId":0,"tags":["security:compliance","scope:amazon","framework:cis-aws","control:cis-3.3","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect AWS root user activity. \n\n### Strategy\nMonitor CloudTrail and detect when any `@userIdentity.type` has a value of `Root`, but is not invoked by an AWS service.\n\n### Triage & Response\n1. Reach out to the user to determine if the login was legitimate. \n2. If the login wasn''t legitimate, rotate the credentials, enable 2FA, and open an investigation. \n\nFor best practices, check out the [AWS Root Account Best Practices][1] documentation.\n\n[1]: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1585870281964,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:cloudtrail @userIdentity.type:Root  -@userIdentity.invokedBy:*  -@eventType:AwsServiceEvent","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"2kn-z6k-6kf","isDefault":true,"name":"AWS root account activity"},{"creationAuthorId":0,"tags":["scope:ec2","technique:T1485-data-destruction","tactic:TA0040-impact","source:cloudtrail","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is destroying an EC2 subnet.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting an EC2 subnet.\n\n* [DeleteSubnet][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-subnet.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870282197,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteSubnet","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ygi-fi5-qns","isDefault":true,"name":"AWS EC2 subnet deleted"},{"creationAuthorId":0,"tags":["security:compliance","control:cis-3.9","framework:cis-aws","scope:amazon-config","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is trying to evade defenses by disabling an AWS configuration.\n\n### Strategy\nThis rule lets you monitor these CloudTrail API calls to detect if an attacker is trying to stop recording configurations of your AWS resources or trying to delete a delivery channel:\n\n* [StopConfigurationRecorder][1] \n* [DeleteDeliveryChannel][2] \n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/config/latest/APIReference/API_StopConfigurationRecorder.html\n[2]: https://docs.aws.amazon.com/config/latest/APIReference/API_DeleteDeliveryChannel.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1585870283149,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(StopConfigurationRecorder OR DeleteDeliveryChannel OR PutDeliveryChannel OR PutConfigurationRecorder)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"p1b-9np-rw1","isDefault":true,"name":"AWS config modified"},{"creationAuthorId":0,"tags":["security:threat-intel","scope:template"],"isEnabled":false,"hasExtendedTitle":true,"message":"### Goal\nDetect when a stolen laptop has been connected to the network.\n\n### Strategy\nUsing the Datadog [Lookup Processor](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#lookup-processor) you can maintain a blocklist of MAC addresses.\nWhen a MAC address connects to the network, the @threat.stolen_laptop attribute is set to `true`.\nThis threat detection rule queries for `@threat.stolen_laptop:true` and generates a security signal. \n\n### Triage & Response\nEnter your triage and response process for when a stolen laptop has connected to your network to help users responding to the security signal quickly triage and respond to the signal. \n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870283379,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.mac"],"query":"@threat.stolen_laptop:true @network.client.mac:*","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ap3-xy9-tsm","isDefault":true,"name":"TEMPLATE - Stolen Laptop Connected to Network"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":false,"hasExtendedTitle":true,"message":"### Goal\nDetect an account take over (ATO) through brute force attempts.\n\n### Strategy\nTo determine a successful attempt: Detect a high amount of failed logins and at least one successful login for a given IP address. This will generate a `HIGH` severity signal.\nTo determine an attempt: Detect a high amount of failed logins for a given IP address. This will generate an `INFO severity signal.\n\n### Triage & Response\n1. Inspect the logs to see if this was a valid login attempt.\n2. See if 2FA was authenticated.\n3. If the user was compromised, rotate user credentials.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":7200,"keepAlive":3600},"version":2,"createdAt":1585870283641,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.name"],"query":"@evt.name:authentication @evt.outcome:failure","trackType":"logs"},{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.name"],"query":"@evt.name:authentication @evt.outcome:success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":["@slack-secops"],"name":"Successful","condition":"a>5 && b>0"},{"status":"info","notifications":[],"name":"Attempted","condition":"a>5"}],"type":"log_detection","id":"wce-cxo-pe4","isDefault":true,"name":"TEMPLATE - Brute Force Attack Grouped By IP"},{"creationAuthorId":0,"tags":["security:compliance","scope:cloudtrail","framework:cis-aws","source:cloudtrail","control:cis-3.5"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is trying to evade defenses by disabling or modifying CloudTrail.\n\n### Strategy\nThis rule lets you monitor these CloudTrail API calls to detect if an attacker is modifying or disabling CloudTrail:\n\n* [DeleteTrail][1]\n* [UpdateTrail][2]\n* [StopLogging][3]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_DeleteTrail.html\n[2]: https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_UpdateTrail.html\n[3]: https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_StopLogging.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1585870283907,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DeleteTrail OR UpdateTrail OR StopLogging OR CreateTrail OR StartLogging)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"4hv-083-miw","isDefault":true,"name":"AWS CloudTrail configuration modified"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect Brute Force Attacks\n\n### Strategy\nLeverage GuardDuty and detect when an attacker is performing a brute force attack. The following are GuardDuty findings trigger this signal:\n\n* [UnauthorizedAccess:EC2/SSHBruteForce][1]\n* [UnauthorizedAccess:EC2/RDPBruteForce][2]\n\n\n### Triage & Response\n1. Inspect the role of the EC2 instance in the attack. Find the role in the signal name - either `ACTOR` or `TARGET`.\n   * If you are the `TARGET` and the instance is available on the internet, expect to see IPs scanning your systems.\n   * If you are the `TARGET` and the instance is **not** available on the internet, this means a host on your internal network is scanning your EC2 instance. Open an investigation.\n   * If you are the `ACTOR`, this means that your instance is performing brute force attacks on other systems. Open an investigation.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized9\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized10","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":11,"createdAt":1585870284202,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/SSHBruteForce OR UnauthorizedAccess\\:EC2\\/RDPBruteForce) @detail.service.resourceRole:ACTOR","trackType":"logs"},{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/SSHBruteForce OR UnauthorizedAccess\\:EC2\\/RDPBruteForce) @detail.service.resourceRole:TARGET","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"ACTOR","condition":"a > 0"},{"status":"info","notifications":[],"name":"TARGET","condition":"b > 0"}],"type":"log_detection","id":"vyl-ylc-3io","isDefault":true,"name":"AWS EC2 instance involved in brute force attack"},{"creationAuthorId":0,"tags":["security:compliance","scope:ec2","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EBS encryption is disabled by default. \n\n### Strategy\nMonitor CloudTrail and detect when EBS encryption is disabled by default via the following API call:\n\n* [DisableEbsEncryptionByDefault][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user and let them know that it is best practice to enable EBS encryption by default.\n3. Re-enable EBS encryption by default.\n\nFor more information about Amazon EBS Encryption, check out the [Amazon EBS Encryption][2] documentation.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableEbsEncryptionByDefault.html\n[2]: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870284527,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DisableEbsEncryptionByDefault","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"4s7-uuu-lo8","isDefault":true,"name":"AWS EBS default encryption disabled"},{"creationAuthorId":0,"tags":["security:compliance","framework:cis-aws","control:cis-3.2","scope:aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when any user logs in to your AWS console without multi-factor authentication.\n\n### Strategy\nThis rule monitors CloudTrail and detects when any `@evt.name` has a value of  `Console Login`, and `@additionalEventData.MFAUsed` has a value of `no`. \n\n**Note:** This rule ignores logins using SAML because 2FA is implemented on the IdP and not through AWS.\n\n### Triage & Response\n1. Reach out to the user to determine if the login was legitimate. \n2. If the login was legitimate, request that the user enables 2FA. \n3. If the login wasn''t legitimate, rotate the credentials. \n4. Review all user accounts to ensure MFA is enabled. \n\n**Note:** There is a separate rule to detect [Root Login without MFA][1]. \n\n[1]: /security_monitoring/default_rules/cloudtrail-aws-root-login-without-mfa/","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1585870278209,"filters":[],"queries":[{"distinctFields":[],"name":"user_login_without_mfa","aggregation":"count","groupByFields":["@userIdentity.accountId","@usr.name"],"query":"source:cloudtrail @evt.name:ConsoleLogin @additionalEventData.MFAUsed:No @responseElements.ConsoleLogin:Success -@userIdentity.type:Root -@additionalEventData.SamlProviderArn:*","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"user_login_without_mfa > 0"}],"type":"log_detection","id":"wkk-muq-vg8","isDefault":true,"name":"AWS Console login without MFA"},{"creationAuthorId":0,"tags":["security:compliance","scope:amazon","framework:cis-aws","control:cis-3.2","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a root user logs into the AWS console without multi-factor authentication.\n\n### Strategy\nMonitor CloudTrail and detect when any `@evt.name` has a value of `Console Login`, `@userIdentity.type` has a value of `Root`, and `@additionalEventData.MFAUsed` has a value of `no`. \n\n**Note:** This rule ignores logins using SAML because 2FA is implemented on the IdP and not through AWS.\n\n### Triage & Response\n1. Reach out to the user to determine if the login was legitimate. \n2. If the login was legitimate, request that the user enables 2FA on the root account. \n3. If the login wasn''t legitimate, rotate the credentials. \n4. Review all root user accounts to ensure MFA is enabled. \n\n**Note:** There is a separate rule to detect [Login without MFA for non-root users][1]. \n\n[1]: /security_monitoring/default_rules/cloudtrail-aws-login-without-mfa/","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1585870278956,"filters":[],"queries":[{"distinctFields":[],"name":"root_login_without_mfa","aggregation":"count","groupByFields":["@userIdentity.accountId"],"query":"source:cloudtrail @evt.name:ConsoleLogin @additionalEventData.MFAUsed:No @responseElements.ConsoleLogin:Success @userIdentity.type:Root -@additionalEventData.SamlProviderArn:*","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"root_login_without_mfa > 0"}],"type":"log_detection","id":"miy-rjb-9wq","isDefault":true,"name":"AWS Console root login without MFA"},{"creationAuthorId":0,"tags":["security:compliance","control:cis-3.8","scope:s3","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a S3 Bucket policy is modified.\n\n### Strategy\nMonitor CloudTrail and detect when S3 policies are being modified via one of the following API calls:\n* [PutBucketAcl][1]\n* [PutBucketPolicy][2]\n* [PutBucketCors][3]\n* [PutBucketLifecycle][4]\n* [PutBucketReplication][5]\n* [DeleteBucketPolicy][6]\n* [DeleteBucketCors][7]\n* [DeleteBucketLifecycle][8]\n* [DeleteBucketReplication][9]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAcl.html\n [2]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketPolicy.html\n [3]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketCors.html\n [4]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html\n [5]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketReplication.html\n [6]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketPolicy.html\n [7]:  https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketCors.html\n [8]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html\n [9]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketReplication.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475579499,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(PutBucketAcl OR PutBucketPolicy OR PutBucketCors OR PutBucketLifecycle OR PutBucketReplication OR DeleteBucketPolicy OR DeleteBucketCors OR DeleteBucketLifecycle OR DeleteBucketReplication)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"nl3-oht-jhi","isDefault":true,"name":"AWS S3 Bucket policy modified"},{"creationAuthorId":0,"tags":["security:compliance","scope:kms","framework:cis-aws","source:cloudtrail","control:cis-3.7"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a CMK is deleted or scheduled for deletion.\n\n### Strategy\nThis rule lets you monitor these CloudTrail API calls to detect if an attacker is deleting CMKs:\n* [DisableKey][1]\n* [ScheduleKeyDeletion][2]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/kms/latest/APIReference/API_DisableKey.html\n[2]: https://docs.aws.amazon.com/kms/latest/APIReference/API_ScheduleKeyDeletion.html ","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475576501,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DisableKey OR ScheduleKeyDeletion)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"iff-hhm-bd3","isDefault":true,"name":"AWS CMK deleted or scheduled for deletion"},{"creationAuthorId":0,"tags":["security:compliance","scope:ec2","control:cis-3.11","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS Network Access Control List (NACL) has been created or modified.\n\n### Strategy\nThis rule lets you monitor CloudTrail and detect when an AWS NACL has been created or modified with one of the following API calls:\n* [CreateNetworkAcl][1] \n* [CreateNetworkAclEntry][2] \n* [DeleteNetworkAcl][3] \n* [DeleteNetworkAclEntry][4] \n* [ReplaceNetworkAclEntry][5] \n* [ReplaceNetworkAclAssociation][6]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAcl.html\n[2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAclEntry.html\n[3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkAcl.html\n[4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkAclEntry.html\n[5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceNetworkAclEntry.html\n[6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceNetworkAclAssociation.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475579808,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(CreateNetworkAcl OR CreateNetworkAclEntry OR DeleteNetworkAcl OR DeleteNetworkAclEntry OR ReplaceNetworkAclEntry OR ReplaceNetworkAclAssociation)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"pcs-k05-rbc","isDefault":true,"name":"AWS Network Access Control List created or modified"},{"creationAuthorId":0,"tags":["security:compliance","scope:ec2","control:cis-3.12","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS Network Gateway has been created or modified.\n\n### Strategy\nMonitor CloudTrail and detect when an AWS Network Gateway has been created or modified with one of the following API calls:\n* [CreateCustomerGateway][1] \n* [DeleteCustomerGateway][2] \n* [AttachInternetGateway][3] \n* [CreateInternetGateway][4]\n* [DeleteInternetGateway][5] \n* [DetachInternetGateway][6]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCustomerGateway \n [2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteCustomerGateway \n [3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachInternetGateway \n [4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateInternetGateway \n [5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteInternetGateway \n [6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachInternetGateway.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475581301,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(CreateCustomerGateway OR DeleteCustomerGateway OR AttachInternetGateway OR CreateInternetGateway OR DeleteInternetGateway OR DetachInternetGateway)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"umr-47s-eyj","isDefault":true,"name":"AWS Network Gateway created or modified"},{"creationAuthorId":0,"tags":["scope:iam","security:compliance","framework:cis-aws","source:cloudtrail","control:cis-3.6"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is a victim of an Account Take Over (ATO) by a brute force attack.\n\n### Strategy\n This rule monitors CloudTrail and detects when any `@evt.name` has a value of `Console Login`, and `@responseElements.ConsoleLogin` has a value of `Failure`.\n\n### Triage & Response\n1. Determine if the user logged in with 2FA.\n2. Reach out to the user and ensure the login was legitimate.","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":7,"createdAt":1584475581986,"filters":[],"queries":[{"distinctFields":[],"name":"failed_login","aggregation":"count","groupByFields":["@userIdentity.accountId","@usr.name"],"query":"source:cloudtrail @evt.name:ConsoleLogin @responseElements.ConsoleLogin:Failure","trackType":"logs"},{"distinctFields":[],"name":"successful_login_without_mfa","aggregation":"count","groupByFields":["@userIdentity.accountId","@usr.name"],"query":"source:cloudtrail @evt.name:ConsoleLogin @responseElements.ConsoleLogin:Success @additionalEventData.MFAUsed:No","trackType":"logs"},{"distinctFields":[],"name":"successful_login_with_mfa","aggregation":"count","groupByFields":["@userIdentity.accountId","@usr.name"],"query":"source:cloudtrail @evt.name:ConsoleLogin @responseElements.ConsoleLogin:Success @additionalEventData.MFAUsed:Yes","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Potentially Successful - NO MFA","condition":"failed_login > 5 && successful_login_without_mfa > 0"},{"status":"info","notifications":[],"name":"Potentially Successful - MFA Used","condition":"failed_login > 5 && successful_login_with_mfa > 0"},{"status":"info","notifications":[],"name":"Unsuccessful","condition":"failed_login > 5"}],"type":"log_detection","id":"csj-nez-h1v","isDefault":true,"name":"AWS Console brute force login"},{"creationAuthorId":0,"tags":["security:compliance","control:cis-3.13","scope:ec2","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS Route Table has been created or modified.\n\n### Strategy\nThis rule lets you monitor CloudTrail and detect when an AWS Route Table has been created or modified with one of the following API calls:\n* [CreateRoute][1] \n* [CreateRouteTable][2] \n* [ReplaceRoute][3] \n* [ReplaceRouteTableAssociation][4] \n* [DeleteRouteTable][5] \n* [DeleteRoute][6] \n* [DisassociateRouteTable][7]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRoute.html \n [2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRouteTable \n [3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRoute.html \n [4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRouteTableAssociation \n [5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRouteTable.html \n [6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRoute.html \n [7]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateRouteTable.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475582644,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(CreateRoute OR CreateRouteTable OR ReplaceRoute OR ReplaceRouteTableAssociation OR DeleteRouteTable OR DeleteRoute OR DisassociateRouteTable)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"qgo-jqs-03x","isDefault":true,"name":"AWS Route Table created or modified"},{"creationAuthorId":0,"tags":["security:compliance","scope:amazon","framework:cis-aws","source:cloudtrail","control:cis-3.1"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when unauthorized activity is detected in AWS.\n\n### Strategy\nThis rule lets you monitor CloudTrail to detect when the error message of `AccessDenied` is returned.\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":8,"createdAt":1584475582956,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail \"AccessDenied\"","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"greater than 1000 failed attempts","condition":"a > 1000"},{"status":"medium","notifications":[],"name":"greater than 100 failed attempts","condition":"a > 100"},{"status":"low","notifications":[],"name":"greater than 10 failed attempts","condition":"a > 10"}],"type":"log_detection","id":"3d9-oev-jbm","isDefault":true,"name":"AWS unauthorized activity"},{"creationAuthorId":0,"tags":["scope:iam","security:compliance","framework:cis-aws","source:cloudtrail","control:cis-3.4"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect a change to an AWS IAM Policy.\n\n### Strategy\nThis rule lets you monitor CloudTrail and detect when any event pertaining to an AWS IAM policy is detected with one of the following API calls:\n* [DeleteGroupPolicy][1]\n* [DeleteRolePolicy][16]\n* [DeleteUserPolicy][2]\n* [PutGroupPolicy][3]\n* [PutRolePolicy][4]\n* [PutUserPolicy][5]\n* [CreatePolicy][6]\n* [DeletePolicy][7]\n* [CreatePolicyVersion][8]\n* [DeletePolicyVersion][9]\n* [AttachRolePolicy][10]\n* [DetachRolePolicy][11]\n* [AttachUserPolicy][12]\n* [DetachUserPolicy][13]\n* [AttachGroupPolicy][14]\n* [DetachGroupPolicy][15]\n\n### Triage & Response\n1. Review the IAM Policy change and ensure it does not negatively impact your risk in relation to authentication or authorization controls.\n\n[1]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteGroupPolicy.html\n[2]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteUserPolicy.html\n[3]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutGroupPolicy.html\n[4]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutRolePolicy.html\n[5]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutUserPolicy.html\n[6]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicy.html\n[7]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeletePolicy.html\n[8]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicyVersion.html\n[9]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeletePolicyVersion.html\n[10]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachRolePolicy.html\n[11]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachRolePolicy.html\n[12]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachUserPolicy.html\n[13]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachUserPolicy.html\n[14]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachGroupPolicy.html\n[15]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachGroupPolicy.html\n[16]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteRolePolicy.html\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":6,"createdAt":1584475584008,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DeleteGroupPolicy OR DeleteRolePolicy OR DeleteUserPolicy OR PutGroupPolicy OR PutRolePolicy OR PutUserPolicy OR CreatePolicy OR DeletePolicy OR CreatePolicyVersion OR DeletePolicyVersion OR AttachRolePolicy OR DetachRolePolicy OR AttachUserPolicy OR DetachUserPolicy OR AttachGroupPolicy OR DetachGroupPolicy)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"z8s-u06-ctu","isDefault":true,"name":"AWS IAM policy changed"},{"creationAuthorId":0,"tags":["security:compliance","scope:ec2","framework:cis-aws","source:cloudtrail","control:cis-3.10"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS security group has been modified.\n\n### Strategy\nMonitor CloudTrail and detect when an AWS security group has been created or modified with one of the following API calls:\n* [AuthorizeSecurityGroupIngress][1] \n* [AuthorizeSecurityGroupEgress][2] \n* [RevokeSecurityGroupIngress][3] \n* [RevokeSecurityGroupEgress][4] \n* [CreateSecurityGroup][5] \n* [DeleteSecurityGroup][6]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupIngress.html \n [2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupEgress.html \n [3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeSecurityGroupIngress.html \n [4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeSecurityGroupEgress.html \n [5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html \n [6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSecurityGroup.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475583507,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(AuthorizeSecurityGroupIngress OR AuthorizeSecurityGroupEgress OR RevokeSecurityGroupIngress OR RevokeSecurityGroupEgress OR CreateSecurityGroup OR DeleteSecurityGroup)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"bax-btp-3ct","isDefault":true,"name":"AWS security group created or modified"},{"creationAuthorId":0,"tags":["source:twistlock"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect vulnerabilities in container images.\n\n### Strategy\nThis rule lets you monitor Twistlock logs to detect `Critical` severity vulnerabilities in a container image. \n\n### Triage & Response\n1. Determine the impact of this vulnerability.\n2. Update the container image in the registry with a patched version of the software.\n3. Deploy the new image to all containers running the vulnerable image.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870278701,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@vulnerability.cve","@vulnerability.package.name","@vulnerability.image_name"],"query":"source:twistlock @vulnerability.log_type:vulnerability @vulnerability.severity:critical","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"d7s-rex-gjv","isDefault":true,"name":"Container image vulnerability detected"},{"creationAuthorId":0,"tags":["source:twistlock"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a container is not running within compliance standards.\n\n### Strategy\nThis rule lets you monitor Twistlock logs to detect when `Critical` severity compliance issues are discovered in a running container. \n\n### Triage & Response\n1. Determine the impact of the compliance finding.\n2. Remediate the compliance finding.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870281390,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@vulnerability.compliance_id","@vulnerability.container_name"],"query":"source:twistlock @vulnerability.log_type:compliance @vulnerability.severity:critical","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"9vp-d1j-kwp","isDefault":true,"name":"Container violated compliance standards"},{"creationAuthorId":0,"tags":["source:signal_sciences","scope:signal_sciences"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an IP is flagged by Signal Sciences.\n\n### Strategy\nThis rule lets you monitor Signal Sciences events submitted through the Signal Sciences [integration][1] to detect when an IP is flagged. \n\n### Triage & Response\n1. Determine whether the attack is a false positive.\n2. Determine whether the attack was successful.\n3. If the attack exploited a vulnerability in the application, triage the vulnerability.\n\n[1]: https://app.datadoghq.com/account/settings#integrations/sigsci","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":3,"createdAt":1584993292228,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":[],"query":"source:signal_sciences @title:*flag","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"bmg-ftn-dzo","isDefault":true,"name":"Signal Sciences flagged an IP"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.service.account"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a new service account is created.\n\n### Strategy\nThis rule lets you monitor GCP admin activity audit logs to determine when a service account is created. \n\n### Triage & Response\n1. Contact the user who created the service account and ensure that the account is needed and that the role is scoped properly.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870281733,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.service.account @evt.name:google.iam.admin.v1.CreateServiceAccount","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"szx-4kh-eqs","isDefault":true,"name":"GCP service account created"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.service.account"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a new service account key is created.  An attacker could use this key as a backdoor to your account. \n\n### Strategy\nThis rule lets you monitor GCP admin activity audit logs to detect the creation of a service account key. \n\n### Triage & Response\n1. Contact the user who created the service account key to ensure they''re managing the key securely.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870277946,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.service.account @evt.name:google.iam.admin.v1.CreateServiceAccountKey","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"79j-4wh-xlq","isDefault":true,"name":"GCP service account key created"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.project"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect a change to the IAM policy. \n\n### Strategy\nThis rule lets you monitor GCP admin activity audit logs to determine when the `SetIamPolicy` method is invoked. \n\n### Triage & Response\n1. Review the log and inspect the policy deltas (`@data.protoPayload.serviceData.policyDelta.bindingDeltas`) and ensure none of the actions are `REMOVE`.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870280073,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.project @evt.name:SetIamPolicy","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"fgm-8w4-cgx","isDefault":true,"name":"GCP IAM policy modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.project"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a change to a GCP logging sink has been made. This could stop audit logs from being sent to Datadog.\n\n### Strategy\nMonitor GCP admin activity audit logs to determine when any of the following methods are invoked:\n\n* `google.logging.v2.ConfigServiceV2.UpdateSink`\n* `google.logging.v2.ConfigServiceV2.DeleteSink`\n\n### Triage & Response\n1. Review the sink and ensure the sink is properly configured.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871191688,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id","@data.protoPayload.resourceName"],"query":"source:gcp.project @evt.name:(google.logging.v2.ConfigServiceV2.UpdateSink OR google.logging.v2.ConfigServiceV2.DeleteSink)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"hil-rl3-yxs","isDefault":true,"name":"GCP logging sink modified"},{"creationAuthorId":0,"tags":["scope:gcp.gce.route","source:gcp","security:compliance"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a VPC network is created. \n\n### Strategy\nThis rule lets you monitor GCP GCE activity audit logs to determine when the following method is invoked to create a new VPC network:\n\n* `beta.compute.networks.insert`\n\n### Triage & Response\n1. Review the VPC network.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871193403,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","@data.protoPayload.resourceName","@usr.id"],"query":"source:gcp.gce.route @evt.name:beta.compute.networks.insert","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"a9z-oic-grb","isDefault":true,"name":"GCP GCE VPC network modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.gcs.bucket"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when permissions have changed on a GCS Bucket.\n\n### Strategy\nMonitor GCS bucket admin activity audit logs to determine the following method is invoked:\n\n* `storage.setIamPermissions`\n\n### Triage & Response\n1. Review the bucket permissions and ensure they are not overly permissive.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871193842,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","bucket_name","@usr.id"],"query":"source:gcp.gcs.bucket @evt.name:storage.setIamPermissions","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"fdk-tly-4qr","isDefault":true,"name":"GCP Bucket permissions modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.gce.firewall.rule"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a firewall rule is created, modified or deleted. \n\n### Strategy\nMonitor GCP GCE activity audit logs to determine when any of the following methods are invoked:\n\n* `v1.compute.firewalls.delete`\n* `v1.compute.firewalls.insert`\n* `v1.compute.firewalls.patch` \n\n### Triage & Response\n1. Review the log and role and ensure the permissions are scoped properly.\n2. Review the users associated with the role and ensure they should have the permissions attached to the role.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870279610,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","@data.protoPayload.resourceOriginalState.name","@usr.id"],"query":"source:gcp.gce.firewall.rule @evt.name:(v1.compute.firewalls.delete OR v1.compute.firewalls.insert OR v1.compute.firewalls.patch)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"n1w-sql-apl","isDefault":true,"name":"GCP GCE Firewall rule modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.iam.role"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a custom role is created or modified. \n\n### Strategy\nMonitor GCP IAM activity audit logs to determine when any of the following methods are invoked:\n\n* `google.iam.admin.v1.CreateRole`\n* `google.iam.admin.v1.UpdateRole` \n\n### Triage & Response\n1. Review the log and role and ensure the permissions are scoped properly.\n2. Review the users associated with the role and ensure they should have the permissions attached to the role.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870282410,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.iam.role @evt.name:(google.iam.admin.v1.CreateRole OR google.iam.admin.v1.UpdateRole)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"rhy-fzm-gwl","isDefault":true,"name":"GCP IAM custom role created or modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.cloudsql.database"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a Cloud SQL DB has been modified.\n\n### Strategy\nThis rule lets you monitor GCP Cloud SQL admin activity audit logs to determine when one of the following methods are invoked:\n\n* `cloudsql.instances.create`\n* `cloudsql.instances.create`\n* `cloudsql.users.update`\n\n### Triage & Response\n1. Review the Cloud SQL DB and ensure it is configured properly with the correct permissions.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871198921,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","database_id","@usr.id"],"query":"source:gcp.cloudsql.database @evt.name:(cloudsql.instances.create OR cloudsql.instances.create OR cloudsql.users.create OR cloudsql.users.update)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ikf-ye8-cnu","isDefault":true,"name":"GCP Cloud SQL database modified"},{"creationAuthorId":0,"tags":["scope:gcp.gce.route","source:gcp","security:compliance"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a firewall rule is created or modified. \n\n### Strategy\nThis rule lets you monitor GCP GCE activity audit logs to determine if a firewall is being adjusted by showing you when any of the following methods are invoked:\n\n* `beta.compute.routes.insert`\n* `beta.compute.routes.patch`\n\n### Triage & Response\n1. Veirify that the GCP route is configured properly and that the user intended to modify the firewall.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870282924,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","@data.protoPayload.resourceName","@usr.id"],"query":"source:gcp.gce.route @evt.name(beta.compute.routes.insert OR beta.compute.routes.patch)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"lht-ml8-u6r","isDefault":true,"name":"GCP GCE network route created or modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.gcs.bucket"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an administrative change to a GCS Bucket has been made. This could change the retention policy or bucket lock. For more information, see the [GCS Bucket Lock docs][1].\n\n### Strategy\nThis rule lets you monitor GCS bucket admin activity audit logs to determine if a bucket has been updated with the following method:\n\n* `storage.buckets.update`\n\n### Triage & Response\n1. Review the bucket to ensure that it is properly configured.\n\n[1]: https://cloud.google.com/storage/docs/bucket-lock","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871279860,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","bucket_name","@usr.id"],"query":"source:gcp.gcs.bucket @evt.name:storage.buckets.update","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"iz3-sc4-ryy","isDefault":true,"name":"GCP Bucket modified"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","technique:T1046-network-service-scanning","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is conducting a port scan.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Recon:EC2/Portscan][2]\n\n\n### Triage & Response\n1. Determine why traffic from the EC2 instance appears to be conducting a port scan.\n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n \n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon5\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525376478,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Recon\\:EC2\\/Portscan)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"y1y-h5t-gnp","isDefault":true,"name":"AWS EC2 instance conducting a port scan"},{"creationAuthorId":0,"tags":["scope:iam","security:compliance","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user disables [S3 Block Public Access][1]\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][2] finding:\n\n* [Policy:IAMUser/S3BlockPublicAccessDisabled][3]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Contact the user and determine why the user disabled the S3 Block Access feature.   \n3. Re-enable S3 Block Public Access.\n\n[1]: https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html\n[2]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_policy.html#policy2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525377921,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Policy\\:IAMUser\\/S3BlockPublicAccessDisabled)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"loc-nk4-pkc","isDefault":true,"name":"AWS IAM user disabled S3 Block Public Access"},{"creationAuthorId":0,"tags":["scope:ec2","security:threat-intel","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS API call is made from a non EC2 IP for a credential which is scoped to an EC2 Instance.  \n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:IAMUser/InstanceCredentialExfiltration][2]\n\n\n### Triage & Response\n1. Determine the EC2 instance this credential is scoped to. This can be found in the samples. \n2. Determine if the EC2 instance credentials are compromised.  \n3. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized11\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525378639,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:IAMUser\\/InstanceCredentialExfiltration)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"iaa-n0t-0jz","isDefault":true,"name":"AWS EC2 instance credential exfiltrated"},{"creationAuthorId":0,"tags":["scope:iam","security:threat-intel","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user makes API requests from a malicious IP.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Recon:IAMUser/TorIPCaller][2]\n* [Recon:IAMUser/MaliciousIPCaller.Custom][3]\n* [Recon:IAMUser/MaliciousIPCaller][4]\n* [UnauthorizedAccess:IAMUser/MaliciousIPCaller][5]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][6] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon1\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon2\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon3\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized5\n[6]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525380153,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Recon\\:IAMUser\\/TorIPCaller OR Recon\\:IAMUser\\/MaliciousIPCaller.Custom OR Recon\\:IAMUser\\/MaliciousIPCaller OR UnauthorizedAccess\\:IAMUser\\/MaliciousIPCaller)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"8w7-aaz-ojp","isDefault":true,"name":"AWS IAM user requests from malicious IP"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","technique:T1046-network-service-scanning","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is being probed by a scanner.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Recon:EC2/PortProbeUnprotectedPort][2]\n* [Recon:EC2/PortProbeEMRUnprotectedPort][3]\n\n\n### Triage & Response\n1. This is typically an informative signal. However, if this instance should not be publicly available, you should review the security group for this instance. \n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon6\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#PortProbeEMRUnprotectedPort\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525381084,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Recon\\:EC2\\/PortProbeUnprotectedPort OR Recon\\:EC2\\/PortProbeEMRUnprotectedPort)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"mrq-h3x-jus","isDefault":true,"name":"AWS EC2 instance probed by scanner"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0011-command-and-control","technique:T1188-multi-hop-proxy","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance makes an outbound network connection from TOR.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/TorClient][2]\n\n\n### Triage & Response\n1. Determine if the EC2 instance should be making requests to TOR. \n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance. \n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized13\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525381864,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/TorClient)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ihd-q9p-mwx","isDefault":true,"name":"AWS EC2 instance outbound connections to TOR"},{"creationAuthorId":0,"tags":["scope:iam","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user is launching compute resources and has no prior history of invoking this API.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [ResourceConsumption:IAMUser/ComputeResources][2]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][3] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_resource.html#resourceconsumption\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525382816,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(ResourceConsumption\\:IAMUser\\/ComputeResources)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"fwu-iey-ovx","isDefault":true,"name":"AWS IAM user anomalous resource consumption"},{"creationAuthorId":0,"tags":["scope:ec2","security:threat-intel","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance receives an inbound network connection from TOR.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/TorIPCaller][2]\n\n\n### Triage & Response\n1. This is typically an informative signal. However, if this instance should not be publicly available, you should review the security group for this instance. \n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized7\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525383148,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/TorIPCaller)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"1ew-u8i-att","isDefault":true,"name":"AWS EC2 instance inbound connections from TOR"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is participating in a Denial of Service (DoS) attack.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Backdoor:EC2/DenialOfService.Tcp][2]\n* [Backdoor:EC2/DenialOfService.Udp][3]\n* [Backdoor:EC2/DenialOfService.Dns][4]\n* [Backdoor:EC2/DenialOfService.UdpOnTcpPorts][5]\n* [Backdoor:EC2/DenialOfService.UnusualProtocol][6]\n\n\n### Triage & Response\n1. Determine if the EC2 instance is compromised and participating in a DoS attack.\n2. If the instance is compromised:\n   * Review the AWS [documentation][7] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor8\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor9\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor10\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor11\n[6]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor12\n[7]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525383757,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Backdoor\\:EC2\\/DenialOfService.Tcp OR Backdoor\\:EC2\\/DenialOfService.Udp OR Backdoor\\:EC2\\/DenialOfService.Dns OR Backdoor\\:EC2\\/DenialOfService.UdpOnTcpPorts OR Backdoor\\:EC2\\/DenialOfService.UnusualProtocol)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"3l6-vrm-iyn","isDefault":true,"name":"AWS EC2 instance participating in a DoS attack"},{"creationAuthorId":0,"tags":["tactic:TA0004-privilege-escalation","scope:iam","source:guardduty","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user is attempting to escalate permissions.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [PrivilegeEscalation:IAMUser/AdministrativePermissions][2]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][3] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_privilegeescalation.html#privilegeescalation1\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525384559,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(PrivilegeEscalation\\:IAMUser\\/AdministrativePermissions)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"dsb-ciq-vrt","isDefault":true,"name":"AWS IAM user escalating privileges"},{"creationAuthorId":0,"tags":["scope:iam","technique:T1089-disabling-security-tools","source:guardduty","tactic:TA0005-defense-evasion","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user is changing sensitive configurations and has no prior history of invoking these APIs.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Stealth:IAMUser/S3ServerAccessLoggingDisabled][2]\n* [Stealth:IAMUser/PasswordPolicyChange][3]\n* [Stealth:IAMUser/CloudTrailLoggingDisabled][4]\n* [Stealth:IAMUser/LoggingConfigurationModified][5]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][6] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_stealth.html#stealth4\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_stealth.html#stealth1\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_stealth.html#stealth2\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_stealth.html#stealth3\n[6]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525385196,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Stealth\\:IAMUser\\/S3ServerAccessLoggingDisabled OR Stealth\\:IAMUser\\/PasswordPolicyChange OR Stealth\\:IAMUser\\/CloudTrailLoggingDisabled OR Stealth\\:IAMUser\\/LoggingConfigurationModified)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"48o-8me-0mo","isDefault":true,"name":"AWS IAM user changing sensitive configurations"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is compromised and sending spam emails.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Backdoor:EC2/Spambot][2]\n\n\n### Triage & Response\n1. Determine if the EC2 should be sending out email over port 25. \n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor6\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525385866,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Backdoor\\:EC2\\/Spambot)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ecn-gew-dg2","isDefault":true,"name":"AWS EC2 instance Sending spam emails"},{"creationAuthorId":0,"tags":["scope:iam","source:guardduty","security:attack","tactic:TA0003-persistence"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user is attempting to gain persistence within an AWS account.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Persistence:IAMUser/NetworkPermissions][2]\n* [Persistence:IAMUser/ResourcePermissions][3]\n* [Persistence:IAMUser/UserPermissions][4]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][5] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_persistence.html#persistence1\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_persistence.html#persistence2\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_persistence.html#persistence3\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525386519,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Persistence\\:IAMUser\\/NetworkPermissions OR Persistence\\:IAMUser\\/ResourcePermissions OR Persistence\\:IAMUser\\/UserPermissions)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"4ho-oxn-reh","isDefault":true,"name":"AWS IAM user attempting to gain persistence"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0006-credential-access","security:attack","technique:T1522-cloud-instance-metadata-api"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance makes a DNS request and resolves to the AWS metadata IP address (169.254.169.254).\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/MetadataDNSRebind][2]\n\n\n### Triage & Response\n1. Determine which process made the DNS request. The DNS request can be found in the samples.\n2. Ensure the process is not a victim of an SSRF attack to steal the AWS EC2 Instance profile''s STS credentials.  \n2. If the STS credentials are compromised:\n   * Review the AWS [documentation][3] on revoking the session.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#ec2-metadatadnsrebind\n[3]: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_revoke-sessions.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":2,"createdAt":1587525387807,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/MetadataDNSRebind)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"aad-vqz-7tk","isDefault":true,"name":"AWS EC2 Instance Victim to Metadata DNS Rebind Attack"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is being used as a TOR relay.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/TorRelay][2]\n\n\n### Triage & Response\n1. Determine if the EC2 instance should be uses as a TOR relay. \n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance. \n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized14\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525388119,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/TorRelay)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"tpv-3qf-v90","isDefault":true,"name":"AWS EC2 instance connecting to TOR as a relay"},{"creationAuthorId":0,"tags":["scope:iam","source:guardduty","security:anomaly"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user login is suspicious.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [UnauthorizedAccess:IAMUser/ConsoleLoginSuccess.B][2]\n* [UnauthorizedAccess:IAMUser/ConsoleLogin][3]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][4] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized4\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized12\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525388403,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:IAMUser\\/ConsoleLoginSuccess.B OR UnauthorizedAccess\\:IAMUser\\/ConsoleLogin)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"kme-i0z-ylv","isDefault":true,"name":"AWS IAM user suspicious login"},{"creationAuthorId":0,"tags":["scope:ec2","security:threat-intel","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance makes an outbound network connection to a malcious IP address.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/MaliciousIPCaller.Custom][2]\n\n\n### Triage & Response\n1. Determine which IP address triggered the signal. This can be found in the sample.\n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized5\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525389461,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/MaliciousIPCaller.Custom)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"22j-qk6-qv3","isDefault":true,"name":"AWS EC2 instance communicating with malicious IP"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","security:anomaly"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is communicating over an unusual port.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Behavior:EC2/NetworkPortUnusual][2]\n\n\n### Triage & Response\n1. Determine which port triggered the signal. This can be found in the samples.\n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_behavior.html#behavior3\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525391873,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Behavior\\:EC2\\/NetworkPortUnusual)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"qfd-ned-cjn","isDefault":true,"name":"AWS EC2 instance communicating over unusual port"},{"creationAuthorId":0,"tags":["scope:iam","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user makes API requests with hacking tools.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [PenTest:IAMUser/KaliLinux][2]\n* [PenTest:IAMUser/ParrotLinux][3]\n* [PenTest:IAMUser/PentooLinux][4]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][5] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_pentest.html#pentest1\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_pentest.html#pentest2\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_pentest.html#pentest3\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525392995,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(PenTest\\:IAMUser\\/KaliLinux OR PenTest\\:IAMUser\\/ParrotLinux OR PenTest\\:IAMUser\\/PentooLinux)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ocf-ys6-78v","isDefault":true,"name":"AWS IAM user making API requests with hacking tools"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is communicating with a malicious server.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Backdoor:EC2/C&CActivity.B!DNS][2]\n* [Trojan:EC2/BlackholeTraffic][3]\n* [Trojan:EC2/DropPoint][4]\n* [Trojan:EC2/BlackholeTraffic!DNS][5]\n* [Trojan:EC2/DriveBySourceTraffic!DNS][6]\n* [Trojan:EC2/DropPoint!DNS][7]\n* [Trojan:EC2/DGADomainRequest.B][8]\n* [Trojan:EC2/DGADomainRequest.C!DNS][9]\n* [Trojan:EC2/DNSDataExfiltration][10]\n* [Trojan:EC2/PhishingDomainRequest!DNS][11]\n\n\n### Triage & Response\n1. Determine which domain name or IP address triggered the signal. This can be found in the samples.\n2. If the instance is compromised:\n   * Review the AWS [documentation][12] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor6\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan4\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan5\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan6\n[6]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan7\n[7]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan8\n[8]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan9\n[9]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan95\n[10]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan10\n[11]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan11\n[12]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525393367,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Trojan\\:EC2\\/BlackholeTraffic OR Trojan\\:EC2\\/DropPoint OR Trojan\\:EC2\\/BlackholeTraffic\\!DNS OR Trojan\\:EC2\\/DriveBySourceTraffic\\!DNS OR Trojan\\:EC2\\/DropPoint\\!DNS OR Trojan\\:EC2\\/DGADomainRequest.B OR Trojan\\:EC2\\/DGADomainRequest.C\\!DNS OR Backdoor\\:EC2\\/C&CActivity.B\\!DNS OR Trojan\\:EC2\\/PhishingDomainRequest\\!DNS)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"9du-jhn-b4f","isDefault":true,"name":"AWS EC2 instance communicated with a malicious server"},{"creationAuthorId":0,"tags":["scope:iam","security:compliance","source:guardduty","control:cis-1.1","framework:cis-aws","control:cis-3.3"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when the AWS root user credentials are used.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Policy:IAMUser/RootCredentialUsage][2]\n\n\n### Triage & Response\n1. Determine whether the root account activity was legitimate. \n * Review the sample for context. \n * Review CloudTrail logs for a full investigation. \n3. If the root user''s credentials are compromised:\n * Review the AWS [documentation][3] on remediating compromised AWS credentials.\n\n**[Root Account Best Practices][4]**\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_policy.html#policy1\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n[4]: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":5,"createdAt":1587525393683,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":[],"query":"source:guardduty @evt.name:(Policy\\:IAMUser\\/RootCredentialUsage)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"cjm-gyr-zxb","isDefault":true,"name":"AWS Root credential activity"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","security:anomaly"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance network traffic volume is unusual.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Behavior:EC2/TrafficVolumeUnusual][2]\n\n\n### Triage & Response\n1. Determine which port triggered the signal. This can be found in the samples.\n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_behavior.html#behavior4\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525393982,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Behavior\\:EC2\\/TrafficVolumeUnusual)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ipt-dpt-t69","isDefault":true,"name":"AWS EC2 instance network traffic volume unusual"},{"creationAuthorId":0,"tags":["scope:apache","technique:T1190-exploit-public-facing-application","source:apache","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This identifies attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":8,"createdAt":1587530038000,"filters":[{"action":"require","query":"source:foo"}],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:apache @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ipl-oaz-eqf","isDefault":true,"name":"Apache HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["technique:T1190-exploit-public-facing-application","source:elb","scope:elb","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This will identify attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous User Agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an INFO signal.  \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1587530043452,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:elb @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"csd-1pb-wxh","isDefault":true,"name":"AWS ELB HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["technique:T1190-exploit-public-facing-application","source:nginx","scope:nginx","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This will identify attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1587530047261,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:nginx @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"5jr-xi3-uto","isDefault":true,"name":"NGINX HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["technique:T1190-exploit-public-facing-application","scope:nginx-ingress-controller","source:nginx-ingress-controller","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This will identify attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1587530154864,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:nginx-ingress-controller @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"oxj-rwr-gxq","isDefault":true,"name":"NGINX ingress controller HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["technique:T1190-exploit-public-facing-application","source:fastly","scope:fastly","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This identifies attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2]. \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1587530162282,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:fastly @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"dqs-oru-107","isDefault":true,"name":"Fastly HTTP Requests from Security Scanner"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when there is unauthorized activity by a service account in GCP\n\n### Strategy\nMonitor GCP logs and detect when a service account makes an API request and the request returns the status code equal to `7` within the log attribute `@data.protoPayload.status.code`. The status code `7` indicates the service account did not have permission to make the API call.\n\n### Triage & Response\n1. Determine the service account that made the unauthorized calls.\n2. Investigate if there is a misconfiguration in IAM permissions or if an attacker compromised the service account","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":5,"createdAt":1587592191518,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.* @data.protoPayload.status.code:7 @usr.id:(*gserviceaccount.com OR *google.com)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"greater than 1000 failed attempts","condition":"a > 1000"},{"status":"medium","notifications":[],"name":"greater than 100 failed attempts","condition":"a > 100"},{"status":"low","notifications":[],"name":"greater than 10 failed attempts","condition":"a > 10"}],"type":"log_detection","id":"89d-2v1-fvm","isDefault":true,"name":"GCP unauthorized service account activity"},{"creationAuthorId":0,"tags":["source:iis","scope:iis","technique:T1190-exploit-public-facing-application","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This will identify attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1587530716843,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:iis @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ftm-iao-udy","isDefault":true,"name":"IIS HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when unauthorized activity by a user is detected in GCP\n\n### Strategy\nMonitor GCP logs and detect when a user account makes an API request and the request returns the status code equal to `7` within the log attribute `@data.protoPayload.status.code`. The status code `7` indicates the user account did not have permission to make the API call.\n\n### Triage & Response\n1. Determine the user who made the unauthorized calls.\n2. Determine if there is a misconfiguration in IAM permissions or whether an attacker has compromised the user account.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":5,"createdAt":1587592193834,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.* @data.protoPayload.status.code:7 -@usr.id:(*gserviceaccount.com OR *google.com)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"greater than 1000 failed attempts","condition":"a > 1000"},{"status":"medium","notifications":[],"name":"greater than 100 failed attempts","condition":"a > 100"},{"status":"low","notifications":[],"name":"greater than 10 failed attempts","condition":"a > 10"}],"type":"log_detection","id":"stt-ows-yte","isDefault":true,"name":"GCP unauthorized user activity"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.pubsub.topic"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a GCP Pub/Sub Subscribtion has been deleted. This could stop audit logs from being sent to Datadog.\n\n### Strategy\nMonitor GCP admin activity audit logs to determine when the following method is invoked:\n\n* `google.pubsub.v1.Publisher.DeleteTopic`\n\n### Triage & Response\n1. Review the subscribtion and ensure it is properly configured.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1587592198839,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id","@data.protoPayload.resourceName"],"query":"source:gcp.pubsub.topic @evt.name:google.pubsub.v1.Publisher.DeleteTopic","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"dp6-zom-jyv","isDefault":true,"name":"GCP Pub/Sub topic deleted"},{"creationAuthorId":0,"tags":["technique:T1083-file-and-directory-discovery","source:gcp","scope:gcp.gcs.bucket","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a service account lists out GCS Buckets.\n\n### Strategy\nThis rule lets you monitor GCS bucket admin activity audit logs to determine when a service account invokes the following method:\n\n* `storage.buckets.list`\n\n### Triage & Response\n1. Determine whether this service account should be making list bucket calls.\n * If the account was compromised, secure the account and investigate how it was compromised and if the account made other unauthorized calls.\n * If the owner of the service account intended to make the `ListBuckets` API call, consider whether this API call is needed. It could cause a security issue for the application to know the name of the bucket it needs to access. If it''s not needed, modify this rule''s filter to stop generating signals for this specific service account.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1587592199858,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","bucket_name","@usr.id"],"query":"source:gcp.gcs.bucket @evt.name:storage.buckets.list @usr.id:*gserviceaccount.com","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"cnc-wi1-llf","isDefault":true,"name":"GCP Bucket enumerated"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.pubsub.subscription"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a change to a GCP Pub/Sub Subscription has been made. This could stop audit logs from being sent to Datadog.\n\n### Strategy\nMonitor GCP admin activity audit logs to determine when any of the following methods are invoked:\n\n* `google.pubsub.v1.Subscriber.UpdateSubscription`\n* `google.pubsub.v1.Subscriber.DeleteSubscription`\n\n### Triage & Response\n1. Review the subscribtion and ensure it is properly configured.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1587592205917,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id","@data.protoPayload.resourceName"],"query":"source:gcp.pubsub.subscription @evt.name:(google.pubsub.v1.Subscriber.UpdateSubscription OR google.pubsub.v1.Subscriber.DeleteSubscription)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"tsj-mac-mdc","isDefault":true,"name":"GCP Pub/Sub Subscriber modified"},{"creationAuthorId":0,"tags":["source:okta"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a new Okta API token is created.\n\n### Strategy\nThis rule lets you monitor the following Okta event to detect when a new Okta API token is created:\n\n* `system.api_token.create`\n\n### Triage & Response\n1. Contact the user who created the API token and ensure that the API token is needed.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1589315541698,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.email"],"query":"source:okta @evt.name:system.api_token.create","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"lpf-tho-8sx","isDefault":true,"name":"Okta API Token Created or Enabled"},{"creationAuthorId":0,"tags":["source:okta"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user attempts to bypass multi-factor authentication (MFA).\n\n### Strategy\nThis rule lets you monitor the following Okta events to detect when a user attempts to bypass MFA:\n\n* `user.mfa.attempt_bypass`\n\n### Triage & Response\n1. Contact the user who attempted to bypass MFA and ensure the request was legitimate.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1589315643307,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.email"],"query":"source:okta @evt.name:user.mfa.attempt_bypass","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"wbd-slu-e6s","isDefault":true,"name":"Okta MFA Bypass Attempted"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user attaches to a pod.\n\n### Strategy\nThis rule monitors when a user attaches (`@objectRef.subresource:attach`) to a pod (`@objectRef.resource:pods`).\n\nA user should not need to attach to a pod. Attaching to a pod allows a user to attach to any process in a running container which may give an attacker access to sensitive data.\n\n### Triage & Response\n1. Determine if the user should be attaching to a running container.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":8,"createdAt":1589375996858,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:pods @objectRef.subresource:attach @http.method:create @http.status_code:[101 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:pods @objectRef.subresource:attach @verb:create @responseStatus.code:[101 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"j6t-mva-rul","isDefault":true,"name":"User Attached to a Pod"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an unauthenticated request user is permitted in Kubernetes.\n\n### Strategy\nThis rule monitors when any action is permitted (`@http.status_code:[100 TO 299]`) for an unauthenticated user (`@user.username:\\\"system:anonymous\\\"`).\nThe `/healthz` endpoint is commonly accessed unauthenticated and it is excluded in the query filter.\n\n### Triage & Response\n1. Inspect all of the HTTP paths accessed and determine if any of the path should be permitted by unauthenticated users.\n2. Determine what IP addresses accessed Kubernetes endpoints which may contain sensitive data.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1589376002149,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":[],"query":"@apiVersion:audit.k8s.io* @usr.name:\"system:anonymous\" @http.status_code:[100 TO 299] -@http.url_details.path:\"/healthz\"","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":[],"query":"@apiVersion:audit.k8s.io* @user.username:\"system:anonymous\" @responseStatus.code:[100 TO 299] -@requestURI:\"/healthz\"","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"f1o-py5-a50","isDefault":true,"name":"Anonymous Request Authorized"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a pod is attached to the host network.\n\n### Strategy\nThis rule monitors when a create (`@http.method:create`) action occurs for a pod (`@objectRef.resource:pods`) with the host network `@requestObject.spec.hostNetwork:true` attached.\n\nAttaching the `hostNetwork` permits a pod to access the node''s network adapter allowing a pod to listen to all network traffic for all pods on the node and communicate with other pods on the network namespace.\n\n### Triage & Response\n1. Determine if the pod needs `hostNetwork` access.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1589376007079,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@requestObject.metadata.generateName"],"query":"source:kubernetes.audit @objectRef.resource:pods @http.method:create @requestObject.spec.hostNetwork:true @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@requestObject.metadata.generateName"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:pods @verb:create @requestObject.spec.hostNetwork:true @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"d3g-xpz-cwc","isDefault":true,"name":"Kubernetes Pod Created with hostNetwork"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is creating a pod in one of the Kubernetes default namespaces.\n\n### Strategy\nThis rule monitors when a create (`@http.method:create`) action occurs for a pod (`@objectRef.resource:pods`) within either of the `kube-system` or `kube-public` namespaces.\n\nThe only users creating pods in the `kube-system` namespace should be cluster administrators. Furthermore, it is best practice to not run any cluster critical infrastructure in the `kube-system` namespace.\n\nThe `kube-public` namespace is intended for Kubernetes objects which should be readable by unauthenticated users. Thus, a pod should likely not be created in the `kube-public` namespace.\n\n### Triage & Response\n1. Determine if the user should be creating this new pod in one of the default namespaces.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1589376012191,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:pods @http.method:create @objectRef.namespace:(\"kube-system\" OR \"kube-public\") @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:pods @verb:create @objectRef.namespace:(\"kube-system\" OR \"kube-public\") @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"tvf-ju6-h3i","isDefault":true,"name":"Kubernetes Pod Created in Kube Namespace"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is creating a service account in one of the Kubernetes default namespaces.\n\n### Strategy\nThis rule monitors when a create (`@http.method:create`) action occurs for a service account (`@objectRef.resource:serviceaccounts`) within either of the `kube-system` or `kube-public` namespaces.\n\nThe only users creating service accounts in the `kube-system` namespace should be cluster administrators. Furthermore, it is best practice to not run any cluster critical infrastructure in the `kube-system` namespace.\n\nThe `kube-public` namespace is intended for kubernetes objects which should be readable by unauthenticated users. Thus, a service account should likely not be created in the `kube-public` namespace.\n\n### Triage & Response\n1. Determine if the user should be creating this new service account in one of the default namespaces.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1589376017036,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:serviceaccounts @http.method:create @objectRef.namespace:(\"kube-system\" OR \"kube-public\") @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:serviceaccounts @verb:create @objectRef.namespace:(\"kube-system\" OR \"kube-public\") @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"loy-9ka-bc2","isDefault":true,"name":"Kubernetes Service Account Created in Kube Namespace"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is creating a Kubernetes namespace.\n\n### Strategy\nThis rule monitors when a `create` action occurs for the Kubernetes namespace (`@objectRef.resource:namespaces`) to detect when a user is creating a new Kubernetes namespace.\n\n### Triage & Response\n1. Determine if the user should be creating this new namespace.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1589376020564,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@objectRef.name","@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:namespaces @http.method:create -@objectRef.name:(\"default\" OR \"kube-system\" OR \"kube-public\") @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@objectRef.name","@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:namespaces @verb:create -@objectRef.name:(\"default\" OR \"kube-system\" OR \"kube-public\") @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"zgq-pd9-wgw","isDefault":true,"name":"New Kubernetes Namespace Created"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a service''s port is attached to the node''s IP.\n\n### Strategy\nThis rule monitors when a create (`@http.method:create`) action occurs for a service (`@objectRef.resource:services`) attaching the service''s port to the node''s IP `@requestObject.spec.type:NodePort`.\n\nExposing the service''s port to the the node''s IP allows other hosts on the network namespace to access this service.\n\n### Triage & Response\n1. Determine if the service needs to expose it''s network connection with `NodePort` access.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1589376023160,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@objectRef.name"],"query":"source:kubernetes.audit @objectRef.resource:services @http.method:create @requestObject.spec.type:NodePort @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@objectRef.name"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:services @verb:create @requestObject.spec.type:NodePort @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"cvp-3wz-v3s","isDefault":true,"name":"Kubernetes Service Created with NodePort"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user execs into a pod.\n\n### Strategy\nThis rule monitors when a user execs (`@objectRef.subresource:exec`) into to a pod (`@objectRef.resource:pods`).\n\nA user should not need to exec into a pod. Execing into a pod allows a user to execute any process in container which is not already running.\nIt is most common to execute the bash process to gain an interactive shell.\nIf this is an attacker, they can access any data which the pod has permissions to, including secrets.\n\n### Triage & Response\n1. Determine if the user should be execing into a running container.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":8,"createdAt":1589376094658,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:pods @objectRef.subresource:exec @http.method:create @http.status_code:[101 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:pods @objectRef.subresource:exec @verb:create @responseStatus.code:[101 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"hyd-cu4-79x","isDefault":true,"name":"User Exec into a Pod"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","source:auth0","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## **Goal:**\nDetect a brute force attack on a user. \n\n## **Strategy:**\n**To determine a successful attempt:** Detect when the same user fails to login five times and then successfully logs in. This generates a `MEDIUM` severity signal.\n\n**To determine an unsuccessful attempt:** Detect when the same user fails to login five times. This generates an `INFO` severity signal.\n\n## **Triage & Response:**\n1. Inspect the logs to see if this was a valid login attempt.\n2. See if 2FA was authenticated\n3. If the user was compromised, rotate user credentials.\n\n","options":{"detectionMethod":"threshold","evaluationWindow":600,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1597422956269,"filters":[],"queries":[{"distinctFields":[],"name":"failed_login","aggregation":"count","groupByFields":["@usr.id"],"query":"source:auth0 @evt.name:(failed_login_incorrect_password OR failed_login_invalid_email_or_username)","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@usr.id"],"query":"source:auth0 @evt.name:success_login","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Successful","condition":"failed_login>5 && successful_login>=1"},{"status":"info","notifications":[],"name":"Attempt","condition":"failed_login>10"}],"type":"log_detection","id":"dde-oia-yjr","isDefault":true,"name":"Brute force attack on an Auth0 user"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","source:auth0","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## **Goal:**\nDetect log ins from the same user from multiple countries within a short time frame.\n\n## **Strategy:**\nUtilize geo-ip data to detect when a user logs in from two IP addresses which are in different countries within a short time frame.\n\n## **Triage & Response:**\n1. See if 2FA was used for authentication.\n2. Contact the user and see if this behavior is expected.\n3. If the user was compromised, rotate the user credentials.\n","options":{"detectionMethod":"threshold","evaluationWindow":3600,"maxSignalDuration":86400,"keepAlive":3600},"version":5,"createdAt":1597422956982,"filters":[],"queries":[{"distinctFields":["@network.client.geoip.country.name"],"name":"successful_logins_by_country","aggregation":"cardinality","groupByFields":["@usr.id"],"query":"source:auth0 @evt.name:success_login","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"successful_logins_by_country > 1"}],"type":"log_detection","id":"j6f-xqz-wig","isDefault":true,"name":"Auth0 user authenticating from multiple countries"},{"creationAuthorId":0,"tags":["technique:T1078-valid-accounts","source:auth0","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"## **Goal:**\nDetect when a user logs in with a breached password.\n\n## **Strategy:**\nAuth0 logs an event when a user logs in with a breached password. When this event is detected, Datadog generates a `MEDIUM` severity Security Signal.\n\nYou can see more information on how Auth0 detects breached passwords on their [documentation][1].\n\n## **Triage & Response:**\n1. Inspect the policy and user location to see if this was a login from approved location\n2. See if 2FA was authenticated\n3. If the user was compromised, rotate user credentials.\n\n[1][https://auth0.com/docs/anomaly-detection/brute-force-protection]\n","options":{"detectionMethod":"threshold","evaluationWindow":0,"maxSignalDuration":0,"keepAlive":0},"version":5,"createdAt":1597422957145,"filters":[],"queries":[{"distinctFields":[],"name":"breached_password","aggregation":"count","groupByFields":["@usr.id"],"query":"source:auth0 @evt.name:breached_password","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"breached_password > 0"}],"type":"log_detection","id":"yhw-avf-dz0","isDefault":true,"name":"Auth0 user logged in with a breached password"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","source:auth0","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## **Goal:**\nDetect Account Take Over (ATO) through credential stuffing attack.\n\n## **Strategy:**\n**To determine a successful attempt:** Detect a high number of failed logins from at least ten unique users and at least one successful login for a user. This generates a `HIGH` severity signal.\n\n**To determine an unsuccessful attempt:** Detect a high number of failed logins from at least ten unique users. This generates an `INFO` severity signal.\n\n## **Triage & Response:**\n1. Inspect the logs to see if this was a valid login attempt.\n2. See if 2FA was authenticated\n3. If the user was compromised, rotate user credentials.\n\n","options":{"detectionMethod":"threshold","evaluationWindow":600,"maxSignalDuration":86400,"keepAlive":3600},"version":5,"createdAt":1597422958108,"filters":[],"queries":[{"distinctFields":["@usr.id"],"name":"unique_users_failing_to_login","aggregation":"cardinality","groupByFields":["@network.client.ip"],"query":"source:auth0 @evt.name:(failed_login_incorrect_password OR failed_login_invalid_email_or_username)","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:auth0 @evt.name:success_login","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Successful","condition":"unique_users_failing_to_login>10 && successful_login>=1"},{"status":"info","notifications":[],"name":"Attempt","condition":"unique_users_failing_to_login>10"}],"type":"log_detection","id":"ryo-snu-uva","isDefault":true,"name":"Credential stuffing attack on Auth0"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when any user logs in to Azure AD without multi-factor authentication.\n\n### Strategy\nThis rule monitors Azure Activity logs for Active Directory logs and detects when any `@evt.category` has a value of  `SignInLogs`, and `@properties.authenticationRequirement` has a value of `singleFactorAuthentication`.\n\n### Triage & Response\n1. Reach out to the user to determine if the login was legitimate.\n2. If the login was legitimate, request that the user enables 2FA.\n3. If the login wasn''t legitimate, rotate the credentials.\n4. Review all user accounts to ensure MFA is enabled.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1598468815267,"filters":[],"queries":[{"distinctFields":[],"name":"user_login_without_mfa","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.activedirectory @evt.category:SignInLogs @properties.authenticationRequirement:singleFactorAuthentication","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"user_login_without_mfa > 0"}],"type":"log_detection","id":"c8i-66d-m7u","isDefault":true,"name":"Azure AD Login Without MFA"},{"creationAuthorId":0,"tags":["source:azure","technique:T1190-exploit-public-facing-application","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an Azure Frontdoor Web Application Firewall (WAF) logs a request from an IP address.\n\n### Strategy\nThis rule monitors Azure Activity logs for Frontdoor Web Application Firewall logs and detects when the `@evt.name` has a value of  `Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write` and `@properties.action` has a value of `Log`.\n\n### Triage & Response\n1. Inspect whether this request should have been blocked or not.\n2. Navigate to the IP dashboard and inspect other requests this IP address has made.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":3,"createdAt":1598468815399,"filters":[],"queries":[{"distinctFields":[],"name":"waf_logged_a_request","aggregation":"count","groupByFields":["@properties.clientIP"],"query":"source:azure.network @evt.name:\"Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write\" @properties.action:Log","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"waf_logged_a_request > 0"}],"type":"log_detection","id":"bkk-48l-vem","isDefault":true,"name":"Azure Frontdoor WAF Logged a Request"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an Azure network security group allows inbound traffic from all IP Addresses.\n\n### Strategy\nThis rule monitors Azure Activity logs for network changes and detects when the `@evt.name` has a value of  `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE`, `@properties.securityRules.properties.direction` has a value of `Inbound`, `@properties.securityRules.properties.access` has a value of `Allow`, and `@properties.securityRules.properties.sourceAddressPrefix` has a value of either `0.0.0.0/0` OR `*`.\n\n### Triage & Response\n1. Inspect which Virtual Machines are associated with this security group.\n2. Determine whether this security group and the VMs should permit inbound traffic from all IP addresses.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":3,"createdAt":1598468816111,"filters":[],"queries":[{"distinctFields":[],"name":"security_group_open_to_world","aggregation":"count","groupByFields":["@resourceId"],"query":"source:azure.network @evt.name:\"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE\" @properties.securityRules.properties.direction:Inbound @properties.securityRules.properties.access:Allow @properties.securityRules.properties.sourceAddressPrefix:(\"0.0.0.0/0\" OR \"*\")","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"security_group_open_to_world > 0"}],"type":"log_detection","id":"owu-2uz-8cb","isDefault":true,"name":"Azure Network Security Group Open to the World"},{"creationAuthorId":0,"tags":["source:azure","technique:T1190-exploit-public-facing-application","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an Azure Frontdoor Web Application Firewall (WAF) blocks a request from an IP address.\n\n### Strategy\nThis rule monitors Azure Activity logs for Frontdoor Web Application Firewall logs and detects when the `@evt.name` has a value of  `Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write` and `@properties.action` has a value of `Block`.\n\n### Triage & Response\n1. Inspect whether this request should have been blocked or not.\n2. Navigate to the IP dashboard and inspect other requests this IP address has made.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":3,"createdAt":1598468816869,"filters":[],"queries":[{"distinctFields":[],"name":"waf_blocked_a_request","aggregation":"count","groupByFields":["@properties.clientIP"],"query":"source:azure.network @evt.name:\"Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write\" @properties.action:Block","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"waf_blocked_a_request > 0"}],"type":"log_detection","id":"xyt-fqh-myv","isDefault":true,"name":"Azure Frontdoor WAF Blocked a Request"},{"creationAuthorId":0,"tags":["technique:T1552-unsecured-credentials","source:route53","tactic:TA0006-credential-access","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a requested domain resolves to the AWS Metadata IP (169.254.169.254).\n\n### Strategy\nInspect the Route 53 logs and determine if the response data for a DNS request matches the AWS Metadata IP (169.254.169.254). This could indicate an attacker is attempting to steal your credentials from the AWS metadata service.\n\n### Triage and Response\n1. Determine which instance is associated with the DNS request.\n2. Determine whether the domain name which was requested (`dns.question.name`) should be permitted. If not, conduct an investigation and determine what requested the domain and determine if the AWS metadata credentials were accessed by an attacker.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1603296598998,"filters":[],"queries":[{"distinctFields":[],"name":"domain_resolve_to_metadata_ip","aggregation":"count","groupByFields":["instance-id"],"query":"source:route53 @answers.Rdata:169.254.169.254","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"domain_resolve_to_metadata_ip > 0"}],"type":"log_detection","id":"mwi-zj7-db9","isDefault":true,"name":"EC2 instance resolved a suspicious AWS metadata DNS query"},{"creationAuthorId":0,"tags":["source:route53","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a requested domain has a suspicious TLD.\n\n### Strategy\nInspect the Route 53 logs and determine if the TLD of the DNS question (`@dns.question.name`) matches one of the top 5 TLDs on [Spamhaus''s Most Abused Top Level Domains list][1].\n\n### Triage and Response\n1. Determine which instance is associated with the DNS request.\n2. Determine whether the domain name which was requested (`dns.question.name`) should be permitted. If not, conduct an investigation and determine what requested the domain and determine if the AWS metadata credentials were accessed by an attacker.\n\n[1]: https://www.spamhaus.org/statistics/tlds/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1603296605789,"filters":[],"queries":[{"distinctFields":[],"name":"suspicious_tld","aggregation":"count","groupByFields":["instance-id"],"query":"@dns.question.name:(*.fit. OR *.work. OR *.webcam. OR *.loan. OR *.cf.)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"suspicious_tld > 0"}],"type":"log_detection","id":"dus-bf6-3jr","isDefault":true,"name":"EC2 instance requested a suspicious domain"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an Azure network security group or an Azure network security rule has been created, modified, or deleted.\n\n## Strategy\n\nMonitor Azure activity logs and detect when the `@evt.name` is equal to any one of the following names:\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE`\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/DELETE`\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/WRITE` \n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/DELETE`\n\nand `@evt.outcome` is equal to `Success`.\n\n## Triage & Response\n\n1. Inspect the security group or security rule and determine if it exposes any Azure resources that should not be exposed.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1607106297216,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.network @evt.name:(\"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/WRITE\" OR \"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/DELETE\" OR \"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/DELETE\" OR \"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE\") @evt.outcome:Success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"mju-ynx-i1h","isDefault":true,"name":"Azure Network Security Groups or Rules Created, Modified, or Deleted"},{"creationAuthorId":0,"tags":["source:azure","security:threat-intel"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an Azure firewall threat intelligence alert is received.\n\n## Strategy\n\nMonitor Azure Network Diagnostic logs and detect when `@evt.name` is equal to `AzureFirewallThreatIntelLog`.\n\n## Triage & Response\n\n1. Inspect the threat intelligence log.\n2. Investigate the activity from this IP address.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1607106300940,"filters":[],"queries":[{"distinctFields":[],"name":"azure_firewall_threat_intel_alert","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:azure.network @evt.name:AzureFirewallThreatIntelLog","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"azure_firewall_threat_intel_alert > 0"}],"type":"log_detection","id":"z0v-yfr-qat","isDefault":true,"name":"Azure Firewall Threat Intelligence Alert"}]}'
    headers:
      Cache-Control:
      - no-cache
      Connection:
      - keep-alive
      Content-Disposition:
      - inline
      Content-Security-Policy:
      - frame-ancestors 'self'; report-uri https://api.datadoghq.com/csp-report
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Tue, 20 Apr 2021 14:58:34 GMT
      Pragma:
      - no-cache
      Strict-Transport-Security:
      - max-age=15724800;
      Vary:
      - Accept-Encoding
      X-Content-Type-Options:
      - nosniff
      X-Dd-Debug:
      - B1nwy/pPNqX+q4pQT22cdp1QCexE35IF8qwSHy0Nf7IW0Y881qtn4tXN1lpmzaKc
      X-Dd-Version:
      - "35.4351940"
      X-Frame-Options:
      - SAMEORIGIN
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
      Dd-Operation-Id:
      - ListSecurityMonitoringRules
      User-Agent:
      - terraform-provider-datadog/dev (terraform 2.4.4; terraform-cli 0.14.7) datadog-api-client-go/1.0.0-beta.19 (go go1.16.3; os darwin; arch amd64)
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=1&page%5Bsize%5D=100
    method: GET
  response:
    body: '{"meta":{"page":{"total_filtered_count":21,"total_count":121}},"data":[{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an Azure policy assignment has been created.\n\n## Strategy\n\nMonitor Azure activity logs and detect when the `@evt.name` is equal to `MICROSOFT.AUTHORIZATION/POLICYASSIGNMENTS/WRITE` and `@evt.outcome` is equal to `Success`.\n\n## Triage && Response\n\n1. Inspect the policy assignment and determine if an unsolicited change was made on any Azure resources.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1607106302885,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:azure @evt.name:\"MICROSOFT.AUTHORIZATION/POLICYASSIGNMENTS/WRITE\" @evt.outcome:Success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"uvd-ets-ju9","isDefault":true,"name":"Azure Policy Assignment Created"},{"creationAuthorId":0,"tags":["source:azure","tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect and identify the network IP address when multiple user accounts have login attempt activities recorded.\n\n## Strategy\n\nMonitor Azure Active Directory and detect when any `@evt.category` is equal to `SignInLogs` and more than 1 of the `@evt.outcome` are equal to `false` and was initiated by the same network IP address.\n\nSecurity Signal returns **HIGH** if`@evt.outcome` has value of `success` after multiple failed logins were initiated by the same network IP address.\n\n## Triage & Response\n\n1. Inspect the log and determine if this was a valid login attempt.\n2. If the user was compromised, rotate user credentials.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1607106304164,"filters":[],"queries":[{"distinctFields":["@usr.id"],"name":"failed_login_multiple_user_accounts_same_ip_address","aggregation":"cardinality","groupByFields":["@network.client.ip"],"query":"source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:failure","trackType":"logs"},{"distinctFields":[],"name":"successful_login_after_multiple_failed_login_attemtps","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:failure","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Successful login after multiple failed login attempts from the same network IP address","condition":"failed_login_multiple_user_accounts_same_ip_address > 1 && successful_login_after_multiple_failed_login_attemtps > 0"},{"status":"medium","notifications":[],"name":"Multiple failed login attempts from the same network IP address","condition":"failed_login_multiple_user_accounts_same_ip_address > 1 "}],"type":"log_detection","id":"igg-0ve-xxc","isDefault":true,"name":"Credential Stuffing Attack on Azure"},{"creationAuthorId":0,"tags":["source:azure","tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when a user is a victim of an Account Take Over (ATO) by a brute force attack.\n\n## Strategy\n\nMonitor Azure Active Directory Sign-in logs and detect when any `@evt.category` is equal to  `SignInLogs`, and `@evt.outcome` is equal to `failure`.\n\n## Triage & Response\n\n1. Inspect the log and determine if this was a valid login attempt.\n2. If the user was compromised, rotate user credentials.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":5,"createdAt":1607106309289,"filters":[],"queries":[{"distinctFields":[],"name":"failed_login","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:failure","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:failure","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Successful login","condition":"failed_login > 5 && successful_login > 0"},{"status":"info","notifications":[],"name":"Unsuccessful","condition":"failed_login > 5"}],"type":"log_detection","id":"y0f-vsz-xms","isDefault":true,"name":"Azure Portal brute force login"},{"creationAuthorId":0,"tags":["source:azure","tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect and identify the network IP address when multiple user accounts failed to complete the MFA process.\n\n## Strategy\n\nMonitor Azure Active Directory Sign-in logs and detect when any `@evt.category` is equal to `SignInLogs`, `@properties.authenticationRequirement` is equal to `multiFactorAuthentication` and `@evt.outcome` is equal to `failure`.\n\n## Triage & Response \n\n1. Inspect the log and determine if this was a valid login attempt.\n2. If the user was compromised, rotate user credentials.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":5,"createdAt":1607106317340,"filters":[],"queries":[{"distinctFields":["@usr.email"],"name":"failed_login_mfa_denied_w_multiple_user_accounts","aggregation":"cardinality","groupByFields":["@network.client.ip"],"query":"source:azure.activedirectory @evt.category:SignInLogs @properties.authenticationRequirement:multiFactorAuthentication @evt.outcome:failure","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Greater than 10 unique users","condition":"failed_login_mfa_denied_w_multiple_user_accounts > 10"},{"status":"low","notifications":[],"name":"Greater than 3 unique user","condition":"failed_login_mfa_denied_w_multiple_user_accounts > 3"}],"type":"log_detection","id":"zgm-z7i-mhu","isDefault":true,"name":"Azure Login Explicitly Denied MFA"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an Azure network security rule has been created, modified, or deleted.\n\n## Strategy\n\nMonitor Azure activity logs and detect when the `@evt.name` is equal to any of the following names:\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/WRITE` \n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/DELETE`\n\nand `@evt.outcome` is equal to `Success`.\n\n## Triage && Response\n\n1. Inspect the security rule and determine if it exposes any Azure resources that should not be made public.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1607106319051,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.sql @evt.name:\"MICROSOFT.SQL/SERVERS/FIREWALLRULES/WRITE\" @evt.outcome:Success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"kbv-sau-dwv","isDefault":true,"name":"Azure SQL Server Firewall Rules Created or Modified"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an invitation is sent to an external user.\n\n## Strategy\n\nMonitor Azure Active Directory Audit logs and detect when any `@evt.name` is equal to `Invite external user` and the `@evt.outcome` is equal to `success`.\n\n## Triage & Response\n\n1. Review and determine if the invitation and its recipient are valid.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1607106320758,"filters":[],"queries":[{"distinctFields":[],"name":"invite_external_user","aggregation":"count","groupByFields":["@usr.id","@properties.targetResources.userPrincipalName"],"query":"source:azure.activedirectory @evt.name:\"Invite external user\" @evt.outcome:success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"invite_external_user > 0"}],"type":"log_detection","id":"msq-9pm-ift","isDefault":true,"name":"Azure user invited an external user"},{"creationAuthorId":0,"tags":["source:okta"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is denied access to an app.\n\n### Strategy\nThis rule lets you monitor the following Okta events to detect when a user is denied access to an app:\n\n* `app.generic.unauth_app_access_attempt`\n\n### Triage & Response\n1. Determine whether or not the user should have access to this app.\n2. Contact the user to determine whether they attempted to access this app or whether their account is compromised.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1607371843994,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.email","@target_app"],"query":"source:okta @evt.name:app.generic.unauth_app_access_attempt","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"rht-pdf-gyx","isDefault":true,"name":"Okta User Attempted to Access Unauthorized App"},{"creationAuthorId":0,"tags":["category:authentication","tactic:TA0006-credential-access","template:true","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect Account Take Over (ATO) through credential stuffing attack.\n\nA credential stuffing attack is used to gain initial access by compromising user accounts.\n\nThe attacker obtains a list of compromised usernames and passwords from a previous user database breach, phishing attempt, or other means. Then, they use the list of username and passwords to attempt to login to accounts on your application.\n\nIt is common for an attacker to use multiple IP addresses to target your application in order to distribute the attack load for load balancing purposes, to make it more difficult to detect, or make it more difficult to block.\n\n### Strategy\n**To determine a successful attempt:** Detect a high number of failed logins from at least 25 unique users and at least one successful login for a user within a period of time from the same IP address.\n\n**To determine an unsuccessful attempt:** Detect a high number of failed logins from at least ten unique users within a period of time from the same IP address.\n\n### Triage and response\n\nUse [this Datadog runbook](https://app.datadoghq.com/notebook/credentialstuffingrunbook) to assist in your investigation.\n\n1. Determine if it is a legitimate attack or a false positive\n2. Determine compromised users\n3. Remediate compromised user accounts\n","options":{"detectionMethod":"threshold","evaluationWindow":1800,"maxSignalDuration":86400,"keepAlive":3600},"version":2,"createdAt":1608750331867,"filters":[],"queries":[{"distinctFields":["@usr.id"],"name":"unique_users_failing_to_login","aggregation":"cardinality","groupByFields":["@network.client.ip"],"query":"@evt.category:authentication @evt.outcome:failure","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@network.client.ip"],"query":"@evt.category:authentication @evt.outcome:success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Successful - Greater than 50","condition":"unique_users_failing_to_login>50 && successful_login>=1"},{"status":"medium","notifications":[],"name":"Successful","condition":"unique_users_failing_to_login>25 && successful_login>=1"},{"status":"info","notifications":[],"name":"Attempt","condition":"unique_users_failing_to_login>25"}],"type":"log_detection","id":"ypo-jbm-p2s","isDefault":true,"name":"Credential stuffing attack"},{"creationAuthorId":0,"tags":["source:microsoft-365"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user shares a Microsoft 365 Sharepoint document with a guest.\n\n### Strategy\nThis rule monitors the Microsoft 365 logs for the event name `SharingInvitationCreated` when the `TargetUserOrGroupType` is `Guest`.\n\n### Triage & Response\n1. Determine whether this document should be shared with the external user.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1608766365850,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@TargetUserOrGroupName","@ObjectId"],"query":"source:microsoft-365 service:SharePoint @evt.name:(SharingInvitationCreated) @TargetUserOrGroupType:Guest","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"v72-psu-eln","isDefault":true,"name":"Microsoft 365 SharePoint object shared with guest"},{"creationAuthorId":0,"tags":["source:microsoft-365"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user installs an app to Microsoft 365 Teams.\n\n### Strategy\nThis rule monitors the Microsoft 365 logs for the event name `AppInstalled`.\n\n### Triage & Response\n1. Determine whether this app should be installed to Microsoft 365 teams.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1608766367312,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@AddOnName"],"query":"source:microsoft-365 service:MicrosoftTeams @evt.name:AppInstalled","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"i03-grd-ppd","isDefault":true,"name":"Microsoft 365 Teams app installed"},{"creationAuthorId":0,"tags":["source:microsoft-365"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user creates an anonymous link for a Microsoft 365 document in OneDrive. This would allow any unauthenticated user to access this document, if they had the link.\n\n### Strategy\nThis rule monitors the Microsoft 365 logs for the event name `AnonymousLinkCreated`.\n\n### Triage & Response\n1. Determine whether this document should be available anonymously.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1608766368930,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id","@ObjectId"],"query":"source:microsoft-365 service:OneDrive @evt.name:AnonymousLinkCreated","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"y1h-h20-er6","isDefault":true,"name":"Microsoft 365 OneDrive Anonymous Link Created"},{"creationAuthorId":0,"tags":["tactic:TA0004-privilege-escalation","scope:ecs","source:cloudtrail","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user executes a command on an ECS container for the first time. An attacker may use this as a technique to escalate their privileges\nbecause they can run arbitrary commands on behalf of the container with the role and permissions associated with the\ncontainer.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if a user is executing a command on an ECS container:\n\n* `ExecuteCommand`\n\n### Triage & Response\n1. Determine if the user should be executing a command on this container\n","options":{"detectionMethod":"new_value","evaluationWindow":0,"maxSignalDuration":0,"newValueOptions":{"learningDuration":1,"forgetAfter":28},"keepAlive":0},"version":5,"createdAt":1615916348842,"filters":[{"action":"suppress","query":"foo"},{"action":"require","query":"bar"}],"queries":[{"distinctFields":[],"name":"","metric":"@usr.account_id","aggregation":"new_value","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @eventName:ExecuteCommand","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":["@me"],"name":""}],"type":"log_detection","id":"o2p-sbu-rlg","isDefault":true,"name":"Anomalous AWS user executed a command on ECS container"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617971626555,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestSearchSecurityMonitoringSignals-1617971626","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"uf5-sub-gvr","isDefault":false,"name":"Test-TestSearchSecurityMonitoringSignals-1617971626"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617971644219,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1617971644","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"5b2-kdc-3do","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1617971644"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617977693395,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestSearchSecurityMonitoringSignals-1617977693","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"pfs-wtb-6x6","isDefault":false,"name":"Test-TestSearchSecurityMonitoringSignals-1617977693"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617977738802,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1617977738","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"eai-snq-4vj","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1617977738"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617978059498,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1617978059","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"nvz-hsv-5ql","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1617978059"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617978302186,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1617978301","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"cyp-scn-o3m","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1617978301"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"Test rule","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":1,"createdAt":1618083170620,"filters":[],"queries":[{"distinctFields":[],"name":"","metric":"","aggregation":"count","groupByFields":[],"query":"@test:true","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"bno-qku-kqu","isDefault":false,"name":"Test-Create_a_detection_rule_returns_OK_response-1618083170"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1618221021757,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestSearchSecurityMonitoringSignals-1618221021","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"tcl-onp-xbd","isDefault":false,"name":"Test-TestSearchSecurityMonitoringSignals-1618221021"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1618221039709,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1618221039","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"jdo-kok-wpq","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1618221039"}]}'
    headers:
      Cache-Control:
      - no-cache
      Connection:
      - keep-alive
      Content-Disposition:
      - inline
      Content-Security-Policy:
      - frame-ancestors 'self'; report-uri https://api.datadoghq.com/csp-report
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Tue, 20 Apr 2021 14:58:34 GMT
      Pragma:
      - no-cache
      Strict-Transport-Security:
      - max-age=15724800;
      Vary:
      - Accept-Encoding
      X-Content-Type-Options:
      - nosniff
      X-Dd-Debug:
      - B1nwy/pPNqX+q4pQT22cdp1QCexE35IF8qwSHy0Nf7IW0Y881qtn4tXN1lpmzaKc
      X-Dd-Version:
      - "35.4351940"
      X-Frame-Options:
      - SAMEORIGIN
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
      Dd-Operation-Id:
      - ListSecurityMonitoringRules
      User-Agent:
      - terraform-provider-datadog/dev (terraform 2.4.4; terraform-cli 0.14.7) datadog-api-client-go/1.0.0-beta.19 (go go1.16.3; os darwin; arch amd64)
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=2&page%5Bsize%5D=100
    method: GET
  response:
    body: '{"meta":{"page":{"total_filtered_count":0,"total_count":121}},"data":[]}'
    headers:
      Cache-Control:
      - no-cache
      Connection:
      - keep-alive
      Content-Disposition:
      - inline
      Content-Security-Policy:
      - frame-ancestors 'self'; report-uri https://api.datadoghq.com/csp-report
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Tue, 20 Apr 2021 14:58:35 GMT
      Pragma:
      - no-cache
      Strict-Transport-Security:
      - max-age=15724800;
      Vary:
      - Accept-Encoding
      X-Content-Type-Options:
      - nosniff
      X-Dd-Debug:
      - 5gfwVh/5HZ+AnGd/Di93w3NEWC6KMHT9KzmHEiRJmNdOjBtAsbOcgVFyqEChw71h
      X-Dd-Version:
      - "35.4351940"
      X-Frame-Options:
      - SAMEORIGIN
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
      Dd-Operation-Id:
      - ListSecurityMonitoringRules
      User-Agent:
      - terraform-provider-datadog/dev (terraform 2.4.4; terraform-cli 0.14.7) datadog-api-client-go/1.0.0-beta.19 (go go1.16.3; os darwin; arch amd64)
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=0&page%5Bsize%5D=100
    method: GET
  response:
    body: '{"meta":{"page":{"total_filtered_count":100,"total_count":121}},"data":[{"creationAuthorId":0,"tags":["scope:iam","source:guardduty","technique:T1069-permission-groups-discovery","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is enumerating IAM principals.\n\n### Strategy\nThis rule lets you leverage GuardDuty to detect when an attacker is enumerating IAM principals. The GuardDuty Findings which trigger this signal:\n\n* [Recon:IAMUser/NetworkPermissions][1]\n* [Recon:IAMUser/ResourcePermissions][2]\n* [Recon:IAMUser/UserPermissions][3] \n\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon7\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon8\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon9","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870276065,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Recon\\:IAMUser\\/NetworkPermissions OR Recon\\:IAMUser\\/ResourcePermissions OR Recon\\:IAMUser\\/UserPermissions)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"u2j-xph-kc7","isDefault":true,"name":"AWS IAM principal enumeration"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is communicating with a cryptocurrency server\n\n### Strategy\nThis rule lets you leverage GuardDuty to detect when an EC2 instance has made a DNS request or is communicating with an IP that is associated with cryptocurrency operations. The following GuardDuty Findings trigger this signal:\n\n* [CryptoCurrency:EC2/BitcoinTool.B!DNS][1]\n* [CryptoCurrency:EC2/BitcoinTool.B][2]\n\n\n### Triage & Response\n1. Determine which domain name or IP address triggered the signal. This can be found in the samples. \n2. If the domain or IP address should not have been requested, open a security investigation, and determine which process requested the domain name or IP address.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_crypto.html#crypto3\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_crypto.html#crypto4","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870276326,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(CryptoCurrency\\:EC2\\/BitcoinTool.B\\!DNS OR CryptoCurrency\\:EC2\\/BitcoinTool.B)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ky3-ds4-ipb","isDefault":true,"name":"AWS EC2 instance communicating with a cryptocurrency server"},{"creationAuthorId":0,"tags":["technique:T1485-data-destruction","tactic:TA0040-impact","source:cloudtrail","scope:rds","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is destroying a RDS Cluster.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting a RDS cluster:\n\n* [DeleteDBCluster][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/rds/delete-db-cluster.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870276546,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteDBCluster","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"6ng-pk1-ukh","isDefault":true,"name":"AWS RDS Cluster deleted"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","scope:template","technique:T1110-brute-force","security:attack"],"isEnabled":false,"hasExtendedTitle":true,"message":"### Goal\nDetect Account Take Over (ATO) through brute force attempts\n\n### Strategy\nTo determine a successful attempt: Detect a high amount of failed logins and at least one successful login for a given user. This will generate a `HIGH` severity signal.\nTo determine an attempt: Detect a high amount of failed logins. This will generate an `INFO` severity signal.\n\n### Triage & Response\n1. Inspect the logs to see if this was a valid login attempt.\n2. See if 2FA was authenticated.\n3. If the user was compromised, rotate user credentials.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":7200,"keepAlive":3600},"version":3,"createdAt":1585870276794,"filters":[],"queries":[{"distinctFields":[],"name":"failed_login","aggregation":"count","groupByFields":["@usr.name"],"query":"@evt.name:authentication @evt.outcome:failure @usr.name:*","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@usr.name"],"query":"@evt.name:authentication @evt.outcome:success @usr.name:*","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":["@slack-secops"],"name":"Successful","condition":"failed_login > 50 && successful_login > 0"},{"status":"info","notifications":["@slack-secops"],"name":"Attempt","condition":"failed_login > 5"}],"type":"log_detection","id":"jhi-klp-smm","isDefault":true,"name":"TEMPLATE - Brute Force Attack Grouped By User"},{"creationAuthorId":0,"tags":["scope:eventbridge","technique:T1089-disabling-security-tools","source:cloudtrail","tactic:TA0005-defense-evasion","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is trying to evade defenses by deleting or disabling EventBridge rules.\n\n### Strategy\nThis rule lets you monitor these CloudTrail API calls to detect if an attacker is modifying or disabling EventBridge rules:\n\n* [DeleteRule][1]\n* [DisableRule][2]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DeleteRule.html\n[2]: https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DisableRule.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870277044,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DeleteRule OR DisableRule)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"mq6-cjx-h9o","isDefault":true,"name":"AWS EventBridge rule disabled or deleted"},{"creationAuthorId":0,"tags":["scope:ec2","source:cloudtrail","tactic:TA0005-defense-evasion","technique:T1066-indicator-removal-from-tools","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is removing FlowLogs to cover their tracks.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting FlowLogs:\n\n* [DeleteFlowLogs][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFlowLogs.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870278493,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteFlowLogs","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"cws-b4f-uoh","isDefault":true,"name":"AWS FlowLogs removed"},{"creationAuthorId":0,"tags":["technique:T1089-disabling-security-tools","scope:guardduty","source:cloudtrail","tactic:TA0005-defense-evasion","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is trying to evade defenses by deleting a GuardDuty detector.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting a GuardDuty Detector:\n\n* [DeleteDetector][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/delete-detector.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870279177,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteDetector","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"pzi-led-yyc","isDefault":true,"name":"AWS GuardDuty detector deleted"},{"creationAuthorId":0,"tags":["scope:ecs","technique:T1485-data-destruction","tactic:TA0040-impact","source:cloudtrail","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is destroying an ECS Cluster\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an ECS cluster is deleted:\n\n* [DeleteCluster][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeleteCluster.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870279810,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteCluster","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"vwu-6id-9lz","isDefault":true,"name":"AWS ECS cluster deleted"},{"creationAuthorId":0,"tags":["security:compliance","scope:s3","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when the S3 Public Access Block configuration has been removed \n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting the S3 Public Access Block configuration:\n\n* [DeleteAccountPublicAccessBlock][1]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and inform them of best practices of enabling Public Access Block on S3 buckets.\n3. Re-enable Public Access Block on the S3 bucket.\n\nMore details on S3 Public Block Public Access can be found [here][2].\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/s3api/delete-public-access-block.html\n[2]: https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870280316,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteAccountPublicAccessBlock","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"uxr-5wk-8hk","isDefault":true,"name":"AWS S3 Public Access Block removed"},{"creationAuthorId":0,"tags":["control:cis-3.14","security:compliance","scope:ec2","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is destroying a VPC.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting a VPC:\n\n* [DeleteVpc][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-vpc.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1585870280906,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DeleteVpc OR CreateVpc OR ModifyVpcAttribute OR AcceptVpcPeeringConnection OR CreateVpcPeeringConnection OR DeleteVpcPeeringConnection OR RejectVpcPeeringConnection OR  AttachClassicLinkVpc OR  DetachClassicLinkVpc OR DisableVpcClassicLink OR EnableVpcClassicLink)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"igj-dr4-ico","isDefault":true,"name":"AWS VPC created or modified"},{"creationAuthorId":0,"tags":["source:gsuite","scope:gsuite","security:threat-intel"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user attempts to log in with a password which is known to be compromised.\n\n### Strategy\nThis rule allows you to monitor this Google Activity API call to detect if an attacker is trying to login with a leaked password: \n\n* [Leaked password][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the compromised password.\n2. Contact the user and ensure they rotate the password on Google and any other accounts where they may have reused this password. Ensure the user is aware of strong password guidelines.\n\n[1]: https://developers.google.com/admin-sdk/reports/v1/appendix/activity/login#account_disabled_password_leak","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870280553,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@actor.email"],"query":"source:gsuite @event.type:account_warning @event.name:account_disabled_password_leak","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"9zi-bom-nmh","isDefault":true,"name":"User attempted login with leaked password"},{"creationAuthorId":0,"tags":["technique:T1083-file-and-directory-discovery","scope:s3","source:cloudtrail","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance makes an API call to AWS to list all of the S3 Buckets.\n\n### Strategy\nThis rule lets you monitor CloudTrail to detect a [ListBuckets][1] API call with the session name prefixed with `i-`. A session name prefixed with `i-` typically indicates that it is an EC2 instance using an [Instance Profile][2] to communicate with other AWS services, which is a common attacker technique to see the full list of S3 buckets in your AWS account.\n Determine if the EC2 instance should be making this API call. \n* If not, rotate the credentials, verify what else may have been accessed and open an investigation into how this instance was compromised.\n   * If the application or legitimate user on the EC2 instance is making the `ListBuckets` API call, consider whether this API call is really needed.  \n\n[1]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html\n[2]: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html#ec2-instance-profile","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870281123,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @userIdentity.session_name:i-* @evt.name:ListBuckets","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"t6r-kqt-hxb","isDefault":true,"name":"AWS S3 Buckets enumerated"},{"creationAuthorId":0,"tags":["security:compliance","scope:amazon","framework:cis-aws","control:cis-3.3","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect AWS root user activity. \n\n### Strategy\nMonitor CloudTrail and detect when any `@userIdentity.type` has a value of `Root`, but is not invoked by an AWS service.\n\n### Triage & Response\n1. Reach out to the user to determine if the login was legitimate. \n2. If the login wasn''t legitimate, rotate the credentials, enable 2FA, and open an investigation. \n\nFor best practices, check out the [AWS Root Account Best Practices][1] documentation.\n\n[1]: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1585870281964,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:cloudtrail @userIdentity.type:Root  -@userIdentity.invokedBy:*  -@eventType:AwsServiceEvent","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"2kn-z6k-6kf","isDefault":true,"name":"AWS root account activity"},{"creationAuthorId":0,"tags":["scope:ec2","technique:T1485-data-destruction","tactic:TA0040-impact","source:cloudtrail","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is destroying an EC2 subnet.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting an EC2 subnet.\n\n* [DeleteSubnet][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-subnet.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870282197,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteSubnet","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ygi-fi5-qns","isDefault":true,"name":"AWS EC2 subnet deleted"},{"creationAuthorId":0,"tags":["security:compliance","control:cis-3.9","framework:cis-aws","scope:amazon-config","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is trying to evade defenses by disabling an AWS configuration.\n\n### Strategy\nThis rule lets you monitor these CloudTrail API calls to detect if an attacker is trying to stop recording configurations of your AWS resources or trying to delete a delivery channel:\n\n* [StopConfigurationRecorder][1] \n* [DeleteDeliveryChannel][2] \n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/config/latest/APIReference/API_StopConfigurationRecorder.html\n[2]: https://docs.aws.amazon.com/config/latest/APIReference/API_DeleteDeliveryChannel.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1585870283149,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(StopConfigurationRecorder OR DeleteDeliveryChannel OR PutDeliveryChannel OR PutConfigurationRecorder)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"p1b-9np-rw1","isDefault":true,"name":"AWS config modified"},{"creationAuthorId":0,"tags":["security:threat-intel","scope:template"],"isEnabled":false,"hasExtendedTitle":true,"message":"### Goal\nDetect when a stolen laptop has been connected to the network.\n\n### Strategy\nUsing the Datadog [Lookup Processor](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#lookup-processor) you can maintain a blocklist of MAC addresses.\nWhen a MAC address connects to the network, the @threat.stolen_laptop attribute is set to `true`.\nThis threat detection rule queries for `@threat.stolen_laptop:true` and generates a security signal. \n\n### Triage & Response\nEnter your triage and response process for when a stolen laptop has connected to your network to help users responding to the security signal quickly triage and respond to the signal. \n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870283379,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.mac"],"query":"@threat.stolen_laptop:true @network.client.mac:*","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ap3-xy9-tsm","isDefault":true,"name":"TEMPLATE - Stolen Laptop Connected to Network"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":false,"hasExtendedTitle":true,"message":"### Goal\nDetect an account take over (ATO) through brute force attempts.\n\n### Strategy\nTo determine a successful attempt: Detect a high amount of failed logins and at least one successful login for a given IP address. This will generate a `HIGH` severity signal.\nTo determine an attempt: Detect a high amount of failed logins for a given IP address. This will generate an `INFO severity signal.\n\n### Triage & Response\n1. Inspect the logs to see if this was a valid login attempt.\n2. See if 2FA was authenticated.\n3. If the user was compromised, rotate user credentials.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":7200,"keepAlive":3600},"version":2,"createdAt":1585870283641,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.name"],"query":"@evt.name:authentication @evt.outcome:failure","trackType":"logs"},{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.name"],"query":"@evt.name:authentication @evt.outcome:success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":["@slack-secops"],"name":"Successful","condition":"a>5 && b>0"},{"status":"info","notifications":[],"name":"Attempted","condition":"a>5"}],"type":"log_detection","id":"wce-cxo-pe4","isDefault":true,"name":"TEMPLATE - Brute Force Attack Grouped By IP"},{"creationAuthorId":0,"tags":["security:compliance","scope:cloudtrail","framework:cis-aws","source:cloudtrail","control:cis-3.5"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is trying to evade defenses by disabling or modifying CloudTrail.\n\n### Strategy\nThis rule lets you monitor these CloudTrail API calls to detect if an attacker is modifying or disabling CloudTrail:\n\n* [DeleteTrail][1]\n* [UpdateTrail][2]\n* [StopLogging][3]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_DeleteTrail.html\n[2]: https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_UpdateTrail.html\n[3]: https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_StopLogging.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1585870283907,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DeleteTrail OR UpdateTrail OR StopLogging OR CreateTrail OR StartLogging)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"4hv-083-miw","isDefault":true,"name":"AWS CloudTrail configuration modified"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect Brute Force Attacks\n\n### Strategy\nLeverage GuardDuty and detect when an attacker is performing a brute force attack. The following are GuardDuty findings trigger this signal:\n\n* [UnauthorizedAccess:EC2/SSHBruteForce][1]\n* [UnauthorizedAccess:EC2/RDPBruteForce][2]\n\n\n### Triage & Response\n1. Inspect the role of the EC2 instance in the attack. Find the role in the signal name - either `ACTOR` or `TARGET`.\n   * If you are the `TARGET` and the instance is available on the internet, expect to see IPs scanning your systems.\n   * If you are the `TARGET` and the instance is **not** available on the internet, this means a host on your internal network is scanning your EC2 instance. Open an investigation.\n   * If you are the `ACTOR`, this means that your instance is performing brute force attacks on other systems. Open an investigation.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized9\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized10","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":11,"createdAt":1585870284202,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/SSHBruteForce OR UnauthorizedAccess\\:EC2\\/RDPBruteForce) @detail.service.resourceRole:ACTOR","trackType":"logs"},{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/SSHBruteForce OR UnauthorizedAccess\\:EC2\\/RDPBruteForce) @detail.service.resourceRole:TARGET","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"ACTOR","condition":"a > 0"},{"status":"info","notifications":[],"name":"TARGET","condition":"b > 0"}],"type":"log_detection","id":"vyl-ylc-3io","isDefault":true,"name":"AWS EC2 instance involved in brute force attack"},{"creationAuthorId":0,"tags":["security:compliance","scope:ec2","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EBS encryption is disabled by default. \n\n### Strategy\nMonitor CloudTrail and detect when EBS encryption is disabled by default via the following API call:\n\n* [DisableEbsEncryptionByDefault][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user and let them know that it is best practice to enable EBS encryption by default.\n3. Re-enable EBS encryption by default.\n\nFor more information about Amazon EBS Encryption, check out the [Amazon EBS Encryption][2] documentation.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableEbsEncryptionByDefault.html\n[2]: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870284527,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DisableEbsEncryptionByDefault","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"4s7-uuu-lo8","isDefault":true,"name":"AWS EBS default encryption disabled"},{"creationAuthorId":0,"tags":["security:compliance","framework:cis-aws","control:cis-3.2","scope:aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when any user logs in to your AWS console without multi-factor authentication.\n\n### Strategy\nThis rule monitors CloudTrail and detects when any `@evt.name` has a value of  `Console Login`, and `@additionalEventData.MFAUsed` has a value of `no`. \n\n**Note:** This rule ignores logins using SAML because 2FA is implemented on the IdP and not through AWS.\n\n### Triage & Response\n1. Reach out to the user to determine if the login was legitimate. \n2. If the login was legitimate, request that the user enables 2FA. \n3. If the login wasn''t legitimate, rotate the credentials. \n4. Review all user accounts to ensure MFA is enabled. \n\n**Note:** There is a separate rule to detect [Root Login without MFA][1]. \n\n[1]: /security_monitoring/default_rules/cloudtrail-aws-root-login-without-mfa/","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1585870278209,"filters":[],"queries":[{"distinctFields":[],"name":"user_login_without_mfa","aggregation":"count","groupByFields":["@userIdentity.accountId","@usr.name"],"query":"source:cloudtrail @evt.name:ConsoleLogin @additionalEventData.MFAUsed:No @responseElements.ConsoleLogin:Success -@userIdentity.type:Root -@additionalEventData.SamlProviderArn:*","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"user_login_without_mfa > 0"}],"type":"log_detection","id":"wkk-muq-vg8","isDefault":true,"name":"AWS Console login without MFA"},{"creationAuthorId":0,"tags":["security:compliance","scope:amazon","framework:cis-aws","control:cis-3.2","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a root user logs into the AWS console without multi-factor authentication.\n\n### Strategy\nMonitor CloudTrail and detect when any `@evt.name` has a value of `Console Login`, `@userIdentity.type` has a value of `Root`, and `@additionalEventData.MFAUsed` has a value of `no`. \n\n**Note:** This rule ignores logins using SAML because 2FA is implemented on the IdP and not through AWS.\n\n### Triage & Response\n1. Reach out to the user to determine if the login was legitimate. \n2. If the login was legitimate, request that the user enables 2FA on the root account. \n3. If the login wasn''t legitimate, rotate the credentials. \n4. Review all root user accounts to ensure MFA is enabled. \n\n**Note:** There is a separate rule to detect [Login without MFA for non-root users][1]. \n\n[1]: /security_monitoring/default_rules/cloudtrail-aws-login-without-mfa/","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1585870278956,"filters":[],"queries":[{"distinctFields":[],"name":"root_login_without_mfa","aggregation":"count","groupByFields":["@userIdentity.accountId"],"query":"source:cloudtrail @evt.name:ConsoleLogin @additionalEventData.MFAUsed:No @responseElements.ConsoleLogin:Success @userIdentity.type:Root -@additionalEventData.SamlProviderArn:*","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"root_login_without_mfa > 0"}],"type":"log_detection","id":"miy-rjb-9wq","isDefault":true,"name":"AWS Console root login without MFA"},{"creationAuthorId":0,"tags":["security:compliance","control:cis-3.8","scope:s3","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a S3 Bucket policy is modified.\n\n### Strategy\nMonitor CloudTrail and detect when S3 policies are being modified via one of the following API calls:\n* [PutBucketAcl][1]\n* [PutBucketPolicy][2]\n* [PutBucketCors][3]\n* [PutBucketLifecycle][4]\n* [PutBucketReplication][5]\n* [DeleteBucketPolicy][6]\n* [DeleteBucketCors][7]\n* [DeleteBucketLifecycle][8]\n* [DeleteBucketReplication][9]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAcl.html\n [2]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketPolicy.html\n [3]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketCors.html\n [4]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html\n [5]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketReplication.html\n [6]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketPolicy.html\n [7]:  https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketCors.html\n [8]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html\n [9]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketReplication.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475579499,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(PutBucketAcl OR PutBucketPolicy OR PutBucketCors OR PutBucketLifecycle OR PutBucketReplication OR DeleteBucketPolicy OR DeleteBucketCors OR DeleteBucketLifecycle OR DeleteBucketReplication)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"nl3-oht-jhi","isDefault":true,"name":"AWS S3 Bucket policy modified"},{"creationAuthorId":0,"tags":["security:compliance","scope:kms","framework:cis-aws","source:cloudtrail","control:cis-3.7"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a CMK is deleted or scheduled for deletion.\n\n### Strategy\nThis rule lets you monitor these CloudTrail API calls to detect if an attacker is deleting CMKs:\n* [DisableKey][1]\n* [ScheduleKeyDeletion][2]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/kms/latest/APIReference/API_DisableKey.html\n[2]: https://docs.aws.amazon.com/kms/latest/APIReference/API_ScheduleKeyDeletion.html ","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475576501,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DisableKey OR ScheduleKeyDeletion)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"iff-hhm-bd3","isDefault":true,"name":"AWS CMK deleted or scheduled for deletion"},{"creationAuthorId":0,"tags":["security:compliance","scope:ec2","control:cis-3.11","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS Network Access Control List (NACL) has been created or modified.\n\n### Strategy\nThis rule lets you monitor CloudTrail and detect when an AWS NACL has been created or modified with one of the following API calls:\n* [CreateNetworkAcl][1] \n* [CreateNetworkAclEntry][2] \n* [DeleteNetworkAcl][3] \n* [DeleteNetworkAclEntry][4] \n* [ReplaceNetworkAclEntry][5] \n* [ReplaceNetworkAclAssociation][6]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAcl.html\n[2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAclEntry.html\n[3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkAcl.html\n[4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkAclEntry.html\n[5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceNetworkAclEntry.html\n[6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceNetworkAclAssociation.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475579808,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(CreateNetworkAcl OR CreateNetworkAclEntry OR DeleteNetworkAcl OR DeleteNetworkAclEntry OR ReplaceNetworkAclEntry OR ReplaceNetworkAclAssociation)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"pcs-k05-rbc","isDefault":true,"name":"AWS Network Access Control List created or modified"},{"creationAuthorId":0,"tags":["security:compliance","scope:ec2","control:cis-3.12","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS Network Gateway has been created or modified.\n\n### Strategy\nMonitor CloudTrail and detect when an AWS Network Gateway has been created or modified with one of the following API calls:\n* [CreateCustomerGateway][1] \n* [DeleteCustomerGateway][2] \n* [AttachInternetGateway][3] \n* [CreateInternetGateway][4]\n* [DeleteInternetGateway][5] \n* [DetachInternetGateway][6]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCustomerGateway \n [2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteCustomerGateway \n [3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachInternetGateway \n [4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateInternetGateway \n [5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteInternetGateway \n [6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachInternetGateway.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475581301,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(CreateCustomerGateway OR DeleteCustomerGateway OR AttachInternetGateway OR CreateInternetGateway OR DeleteInternetGateway OR DetachInternetGateway)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"umr-47s-eyj","isDefault":true,"name":"AWS Network Gateway created or modified"},{"creationAuthorId":0,"tags":["scope:iam","security:compliance","framework:cis-aws","source:cloudtrail","control:cis-3.6"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is a victim of an Account Take Over (ATO) by a brute force attack.\n\n### Strategy\n This rule monitors CloudTrail and detects when any `@evt.name` has a value of `Console Login`, and `@responseElements.ConsoleLogin` has a value of `Failure`.\n\n### Triage & Response\n1. Determine if the user logged in with 2FA.\n2. Reach out to the user and ensure the login was legitimate.","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":7,"createdAt":1584475581986,"filters":[],"queries":[{"distinctFields":[],"name":"failed_login","aggregation":"count","groupByFields":["@userIdentity.accountId","@usr.name"],"query":"source:cloudtrail @evt.name:ConsoleLogin @responseElements.ConsoleLogin:Failure","trackType":"logs"},{"distinctFields":[],"name":"successful_login_without_mfa","aggregation":"count","groupByFields":["@userIdentity.accountId","@usr.name"],"query":"source:cloudtrail @evt.name:ConsoleLogin @responseElements.ConsoleLogin:Success @additionalEventData.MFAUsed:No","trackType":"logs"},{"distinctFields":[],"name":"successful_login_with_mfa","aggregation":"count","groupByFields":["@userIdentity.accountId","@usr.name"],"query":"source:cloudtrail @evt.name:ConsoleLogin @responseElements.ConsoleLogin:Success @additionalEventData.MFAUsed:Yes","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Potentially Successful - NO MFA","condition":"failed_login > 5 && successful_login_without_mfa > 0"},{"status":"info","notifications":[],"name":"Potentially Successful - MFA Used","condition":"failed_login > 5 && successful_login_with_mfa > 0"},{"status":"info","notifications":[],"name":"Unsuccessful","condition":"failed_login > 5"}],"type":"log_detection","id":"csj-nez-h1v","isDefault":true,"name":"AWS Console brute force login"},{"creationAuthorId":0,"tags":["security:compliance","control:cis-3.13","scope:ec2","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS Route Table has been created or modified.\n\n### Strategy\nThis rule lets you monitor CloudTrail and detect when an AWS Route Table has been created or modified with one of the following API calls:\n* [CreateRoute][1] \n* [CreateRouteTable][2] \n* [ReplaceRoute][3] \n* [ReplaceRouteTableAssociation][4] \n* [DeleteRouteTable][5] \n* [DeleteRoute][6] \n* [DisassociateRouteTable][7]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRoute.html \n [2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRouteTable \n [3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRoute.html \n [4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRouteTableAssociation \n [5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRouteTable.html \n [6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRoute.html \n [7]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateRouteTable.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475582644,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(CreateRoute OR CreateRouteTable OR ReplaceRoute OR ReplaceRouteTableAssociation OR DeleteRouteTable OR DeleteRoute OR DisassociateRouteTable)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"qgo-jqs-03x","isDefault":true,"name":"AWS Route Table created or modified"},{"creationAuthorId":0,"tags":["security:compliance","scope:amazon","framework:cis-aws","source:cloudtrail","control:cis-3.1"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when unauthorized activity is detected in AWS.\n\n### Strategy\nThis rule lets you monitor CloudTrail to detect when the error message of `AccessDenied` is returned.\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":8,"createdAt":1584475582956,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail \"AccessDenied\"","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"greater than 1000 failed attempts","condition":"a > 1000"},{"status":"medium","notifications":[],"name":"greater than 100 failed attempts","condition":"a > 100"},{"status":"low","notifications":[],"name":"greater than 10 failed attempts","condition":"a > 10"}],"type":"log_detection","id":"3d9-oev-jbm","isDefault":true,"name":"AWS unauthorized activity"},{"creationAuthorId":0,"tags":["scope:iam","security:compliance","framework:cis-aws","source:cloudtrail","control:cis-3.4"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect a change to an AWS IAM Policy.\n\n### Strategy\nThis rule lets you monitor CloudTrail and detect when any event pertaining to an AWS IAM policy is detected with one of the following API calls:\n* [DeleteGroupPolicy][1]\n* [DeleteRolePolicy][16]\n* [DeleteUserPolicy][2]\n* [PutGroupPolicy][3]\n* [PutRolePolicy][4]\n* [PutUserPolicy][5]\n* [CreatePolicy][6]\n* [DeletePolicy][7]\n* [CreatePolicyVersion][8]\n* [DeletePolicyVersion][9]\n* [AttachRolePolicy][10]\n* [DetachRolePolicy][11]\n* [AttachUserPolicy][12]\n* [DetachUserPolicy][13]\n* [AttachGroupPolicy][14]\n* [DetachGroupPolicy][15]\n\n### Triage & Response\n1. Review the IAM Policy change and ensure it does not negatively impact your risk in relation to authentication or authorization controls.\n\n[1]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteGroupPolicy.html\n[2]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteUserPolicy.html\n[3]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutGroupPolicy.html\n[4]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutRolePolicy.html\n[5]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutUserPolicy.html\n[6]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicy.html\n[7]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeletePolicy.html\n[8]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicyVersion.html\n[9]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeletePolicyVersion.html\n[10]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachRolePolicy.html\n[11]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachRolePolicy.html\n[12]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachUserPolicy.html\n[13]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachUserPolicy.html\n[14]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachGroupPolicy.html\n[15]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachGroupPolicy.html\n[16]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteRolePolicy.html\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":6,"createdAt":1584475584008,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DeleteGroupPolicy OR DeleteRolePolicy OR DeleteUserPolicy OR PutGroupPolicy OR PutRolePolicy OR PutUserPolicy OR CreatePolicy OR DeletePolicy OR CreatePolicyVersion OR DeletePolicyVersion OR AttachRolePolicy OR DetachRolePolicy OR AttachUserPolicy OR DetachUserPolicy OR AttachGroupPolicy OR DetachGroupPolicy)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"z8s-u06-ctu","isDefault":true,"name":"AWS IAM policy changed"},{"creationAuthorId":0,"tags":["security:compliance","scope:ec2","framework:cis-aws","source:cloudtrail","control:cis-3.10"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS security group has been modified.\n\n### Strategy\nMonitor CloudTrail and detect when an AWS security group has been created or modified with one of the following API calls:\n* [AuthorizeSecurityGroupIngress][1] \n* [AuthorizeSecurityGroupEgress][2] \n* [RevokeSecurityGroupIngress][3] \n* [RevokeSecurityGroupEgress][4] \n* [CreateSecurityGroup][5] \n* [DeleteSecurityGroup][6]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupIngress.html \n [2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupEgress.html \n [3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeSecurityGroupIngress.html \n [4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeSecurityGroupEgress.html \n [5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html \n [6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSecurityGroup.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475583507,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(AuthorizeSecurityGroupIngress OR AuthorizeSecurityGroupEgress OR RevokeSecurityGroupIngress OR RevokeSecurityGroupEgress OR CreateSecurityGroup OR DeleteSecurityGroup)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"bax-btp-3ct","isDefault":true,"name":"AWS security group created or modified"},{"creationAuthorId":0,"tags":["source:twistlock"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect vulnerabilities in container images.\n\n### Strategy\nThis rule lets you monitor Twistlock logs to detect `Critical` severity vulnerabilities in a container image. \n\n### Triage & Response\n1. Determine the impact of this vulnerability.\n2. Update the container image in the registry with a patched version of the software.\n3. Deploy the new image to all containers running the vulnerable image.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870278701,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@vulnerability.cve","@vulnerability.package.name","@vulnerability.image_name"],"query":"source:twistlock @vulnerability.log_type:vulnerability @vulnerability.severity:critical","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"d7s-rex-gjv","isDefault":true,"name":"Container image vulnerability detected"},{"creationAuthorId":0,"tags":["source:twistlock"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a container is not running within compliance standards.\n\n### Strategy\nThis rule lets you monitor Twistlock logs to detect when `Critical` severity compliance issues are discovered in a running container. \n\n### Triage & Response\n1. Determine the impact of the compliance finding.\n2. Remediate the compliance finding.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870281390,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@vulnerability.compliance_id","@vulnerability.container_name"],"query":"source:twistlock @vulnerability.log_type:compliance @vulnerability.severity:critical","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"9vp-d1j-kwp","isDefault":true,"name":"Container violated compliance standards"},{"creationAuthorId":0,"tags":["source:signal_sciences","scope:signal_sciences"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an IP is flagged by Signal Sciences.\n\n### Strategy\nThis rule lets you monitor Signal Sciences events submitted through the Signal Sciences [integration][1] to detect when an IP is flagged. \n\n### Triage & Response\n1. Determine whether the attack is a false positive.\n2. Determine whether the attack was successful.\n3. If the attack exploited a vulnerability in the application, triage the vulnerability.\n\n[1]: https://app.datadoghq.com/account/settings#integrations/sigsci","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":3,"createdAt":1584993292228,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":[],"query":"source:signal_sciences @title:*flag","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"bmg-ftn-dzo","isDefault":true,"name":"Signal Sciences flagged an IP"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.service.account"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a new service account is created.\n\n### Strategy\nThis rule lets you monitor GCP admin activity audit logs to determine when a service account is created. \n\n### Triage & Response\n1. Contact the user who created the service account and ensure that the account is needed and that the role is scoped properly.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870281733,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.service.account @evt.name:google.iam.admin.v1.CreateServiceAccount","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"szx-4kh-eqs","isDefault":true,"name":"GCP service account created"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.service.account"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a new service account key is created.  An attacker could use this key as a backdoor to your account. \n\n### Strategy\nThis rule lets you monitor GCP admin activity audit logs to detect the creation of a service account key. \n\n### Triage & Response\n1. Contact the user who created the service account key to ensure they''re managing the key securely.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870277946,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.service.account @evt.name:google.iam.admin.v1.CreateServiceAccountKey","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"79j-4wh-xlq","isDefault":true,"name":"GCP service account key created"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.project"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect a change to the IAM policy. \n\n### Strategy\nThis rule lets you monitor GCP admin activity audit logs to determine when the `SetIamPolicy` method is invoked. \n\n### Triage & Response\n1. Review the log and inspect the policy deltas (`@data.protoPayload.serviceData.policyDelta.bindingDeltas`) and ensure none of the actions are `REMOVE`.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870280073,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.project @evt.name:SetIamPolicy","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"fgm-8w4-cgx","isDefault":true,"name":"GCP IAM policy modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.project"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a change to a GCP logging sink has been made. This could stop audit logs from being sent to Datadog.\n\n### Strategy\nMonitor GCP admin activity audit logs to determine when any of the following methods are invoked:\n\n* `google.logging.v2.ConfigServiceV2.UpdateSink`\n* `google.logging.v2.ConfigServiceV2.DeleteSink`\n\n### Triage & Response\n1. Review the sink and ensure the sink is properly configured.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871191688,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id","@data.protoPayload.resourceName"],"query":"source:gcp.project @evt.name:(google.logging.v2.ConfigServiceV2.UpdateSink OR google.logging.v2.ConfigServiceV2.DeleteSink)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"hil-rl3-yxs","isDefault":true,"name":"GCP logging sink modified"},{"creationAuthorId":0,"tags":["scope:gcp.gce.route","source:gcp","security:compliance"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a VPC network is created. \n\n### Strategy\nThis rule lets you monitor GCP GCE activity audit logs to determine when the following method is invoked to create a new VPC network:\n\n* `beta.compute.networks.insert`\n\n### Triage & Response\n1. Review the VPC network.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871193403,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","@data.protoPayload.resourceName","@usr.id"],"query":"source:gcp.gce.route @evt.name:beta.compute.networks.insert","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"a9z-oic-grb","isDefault":true,"name":"GCP GCE VPC network modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.gcs.bucket"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when permissions have changed on a GCS Bucket.\n\n### Strategy\nMonitor GCS bucket admin activity audit logs to determine the following method is invoked:\n\n* `storage.setIamPermissions`\n\n### Triage & Response\n1. Review the bucket permissions and ensure they are not overly permissive.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871193842,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","bucket_name","@usr.id"],"query":"source:gcp.gcs.bucket @evt.name:storage.setIamPermissions","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"fdk-tly-4qr","isDefault":true,"name":"GCP Bucket permissions modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.gce.firewall.rule"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a firewall rule is created, modified or deleted. \n\n### Strategy\nMonitor GCP GCE activity audit logs to determine when any of the following methods are invoked:\n\n* `v1.compute.firewalls.delete`\n* `v1.compute.firewalls.insert`\n* `v1.compute.firewalls.patch` \n\n### Triage & Response\n1. Review the log and role and ensure the permissions are scoped properly.\n2. Review the users associated with the role and ensure they should have the permissions attached to the role.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870279610,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","@data.protoPayload.resourceOriginalState.name","@usr.id"],"query":"source:gcp.gce.firewall.rule @evt.name:(v1.compute.firewalls.delete OR v1.compute.firewalls.insert OR v1.compute.firewalls.patch)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"n1w-sql-apl","isDefault":true,"name":"GCP GCE Firewall rule modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.iam.role"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a custom role is created or modified. \n\n### Strategy\nMonitor GCP IAM activity audit logs to determine when any of the following methods are invoked:\n\n* `google.iam.admin.v1.CreateRole`\n* `google.iam.admin.v1.UpdateRole` \n\n### Triage & Response\n1. Review the log and role and ensure the permissions are scoped properly.\n2. Review the users associated with the role and ensure they should have the permissions attached to the role.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870282410,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.iam.role @evt.name:(google.iam.admin.v1.CreateRole OR google.iam.admin.v1.UpdateRole)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"rhy-fzm-gwl","isDefault":true,"name":"GCP IAM custom role created or modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.cloudsql.database"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a Cloud SQL DB has been modified.\n\n### Strategy\nThis rule lets you monitor GCP Cloud SQL admin activity audit logs to determine when one of the following methods are invoked:\n\n* `cloudsql.instances.create`\n* `cloudsql.instances.create`\n* `cloudsql.users.update`\n\n### Triage & Response\n1. Review the Cloud SQL DB and ensure it is configured properly with the correct permissions.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871198921,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","database_id","@usr.id"],"query":"source:gcp.cloudsql.database @evt.name:(cloudsql.instances.create OR cloudsql.instances.create OR cloudsql.users.create OR cloudsql.users.update)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ikf-ye8-cnu","isDefault":true,"name":"GCP Cloud SQL database modified"},{"creationAuthorId":0,"tags":["scope:gcp.gce.route","source:gcp","security:compliance"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a firewall rule is created or modified. \n\n### Strategy\nThis rule lets you monitor GCP GCE activity audit logs to determine if a firewall is being adjusted by showing you when any of the following methods are invoked:\n\n* `beta.compute.routes.insert`\n* `beta.compute.routes.patch`\n\n### Triage & Response\n1. Veirify that the GCP route is configured properly and that the user intended to modify the firewall.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870282924,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","@data.protoPayload.resourceName","@usr.id"],"query":"source:gcp.gce.route @evt.name(beta.compute.routes.insert OR beta.compute.routes.patch)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"lht-ml8-u6r","isDefault":true,"name":"GCP GCE network route created or modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.gcs.bucket"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an administrative change to a GCS Bucket has been made. This could change the retention policy or bucket lock. For more information, see the [GCS Bucket Lock docs][1].\n\n### Strategy\nThis rule lets you monitor GCS bucket admin activity audit logs to determine if a bucket has been updated with the following method:\n\n* `storage.buckets.update`\n\n### Triage & Response\n1. Review the bucket to ensure that it is properly configured.\n\n[1]: https://cloud.google.com/storage/docs/bucket-lock","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871279860,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","bucket_name","@usr.id"],"query":"source:gcp.gcs.bucket @evt.name:storage.buckets.update","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"iz3-sc4-ryy","isDefault":true,"name":"GCP Bucket modified"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","technique:T1046-network-service-scanning","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is conducting a port scan.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Recon:EC2/Portscan][2]\n\n\n### Triage & Response\n1. Determine why traffic from the EC2 instance appears to be conducting a port scan.\n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n \n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon5\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525376478,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Recon\\:EC2\\/Portscan)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"y1y-h5t-gnp","isDefault":true,"name":"AWS EC2 instance conducting a port scan"},{"creationAuthorId":0,"tags":["scope:iam","security:compliance","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user disables [S3 Block Public Access][1]\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][2] finding:\n\n* [Policy:IAMUser/S3BlockPublicAccessDisabled][3]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Contact the user and determine why the user disabled the S3 Block Access feature.   \n3. Re-enable S3 Block Public Access.\n\n[1]: https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html\n[2]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_policy.html#policy2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525377921,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Policy\\:IAMUser\\/S3BlockPublicAccessDisabled)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"loc-nk4-pkc","isDefault":true,"name":"AWS IAM user disabled S3 Block Public Access"},{"creationAuthorId":0,"tags":["scope:ec2","security:threat-intel","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS API call is made from a non EC2 IP for a credential which is scoped to an EC2 Instance.  \n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:IAMUser/InstanceCredentialExfiltration][2]\n\n\n### Triage & Response\n1. Determine the EC2 instance this credential is scoped to. This can be found in the samples. \n2. Determine if the EC2 instance credentials are compromised.  \n3. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized11\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525378639,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:IAMUser\\/InstanceCredentialExfiltration)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"iaa-n0t-0jz","isDefault":true,"name":"AWS EC2 instance credential exfiltrated"},{"creationAuthorId":0,"tags":["scope:iam","security:threat-intel","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user makes API requests from a malicious IP.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Recon:IAMUser/TorIPCaller][2]\n* [Recon:IAMUser/MaliciousIPCaller.Custom][3]\n* [Recon:IAMUser/MaliciousIPCaller][4]\n* [UnauthorizedAccess:IAMUser/MaliciousIPCaller][5]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][6] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon1\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon2\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon3\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized5\n[6]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525380153,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Recon\\:IAMUser\\/TorIPCaller OR Recon\\:IAMUser\\/MaliciousIPCaller.Custom OR Recon\\:IAMUser\\/MaliciousIPCaller OR UnauthorizedAccess\\:IAMUser\\/MaliciousIPCaller)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"8w7-aaz-ojp","isDefault":true,"name":"AWS IAM user requests from malicious IP"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","technique:T1046-network-service-scanning","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is being probed by a scanner.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Recon:EC2/PortProbeUnprotectedPort][2]\n* [Recon:EC2/PortProbeEMRUnprotectedPort][3]\n\n\n### Triage & Response\n1. This is typically an informative signal. However, if this instance should not be publicly available, you should review the security group for this instance. \n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon6\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#PortProbeEMRUnprotectedPort\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525381084,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Recon\\:EC2\\/PortProbeUnprotectedPort OR Recon\\:EC2\\/PortProbeEMRUnprotectedPort)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"mrq-h3x-jus","isDefault":true,"name":"AWS EC2 instance probed by scanner"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0011-command-and-control","technique:T1188-multi-hop-proxy","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance makes an outbound network connection from TOR.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/TorClient][2]\n\n\n### Triage & Response\n1. Determine if the EC2 instance should be making requests to TOR. \n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance. \n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized13\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525381864,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/TorClient)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ihd-q9p-mwx","isDefault":true,"name":"AWS EC2 instance outbound connections to TOR"},{"creationAuthorId":0,"tags":["scope:iam","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user is launching compute resources and has no prior history of invoking this API.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [ResourceConsumption:IAMUser/ComputeResources][2]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][3] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_resource.html#resourceconsumption\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525382816,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(ResourceConsumption\\:IAMUser\\/ComputeResources)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"fwu-iey-ovx","isDefault":true,"name":"AWS IAM user anomalous resource consumption"},{"creationAuthorId":0,"tags":["scope:ec2","security:threat-intel","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance receives an inbound network connection from TOR.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/TorIPCaller][2]\n\n\n### Triage & Response\n1. This is typically an informative signal. However, if this instance should not be publicly available, you should review the security group for this instance. \n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized7\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525383148,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/TorIPCaller)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"1ew-u8i-att","isDefault":true,"name":"AWS EC2 instance inbound connections from TOR"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is participating in a Denial of Service (DoS) attack.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Backdoor:EC2/DenialOfService.Tcp][2]\n* [Backdoor:EC2/DenialOfService.Udp][3]\n* [Backdoor:EC2/DenialOfService.Dns][4]\n* [Backdoor:EC2/DenialOfService.UdpOnTcpPorts][5]\n* [Backdoor:EC2/DenialOfService.UnusualProtocol][6]\n\n\n### Triage & Response\n1. Determine if the EC2 instance is compromised and participating in a DoS attack.\n2. If the instance is compromised:\n   * Review the AWS [documentation][7] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor8\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor9\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor10\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor11\n[6]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor12\n[7]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525383757,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Backdoor\\:EC2\\/DenialOfService.Tcp OR Backdoor\\:EC2\\/DenialOfService.Udp OR Backdoor\\:EC2\\/DenialOfService.Dns OR Backdoor\\:EC2\\/DenialOfService.UdpOnTcpPorts OR Backdoor\\:EC2\\/DenialOfService.UnusualProtocol)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"3l6-vrm-iyn","isDefault":true,"name":"AWS EC2 instance participating in a DoS attack"},{"creationAuthorId":0,"tags":["tactic:TA0004-privilege-escalation","scope:iam","source:guardduty","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user is attempting to escalate permissions.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [PrivilegeEscalation:IAMUser/AdministrativePermissions][2]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][3] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_privilegeescalation.html#privilegeescalation1\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525384559,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(PrivilegeEscalation\\:IAMUser\\/AdministrativePermissions)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"dsb-ciq-vrt","isDefault":true,"name":"AWS IAM user escalating privileges"},{"creationAuthorId":0,"tags":["scope:iam","technique:T1089-disabling-security-tools","source:guardduty","tactic:TA0005-defense-evasion","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user is changing sensitive configurations and has no prior history of invoking these APIs.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Stealth:IAMUser/S3ServerAccessLoggingDisabled][2]\n* [Stealth:IAMUser/PasswordPolicyChange][3]\n* [Stealth:IAMUser/CloudTrailLoggingDisabled][4]\n* [Stealth:IAMUser/LoggingConfigurationModified][5]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][6] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_stealth.html#stealth4\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_stealth.html#stealth1\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_stealth.html#stealth2\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_stealth.html#stealth3\n[6]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525385196,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Stealth\\:IAMUser\\/S3ServerAccessLoggingDisabled OR Stealth\\:IAMUser\\/PasswordPolicyChange OR Stealth\\:IAMUser\\/CloudTrailLoggingDisabled OR Stealth\\:IAMUser\\/LoggingConfigurationModified)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"48o-8me-0mo","isDefault":true,"name":"AWS IAM user changing sensitive configurations"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is compromised and sending spam emails.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Backdoor:EC2/Spambot][2]\n\n\n### Triage & Response\n1. Determine if the EC2 should be sending out email over port 25. \n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor6\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525385866,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Backdoor\\:EC2\\/Spambot)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ecn-gew-dg2","isDefault":true,"name":"AWS EC2 instance Sending spam emails"},{"creationAuthorId":0,"tags":["scope:iam","source:guardduty","security:attack","tactic:TA0003-persistence"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user is attempting to gain persistence within an AWS account.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Persistence:IAMUser/NetworkPermissions][2]\n* [Persistence:IAMUser/ResourcePermissions][3]\n* [Persistence:IAMUser/UserPermissions][4]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][5] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_persistence.html#persistence1\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_persistence.html#persistence2\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_persistence.html#persistence3\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525386519,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Persistence\\:IAMUser\\/NetworkPermissions OR Persistence\\:IAMUser\\/ResourcePermissions OR Persistence\\:IAMUser\\/UserPermissions)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"4ho-oxn-reh","isDefault":true,"name":"AWS IAM user attempting to gain persistence"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0006-credential-access","security:attack","technique:T1522-cloud-instance-metadata-api"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance makes a DNS request and resolves to the AWS metadata IP address (169.254.169.254).\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/MetadataDNSRebind][2]\n\n\n### Triage & Response\n1. Determine which process made the DNS request. The DNS request can be found in the samples.\n2. Ensure the process is not a victim of an SSRF attack to steal the AWS EC2 Instance profile''s STS credentials.  \n2. If the STS credentials are compromised:\n   * Review the AWS [documentation][3] on revoking the session.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#ec2-metadatadnsrebind\n[3]: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_revoke-sessions.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":2,"createdAt":1587525387807,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/MetadataDNSRebind)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"aad-vqz-7tk","isDefault":true,"name":"AWS EC2 Instance Victim to Metadata DNS Rebind Attack"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is being used as a TOR relay.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/TorRelay][2]\n\n\n### Triage & Response\n1. Determine if the EC2 instance should be uses as a TOR relay. \n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance. \n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized14\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525388119,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/TorRelay)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"tpv-3qf-v90","isDefault":true,"name":"AWS EC2 instance connecting to TOR as a relay"},{"creationAuthorId":0,"tags":["scope:iam","source:guardduty","security:anomaly"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user login is suspicious.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [UnauthorizedAccess:IAMUser/ConsoleLoginSuccess.B][2]\n* [UnauthorizedAccess:IAMUser/ConsoleLogin][3]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][4] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized4\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized12\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525388403,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:IAMUser\\/ConsoleLoginSuccess.B OR UnauthorizedAccess\\:IAMUser\\/ConsoleLogin)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"kme-i0z-ylv","isDefault":true,"name":"AWS IAM user suspicious login"},{"creationAuthorId":0,"tags":["scope:ec2","security:threat-intel","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance makes an outbound network connection to a malcious IP address.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/MaliciousIPCaller.Custom][2]\n\n\n### Triage & Response\n1. Determine which IP address triggered the signal. This can be found in the sample.\n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized5\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525389461,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/MaliciousIPCaller.Custom)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"22j-qk6-qv3","isDefault":true,"name":"AWS EC2 instance communicating with malicious IP"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","security:anomaly"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is communicating over an unusual port.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Behavior:EC2/NetworkPortUnusual][2]\n\n\n### Triage & Response\n1. Determine which port triggered the signal. This can be found in the samples.\n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_behavior.html#behavior3\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525391873,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Behavior\\:EC2\\/NetworkPortUnusual)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"qfd-ned-cjn","isDefault":true,"name":"AWS EC2 instance communicating over unusual port"},{"creationAuthorId":0,"tags":["scope:iam","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user makes API requests with hacking tools.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [PenTest:IAMUser/KaliLinux][2]\n* [PenTest:IAMUser/ParrotLinux][3]\n* [PenTest:IAMUser/PentooLinux][4]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][5] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_pentest.html#pentest1\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_pentest.html#pentest2\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_pentest.html#pentest3\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525392995,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(PenTest\\:IAMUser\\/KaliLinux OR PenTest\\:IAMUser\\/ParrotLinux OR PenTest\\:IAMUser\\/PentooLinux)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ocf-ys6-78v","isDefault":true,"name":"AWS IAM user making API requests with hacking tools"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is communicating with a malicious server.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Backdoor:EC2/C&CActivity.B!DNS][2]\n* [Trojan:EC2/BlackholeTraffic][3]\n* [Trojan:EC2/DropPoint][4]\n* [Trojan:EC2/BlackholeTraffic!DNS][5]\n* [Trojan:EC2/DriveBySourceTraffic!DNS][6]\n* [Trojan:EC2/DropPoint!DNS][7]\n* [Trojan:EC2/DGADomainRequest.B][8]\n* [Trojan:EC2/DGADomainRequest.C!DNS][9]\n* [Trojan:EC2/DNSDataExfiltration][10]\n* [Trojan:EC2/PhishingDomainRequest!DNS][11]\n\n\n### Triage & Response\n1. Determine which domain name or IP address triggered the signal. This can be found in the samples.\n2. If the instance is compromised:\n   * Review the AWS [documentation][12] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor6\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan4\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan5\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan6\n[6]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan7\n[7]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan8\n[8]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan9\n[9]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan95\n[10]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan10\n[11]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan11\n[12]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525393367,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Trojan\\:EC2\\/BlackholeTraffic OR Trojan\\:EC2\\/DropPoint OR Trojan\\:EC2\\/BlackholeTraffic\\!DNS OR Trojan\\:EC2\\/DriveBySourceTraffic\\!DNS OR Trojan\\:EC2\\/DropPoint\\!DNS OR Trojan\\:EC2\\/DGADomainRequest.B OR Trojan\\:EC2\\/DGADomainRequest.C\\!DNS OR Backdoor\\:EC2\\/C&CActivity.B\\!DNS OR Trojan\\:EC2\\/PhishingDomainRequest\\!DNS)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"9du-jhn-b4f","isDefault":true,"name":"AWS EC2 instance communicated with a malicious server"},{"creationAuthorId":0,"tags":["scope:iam","security:compliance","source:guardduty","control:cis-1.1","framework:cis-aws","control:cis-3.3"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when the AWS root user credentials are used.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Policy:IAMUser/RootCredentialUsage][2]\n\n\n### Triage & Response\n1. Determine whether the root account activity was legitimate. \n * Review the sample for context. \n * Review CloudTrail logs for a full investigation. \n3. If the root user''s credentials are compromised:\n * Review the AWS [documentation][3] on remediating compromised AWS credentials.\n\n**[Root Account Best Practices][4]**\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_policy.html#policy1\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n[4]: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":5,"createdAt":1587525393683,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":[],"query":"source:guardduty @evt.name:(Policy\\:IAMUser\\/RootCredentialUsage)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"cjm-gyr-zxb","isDefault":true,"name":"AWS Root credential activity"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","security:anomaly"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance network traffic volume is unusual.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Behavior:EC2/TrafficVolumeUnusual][2]\n\n\n### Triage & Response\n1. Determine which port triggered the signal. This can be found in the samples.\n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_behavior.html#behavior4\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525393982,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Behavior\\:EC2\\/TrafficVolumeUnusual)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ipt-dpt-t69","isDefault":true,"name":"AWS EC2 instance network traffic volume unusual"},{"creationAuthorId":0,"tags":["scope:apache","technique:T1190-exploit-public-facing-application","source:apache","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This identifies attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":8,"createdAt":1587530038000,"filters":[{"action":"require","query":"source:foo"}],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:apache @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ipl-oaz-eqf","isDefault":true,"name":"Apache HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["technique:T1190-exploit-public-facing-application","source:elb","scope:elb","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This will identify attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous User Agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an INFO signal.  \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1587530043452,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:elb @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"csd-1pb-wxh","isDefault":true,"name":"AWS ELB HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["technique:T1190-exploit-public-facing-application","source:nginx","scope:nginx","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This will identify attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1587530047261,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:nginx @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"5jr-xi3-uto","isDefault":true,"name":"NGINX HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["technique:T1190-exploit-public-facing-application","scope:nginx-ingress-controller","source:nginx-ingress-controller","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This will identify attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1587530154864,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:nginx-ingress-controller @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"oxj-rwr-gxq","isDefault":true,"name":"NGINX ingress controller HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["technique:T1190-exploit-public-facing-application","source:fastly","scope:fastly","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This identifies attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2]. \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1587530162282,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:fastly @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"dqs-oru-107","isDefault":true,"name":"Fastly HTTP Requests from Security Scanner"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when there is unauthorized activity by a service account in GCP\n\n### Strategy\nMonitor GCP logs and detect when a service account makes an API request and the request returns the status code equal to `7` within the log attribute `@data.protoPayload.status.code`. The status code `7` indicates the service account did not have permission to make the API call.\n\n### Triage & Response\n1. Determine the service account that made the unauthorized calls.\n2. Investigate if there is a misconfiguration in IAM permissions or if an attacker compromised the service account","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":5,"createdAt":1587592191518,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.* @data.protoPayload.status.code:7 @usr.id:(*gserviceaccount.com OR *google.com)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"greater than 1000 failed attempts","condition":"a > 1000"},{"status":"medium","notifications":[],"name":"greater than 100 failed attempts","condition":"a > 100"},{"status":"low","notifications":[],"name":"greater than 10 failed attempts","condition":"a > 10"}],"type":"log_detection","id":"89d-2v1-fvm","isDefault":true,"name":"GCP unauthorized service account activity"},{"creationAuthorId":0,"tags":["source:iis","scope:iis","technique:T1190-exploit-public-facing-application","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This will identify attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1587530716843,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:iis @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ftm-iao-udy","isDefault":true,"name":"IIS HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when unauthorized activity by a user is detected in GCP\n\n### Strategy\nMonitor GCP logs and detect when a user account makes an API request and the request returns the status code equal to `7` within the log attribute `@data.protoPayload.status.code`. The status code `7` indicates the user account did not have permission to make the API call.\n\n### Triage & Response\n1. Determine the user who made the unauthorized calls.\n2. Determine if there is a misconfiguration in IAM permissions or whether an attacker has compromised the user account.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":5,"createdAt":1587592193834,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.* @data.protoPayload.status.code:7 -@usr.id:(*gserviceaccount.com OR *google.com)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"greater than 1000 failed attempts","condition":"a > 1000"},{"status":"medium","notifications":[],"name":"greater than 100 failed attempts","condition":"a > 100"},{"status":"low","notifications":[],"name":"greater than 10 failed attempts","condition":"a > 10"}],"type":"log_detection","id":"stt-ows-yte","isDefault":true,"name":"GCP unauthorized user activity"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.pubsub.topic"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a GCP Pub/Sub Subscribtion has been deleted. This could stop audit logs from being sent to Datadog.\n\n### Strategy\nMonitor GCP admin activity audit logs to determine when the following method is invoked:\n\n* `google.pubsub.v1.Publisher.DeleteTopic`\n\n### Triage & Response\n1. Review the subscribtion and ensure it is properly configured.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1587592198839,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id","@data.protoPayload.resourceName"],"query":"source:gcp.pubsub.topic @evt.name:google.pubsub.v1.Publisher.DeleteTopic","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"dp6-zom-jyv","isDefault":true,"name":"GCP Pub/Sub topic deleted"},{"creationAuthorId":0,"tags":["technique:T1083-file-and-directory-discovery","source:gcp","scope:gcp.gcs.bucket","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a service account lists out GCS Buckets.\n\n### Strategy\nThis rule lets you monitor GCS bucket admin activity audit logs to determine when a service account invokes the following method:\n\n* `storage.buckets.list`\n\n### Triage & Response\n1. Determine whether this service account should be making list bucket calls.\n * If the account was compromised, secure the account and investigate how it was compromised and if the account made other unauthorized calls.\n * If the owner of the service account intended to make the `ListBuckets` API call, consider whether this API call is needed. It could cause a security issue for the application to know the name of the bucket it needs to access. If it''s not needed, modify this rule''s filter to stop generating signals for this specific service account.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1587592199858,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","bucket_name","@usr.id"],"query":"source:gcp.gcs.bucket @evt.name:storage.buckets.list @usr.id:*gserviceaccount.com","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"cnc-wi1-llf","isDefault":true,"name":"GCP Bucket enumerated"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.pubsub.subscription"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a change to a GCP Pub/Sub Subscription has been made. This could stop audit logs from being sent to Datadog.\n\n### Strategy\nMonitor GCP admin activity audit logs to determine when any of the following methods are invoked:\n\n* `google.pubsub.v1.Subscriber.UpdateSubscription`\n* `google.pubsub.v1.Subscriber.DeleteSubscription`\n\n### Triage & Response\n1. Review the subscribtion and ensure it is properly configured.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1587592205917,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id","@data.protoPayload.resourceName"],"query":"source:gcp.pubsub.subscription @evt.name:(google.pubsub.v1.Subscriber.UpdateSubscription OR google.pubsub.v1.Subscriber.DeleteSubscription)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"tsj-mac-mdc","isDefault":true,"name":"GCP Pub/Sub Subscriber modified"},{"creationAuthorId":0,"tags":["source:okta"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a new Okta API token is created.\n\n### Strategy\nThis rule lets you monitor the following Okta event to detect when a new Okta API token is created:\n\n* `system.api_token.create`\n\n### Triage & Response\n1. Contact the user who created the API token and ensure that the API token is needed.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1589315541698,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.email"],"query":"source:okta @evt.name:system.api_token.create","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"lpf-tho-8sx","isDefault":true,"name":"Okta API Token Created or Enabled"},{"creationAuthorId":0,"tags":["source:okta"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user attempts to bypass multi-factor authentication (MFA).\n\n### Strategy\nThis rule lets you monitor the following Okta events to detect when a user attempts to bypass MFA:\n\n* `user.mfa.attempt_bypass`\n\n### Triage & Response\n1. Contact the user who attempted to bypass MFA and ensure the request was legitimate.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1589315643307,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.email"],"query":"source:okta @evt.name:user.mfa.attempt_bypass","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"wbd-slu-e6s","isDefault":true,"name":"Okta MFA Bypass Attempted"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user attaches to a pod.\n\n### Strategy\nThis rule monitors when a user attaches (`@objectRef.subresource:attach`) to a pod (`@objectRef.resource:pods`).\n\nA user should not need to attach to a pod. Attaching to a pod allows a user to attach to any process in a running container which may give an attacker access to sensitive data.\n\n### Triage & Response\n1. Determine if the user should be attaching to a running container.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":8,"createdAt":1589375996858,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:pods @objectRef.subresource:attach @http.method:create @http.status_code:[101 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:pods @objectRef.subresource:attach @verb:create @responseStatus.code:[101 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"j6t-mva-rul","isDefault":true,"name":"User Attached to a Pod"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an unauthenticated request user is permitted in Kubernetes.\n\n### Strategy\nThis rule monitors when any action is permitted (`@http.status_code:[100 TO 299]`) for an unauthenticated user (`@user.username:\\\"system:anonymous\\\"`).\nThe `/healthz` endpoint is commonly accessed unauthenticated and it is excluded in the query filter.\n\n### Triage & Response\n1. Inspect all of the HTTP paths accessed and determine if any of the path should be permitted by unauthenticated users.\n2. Determine what IP addresses accessed Kubernetes endpoints which may contain sensitive data.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1589376002149,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":[],"query":"@apiVersion:audit.k8s.io* @usr.name:\"system:anonymous\" @http.status_code:[100 TO 299] -@http.url_details.path:\"/healthz\"","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":[],"query":"@apiVersion:audit.k8s.io* @user.username:\"system:anonymous\" @responseStatus.code:[100 TO 299] -@requestURI:\"/healthz\"","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"f1o-py5-a50","isDefault":true,"name":"Anonymous Request Authorized"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a pod is attached to the host network.\n\n### Strategy\nThis rule monitors when a create (`@http.method:create`) action occurs for a pod (`@objectRef.resource:pods`) with the host network `@requestObject.spec.hostNetwork:true` attached.\n\nAttaching the `hostNetwork` permits a pod to access the node''s network adapter allowing a pod to listen to all network traffic for all pods on the node and communicate with other pods on the network namespace.\n\n### Triage & Response\n1. Determine if the pod needs `hostNetwork` access.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1589376007079,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@requestObject.metadata.generateName"],"query":"source:kubernetes.audit @objectRef.resource:pods @http.method:create @requestObject.spec.hostNetwork:true @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@requestObject.metadata.generateName"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:pods @verb:create @requestObject.spec.hostNetwork:true @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"d3g-xpz-cwc","isDefault":true,"name":"Kubernetes Pod Created with hostNetwork"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is creating a pod in one of the Kubernetes default namespaces.\n\n### Strategy\nThis rule monitors when a create (`@http.method:create`) action occurs for a pod (`@objectRef.resource:pods`) within either of the `kube-system` or `kube-public` namespaces.\n\nThe only users creating pods in the `kube-system` namespace should be cluster administrators. Furthermore, it is best practice to not run any cluster critical infrastructure in the `kube-system` namespace.\n\nThe `kube-public` namespace is intended for Kubernetes objects which should be readable by unauthenticated users. Thus, a pod should likely not be created in the `kube-public` namespace.\n\n### Triage & Response\n1. Determine if the user should be creating this new pod in one of the default namespaces.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1589376012191,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:pods @http.method:create @objectRef.namespace:(\"kube-system\" OR \"kube-public\") @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:pods @verb:create @objectRef.namespace:(\"kube-system\" OR \"kube-public\") @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"tvf-ju6-h3i","isDefault":true,"name":"Kubernetes Pod Created in Kube Namespace"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is creating a service account in one of the Kubernetes default namespaces.\n\n### Strategy\nThis rule monitors when a create (`@http.method:create`) action occurs for a service account (`@objectRef.resource:serviceaccounts`) within either of the `kube-system` or `kube-public` namespaces.\n\nThe only users creating service accounts in the `kube-system` namespace should be cluster administrators. Furthermore, it is best practice to not run any cluster critical infrastructure in the `kube-system` namespace.\n\nThe `kube-public` namespace is intended for kubernetes objects which should be readable by unauthenticated users. Thus, a service account should likely not be created in the `kube-public` namespace.\n\n### Triage & Response\n1. Determine if the user should be creating this new service account in one of the default namespaces.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1589376017036,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:serviceaccounts @http.method:create @objectRef.namespace:(\"kube-system\" OR \"kube-public\") @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:serviceaccounts @verb:create @objectRef.namespace:(\"kube-system\" OR \"kube-public\") @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"loy-9ka-bc2","isDefault":true,"name":"Kubernetes Service Account Created in Kube Namespace"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is creating a Kubernetes namespace.\n\n### Strategy\nThis rule monitors when a `create` action occurs for the Kubernetes namespace (`@objectRef.resource:namespaces`) to detect when a user is creating a new Kubernetes namespace.\n\n### Triage & Response\n1. Determine if the user should be creating this new namespace.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1589376020564,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@objectRef.name","@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:namespaces @http.method:create -@objectRef.name:(\"default\" OR \"kube-system\" OR \"kube-public\") @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@objectRef.name","@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:namespaces @verb:create -@objectRef.name:(\"default\" OR \"kube-system\" OR \"kube-public\") @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"zgq-pd9-wgw","isDefault":true,"name":"New Kubernetes Namespace Created"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a service''s port is attached to the node''s IP.\n\n### Strategy\nThis rule monitors when a create (`@http.method:create`) action occurs for a service (`@objectRef.resource:services`) attaching the service''s port to the node''s IP `@requestObject.spec.type:NodePort`.\n\nExposing the service''s port to the the node''s IP allows other hosts on the network namespace to access this service.\n\n### Triage & Response\n1. Determine if the service needs to expose it''s network connection with `NodePort` access.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1589376023160,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@objectRef.name"],"query":"source:kubernetes.audit @objectRef.resource:services @http.method:create @requestObject.spec.type:NodePort @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@objectRef.name"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:services @verb:create @requestObject.spec.type:NodePort @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"cvp-3wz-v3s","isDefault":true,"name":"Kubernetes Service Created with NodePort"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user execs into a pod.\n\n### Strategy\nThis rule monitors when a user execs (`@objectRef.subresource:exec`) into to a pod (`@objectRef.resource:pods`).\n\nA user should not need to exec into a pod. Execing into a pod allows a user to execute any process in container which is not already running.\nIt is most common to execute the bash process to gain an interactive shell.\nIf this is an attacker, they can access any data which the pod has permissions to, including secrets.\n\n### Triage & Response\n1. Determine if the user should be execing into a running container.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":8,"createdAt":1589376094658,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:pods @objectRef.subresource:exec @http.method:create @http.status_code:[101 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:pods @objectRef.subresource:exec @verb:create @responseStatus.code:[101 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"hyd-cu4-79x","isDefault":true,"name":"User Exec into a Pod"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","source:auth0","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## **Goal:**\nDetect a brute force attack on a user. \n\n## **Strategy:**\n**To determine a successful attempt:** Detect when the same user fails to login five times and then successfully logs in. This generates a `MEDIUM` severity signal.\n\n**To determine an unsuccessful attempt:** Detect when the same user fails to login five times. This generates an `INFO` severity signal.\n\n## **Triage & Response:**\n1. Inspect the logs to see if this was a valid login attempt.\n2. See if 2FA was authenticated\n3. If the user was compromised, rotate user credentials.\n\n","options":{"detectionMethod":"threshold","evaluationWindow":600,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1597422956269,"filters":[],"queries":[{"distinctFields":[],"name":"failed_login","aggregation":"count","groupByFields":["@usr.id"],"query":"source:auth0 @evt.name:(failed_login_incorrect_password OR failed_login_invalid_email_or_username)","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@usr.id"],"query":"source:auth0 @evt.name:success_login","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Successful","condition":"failed_login>5 && successful_login>=1"},{"status":"info","notifications":[],"name":"Attempt","condition":"failed_login>10"}],"type":"log_detection","id":"dde-oia-yjr","isDefault":true,"name":"Brute force attack on an Auth0 user"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","source:auth0","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## **Goal:**\nDetect log ins from the same user from multiple countries within a short time frame.\n\n## **Strategy:**\nUtilize geo-ip data to detect when a user logs in from two IP addresses which are in different countries within a short time frame.\n\n## **Triage & Response:**\n1. See if 2FA was used for authentication.\n2. Contact the user and see if this behavior is expected.\n3. If the user was compromised, rotate the user credentials.\n","options":{"detectionMethod":"threshold","evaluationWindow":3600,"maxSignalDuration":86400,"keepAlive":3600},"version":5,"createdAt":1597422956982,"filters":[],"queries":[{"distinctFields":["@network.client.geoip.country.name"],"name":"successful_logins_by_country","aggregation":"cardinality","groupByFields":["@usr.id"],"query":"source:auth0 @evt.name:success_login","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"successful_logins_by_country > 1"}],"type":"log_detection","id":"j6f-xqz-wig","isDefault":true,"name":"Auth0 user authenticating from multiple countries"},{"creationAuthorId":0,"tags":["technique:T1078-valid-accounts","source:auth0","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"## **Goal:**\nDetect when a user logs in with a breached password.\n\n## **Strategy:**\nAuth0 logs an event when a user logs in with a breached password. When this event is detected, Datadog generates a `MEDIUM` severity Security Signal.\n\nYou can see more information on how Auth0 detects breached passwords on their [documentation][1].\n\n## **Triage & Response:**\n1. Inspect the policy and user location to see if this was a login from approved location\n2. See if 2FA was authenticated\n3. If the user was compromised, rotate user credentials.\n\n[1][https://auth0.com/docs/anomaly-detection/brute-force-protection]\n","options":{"detectionMethod":"threshold","evaluationWindow":0,"maxSignalDuration":0,"keepAlive":0},"version":5,"createdAt":1597422957145,"filters":[],"queries":[{"distinctFields":[],"name":"breached_password","aggregation":"count","groupByFields":["@usr.id"],"query":"source:auth0 @evt.name:breached_password","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"breached_password > 0"}],"type":"log_detection","id":"yhw-avf-dz0","isDefault":true,"name":"Auth0 user logged in with a breached password"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","source:auth0","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## **Goal:**\nDetect Account Take Over (ATO) through credential stuffing attack.\n\n## **Strategy:**\n**To determine a successful attempt:** Detect a high number of failed logins from at least ten unique users and at least one successful login for a user. This generates a `HIGH` severity signal.\n\n**To determine an unsuccessful attempt:** Detect a high number of failed logins from at least ten unique users. This generates an `INFO` severity signal.\n\n## **Triage & Response:**\n1. Inspect the logs to see if this was a valid login attempt.\n2. See if 2FA was authenticated\n3. If the user was compromised, rotate user credentials.\n\n","options":{"detectionMethod":"threshold","evaluationWindow":600,"maxSignalDuration":86400,"keepAlive":3600},"version":5,"createdAt":1597422958108,"filters":[],"queries":[{"distinctFields":["@usr.id"],"name":"unique_users_failing_to_login","aggregation":"cardinality","groupByFields":["@network.client.ip"],"query":"source:auth0 @evt.name:(failed_login_incorrect_password OR failed_login_invalid_email_or_username)","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:auth0 @evt.name:success_login","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Successful","condition":"unique_users_failing_to_login>10 && successful_login>=1"},{"status":"info","notifications":[],"name":"Attempt","condition":"unique_users_failing_to_login>10"}],"type":"log_detection","id":"ryo-snu-uva","isDefault":true,"name":"Credential stuffing attack on Auth0"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when any user logs in to Azure AD without multi-factor authentication.\n\n### Strategy\nThis rule monitors Azure Activity logs for Active Directory logs and detects when any `@evt.category` has a value of  `SignInLogs`, and `@properties.authenticationRequirement` has a value of `singleFactorAuthentication`.\n\n### Triage & Response\n1. Reach out to the user to determine if the login was legitimate.\n2. If the login was legitimate, request that the user enables 2FA.\n3. If the login wasn''t legitimate, rotate the credentials.\n4. Review all user accounts to ensure MFA is enabled.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1598468815267,"filters":[],"queries":[{"distinctFields":[],"name":"user_login_without_mfa","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.activedirectory @evt.category:SignInLogs @properties.authenticationRequirement:singleFactorAuthentication","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"user_login_without_mfa > 0"}],"type":"log_detection","id":"c8i-66d-m7u","isDefault":true,"name":"Azure AD Login Without MFA"},{"creationAuthorId":0,"tags":["source:azure","technique:T1190-exploit-public-facing-application","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an Azure Frontdoor Web Application Firewall (WAF) logs a request from an IP address.\n\n### Strategy\nThis rule monitors Azure Activity logs for Frontdoor Web Application Firewall logs and detects when the `@evt.name` has a value of  `Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write` and `@properties.action` has a value of `Log`.\n\n### Triage & Response\n1. Inspect whether this request should have been blocked or not.\n2. Navigate to the IP dashboard and inspect other requests this IP address has made.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":3,"createdAt":1598468815399,"filters":[],"queries":[{"distinctFields":[],"name":"waf_logged_a_request","aggregation":"count","groupByFields":["@properties.clientIP"],"query":"source:azure.network @evt.name:\"Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write\" @properties.action:Log","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"waf_logged_a_request > 0"}],"type":"log_detection","id":"bkk-48l-vem","isDefault":true,"name":"Azure Frontdoor WAF Logged a Request"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an Azure network security group allows inbound traffic from all IP Addresses.\n\n### Strategy\nThis rule monitors Azure Activity logs for network changes and detects when the `@evt.name` has a value of  `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE`, `@properties.securityRules.properties.direction` has a value of `Inbound`, `@properties.securityRules.properties.access` has a value of `Allow`, and `@properties.securityRules.properties.sourceAddressPrefix` has a value of either `0.0.0.0/0` OR `*`.\n\n### Triage & Response\n1. Inspect which Virtual Machines are associated with this security group.\n2. Determine whether this security group and the VMs should permit inbound traffic from all IP addresses.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":3,"createdAt":1598468816111,"filters":[],"queries":[{"distinctFields":[],"name":"security_group_open_to_world","aggregation":"count","groupByFields":["@resourceId"],"query":"source:azure.network @evt.name:\"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE\" @properties.securityRules.properties.direction:Inbound @properties.securityRules.properties.access:Allow @properties.securityRules.properties.sourceAddressPrefix:(\"0.0.0.0/0\" OR \"*\")","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"security_group_open_to_world > 0"}],"type":"log_detection","id":"owu-2uz-8cb","isDefault":true,"name":"Azure Network Security Group Open to the World"},{"creationAuthorId":0,"tags":["source:azure","technique:T1190-exploit-public-facing-application","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an Azure Frontdoor Web Application Firewall (WAF) blocks a request from an IP address.\n\n### Strategy\nThis rule monitors Azure Activity logs for Frontdoor Web Application Firewall logs and detects when the `@evt.name` has a value of  `Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write` and `@properties.action` has a value of `Block`.\n\n### Triage & Response\n1. Inspect whether this request should have been blocked or not.\n2. Navigate to the IP dashboard and inspect other requests this IP address has made.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":3,"createdAt":1598468816869,"filters":[],"queries":[{"distinctFields":[],"name":"waf_blocked_a_request","aggregation":"count","groupByFields":["@properties.clientIP"],"query":"source:azure.network @evt.name:\"Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write\" @properties.action:Block","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"waf_blocked_a_request > 0"}],"type":"log_detection","id":"xyt-fqh-myv","isDefault":true,"name":"Azure Frontdoor WAF Blocked a Request"},{"creationAuthorId":0,"tags":["technique:T1552-unsecured-credentials","source:route53","tactic:TA0006-credential-access","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a requested domain resolves to the AWS Metadata IP (169.254.169.254).\n\n### Strategy\nInspect the Route 53 logs and determine if the response data for a DNS request matches the AWS Metadata IP (169.254.169.254). This could indicate an attacker is attempting to steal your credentials from the AWS metadata service.\n\n### Triage and Response\n1. Determine which instance is associated with the DNS request.\n2. Determine whether the domain name which was requested (`dns.question.name`) should be permitted. If not, conduct an investigation and determine what requested the domain and determine if the AWS metadata credentials were accessed by an attacker.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1603296598998,"filters":[],"queries":[{"distinctFields":[],"name":"domain_resolve_to_metadata_ip","aggregation":"count","groupByFields":["instance-id"],"query":"source:route53 @answers.Rdata:169.254.169.254","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"domain_resolve_to_metadata_ip > 0"}],"type":"log_detection","id":"mwi-zj7-db9","isDefault":true,"name":"EC2 instance resolved a suspicious AWS metadata DNS query"},{"creationAuthorId":0,"tags":["source:route53","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a requested domain has a suspicious TLD.\n\n### Strategy\nInspect the Route 53 logs and determine if the TLD of the DNS question (`@dns.question.name`) matches one of the top 5 TLDs on [Spamhaus''s Most Abused Top Level Domains list][1].\n\n### Triage and Response\n1. Determine which instance is associated with the DNS request.\n2. Determine whether the domain name which was requested (`dns.question.name`) should be permitted. If not, conduct an investigation and determine what requested the domain and determine if the AWS metadata credentials were accessed by an attacker.\n\n[1]: https://www.spamhaus.org/statistics/tlds/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1603296605789,"filters":[],"queries":[{"distinctFields":[],"name":"suspicious_tld","aggregation":"count","groupByFields":["instance-id"],"query":"@dns.question.name:(*.fit. OR *.work. OR *.webcam. OR *.loan. OR *.cf.)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"suspicious_tld > 0"}],"type":"log_detection","id":"dus-bf6-3jr","isDefault":true,"name":"EC2 instance requested a suspicious domain"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an Azure network security group or an Azure network security rule has been created, modified, or deleted.\n\n## Strategy\n\nMonitor Azure activity logs and detect when the `@evt.name` is equal to any one of the following names:\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE`\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/DELETE`\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/WRITE` \n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/DELETE`\n\nand `@evt.outcome` is equal to `Success`.\n\n## Triage & Response\n\n1. Inspect the security group or security rule and determine if it exposes any Azure resources that should not be exposed.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1607106297216,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.network @evt.name:(\"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/WRITE\" OR \"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/DELETE\" OR \"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/DELETE\" OR \"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE\") @evt.outcome:Success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"mju-ynx-i1h","isDefault":true,"name":"Azure Network Security Groups or Rules Created, Modified, or Deleted"},{"creationAuthorId":0,"tags":["source:azure","security:threat-intel"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an Azure firewall threat intelligence alert is received.\n\n## Strategy\n\nMonitor Azure Network Diagnostic logs and detect when `@evt.name` is equal to `AzureFirewallThreatIntelLog`.\n\n## Triage & Response\n\n1. Inspect the threat intelligence log.\n2. Investigate the activity from this IP address.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1607106300940,"filters":[],"queries":[{"distinctFields":[],"name":"azure_firewall_threat_intel_alert","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:azure.network @evt.name:AzureFirewallThreatIntelLog","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"azure_firewall_threat_intel_alert > 0"}],"type":"log_detection","id":"z0v-yfr-qat","isDefault":true,"name":"Azure Firewall Threat Intelligence Alert"}]}'
    headers:
      Cache-Control:
      - no-cache
      Connection:
      - keep-alive
      Content-Disposition:
      - inline
      Content-Security-Policy:
      - frame-ancestors 'self'; report-uri https://api.datadoghq.com/csp-report
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Tue, 20 Apr 2021 14:58:35 GMT
      Pragma:
      - no-cache
      Strict-Transport-Security:
      - max-age=15724800;
      Vary:
      - Accept-Encoding
      X-Content-Type-Options:
      - nosniff
      X-Dd-Debug:
      - SY1h8ScsWq+kYmtbh63ltMLFAZsQjqfrgvdfAoRX+9TzT1sgMBRYaFRwfWWRRe9a
      X-Dd-Version:
      - "35.4351940"
      X-Frame-Options:
      - SAMEORIGIN
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
      Dd-Operation-Id:
      - ListSecurityMonitoringRules
      User-Agent:
      - terraform-provider-datadog/dev (terraform 2.4.4; terraform-cli 0.14.7) datadog-api-client-go/1.0.0-beta.19 (go go1.16.3; os darwin; arch amd64)
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=1&page%5Bsize%5D=100
    method: GET
  response:
    body: '{"meta":{"page":{"total_filtered_count":21,"total_count":121}},"data":[{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an Azure policy assignment has been created.\n\n## Strategy\n\nMonitor Azure activity logs and detect when the `@evt.name` is equal to `MICROSOFT.AUTHORIZATION/POLICYASSIGNMENTS/WRITE` and `@evt.outcome` is equal to `Success`.\n\n## Triage && Response\n\n1. Inspect the policy assignment and determine if an unsolicited change was made on any Azure resources.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1607106302885,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:azure @evt.name:\"MICROSOFT.AUTHORIZATION/POLICYASSIGNMENTS/WRITE\" @evt.outcome:Success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"uvd-ets-ju9","isDefault":true,"name":"Azure Policy Assignment Created"},{"creationAuthorId":0,"tags":["source:azure","tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect and identify the network IP address when multiple user accounts have login attempt activities recorded.\n\n## Strategy\n\nMonitor Azure Active Directory and detect when any `@evt.category` is equal to `SignInLogs` and more than 1 of the `@evt.outcome` are equal to `false` and was initiated by the same network IP address.\n\nSecurity Signal returns **HIGH** if`@evt.outcome` has value of `success` after multiple failed logins were initiated by the same network IP address.\n\n## Triage & Response\n\n1. Inspect the log and determine if this was a valid login attempt.\n2. If the user was compromised, rotate user credentials.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1607106304164,"filters":[],"queries":[{"distinctFields":["@usr.id"],"name":"failed_login_multiple_user_accounts_same_ip_address","aggregation":"cardinality","groupByFields":["@network.client.ip"],"query":"source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:failure","trackType":"logs"},{"distinctFields":[],"name":"successful_login_after_multiple_failed_login_attemtps","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:failure","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Successful login after multiple failed login attempts from the same network IP address","condition":"failed_login_multiple_user_accounts_same_ip_address > 1 && successful_login_after_multiple_failed_login_attemtps > 0"},{"status":"medium","notifications":[],"name":"Multiple failed login attempts from the same network IP address","condition":"failed_login_multiple_user_accounts_same_ip_address > 1 "}],"type":"log_detection","id":"igg-0ve-xxc","isDefault":true,"name":"Credential Stuffing Attack on Azure"},{"creationAuthorId":0,"tags":["source:azure","tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when a user is a victim of an Account Take Over (ATO) by a brute force attack.\n\n## Strategy\n\nMonitor Azure Active Directory Sign-in logs and detect when any `@evt.category` is equal to  `SignInLogs`, and `@evt.outcome` is equal to `failure`.\n\n## Triage & Response\n\n1. Inspect the log and determine if this was a valid login attempt.\n2. If the user was compromised, rotate user credentials.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":5,"createdAt":1607106309289,"filters":[],"queries":[{"distinctFields":[],"name":"failed_login","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:failure","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:failure","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Successful login","condition":"failed_login > 5 && successful_login > 0"},{"status":"info","notifications":[],"name":"Unsuccessful","condition":"failed_login > 5"}],"type":"log_detection","id":"y0f-vsz-xms","isDefault":true,"name":"Azure Portal brute force login"},{"creationAuthorId":0,"tags":["source:azure","tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect and identify the network IP address when multiple user accounts failed to complete the MFA process.\n\n## Strategy\n\nMonitor Azure Active Directory Sign-in logs and detect when any `@evt.category` is equal to `SignInLogs`, `@properties.authenticationRequirement` is equal to `multiFactorAuthentication` and `@evt.outcome` is equal to `failure`.\n\n## Triage & Response \n\n1. Inspect the log and determine if this was a valid login attempt.\n2. If the user was compromised, rotate user credentials.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":5,"createdAt":1607106317340,"filters":[],"queries":[{"distinctFields":["@usr.email"],"name":"failed_login_mfa_denied_w_multiple_user_accounts","aggregation":"cardinality","groupByFields":["@network.client.ip"],"query":"source:azure.activedirectory @evt.category:SignInLogs @properties.authenticationRequirement:multiFactorAuthentication @evt.outcome:failure","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Greater than 10 unique users","condition":"failed_login_mfa_denied_w_multiple_user_accounts > 10"},{"status":"low","notifications":[],"name":"Greater than 3 unique user","condition":"failed_login_mfa_denied_w_multiple_user_accounts > 3"}],"type":"log_detection","id":"zgm-z7i-mhu","isDefault":true,"name":"Azure Login Explicitly Denied MFA"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an Azure network security rule has been created, modified, or deleted.\n\n## Strategy\n\nMonitor Azure activity logs and detect when the `@evt.name` is equal to any of the following names:\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/WRITE` \n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/DELETE`\n\nand `@evt.outcome` is equal to `Success`.\n\n## Triage && Response\n\n1. Inspect the security rule and determine if it exposes any Azure resources that should not be made public.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1607106319051,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.sql @evt.name:\"MICROSOFT.SQL/SERVERS/FIREWALLRULES/WRITE\" @evt.outcome:Success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"kbv-sau-dwv","isDefault":true,"name":"Azure SQL Server Firewall Rules Created or Modified"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an invitation is sent to an external user.\n\n## Strategy\n\nMonitor Azure Active Directory Audit logs and detect when any `@evt.name` is equal to `Invite external user` and the `@evt.outcome` is equal to `success`.\n\n## Triage & Response\n\n1. Review and determine if the invitation and its recipient are valid.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1607106320758,"filters":[],"queries":[{"distinctFields":[],"name":"invite_external_user","aggregation":"count","groupByFields":["@usr.id","@properties.targetResources.userPrincipalName"],"query":"source:azure.activedirectory @evt.name:\"Invite external user\" @evt.outcome:success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"invite_external_user > 0"}],"type":"log_detection","id":"msq-9pm-ift","isDefault":true,"name":"Azure user invited an external user"},{"creationAuthorId":0,"tags":["source:okta"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is denied access to an app.\n\n### Strategy\nThis rule lets you monitor the following Okta events to detect when a user is denied access to an app:\n\n* `app.generic.unauth_app_access_attempt`\n\n### Triage & Response\n1. Determine whether or not the user should have access to this app.\n2. Contact the user to determine whether they attempted to access this app or whether their account is compromised.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1607371843994,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.email","@target_app"],"query":"source:okta @evt.name:app.generic.unauth_app_access_attempt","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"rht-pdf-gyx","isDefault":true,"name":"Okta User Attempted to Access Unauthorized App"},{"creationAuthorId":0,"tags":["category:authentication","tactic:TA0006-credential-access","template:true","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect Account Take Over (ATO) through credential stuffing attack.\n\nA credential stuffing attack is used to gain initial access by compromising user accounts.\n\nThe attacker obtains a list of compromised usernames and passwords from a previous user database breach, phishing attempt, or other means. Then, they use the list of username and passwords to attempt to login to accounts on your application.\n\nIt is common for an attacker to use multiple IP addresses to target your application in order to distribute the attack load for load balancing purposes, to make it more difficult to detect, or make it more difficult to block.\n\n### Strategy\n**To determine a successful attempt:** Detect a high number of failed logins from at least 25 unique users and at least one successful login for a user within a period of time from the same IP address.\n\n**To determine an unsuccessful attempt:** Detect a high number of failed logins from at least ten unique users within a period of time from the same IP address.\n\n### Triage and response\n\nUse [this Datadog runbook](https://app.datadoghq.com/notebook/credentialstuffingrunbook) to assist in your investigation.\n\n1. Determine if it is a legitimate attack or a false positive\n2. Determine compromised users\n3. Remediate compromised user accounts\n","options":{"detectionMethod":"threshold","evaluationWindow":1800,"maxSignalDuration":86400,"keepAlive":3600},"version":2,"createdAt":1608750331867,"filters":[],"queries":[{"distinctFields":["@usr.id"],"name":"unique_users_failing_to_login","aggregation":"cardinality","groupByFields":["@network.client.ip"],"query":"@evt.category:authentication @evt.outcome:failure","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@network.client.ip"],"query":"@evt.category:authentication @evt.outcome:success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Successful - Greater than 50","condition":"unique_users_failing_to_login>50 && successful_login>=1"},{"status":"medium","notifications":[],"name":"Successful","condition":"unique_users_failing_to_login>25 && successful_login>=1"},{"status":"info","notifications":[],"name":"Attempt","condition":"unique_users_failing_to_login>25"}],"type":"log_detection","id":"ypo-jbm-p2s","isDefault":true,"name":"Credential stuffing attack"},{"creationAuthorId":0,"tags":["source:microsoft-365"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user shares a Microsoft 365 Sharepoint document with a guest.\n\n### Strategy\nThis rule monitors the Microsoft 365 logs for the event name `SharingInvitationCreated` when the `TargetUserOrGroupType` is `Guest`.\n\n### Triage & Response\n1. Determine whether this document should be shared with the external user.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1608766365850,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@TargetUserOrGroupName","@ObjectId"],"query":"source:microsoft-365 service:SharePoint @evt.name:(SharingInvitationCreated) @TargetUserOrGroupType:Guest","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"v72-psu-eln","isDefault":true,"name":"Microsoft 365 SharePoint object shared with guest"},{"creationAuthorId":0,"tags":["source:microsoft-365"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user installs an app to Microsoft 365 Teams.\n\n### Strategy\nThis rule monitors the Microsoft 365 logs for the event name `AppInstalled`.\n\n### Triage & Response\n1. Determine whether this app should be installed to Microsoft 365 teams.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1608766367312,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@AddOnName"],"query":"source:microsoft-365 service:MicrosoftTeams @evt.name:AppInstalled","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"i03-grd-ppd","isDefault":true,"name":"Microsoft 365 Teams app installed"},{"creationAuthorId":0,"tags":["source:microsoft-365"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user creates an anonymous link for a Microsoft 365 document in OneDrive. This would allow any unauthenticated user to access this document, if they had the link.\n\n### Strategy\nThis rule monitors the Microsoft 365 logs for the event name `AnonymousLinkCreated`.\n\n### Triage & Response\n1. Determine whether this document should be available anonymously.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1608766368930,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id","@ObjectId"],"query":"source:microsoft-365 service:OneDrive @evt.name:AnonymousLinkCreated","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"y1h-h20-er6","isDefault":true,"name":"Microsoft 365 OneDrive Anonymous Link Created"},{"creationAuthorId":0,"tags":["tactic:TA0004-privilege-escalation","scope:ecs","source:cloudtrail","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user executes a command on an ECS container for the first time. An attacker may use this as a technique to escalate their privileges\nbecause they can run arbitrary commands on behalf of the container with the role and permissions associated with the\ncontainer.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if a user is executing a command on an ECS container:\n\n* `ExecuteCommand`\n\n### Triage & Response\n1. Determine if the user should be executing a command on this container\n","options":{"detectionMethod":"new_value","evaluationWindow":0,"maxSignalDuration":0,"newValueOptions":{"learningDuration":1,"forgetAfter":28},"keepAlive":0},"version":5,"createdAt":1615916348842,"filters":[{"action":"suppress","query":"foo"},{"action":"require","query":"bar"}],"queries":[{"distinctFields":[],"name":"","metric":"@usr.account_id","aggregation":"new_value","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @eventName:ExecuteCommand","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":["@me"],"name":""}],"type":"log_detection","id":"o2p-sbu-rlg","isDefault":true,"name":"Anomalous AWS user executed a command on ECS container"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617971626555,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestSearchSecurityMonitoringSignals-1617971626","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"uf5-sub-gvr","isDefault":false,"name":"Test-TestSearchSecurityMonitoringSignals-1617971626"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617971644219,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1617971644","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"5b2-kdc-3do","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1617971644"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617977693395,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestSearchSecurityMonitoringSignals-1617977693","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"pfs-wtb-6x6","isDefault":false,"name":"Test-TestSearchSecurityMonitoringSignals-1617977693"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617977738802,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1617977738","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"eai-snq-4vj","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1617977738"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617978059498,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1617978059","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"nvz-hsv-5ql","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1617978059"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617978302186,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1617978301","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"cyp-scn-o3m","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1617978301"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"Test rule","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":1,"createdAt":1618083170620,"filters":[],"queries":[{"distinctFields":[],"name":"","metric":"","aggregation":"count","groupByFields":[],"query":"@test:true","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"bno-qku-kqu","isDefault":false,"name":"Test-Create_a_detection_rule_returns_OK_response-1618083170"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1618221021757,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestSearchSecurityMonitoringSignals-1618221021","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"tcl-onp-xbd","isDefault":false,"name":"Test-TestSearchSecurityMonitoringSignals-1618221021"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1618221039709,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1618221039","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"jdo-kok-wpq","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1618221039"}]}'
    headers:
      Cache-Control:
      - no-cache
      Connection:
      - keep-alive
      Content-Disposition:
      - inline
      Content-Security-Policy:
      - frame-ancestors 'self'; report-uri https://api.datadoghq.com/csp-report
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Tue, 20 Apr 2021 14:58:35 GMT
      Pragma:
      - no-cache
      Strict-Transport-Security:
      - max-age=15724800;
      Vary:
      - Accept-Encoding
      X-Content-Type-Options:
      - nosniff
      X-Dd-Debug:
      - Wjq53IVIwnB4SiR238oOYgHFMq/ZYP0LQ/Dv8C2fFLBwTje/dWJHu6pI6vIOK1zG
      X-Dd-Version:
      - "35.4351940"
      X-Frame-Options:
      - SAMEORIGIN
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
      Dd-Operation-Id:
      - ListSecurityMonitoringRules
      User-Agent:
      - terraform-provider-datadog/dev (terraform 2.4.4; terraform-cli 0.14.7) datadog-api-client-go/1.0.0-beta.19 (go go1.16.3; os darwin; arch amd64)
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=2&page%5Bsize%5D=100
    method: GET
  response:
    body: '{"meta":{"page":{"total_filtered_count":0,"total_count":121}},"data":[]}'
    headers:
      Cache-Control:
      - no-cache
      Connection:
      - keep-alive
      Content-Disposition:
      - inline
      Content-Security-Policy:
      - frame-ancestors 'self'; report-uri https://api.datadoghq.com/csp-report
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Tue, 20 Apr 2021 14:58:35 GMT
      Pragma:
      - no-cache
      Strict-Transport-Security:
      - max-age=15724800;
      Vary:
      - Accept-Encoding
      X-Content-Type-Options:
      - nosniff
      X-Dd-Debug:
      - JpIJLwIH2nFlZOC+u71rq7aAOL43MLZN3MUsL+gpYHdZz5QLUOG8Jysf8kVK6tPU
      X-Dd-Version:
      - "35.4351940"
      X-Frame-Options:
      - SAMEORIGIN
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
      Dd-Operation-Id:
      - ListSecurityMonitoringRules
      User-Agent:
      - terraform-provider-datadog/dev (terraform 2.4.4; terraform-cli 0.14.7) datadog-api-client-go/1.0.0-beta.19 (go go1.16.3; os darwin; arch amd64)
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=0&page%5Bsize%5D=100
    method: GET
  response:
    body: '{"meta":{"page":{"total_filtered_count":100,"total_count":121}},"data":[{"creationAuthorId":0,"tags":["scope:iam","source:guardduty","technique:T1069-permission-groups-discovery","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is enumerating IAM principals.\n\n### Strategy\nThis rule lets you leverage GuardDuty to detect when an attacker is enumerating IAM principals. The GuardDuty Findings which trigger this signal:\n\n* [Recon:IAMUser/NetworkPermissions][1]\n* [Recon:IAMUser/ResourcePermissions][2]\n* [Recon:IAMUser/UserPermissions][3] \n\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon7\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon8\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon9","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870276065,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Recon\\:IAMUser\\/NetworkPermissions OR Recon\\:IAMUser\\/ResourcePermissions OR Recon\\:IAMUser\\/UserPermissions)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"u2j-xph-kc7","isDefault":true,"name":"AWS IAM principal enumeration"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is communicating with a cryptocurrency server\n\n### Strategy\nThis rule lets you leverage GuardDuty to detect when an EC2 instance has made a DNS request or is communicating with an IP that is associated with cryptocurrency operations. The following GuardDuty Findings trigger this signal:\n\n* [CryptoCurrency:EC2/BitcoinTool.B!DNS][1]\n* [CryptoCurrency:EC2/BitcoinTool.B][2]\n\n\n### Triage & Response\n1. Determine which domain name or IP address triggered the signal. This can be found in the samples. \n2. If the domain or IP address should not have been requested, open a security investigation, and determine which process requested the domain name or IP address.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_crypto.html#crypto3\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_crypto.html#crypto4","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870276326,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(CryptoCurrency\\:EC2\\/BitcoinTool.B\\!DNS OR CryptoCurrency\\:EC2\\/BitcoinTool.B)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ky3-ds4-ipb","isDefault":true,"name":"AWS EC2 instance communicating with a cryptocurrency server"},{"creationAuthorId":0,"tags":["technique:T1485-data-destruction","tactic:TA0040-impact","source:cloudtrail","scope:rds","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is destroying a RDS Cluster.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting a RDS cluster:\n\n* [DeleteDBCluster][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/rds/delete-db-cluster.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870276546,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteDBCluster","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"6ng-pk1-ukh","isDefault":true,"name":"AWS RDS Cluster deleted"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","scope:template","technique:T1110-brute-force","security:attack"],"isEnabled":false,"hasExtendedTitle":true,"message":"### Goal\nDetect Account Take Over (ATO) through brute force attempts\n\n### Strategy\nTo determine a successful attempt: Detect a high amount of failed logins and at least one successful login for a given user. This will generate a `HIGH` severity signal.\nTo determine an attempt: Detect a high amount of failed logins. This will generate an `INFO` severity signal.\n\n### Triage & Response\n1. Inspect the logs to see if this was a valid login attempt.\n2. See if 2FA was authenticated.\n3. If the user was compromised, rotate user credentials.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":7200,"keepAlive":3600},"version":3,"createdAt":1585870276794,"filters":[],"queries":[{"distinctFields":[],"name":"failed_login","aggregation":"count","groupByFields":["@usr.name"],"query":"@evt.name:authentication @evt.outcome:failure @usr.name:*","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@usr.name"],"query":"@evt.name:authentication @evt.outcome:success @usr.name:*","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":["@slack-secops"],"name":"Successful","condition":"failed_login > 50 && successful_login > 0"},{"status":"info","notifications":["@slack-secops"],"name":"Attempt","condition":"failed_login > 5"}],"type":"log_detection","id":"jhi-klp-smm","isDefault":true,"name":"TEMPLATE - Brute Force Attack Grouped By User"},{"creationAuthorId":0,"tags":["scope:eventbridge","technique:T1089-disabling-security-tools","source:cloudtrail","tactic:TA0005-defense-evasion","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is trying to evade defenses by deleting or disabling EventBridge rules.\n\n### Strategy\nThis rule lets you monitor these CloudTrail API calls to detect if an attacker is modifying or disabling EventBridge rules:\n\n* [DeleteRule][1]\n* [DisableRule][2]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DeleteRule.html\n[2]: https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DisableRule.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870277044,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DeleteRule OR DisableRule)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"mq6-cjx-h9o","isDefault":true,"name":"AWS EventBridge rule disabled or deleted"},{"creationAuthorId":0,"tags":["scope:ec2","source:cloudtrail","tactic:TA0005-defense-evasion","technique:T1066-indicator-removal-from-tools","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is removing FlowLogs to cover their tracks.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting FlowLogs:\n\n* [DeleteFlowLogs][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFlowLogs.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870278493,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteFlowLogs","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"cws-b4f-uoh","isDefault":true,"name":"AWS FlowLogs removed"},{"creationAuthorId":0,"tags":["technique:T1089-disabling-security-tools","scope:guardduty","source:cloudtrail","tactic:TA0005-defense-evasion","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is trying to evade defenses by deleting a GuardDuty detector.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting a GuardDuty Detector:\n\n* [DeleteDetector][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/delete-detector.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870279177,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteDetector","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"pzi-led-yyc","isDefault":true,"name":"AWS GuardDuty detector deleted"},{"creationAuthorId":0,"tags":["scope:ecs","technique:T1485-data-destruction","tactic:TA0040-impact","source:cloudtrail","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is destroying an ECS Cluster\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an ECS cluster is deleted:\n\n* [DeleteCluster][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeleteCluster.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870279810,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteCluster","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"vwu-6id-9lz","isDefault":true,"name":"AWS ECS cluster deleted"},{"creationAuthorId":0,"tags":["security:compliance","scope:s3","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when the S3 Public Access Block configuration has been removed \n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting the S3 Public Access Block configuration:\n\n* [DeleteAccountPublicAccessBlock][1]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and inform them of best practices of enabling Public Access Block on S3 buckets.\n3. Re-enable Public Access Block on the S3 bucket.\n\nMore details on S3 Public Block Public Access can be found [here][2].\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/s3api/delete-public-access-block.html\n[2]: https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870280316,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteAccountPublicAccessBlock","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"uxr-5wk-8hk","isDefault":true,"name":"AWS S3 Public Access Block removed"},{"creationAuthorId":0,"tags":["control:cis-3.14","security:compliance","scope:ec2","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is destroying a VPC.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting a VPC:\n\n* [DeleteVpc][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-vpc.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1585870280906,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DeleteVpc OR CreateVpc OR ModifyVpcAttribute OR AcceptVpcPeeringConnection OR CreateVpcPeeringConnection OR DeleteVpcPeeringConnection OR RejectVpcPeeringConnection OR  AttachClassicLinkVpc OR  DetachClassicLinkVpc OR DisableVpcClassicLink OR EnableVpcClassicLink)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"igj-dr4-ico","isDefault":true,"name":"AWS VPC created or modified"},{"creationAuthorId":0,"tags":["source:gsuite","scope:gsuite","security:threat-intel"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user attempts to log in with a password which is known to be compromised.\n\n### Strategy\nThis rule allows you to monitor this Google Activity API call to detect if an attacker is trying to login with a leaked password: \n\n* [Leaked password][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the compromised password.\n2. Contact the user and ensure they rotate the password on Google and any other accounts where they may have reused this password. Ensure the user is aware of strong password guidelines.\n\n[1]: https://developers.google.com/admin-sdk/reports/v1/appendix/activity/login#account_disabled_password_leak","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870280553,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@actor.email"],"query":"source:gsuite @event.type:account_warning @event.name:account_disabled_password_leak","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"9zi-bom-nmh","isDefault":true,"name":"User attempted login with leaked password"},{"creationAuthorId":0,"tags":["technique:T1083-file-and-directory-discovery","scope:s3","source:cloudtrail","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance makes an API call to AWS to list all of the S3 Buckets.\n\n### Strategy\nThis rule lets you monitor CloudTrail to detect a [ListBuckets][1] API call with the session name prefixed with `i-`. A session name prefixed with `i-` typically indicates that it is an EC2 instance using an [Instance Profile][2] to communicate with other AWS services, which is a common attacker technique to see the full list of S3 buckets in your AWS account.\n Determine if the EC2 instance should be making this API call. \n* If not, rotate the credentials, verify what else may have been accessed and open an investigation into how this instance was compromised.\n   * If the application or legitimate user on the EC2 instance is making the `ListBuckets` API call, consider whether this API call is really needed.  \n\n[1]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html\n[2]: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html#ec2-instance-profile","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870281123,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @userIdentity.session_name:i-* @evt.name:ListBuckets","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"t6r-kqt-hxb","isDefault":true,"name":"AWS S3 Buckets enumerated"},{"creationAuthorId":0,"tags":["security:compliance","scope:amazon","framework:cis-aws","control:cis-3.3","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect AWS root user activity. \n\n### Strategy\nMonitor CloudTrail and detect when any `@userIdentity.type` has a value of `Root`, but is not invoked by an AWS service.\n\n### Triage & Response\n1. Reach out to the user to determine if the login was legitimate. \n2. If the login wasn''t legitimate, rotate the credentials, enable 2FA, and open an investigation. \n\nFor best practices, check out the [AWS Root Account Best Practices][1] documentation.\n\n[1]: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1585870281964,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:cloudtrail @userIdentity.type:Root  -@userIdentity.invokedBy:*  -@eventType:AwsServiceEvent","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"2kn-z6k-6kf","isDefault":true,"name":"AWS root account activity"},{"creationAuthorId":0,"tags":["scope:ec2","technique:T1485-data-destruction","tactic:TA0040-impact","source:cloudtrail","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is destroying an EC2 subnet.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting an EC2 subnet.\n\n* [DeleteSubnet][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-subnet.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870282197,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteSubnet","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ygi-fi5-qns","isDefault":true,"name":"AWS EC2 subnet deleted"},{"creationAuthorId":0,"tags":["security:compliance","control:cis-3.9","framework:cis-aws","scope:amazon-config","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is trying to evade defenses by disabling an AWS configuration.\n\n### Strategy\nThis rule lets you monitor these CloudTrail API calls to detect if an attacker is trying to stop recording configurations of your AWS resources or trying to delete a delivery channel:\n\n* [StopConfigurationRecorder][1] \n* [DeleteDeliveryChannel][2] \n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/config/latest/APIReference/API_StopConfigurationRecorder.html\n[2]: https://docs.aws.amazon.com/config/latest/APIReference/API_DeleteDeliveryChannel.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1585870283149,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(StopConfigurationRecorder OR DeleteDeliveryChannel OR PutDeliveryChannel OR PutConfigurationRecorder)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"p1b-9np-rw1","isDefault":true,"name":"AWS config modified"},{"creationAuthorId":0,"tags":["security:threat-intel","scope:template"],"isEnabled":false,"hasExtendedTitle":true,"message":"### Goal\nDetect when a stolen laptop has been connected to the network.\n\n### Strategy\nUsing the Datadog [Lookup Processor](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#lookup-processor) you can maintain a blocklist of MAC addresses.\nWhen a MAC address connects to the network, the @threat.stolen_laptop attribute is set to `true`.\nThis threat detection rule queries for `@threat.stolen_laptop:true` and generates a security signal. \n\n### Triage & Response\nEnter your triage and response process for when a stolen laptop has connected to your network to help users responding to the security signal quickly triage and respond to the signal. \n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870283379,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.mac"],"query":"@threat.stolen_laptop:true @network.client.mac:*","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ap3-xy9-tsm","isDefault":true,"name":"TEMPLATE - Stolen Laptop Connected to Network"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":false,"hasExtendedTitle":true,"message":"### Goal\nDetect an account take over (ATO) through brute force attempts.\n\n### Strategy\nTo determine a successful attempt: Detect a high amount of failed logins and at least one successful login for a given IP address. This will generate a `HIGH` severity signal.\nTo determine an attempt: Detect a high amount of failed logins for a given IP address. This will generate an `INFO severity signal.\n\n### Triage & Response\n1. Inspect the logs to see if this was a valid login attempt.\n2. See if 2FA was authenticated.\n3. If the user was compromised, rotate user credentials.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":7200,"keepAlive":3600},"version":2,"createdAt":1585870283641,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.name"],"query":"@evt.name:authentication @evt.outcome:failure","trackType":"logs"},{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.name"],"query":"@evt.name:authentication @evt.outcome:success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":["@slack-secops"],"name":"Successful","condition":"a>5 && b>0"},{"status":"info","notifications":[],"name":"Attempted","condition":"a>5"}],"type":"log_detection","id":"wce-cxo-pe4","isDefault":true,"name":"TEMPLATE - Brute Force Attack Grouped By IP"},{"creationAuthorId":0,"tags":["security:compliance","scope:cloudtrail","framework:cis-aws","source:cloudtrail","control:cis-3.5"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is trying to evade defenses by disabling or modifying CloudTrail.\n\n### Strategy\nThis rule lets you monitor these CloudTrail API calls to detect if an attacker is modifying or disabling CloudTrail:\n\n* [DeleteTrail][1]\n* [UpdateTrail][2]\n* [StopLogging][3]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_DeleteTrail.html\n[2]: https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_UpdateTrail.html\n[3]: https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_StopLogging.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1585870283907,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DeleteTrail OR UpdateTrail OR StopLogging OR CreateTrail OR StartLogging)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"4hv-083-miw","isDefault":true,"name":"AWS CloudTrail configuration modified"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect Brute Force Attacks\n\n### Strategy\nLeverage GuardDuty and detect when an attacker is performing a brute force attack. The following are GuardDuty findings trigger this signal:\n\n* [UnauthorizedAccess:EC2/SSHBruteForce][1]\n* [UnauthorizedAccess:EC2/RDPBruteForce][2]\n\n\n### Triage & Response\n1. Inspect the role of the EC2 instance in the attack. Find the role in the signal name - either `ACTOR` or `TARGET`.\n   * If you are the `TARGET` and the instance is available on the internet, expect to see IPs scanning your systems.\n   * If you are the `TARGET` and the instance is **not** available on the internet, this means a host on your internal network is scanning your EC2 instance. Open an investigation.\n   * If you are the `ACTOR`, this means that your instance is performing brute force attacks on other systems. Open an investigation.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized9\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized10","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":11,"createdAt":1585870284202,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/SSHBruteForce OR UnauthorizedAccess\\:EC2\\/RDPBruteForce) @detail.service.resourceRole:ACTOR","trackType":"logs"},{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/SSHBruteForce OR UnauthorizedAccess\\:EC2\\/RDPBruteForce) @detail.service.resourceRole:TARGET","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"ACTOR","condition":"a > 0"},{"status":"info","notifications":[],"name":"TARGET","condition":"b > 0"}],"type":"log_detection","id":"vyl-ylc-3io","isDefault":true,"name":"AWS EC2 instance involved in brute force attack"},{"creationAuthorId":0,"tags":["security:compliance","scope:ec2","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EBS encryption is disabled by default. \n\n### Strategy\nMonitor CloudTrail and detect when EBS encryption is disabled by default via the following API call:\n\n* [DisableEbsEncryptionByDefault][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user and let them know that it is best practice to enable EBS encryption by default.\n3. Re-enable EBS encryption by default.\n\nFor more information about Amazon EBS Encryption, check out the [Amazon EBS Encryption][2] documentation.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableEbsEncryptionByDefault.html\n[2]: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870284527,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DisableEbsEncryptionByDefault","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"4s7-uuu-lo8","isDefault":true,"name":"AWS EBS default encryption disabled"},{"creationAuthorId":0,"tags":["security:compliance","framework:cis-aws","control:cis-3.2","scope:aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when any user logs in to your AWS console without multi-factor authentication.\n\n### Strategy\nThis rule monitors CloudTrail and detects when any `@evt.name` has a value of  `Console Login`, and `@additionalEventData.MFAUsed` has a value of `no`. \n\n**Note:** This rule ignores logins using SAML because 2FA is implemented on the IdP and not through AWS.\n\n### Triage & Response\n1. Reach out to the user to determine if the login was legitimate. \n2. If the login was legitimate, request that the user enables 2FA. \n3. If the login wasn''t legitimate, rotate the credentials. \n4. Review all user accounts to ensure MFA is enabled. \n\n**Note:** There is a separate rule to detect [Root Login without MFA][1]. \n\n[1]: /security_monitoring/default_rules/cloudtrail-aws-root-login-without-mfa/","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1585870278209,"filters":[],"queries":[{"distinctFields":[],"name":"user_login_without_mfa","aggregation":"count","groupByFields":["@userIdentity.accountId","@usr.name"],"query":"source:cloudtrail @evt.name:ConsoleLogin @additionalEventData.MFAUsed:No @responseElements.ConsoleLogin:Success -@userIdentity.type:Root -@additionalEventData.SamlProviderArn:*","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"user_login_without_mfa > 0"}],"type":"log_detection","id":"wkk-muq-vg8","isDefault":true,"name":"AWS Console login without MFA"},{"creationAuthorId":0,"tags":["security:compliance","scope:amazon","framework:cis-aws","control:cis-3.2","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a root user logs into the AWS console without multi-factor authentication.\n\n### Strategy\nMonitor CloudTrail and detect when any `@evt.name` has a value of `Console Login`, `@userIdentity.type` has a value of `Root`, and `@additionalEventData.MFAUsed` has a value of `no`. \n\n**Note:** This rule ignores logins using SAML because 2FA is implemented on the IdP and not through AWS.\n\n### Triage & Response\n1. Reach out to the user to determine if the login was legitimate. \n2. If the login was legitimate, request that the user enables 2FA on the root account. \n3. If the login wasn''t legitimate, rotate the credentials. \n4. Review all root user accounts to ensure MFA is enabled. \n\n**Note:** There is a separate rule to detect [Login without MFA for non-root users][1]. \n\n[1]: /security_monitoring/default_rules/cloudtrail-aws-login-without-mfa/","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1585870278956,"filters":[],"queries":[{"distinctFields":[],"name":"root_login_without_mfa","aggregation":"count","groupByFields":["@userIdentity.accountId"],"query":"source:cloudtrail @evt.name:ConsoleLogin @additionalEventData.MFAUsed:No @responseElements.ConsoleLogin:Success @userIdentity.type:Root -@additionalEventData.SamlProviderArn:*","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"root_login_without_mfa > 0"}],"type":"log_detection","id":"miy-rjb-9wq","isDefault":true,"name":"AWS Console root login without MFA"},{"creationAuthorId":0,"tags":["security:compliance","control:cis-3.8","scope:s3","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a S3 Bucket policy is modified.\n\n### Strategy\nMonitor CloudTrail and detect when S3 policies are being modified via one of the following API calls:\n* [PutBucketAcl][1]\n* [PutBucketPolicy][2]\n* [PutBucketCors][3]\n* [PutBucketLifecycle][4]\n* [PutBucketReplication][5]\n* [DeleteBucketPolicy][6]\n* [DeleteBucketCors][7]\n* [DeleteBucketLifecycle][8]\n* [DeleteBucketReplication][9]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAcl.html\n [2]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketPolicy.html\n [3]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketCors.html\n [4]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html\n [5]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketReplication.html\n [6]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketPolicy.html\n [7]:  https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketCors.html\n [8]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html\n [9]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketReplication.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475579499,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(PutBucketAcl OR PutBucketPolicy OR PutBucketCors OR PutBucketLifecycle OR PutBucketReplication OR DeleteBucketPolicy OR DeleteBucketCors OR DeleteBucketLifecycle OR DeleteBucketReplication)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"nl3-oht-jhi","isDefault":true,"name":"AWS S3 Bucket policy modified"},{"creationAuthorId":0,"tags":["security:compliance","scope:kms","framework:cis-aws","source:cloudtrail","control:cis-3.7"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a CMK is deleted or scheduled for deletion.\n\n### Strategy\nThis rule lets you monitor these CloudTrail API calls to detect if an attacker is deleting CMKs:\n* [DisableKey][1]\n* [ScheduleKeyDeletion][2]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/kms/latest/APIReference/API_DisableKey.html\n[2]: https://docs.aws.amazon.com/kms/latest/APIReference/API_ScheduleKeyDeletion.html ","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475576501,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DisableKey OR ScheduleKeyDeletion)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"iff-hhm-bd3","isDefault":true,"name":"AWS CMK deleted or scheduled for deletion"},{"creationAuthorId":0,"tags":["security:compliance","scope:ec2","control:cis-3.11","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS Network Access Control List (NACL) has been created or modified.\n\n### Strategy\nThis rule lets you monitor CloudTrail and detect when an AWS NACL has been created or modified with one of the following API calls:\n* [CreateNetworkAcl][1] \n* [CreateNetworkAclEntry][2] \n* [DeleteNetworkAcl][3] \n* [DeleteNetworkAclEntry][4] \n* [ReplaceNetworkAclEntry][5] \n* [ReplaceNetworkAclAssociation][6]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAcl.html\n[2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAclEntry.html\n[3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkAcl.html\n[4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkAclEntry.html\n[5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceNetworkAclEntry.html\n[6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceNetworkAclAssociation.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475579808,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(CreateNetworkAcl OR CreateNetworkAclEntry OR DeleteNetworkAcl OR DeleteNetworkAclEntry OR ReplaceNetworkAclEntry OR ReplaceNetworkAclAssociation)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"pcs-k05-rbc","isDefault":true,"name":"AWS Network Access Control List created or modified"},{"creationAuthorId":0,"tags":["security:compliance","scope:ec2","control:cis-3.12","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS Network Gateway has been created or modified.\n\n### Strategy\nMonitor CloudTrail and detect when an AWS Network Gateway has been created or modified with one of the following API calls:\n* [CreateCustomerGateway][1] \n* [DeleteCustomerGateway][2] \n* [AttachInternetGateway][3] \n* [CreateInternetGateway][4]\n* [DeleteInternetGateway][5] \n* [DetachInternetGateway][6]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCustomerGateway \n [2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteCustomerGateway \n [3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachInternetGateway \n [4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateInternetGateway \n [5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteInternetGateway \n [6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachInternetGateway.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475581301,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(CreateCustomerGateway OR DeleteCustomerGateway OR AttachInternetGateway OR CreateInternetGateway OR DeleteInternetGateway OR DetachInternetGateway)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"umr-47s-eyj","isDefault":true,"name":"AWS Network Gateway created or modified"},{"creationAuthorId":0,"tags":["scope:iam","security:compliance","framework:cis-aws","source:cloudtrail","control:cis-3.6"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is a victim of an Account Take Over (ATO) by a brute force attack.\n\n### Strategy\n This rule monitors CloudTrail and detects when any `@evt.name` has a value of `Console Login`, and `@responseElements.ConsoleLogin` has a value of `Failure`.\n\n### Triage & Response\n1. Determine if the user logged in with 2FA.\n2. Reach out to the user and ensure the login was legitimate.","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":7,"createdAt":1584475581986,"filters":[],"queries":[{"distinctFields":[],"name":"failed_login","aggregation":"count","groupByFields":["@userIdentity.accountId","@usr.name"],"query":"source:cloudtrail @evt.name:ConsoleLogin @responseElements.ConsoleLogin:Failure","trackType":"logs"},{"distinctFields":[],"name":"successful_login_without_mfa","aggregation":"count","groupByFields":["@userIdentity.accountId","@usr.name"],"query":"source:cloudtrail @evt.name:ConsoleLogin @responseElements.ConsoleLogin:Success @additionalEventData.MFAUsed:No","trackType":"logs"},{"distinctFields":[],"name":"successful_login_with_mfa","aggregation":"count","groupByFields":["@userIdentity.accountId","@usr.name"],"query":"source:cloudtrail @evt.name:ConsoleLogin @responseElements.ConsoleLogin:Success @additionalEventData.MFAUsed:Yes","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Potentially Successful - NO MFA","condition":"failed_login > 5 && successful_login_without_mfa > 0"},{"status":"info","notifications":[],"name":"Potentially Successful - MFA Used","condition":"failed_login > 5 && successful_login_with_mfa > 0"},{"status":"info","notifications":[],"name":"Unsuccessful","condition":"failed_login > 5"}],"type":"log_detection","id":"csj-nez-h1v","isDefault":true,"name":"AWS Console brute force login"},{"creationAuthorId":0,"tags":["security:compliance","control:cis-3.13","scope:ec2","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS Route Table has been created or modified.\n\n### Strategy\nThis rule lets you monitor CloudTrail and detect when an AWS Route Table has been created or modified with one of the following API calls:\n* [CreateRoute][1] \n* [CreateRouteTable][2] \n* [ReplaceRoute][3] \n* [ReplaceRouteTableAssociation][4] \n* [DeleteRouteTable][5] \n* [DeleteRoute][6] \n* [DisassociateRouteTable][7]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRoute.html \n [2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRouteTable \n [3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRoute.html \n [4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRouteTableAssociation \n [5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRouteTable.html \n [6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRoute.html \n [7]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateRouteTable.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475582644,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(CreateRoute OR CreateRouteTable OR ReplaceRoute OR ReplaceRouteTableAssociation OR DeleteRouteTable OR DeleteRoute OR DisassociateRouteTable)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"qgo-jqs-03x","isDefault":true,"name":"AWS Route Table created or modified"},{"creationAuthorId":0,"tags":["security:compliance","scope:amazon","framework:cis-aws","source:cloudtrail","control:cis-3.1"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when unauthorized activity is detected in AWS.\n\n### Strategy\nThis rule lets you monitor CloudTrail to detect when the error message of `AccessDenied` is returned.\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":8,"createdAt":1584475582956,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail \"AccessDenied\"","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"greater than 1000 failed attempts","condition":"a > 1000"},{"status":"medium","notifications":[],"name":"greater than 100 failed attempts","condition":"a > 100"},{"status":"low","notifications":[],"name":"greater than 10 failed attempts","condition":"a > 10"}],"type":"log_detection","id":"3d9-oev-jbm","isDefault":true,"name":"AWS unauthorized activity"},{"creationAuthorId":0,"tags":["scope:iam","security:compliance","framework:cis-aws","source:cloudtrail","control:cis-3.4"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect a change to an AWS IAM Policy.\n\n### Strategy\nThis rule lets you monitor CloudTrail and detect when any event pertaining to an AWS IAM policy is detected with one of the following API calls:\n* [DeleteGroupPolicy][1]\n* [DeleteRolePolicy][16]\n* [DeleteUserPolicy][2]\n* [PutGroupPolicy][3]\n* [PutRolePolicy][4]\n* [PutUserPolicy][5]\n* [CreatePolicy][6]\n* [DeletePolicy][7]\n* [CreatePolicyVersion][8]\n* [DeletePolicyVersion][9]\n* [AttachRolePolicy][10]\n* [DetachRolePolicy][11]\n* [AttachUserPolicy][12]\n* [DetachUserPolicy][13]\n* [AttachGroupPolicy][14]\n* [DetachGroupPolicy][15]\n\n### Triage & Response\n1. Review the IAM Policy change and ensure it does not negatively impact your risk in relation to authentication or authorization controls.\n\n[1]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteGroupPolicy.html\n[2]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteUserPolicy.html\n[3]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutGroupPolicy.html\n[4]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutRolePolicy.html\n[5]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutUserPolicy.html\n[6]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicy.html\n[7]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeletePolicy.html\n[8]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicyVersion.html\n[9]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeletePolicyVersion.html\n[10]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachRolePolicy.html\n[11]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachRolePolicy.html\n[12]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachUserPolicy.html\n[13]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachUserPolicy.html\n[14]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachGroupPolicy.html\n[15]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachGroupPolicy.html\n[16]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteRolePolicy.html\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":6,"createdAt":1584475584008,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DeleteGroupPolicy OR DeleteRolePolicy OR DeleteUserPolicy OR PutGroupPolicy OR PutRolePolicy OR PutUserPolicy OR CreatePolicy OR DeletePolicy OR CreatePolicyVersion OR DeletePolicyVersion OR AttachRolePolicy OR DetachRolePolicy OR AttachUserPolicy OR DetachUserPolicy OR AttachGroupPolicy OR DetachGroupPolicy)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"z8s-u06-ctu","isDefault":true,"name":"AWS IAM policy changed"},{"creationAuthorId":0,"tags":["security:compliance","scope:ec2","framework:cis-aws","source:cloudtrail","control:cis-3.10"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS security group has been modified.\n\n### Strategy\nMonitor CloudTrail and detect when an AWS security group has been created or modified with one of the following API calls:\n* [AuthorizeSecurityGroupIngress][1] \n* [AuthorizeSecurityGroupEgress][2] \n* [RevokeSecurityGroupIngress][3] \n* [RevokeSecurityGroupEgress][4] \n* [CreateSecurityGroup][5] \n* [DeleteSecurityGroup][6]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupIngress.html \n [2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupEgress.html \n [3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeSecurityGroupIngress.html \n [4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeSecurityGroupEgress.html \n [5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html \n [6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSecurityGroup.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475583507,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(AuthorizeSecurityGroupIngress OR AuthorizeSecurityGroupEgress OR RevokeSecurityGroupIngress OR RevokeSecurityGroupEgress OR CreateSecurityGroup OR DeleteSecurityGroup)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"bax-btp-3ct","isDefault":true,"name":"AWS security group created or modified"},{"creationAuthorId":0,"tags":["source:twistlock"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect vulnerabilities in container images.\n\n### Strategy\nThis rule lets you monitor Twistlock logs to detect `Critical` severity vulnerabilities in a container image. \n\n### Triage & Response\n1. Determine the impact of this vulnerability.\n2. Update the container image in the registry with a patched version of the software.\n3. Deploy the new image to all containers running the vulnerable image.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870278701,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@vulnerability.cve","@vulnerability.package.name","@vulnerability.image_name"],"query":"source:twistlock @vulnerability.log_type:vulnerability @vulnerability.severity:critical","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"d7s-rex-gjv","isDefault":true,"name":"Container image vulnerability detected"},{"creationAuthorId":0,"tags":["source:twistlock"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a container is not running within compliance standards.\n\n### Strategy\nThis rule lets you monitor Twistlock logs to detect when `Critical` severity compliance issues are discovered in a running container. \n\n### Triage & Response\n1. Determine the impact of the compliance finding.\n2. Remediate the compliance finding.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870281390,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@vulnerability.compliance_id","@vulnerability.container_name"],"query":"source:twistlock @vulnerability.log_type:compliance @vulnerability.severity:critical","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"9vp-d1j-kwp","isDefault":true,"name":"Container violated compliance standards"},{"creationAuthorId":0,"tags":["source:signal_sciences","scope:signal_sciences"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an IP is flagged by Signal Sciences.\n\n### Strategy\nThis rule lets you monitor Signal Sciences events submitted through the Signal Sciences [integration][1] to detect when an IP is flagged. \n\n### Triage & Response\n1. Determine whether the attack is a false positive.\n2. Determine whether the attack was successful.\n3. If the attack exploited a vulnerability in the application, triage the vulnerability.\n\n[1]: https://app.datadoghq.com/account/settings#integrations/sigsci","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":3,"createdAt":1584993292228,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":[],"query":"source:signal_sciences @title:*flag","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"bmg-ftn-dzo","isDefault":true,"name":"Signal Sciences flagged an IP"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.service.account"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a new service account is created.\n\n### Strategy\nThis rule lets you monitor GCP admin activity audit logs to determine when a service account is created. \n\n### Triage & Response\n1. Contact the user who created the service account and ensure that the account is needed and that the role is scoped properly.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870281733,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.service.account @evt.name:google.iam.admin.v1.CreateServiceAccount","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"szx-4kh-eqs","isDefault":true,"name":"GCP service account created"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.service.account"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a new service account key is created.  An attacker could use this key as a backdoor to your account. \n\n### Strategy\nThis rule lets you monitor GCP admin activity audit logs to detect the creation of a service account key. \n\n### Triage & Response\n1. Contact the user who created the service account key to ensure they''re managing the key securely.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870277946,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.service.account @evt.name:google.iam.admin.v1.CreateServiceAccountKey","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"79j-4wh-xlq","isDefault":true,"name":"GCP service account key created"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.project"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect a change to the IAM policy. \n\n### Strategy\nThis rule lets you monitor GCP admin activity audit logs to determine when the `SetIamPolicy` method is invoked. \n\n### Triage & Response\n1. Review the log and inspect the policy deltas (`@data.protoPayload.serviceData.policyDelta.bindingDeltas`) and ensure none of the actions are `REMOVE`.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870280073,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.project @evt.name:SetIamPolicy","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"fgm-8w4-cgx","isDefault":true,"name":"GCP IAM policy modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.project"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a change to a GCP logging sink has been made. This could stop audit logs from being sent to Datadog.\n\n### Strategy\nMonitor GCP admin activity audit logs to determine when any of the following methods are invoked:\n\n* `google.logging.v2.ConfigServiceV2.UpdateSink`\n* `google.logging.v2.ConfigServiceV2.DeleteSink`\n\n### Triage & Response\n1. Review the sink and ensure the sink is properly configured.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871191688,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id","@data.protoPayload.resourceName"],"query":"source:gcp.project @evt.name:(google.logging.v2.ConfigServiceV2.UpdateSink OR google.logging.v2.ConfigServiceV2.DeleteSink)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"hil-rl3-yxs","isDefault":true,"name":"GCP logging sink modified"},{"creationAuthorId":0,"tags":["scope:gcp.gce.route","source:gcp","security:compliance"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a VPC network is created. \n\n### Strategy\nThis rule lets you monitor GCP GCE activity audit logs to determine when the following method is invoked to create a new VPC network:\n\n* `beta.compute.networks.insert`\n\n### Triage & Response\n1. Review the VPC network.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871193403,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","@data.protoPayload.resourceName","@usr.id"],"query":"source:gcp.gce.route @evt.name:beta.compute.networks.insert","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"a9z-oic-grb","isDefault":true,"name":"GCP GCE VPC network modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.gcs.bucket"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when permissions have changed on a GCS Bucket.\n\n### Strategy\nMonitor GCS bucket admin activity audit logs to determine the following method is invoked:\n\n* `storage.setIamPermissions`\n\n### Triage & Response\n1. Review the bucket permissions and ensure they are not overly permissive.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871193842,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","bucket_name","@usr.id"],"query":"source:gcp.gcs.bucket @evt.name:storage.setIamPermissions","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"fdk-tly-4qr","isDefault":true,"name":"GCP Bucket permissions modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.gce.firewall.rule"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a firewall rule is created, modified or deleted. \n\n### Strategy\nMonitor GCP GCE activity audit logs to determine when any of the following methods are invoked:\n\n* `v1.compute.firewalls.delete`\n* `v1.compute.firewalls.insert`\n* `v1.compute.firewalls.patch` \n\n### Triage & Response\n1. Review the log and role and ensure the permissions are scoped properly.\n2. Review the users associated with the role and ensure they should have the permissions attached to the role.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870279610,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","@data.protoPayload.resourceOriginalState.name","@usr.id"],"query":"source:gcp.gce.firewall.rule @evt.name:(v1.compute.firewalls.delete OR v1.compute.firewalls.insert OR v1.compute.firewalls.patch)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"n1w-sql-apl","isDefault":true,"name":"GCP GCE Firewall rule modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.iam.role"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a custom role is created or modified. \n\n### Strategy\nMonitor GCP IAM activity audit logs to determine when any of the following methods are invoked:\n\n* `google.iam.admin.v1.CreateRole`\n* `google.iam.admin.v1.UpdateRole` \n\n### Triage & Response\n1. Review the log and role and ensure the permissions are scoped properly.\n2. Review the users associated with the role and ensure they should have the permissions attached to the role.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870282410,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.iam.role @evt.name:(google.iam.admin.v1.CreateRole OR google.iam.admin.v1.UpdateRole)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"rhy-fzm-gwl","isDefault":true,"name":"GCP IAM custom role created or modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.cloudsql.database"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a Cloud SQL DB has been modified.\n\n### Strategy\nThis rule lets you monitor GCP Cloud SQL admin activity audit logs to determine when one of the following methods are invoked:\n\n* `cloudsql.instances.create`\n* `cloudsql.instances.create`\n* `cloudsql.users.update`\n\n### Triage & Response\n1. Review the Cloud SQL DB and ensure it is configured properly with the correct permissions.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871198921,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","database_id","@usr.id"],"query":"source:gcp.cloudsql.database @evt.name:(cloudsql.instances.create OR cloudsql.instances.create OR cloudsql.users.create OR cloudsql.users.update)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ikf-ye8-cnu","isDefault":true,"name":"GCP Cloud SQL database modified"},{"creationAuthorId":0,"tags":["scope:gcp.gce.route","source:gcp","security:compliance"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a firewall rule is created or modified. \n\n### Strategy\nThis rule lets you monitor GCP GCE activity audit logs to determine if a firewall is being adjusted by showing you when any of the following methods are invoked:\n\n* `beta.compute.routes.insert`\n* `beta.compute.routes.patch`\n\n### Triage & Response\n1. Veirify that the GCP route is configured properly and that the user intended to modify the firewall.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870282924,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","@data.protoPayload.resourceName","@usr.id"],"query":"source:gcp.gce.route @evt.name(beta.compute.routes.insert OR beta.compute.routes.patch)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"lht-ml8-u6r","isDefault":true,"name":"GCP GCE network route created or modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.gcs.bucket"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an administrative change to a GCS Bucket has been made. This could change the retention policy or bucket lock. For more information, see the [GCS Bucket Lock docs][1].\n\n### Strategy\nThis rule lets you monitor GCS bucket admin activity audit logs to determine if a bucket has been updated with the following method:\n\n* `storage.buckets.update`\n\n### Triage & Response\n1. Review the bucket to ensure that it is properly configured.\n\n[1]: https://cloud.google.com/storage/docs/bucket-lock","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871279860,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","bucket_name","@usr.id"],"query":"source:gcp.gcs.bucket @evt.name:storage.buckets.update","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"iz3-sc4-ryy","isDefault":true,"name":"GCP Bucket modified"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","technique:T1046-network-service-scanning","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is conducting a port scan.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Recon:EC2/Portscan][2]\n\n\n### Triage & Response\n1. Determine why traffic from the EC2 instance appears to be conducting a port scan.\n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n \n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon5\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525376478,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Recon\\:EC2\\/Portscan)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"y1y-h5t-gnp","isDefault":true,"name":"AWS EC2 instance conducting a port scan"},{"creationAuthorId":0,"tags":["scope:iam","security:compliance","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user disables [S3 Block Public Access][1]\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][2] finding:\n\n* [Policy:IAMUser/S3BlockPublicAccessDisabled][3]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Contact the user and determine why the user disabled the S3 Block Access feature.   \n3. Re-enable S3 Block Public Access.\n\n[1]: https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html\n[2]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_policy.html#policy2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525377921,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Policy\\:IAMUser\\/S3BlockPublicAccessDisabled)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"loc-nk4-pkc","isDefault":true,"name":"AWS IAM user disabled S3 Block Public Access"},{"creationAuthorId":0,"tags":["scope:ec2","security:threat-intel","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS API call is made from a non EC2 IP for a credential which is scoped to an EC2 Instance.  \n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:IAMUser/InstanceCredentialExfiltration][2]\n\n\n### Triage & Response\n1. Determine the EC2 instance this credential is scoped to. This can be found in the samples. \n2. Determine if the EC2 instance credentials are compromised.  \n3. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized11\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525378639,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:IAMUser\\/InstanceCredentialExfiltration)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"iaa-n0t-0jz","isDefault":true,"name":"AWS EC2 instance credential exfiltrated"},{"creationAuthorId":0,"tags":["scope:iam","security:threat-intel","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user makes API requests from a malicious IP.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Recon:IAMUser/TorIPCaller][2]\n* [Recon:IAMUser/MaliciousIPCaller.Custom][3]\n* [Recon:IAMUser/MaliciousIPCaller][4]\n* [UnauthorizedAccess:IAMUser/MaliciousIPCaller][5]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][6] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon1\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon2\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon3\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized5\n[6]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525380153,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Recon\\:IAMUser\\/TorIPCaller OR Recon\\:IAMUser\\/MaliciousIPCaller.Custom OR Recon\\:IAMUser\\/MaliciousIPCaller OR UnauthorizedAccess\\:IAMUser\\/MaliciousIPCaller)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"8w7-aaz-ojp","isDefault":true,"name":"AWS IAM user requests from malicious IP"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","technique:T1046-network-service-scanning","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is being probed by a scanner.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Recon:EC2/PortProbeUnprotectedPort][2]\n* [Recon:EC2/PortProbeEMRUnprotectedPort][3]\n\n\n### Triage & Response\n1. This is typically an informative signal. However, if this instance should not be publicly available, you should review the security group for this instance. \n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon6\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#PortProbeEMRUnprotectedPort\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525381084,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Recon\\:EC2\\/PortProbeUnprotectedPort OR Recon\\:EC2\\/PortProbeEMRUnprotectedPort)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"mrq-h3x-jus","isDefault":true,"name":"AWS EC2 instance probed by scanner"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0011-command-and-control","technique:T1188-multi-hop-proxy","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance makes an outbound network connection from TOR.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/TorClient][2]\n\n\n### Triage & Response\n1. Determine if the EC2 instance should be making requests to TOR. \n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance. \n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized13\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525381864,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/TorClient)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ihd-q9p-mwx","isDefault":true,"name":"AWS EC2 instance outbound connections to TOR"},{"creationAuthorId":0,"tags":["scope:iam","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user is launching compute resources and has no prior history of invoking this API.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [ResourceConsumption:IAMUser/ComputeResources][2]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][3] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_resource.html#resourceconsumption\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525382816,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(ResourceConsumption\\:IAMUser\\/ComputeResources)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"fwu-iey-ovx","isDefault":true,"name":"AWS IAM user anomalous resource consumption"},{"creationAuthorId":0,"tags":["scope:ec2","security:threat-intel","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance receives an inbound network connection from TOR.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/TorIPCaller][2]\n\n\n### Triage & Response\n1. This is typically an informative signal. However, if this instance should not be publicly available, you should review the security group for this instance. \n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized7\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525383148,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/TorIPCaller)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"1ew-u8i-att","isDefault":true,"name":"AWS EC2 instance inbound connections from TOR"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is participating in a Denial of Service (DoS) attack.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Backdoor:EC2/DenialOfService.Tcp][2]\n* [Backdoor:EC2/DenialOfService.Udp][3]\n* [Backdoor:EC2/DenialOfService.Dns][4]\n* [Backdoor:EC2/DenialOfService.UdpOnTcpPorts][5]\n* [Backdoor:EC2/DenialOfService.UnusualProtocol][6]\n\n\n### Triage & Response\n1. Determine if the EC2 instance is compromised and participating in a DoS attack.\n2. If the instance is compromised:\n   * Review the AWS [documentation][7] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor8\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor9\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor10\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor11\n[6]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor12\n[7]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525383757,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Backdoor\\:EC2\\/DenialOfService.Tcp OR Backdoor\\:EC2\\/DenialOfService.Udp OR Backdoor\\:EC2\\/DenialOfService.Dns OR Backdoor\\:EC2\\/DenialOfService.UdpOnTcpPorts OR Backdoor\\:EC2\\/DenialOfService.UnusualProtocol)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"3l6-vrm-iyn","isDefault":true,"name":"AWS EC2 instance participating in a DoS attack"},{"creationAuthorId":0,"tags":["tactic:TA0004-privilege-escalation","scope:iam","source:guardduty","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user is attempting to escalate permissions.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [PrivilegeEscalation:IAMUser/AdministrativePermissions][2]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][3] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_privilegeescalation.html#privilegeescalation1\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525384559,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(PrivilegeEscalation\\:IAMUser\\/AdministrativePermissions)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"dsb-ciq-vrt","isDefault":true,"name":"AWS IAM user escalating privileges"},{"creationAuthorId":0,"tags":["scope:iam","technique:T1089-disabling-security-tools","source:guardduty","tactic:TA0005-defense-evasion","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user is changing sensitive configurations and has no prior history of invoking these APIs.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Stealth:IAMUser/S3ServerAccessLoggingDisabled][2]\n* [Stealth:IAMUser/PasswordPolicyChange][3]\n* [Stealth:IAMUser/CloudTrailLoggingDisabled][4]\n* [Stealth:IAMUser/LoggingConfigurationModified][5]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][6] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_stealth.html#stealth4\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_stealth.html#stealth1\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_stealth.html#stealth2\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_stealth.html#stealth3\n[6]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525385196,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Stealth\\:IAMUser\\/S3ServerAccessLoggingDisabled OR Stealth\\:IAMUser\\/PasswordPolicyChange OR Stealth\\:IAMUser\\/CloudTrailLoggingDisabled OR Stealth\\:IAMUser\\/LoggingConfigurationModified)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"48o-8me-0mo","isDefault":true,"name":"AWS IAM user changing sensitive configurations"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is compromised and sending spam emails.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Backdoor:EC2/Spambot][2]\n\n\n### Triage & Response\n1. Determine if the EC2 should be sending out email over port 25. \n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor6\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525385866,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Backdoor\\:EC2\\/Spambot)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ecn-gew-dg2","isDefault":true,"name":"AWS EC2 instance Sending spam emails"},{"creationAuthorId":0,"tags":["scope:iam","source:guardduty","security:attack","tactic:TA0003-persistence"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user is attempting to gain persistence within an AWS account.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Persistence:IAMUser/NetworkPermissions][2]\n* [Persistence:IAMUser/ResourcePermissions][3]\n* [Persistence:IAMUser/UserPermissions][4]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][5] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_persistence.html#persistence1\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_persistence.html#persistence2\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_persistence.html#persistence3\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525386519,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Persistence\\:IAMUser\\/NetworkPermissions OR Persistence\\:IAMUser\\/ResourcePermissions OR Persistence\\:IAMUser\\/UserPermissions)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"4ho-oxn-reh","isDefault":true,"name":"AWS IAM user attempting to gain persistence"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0006-credential-access","security:attack","technique:T1522-cloud-instance-metadata-api"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance makes a DNS request and resolves to the AWS metadata IP address (169.254.169.254).\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/MetadataDNSRebind][2]\n\n\n### Triage & Response\n1. Determine which process made the DNS request. The DNS request can be found in the samples.\n2. Ensure the process is not a victim of an SSRF attack to steal the AWS EC2 Instance profile''s STS credentials.  \n2. If the STS credentials are compromised:\n   * Review the AWS [documentation][3] on revoking the session.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#ec2-metadatadnsrebind\n[3]: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_revoke-sessions.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":2,"createdAt":1587525387807,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/MetadataDNSRebind)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"aad-vqz-7tk","isDefault":true,"name":"AWS EC2 Instance Victim to Metadata DNS Rebind Attack"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is being used as a TOR relay.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/TorRelay][2]\n\n\n### Triage & Response\n1. Determine if the EC2 instance should be uses as a TOR relay. \n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance. \n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized14\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525388119,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/TorRelay)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"tpv-3qf-v90","isDefault":true,"name":"AWS EC2 instance connecting to TOR as a relay"},{"creationAuthorId":0,"tags":["scope:iam","source:guardduty","security:anomaly"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user login is suspicious.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [UnauthorizedAccess:IAMUser/ConsoleLoginSuccess.B][2]\n* [UnauthorizedAccess:IAMUser/ConsoleLogin][3]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][4] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized4\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized12\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525388403,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:IAMUser\\/ConsoleLoginSuccess.B OR UnauthorizedAccess\\:IAMUser\\/ConsoleLogin)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"kme-i0z-ylv","isDefault":true,"name":"AWS IAM user suspicious login"},{"creationAuthorId":0,"tags":["scope:ec2","security:threat-intel","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance makes an outbound network connection to a malcious IP address.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/MaliciousIPCaller.Custom][2]\n\n\n### Triage & Response\n1. Determine which IP address triggered the signal. This can be found in the sample.\n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized5\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525389461,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/MaliciousIPCaller.Custom)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"22j-qk6-qv3","isDefault":true,"name":"AWS EC2 instance communicating with malicious IP"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","security:anomaly"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is communicating over an unusual port.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Behavior:EC2/NetworkPortUnusual][2]\n\n\n### Triage & Response\n1. Determine which port triggered the signal. This can be found in the samples.\n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_behavior.html#behavior3\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525391873,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Behavior\\:EC2\\/NetworkPortUnusual)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"qfd-ned-cjn","isDefault":true,"name":"AWS EC2 instance communicating over unusual port"},{"creationAuthorId":0,"tags":["scope:iam","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user makes API requests with hacking tools.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [PenTest:IAMUser/KaliLinux][2]\n* [PenTest:IAMUser/ParrotLinux][3]\n* [PenTest:IAMUser/PentooLinux][4]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][5] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_pentest.html#pentest1\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_pentest.html#pentest2\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_pentest.html#pentest3\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525392995,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(PenTest\\:IAMUser\\/KaliLinux OR PenTest\\:IAMUser\\/ParrotLinux OR PenTest\\:IAMUser\\/PentooLinux)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ocf-ys6-78v","isDefault":true,"name":"AWS IAM user making API requests with hacking tools"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is communicating with a malicious server.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Backdoor:EC2/C&CActivity.B!DNS][2]\n* [Trojan:EC2/BlackholeTraffic][3]\n* [Trojan:EC2/DropPoint][4]\n* [Trojan:EC2/BlackholeTraffic!DNS][5]\n* [Trojan:EC2/DriveBySourceTraffic!DNS][6]\n* [Trojan:EC2/DropPoint!DNS][7]\n* [Trojan:EC2/DGADomainRequest.B][8]\n* [Trojan:EC2/DGADomainRequest.C!DNS][9]\n* [Trojan:EC2/DNSDataExfiltration][10]\n* [Trojan:EC2/PhishingDomainRequest!DNS][11]\n\n\n### Triage & Response\n1. Determine which domain name or IP address triggered the signal. This can be found in the samples.\n2. If the instance is compromised:\n   * Review the AWS [documentation][12] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor6\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan4\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan5\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan6\n[6]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan7\n[7]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan8\n[8]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan9\n[9]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan95\n[10]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan10\n[11]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan11\n[12]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525393367,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Trojan\\:EC2\\/BlackholeTraffic OR Trojan\\:EC2\\/DropPoint OR Trojan\\:EC2\\/BlackholeTraffic\\!DNS OR Trojan\\:EC2\\/DriveBySourceTraffic\\!DNS OR Trojan\\:EC2\\/DropPoint\\!DNS OR Trojan\\:EC2\\/DGADomainRequest.B OR Trojan\\:EC2\\/DGADomainRequest.C\\!DNS OR Backdoor\\:EC2\\/C&CActivity.B\\!DNS OR Trojan\\:EC2\\/PhishingDomainRequest\\!DNS)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"9du-jhn-b4f","isDefault":true,"name":"AWS EC2 instance communicated with a malicious server"},{"creationAuthorId":0,"tags":["scope:iam","security:compliance","source:guardduty","control:cis-1.1","framework:cis-aws","control:cis-3.3"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when the AWS root user credentials are used.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Policy:IAMUser/RootCredentialUsage][2]\n\n\n### Triage & Response\n1. Determine whether the root account activity was legitimate. \n * Review the sample for context. \n * Review CloudTrail logs for a full investigation. \n3. If the root user''s credentials are compromised:\n * Review the AWS [documentation][3] on remediating compromised AWS credentials.\n\n**[Root Account Best Practices][4]**\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_policy.html#policy1\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n[4]: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":5,"createdAt":1587525393683,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":[],"query":"source:guardduty @evt.name:(Policy\\:IAMUser\\/RootCredentialUsage)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"cjm-gyr-zxb","isDefault":true,"name":"AWS Root credential activity"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","security:anomaly"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance network traffic volume is unusual.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Behavior:EC2/TrafficVolumeUnusual][2]\n\n\n### Triage & Response\n1. Determine which port triggered the signal. This can be found in the samples.\n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_behavior.html#behavior4\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525393982,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Behavior\\:EC2\\/TrafficVolumeUnusual)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ipt-dpt-t69","isDefault":true,"name":"AWS EC2 instance network traffic volume unusual"},{"creationAuthorId":0,"tags":["scope:apache","technique:T1190-exploit-public-facing-application","source:apache","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This identifies attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":8,"createdAt":1587530038000,"filters":[{"action":"require","query":"source:foo"}],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:apache @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ipl-oaz-eqf","isDefault":true,"name":"Apache HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["technique:T1190-exploit-public-facing-application","source:elb","scope:elb","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This will identify attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous User Agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an INFO signal.  \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1587530043452,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:elb @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"csd-1pb-wxh","isDefault":true,"name":"AWS ELB HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["technique:T1190-exploit-public-facing-application","source:nginx","scope:nginx","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This will identify attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1587530047261,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:nginx @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"5jr-xi3-uto","isDefault":true,"name":"NGINX HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["technique:T1190-exploit-public-facing-application","scope:nginx-ingress-controller","source:nginx-ingress-controller","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This will identify attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1587530154864,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:nginx-ingress-controller @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"oxj-rwr-gxq","isDefault":true,"name":"NGINX ingress controller HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["technique:T1190-exploit-public-facing-application","source:fastly","scope:fastly","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This identifies attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2]. \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1587530162282,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:fastly @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"dqs-oru-107","isDefault":true,"name":"Fastly HTTP Requests from Security Scanner"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when there is unauthorized activity by a service account in GCP\n\n### Strategy\nMonitor GCP logs and detect when a service account makes an API request and the request returns the status code equal to `7` within the log attribute `@data.protoPayload.status.code`. The status code `7` indicates the service account did not have permission to make the API call.\n\n### Triage & Response\n1. Determine the service account that made the unauthorized calls.\n2. Investigate if there is a misconfiguration in IAM permissions or if an attacker compromised the service account","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":5,"createdAt":1587592191518,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.* @data.protoPayload.status.code:7 @usr.id:(*gserviceaccount.com OR *google.com)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"greater than 1000 failed attempts","condition":"a > 1000"},{"status":"medium","notifications":[],"name":"greater than 100 failed attempts","condition":"a > 100"},{"status":"low","notifications":[],"name":"greater than 10 failed attempts","condition":"a > 10"}],"type":"log_detection","id":"89d-2v1-fvm","isDefault":true,"name":"GCP unauthorized service account activity"},{"creationAuthorId":0,"tags":["source:iis","scope:iis","technique:T1190-exploit-public-facing-application","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This will identify attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1587530716843,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:iis @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ftm-iao-udy","isDefault":true,"name":"IIS HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when unauthorized activity by a user is detected in GCP\n\n### Strategy\nMonitor GCP logs and detect when a user account makes an API request and the request returns the status code equal to `7` within the log attribute `@data.protoPayload.status.code`. The status code `7` indicates the user account did not have permission to make the API call.\n\n### Triage & Response\n1. Determine the user who made the unauthorized calls.\n2. Determine if there is a misconfiguration in IAM permissions or whether an attacker has compromised the user account.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":5,"createdAt":1587592193834,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.* @data.protoPayload.status.code:7 -@usr.id:(*gserviceaccount.com OR *google.com)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"greater than 1000 failed attempts","condition":"a > 1000"},{"status":"medium","notifications":[],"name":"greater than 100 failed attempts","condition":"a > 100"},{"status":"low","notifications":[],"name":"greater than 10 failed attempts","condition":"a > 10"}],"type":"log_detection","id":"stt-ows-yte","isDefault":true,"name":"GCP unauthorized user activity"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.pubsub.topic"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a GCP Pub/Sub Subscribtion has been deleted. This could stop audit logs from being sent to Datadog.\n\n### Strategy\nMonitor GCP admin activity audit logs to determine when the following method is invoked:\n\n* `google.pubsub.v1.Publisher.DeleteTopic`\n\n### Triage & Response\n1. Review the subscribtion and ensure it is properly configured.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1587592198839,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id","@data.protoPayload.resourceName"],"query":"source:gcp.pubsub.topic @evt.name:google.pubsub.v1.Publisher.DeleteTopic","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"dp6-zom-jyv","isDefault":true,"name":"GCP Pub/Sub topic deleted"},{"creationAuthorId":0,"tags":["technique:T1083-file-and-directory-discovery","source:gcp","scope:gcp.gcs.bucket","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a service account lists out GCS Buckets.\n\n### Strategy\nThis rule lets you monitor GCS bucket admin activity audit logs to determine when a service account invokes the following method:\n\n* `storage.buckets.list`\n\n### Triage & Response\n1. Determine whether this service account should be making list bucket calls.\n * If the account was compromised, secure the account and investigate how it was compromised and if the account made other unauthorized calls.\n * If the owner of the service account intended to make the `ListBuckets` API call, consider whether this API call is needed. It could cause a security issue for the application to know the name of the bucket it needs to access. If it''s not needed, modify this rule''s filter to stop generating signals for this specific service account.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1587592199858,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","bucket_name","@usr.id"],"query":"source:gcp.gcs.bucket @evt.name:storage.buckets.list @usr.id:*gserviceaccount.com","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"cnc-wi1-llf","isDefault":true,"name":"GCP Bucket enumerated"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.pubsub.subscription"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a change to a GCP Pub/Sub Subscription has been made. This could stop audit logs from being sent to Datadog.\n\n### Strategy\nMonitor GCP admin activity audit logs to determine when any of the following methods are invoked:\n\n* `google.pubsub.v1.Subscriber.UpdateSubscription`\n* `google.pubsub.v1.Subscriber.DeleteSubscription`\n\n### Triage & Response\n1. Review the subscribtion and ensure it is properly configured.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1587592205917,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id","@data.protoPayload.resourceName"],"query":"source:gcp.pubsub.subscription @evt.name:(google.pubsub.v1.Subscriber.UpdateSubscription OR google.pubsub.v1.Subscriber.DeleteSubscription)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"tsj-mac-mdc","isDefault":true,"name":"GCP Pub/Sub Subscriber modified"},{"creationAuthorId":0,"tags":["source:okta"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a new Okta API token is created.\n\n### Strategy\nThis rule lets you monitor the following Okta event to detect when a new Okta API token is created:\n\n* `system.api_token.create`\n\n### Triage & Response\n1. Contact the user who created the API token and ensure that the API token is needed.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1589315541698,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.email"],"query":"source:okta @evt.name:system.api_token.create","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"lpf-tho-8sx","isDefault":true,"name":"Okta API Token Created or Enabled"},{"creationAuthorId":0,"tags":["source:okta"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user attempts to bypass multi-factor authentication (MFA).\n\n### Strategy\nThis rule lets you monitor the following Okta events to detect when a user attempts to bypass MFA:\n\n* `user.mfa.attempt_bypass`\n\n### Triage & Response\n1. Contact the user who attempted to bypass MFA and ensure the request was legitimate.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1589315643307,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.email"],"query":"source:okta @evt.name:user.mfa.attempt_bypass","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"wbd-slu-e6s","isDefault":true,"name":"Okta MFA Bypass Attempted"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user attaches to a pod.\n\n### Strategy\nThis rule monitors when a user attaches (`@objectRef.subresource:attach`) to a pod (`@objectRef.resource:pods`).\n\nA user should not need to attach to a pod. Attaching to a pod allows a user to attach to any process in a running container which may give an attacker access to sensitive data.\n\n### Triage & Response\n1. Determine if the user should be attaching to a running container.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":8,"createdAt":1589375996858,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:pods @objectRef.subresource:attach @http.method:create @http.status_code:[101 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:pods @objectRef.subresource:attach @verb:create @responseStatus.code:[101 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"j6t-mva-rul","isDefault":true,"name":"User Attached to a Pod"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an unauthenticated request user is permitted in Kubernetes.\n\n### Strategy\nThis rule monitors when any action is permitted (`@http.status_code:[100 TO 299]`) for an unauthenticated user (`@user.username:\\\"system:anonymous\\\"`).\nThe `/healthz` endpoint is commonly accessed unauthenticated and it is excluded in the query filter.\n\n### Triage & Response\n1. Inspect all of the HTTP paths accessed and determine if any of the path should be permitted by unauthenticated users.\n2. Determine what IP addresses accessed Kubernetes endpoints which may contain sensitive data.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1589376002149,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":[],"query":"@apiVersion:audit.k8s.io* @usr.name:\"system:anonymous\" @http.status_code:[100 TO 299] -@http.url_details.path:\"/healthz\"","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":[],"query":"@apiVersion:audit.k8s.io* @user.username:\"system:anonymous\" @responseStatus.code:[100 TO 299] -@requestURI:\"/healthz\"","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"f1o-py5-a50","isDefault":true,"name":"Anonymous Request Authorized"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a pod is attached to the host network.\n\n### Strategy\nThis rule monitors when a create (`@http.method:create`) action occurs for a pod (`@objectRef.resource:pods`) with the host network `@requestObject.spec.hostNetwork:true` attached.\n\nAttaching the `hostNetwork` permits a pod to access the node''s network adapter allowing a pod to listen to all network traffic for all pods on the node and communicate with other pods on the network namespace.\n\n### Triage & Response\n1. Determine if the pod needs `hostNetwork` access.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1589376007079,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@requestObject.metadata.generateName"],"query":"source:kubernetes.audit @objectRef.resource:pods @http.method:create @requestObject.spec.hostNetwork:true @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@requestObject.metadata.generateName"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:pods @verb:create @requestObject.spec.hostNetwork:true @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"d3g-xpz-cwc","isDefault":true,"name":"Kubernetes Pod Created with hostNetwork"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is creating a pod in one of the Kubernetes default namespaces.\n\n### Strategy\nThis rule monitors when a create (`@http.method:create`) action occurs for a pod (`@objectRef.resource:pods`) within either of the `kube-system` or `kube-public` namespaces.\n\nThe only users creating pods in the `kube-system` namespace should be cluster administrators. Furthermore, it is best practice to not run any cluster critical infrastructure in the `kube-system` namespace.\n\nThe `kube-public` namespace is intended for Kubernetes objects which should be readable by unauthenticated users. Thus, a pod should likely not be created in the `kube-public` namespace.\n\n### Triage & Response\n1. Determine if the user should be creating this new pod in one of the default namespaces.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1589376012191,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:pods @http.method:create @objectRef.namespace:(\"kube-system\" OR \"kube-public\") @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:pods @verb:create @objectRef.namespace:(\"kube-system\" OR \"kube-public\") @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"tvf-ju6-h3i","isDefault":true,"name":"Kubernetes Pod Created in Kube Namespace"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is creating a service account in one of the Kubernetes default namespaces.\n\n### Strategy\nThis rule monitors when a create (`@http.method:create`) action occurs for a service account (`@objectRef.resource:serviceaccounts`) within either of the `kube-system` or `kube-public` namespaces.\n\nThe only users creating service accounts in the `kube-system` namespace should be cluster administrators. Furthermore, it is best practice to not run any cluster critical infrastructure in the `kube-system` namespace.\n\nThe `kube-public` namespace is intended for kubernetes objects which should be readable by unauthenticated users. Thus, a service account should likely not be created in the `kube-public` namespace.\n\n### Triage & Response\n1. Determine if the user should be creating this new service account in one of the default namespaces.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1589376017036,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:serviceaccounts @http.method:create @objectRef.namespace:(\"kube-system\" OR \"kube-public\") @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:serviceaccounts @verb:create @objectRef.namespace:(\"kube-system\" OR \"kube-public\") @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"loy-9ka-bc2","isDefault":true,"name":"Kubernetes Service Account Created in Kube Namespace"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is creating a Kubernetes namespace.\n\n### Strategy\nThis rule monitors when a `create` action occurs for the Kubernetes namespace (`@objectRef.resource:namespaces`) to detect when a user is creating a new Kubernetes namespace.\n\n### Triage & Response\n1. Determine if the user should be creating this new namespace.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1589376020564,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@objectRef.name","@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:namespaces @http.method:create -@objectRef.name:(\"default\" OR \"kube-system\" OR \"kube-public\") @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@objectRef.name","@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:namespaces @verb:create -@objectRef.name:(\"default\" OR \"kube-system\" OR \"kube-public\") @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"zgq-pd9-wgw","isDefault":true,"name":"New Kubernetes Namespace Created"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a service''s port is attached to the node''s IP.\n\n### Strategy\nThis rule monitors when a create (`@http.method:create`) action occurs for a service (`@objectRef.resource:services`) attaching the service''s port to the node''s IP `@requestObject.spec.type:NodePort`.\n\nExposing the service''s port to the the node''s IP allows other hosts on the network namespace to access this service.\n\n### Triage & Response\n1. Determine if the service needs to expose it''s network connection with `NodePort` access.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1589376023160,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@objectRef.name"],"query":"source:kubernetes.audit @objectRef.resource:services @http.method:create @requestObject.spec.type:NodePort @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@objectRef.name"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:services @verb:create @requestObject.spec.type:NodePort @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"cvp-3wz-v3s","isDefault":true,"name":"Kubernetes Service Created with NodePort"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user execs into a pod.\n\n### Strategy\nThis rule monitors when a user execs (`@objectRef.subresource:exec`) into to a pod (`@objectRef.resource:pods`).\n\nA user should not need to exec into a pod. Execing into a pod allows a user to execute any process in container which is not already running.\nIt is most common to execute the bash process to gain an interactive shell.\nIf this is an attacker, they can access any data which the pod has permissions to, including secrets.\n\n### Triage & Response\n1. Determine if the user should be execing into a running container.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":8,"createdAt":1589376094658,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:pods @objectRef.subresource:exec @http.method:create @http.status_code:[101 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:pods @objectRef.subresource:exec @verb:create @responseStatus.code:[101 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"hyd-cu4-79x","isDefault":true,"name":"User Exec into a Pod"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","source:auth0","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## **Goal:**\nDetect a brute force attack on a user. \n\n## **Strategy:**\n**To determine a successful attempt:** Detect when the same user fails to login five times and then successfully logs in. This generates a `MEDIUM` severity signal.\n\n**To determine an unsuccessful attempt:** Detect when the same user fails to login five times. This generates an `INFO` severity signal.\n\n## **Triage & Response:**\n1. Inspect the logs to see if this was a valid login attempt.\n2. See if 2FA was authenticated\n3. If the user was compromised, rotate user credentials.\n\n","options":{"detectionMethod":"threshold","evaluationWindow":600,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1597422956269,"filters":[],"queries":[{"distinctFields":[],"name":"failed_login","aggregation":"count","groupByFields":["@usr.id"],"query":"source:auth0 @evt.name:(failed_login_incorrect_password OR failed_login_invalid_email_or_username)","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@usr.id"],"query":"source:auth0 @evt.name:success_login","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Successful","condition":"failed_login>5 && successful_login>=1"},{"status":"info","notifications":[],"name":"Attempt","condition":"failed_login>10"}],"type":"log_detection","id":"dde-oia-yjr","isDefault":true,"name":"Brute force attack on an Auth0 user"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","source:auth0","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## **Goal:**\nDetect log ins from the same user from multiple countries within a short time frame.\n\n## **Strategy:**\nUtilize geo-ip data to detect when a user logs in from two IP addresses which are in different countries within a short time frame.\n\n## **Triage & Response:**\n1. See if 2FA was used for authentication.\n2. Contact the user and see if this behavior is expected.\n3. If the user was compromised, rotate the user credentials.\n","options":{"detectionMethod":"threshold","evaluationWindow":3600,"maxSignalDuration":86400,"keepAlive":3600},"version":5,"createdAt":1597422956982,"filters":[],"queries":[{"distinctFields":["@network.client.geoip.country.name"],"name":"successful_logins_by_country","aggregation":"cardinality","groupByFields":["@usr.id"],"query":"source:auth0 @evt.name:success_login","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"successful_logins_by_country > 1"}],"type":"log_detection","id":"j6f-xqz-wig","isDefault":true,"name":"Auth0 user authenticating from multiple countries"},{"creationAuthorId":0,"tags":["technique:T1078-valid-accounts","source:auth0","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"## **Goal:**\nDetect when a user logs in with a breached password.\n\n## **Strategy:**\nAuth0 logs an event when a user logs in with a breached password. When this event is detected, Datadog generates a `MEDIUM` severity Security Signal.\n\nYou can see more information on how Auth0 detects breached passwords on their [documentation][1].\n\n## **Triage & Response:**\n1. Inspect the policy and user location to see if this was a login from approved location\n2. See if 2FA was authenticated\n3. If the user was compromised, rotate user credentials.\n\n[1][https://auth0.com/docs/anomaly-detection/brute-force-protection]\n","options":{"detectionMethod":"threshold","evaluationWindow":0,"maxSignalDuration":0,"keepAlive":0},"version":5,"createdAt":1597422957145,"filters":[],"queries":[{"distinctFields":[],"name":"breached_password","aggregation":"count","groupByFields":["@usr.id"],"query":"source:auth0 @evt.name:breached_password","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"breached_password > 0"}],"type":"log_detection","id":"yhw-avf-dz0","isDefault":true,"name":"Auth0 user logged in with a breached password"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","source:auth0","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## **Goal:**\nDetect Account Take Over (ATO) through credential stuffing attack.\n\n## **Strategy:**\n**To determine a successful attempt:** Detect a high number of failed logins from at least ten unique users and at least one successful login for a user. This generates a `HIGH` severity signal.\n\n**To determine an unsuccessful attempt:** Detect a high number of failed logins from at least ten unique users. This generates an `INFO` severity signal.\n\n## **Triage & Response:**\n1. Inspect the logs to see if this was a valid login attempt.\n2. See if 2FA was authenticated\n3. If the user was compromised, rotate user credentials.\n\n","options":{"detectionMethod":"threshold","evaluationWindow":600,"maxSignalDuration":86400,"keepAlive":3600},"version":5,"createdAt":1597422958108,"filters":[],"queries":[{"distinctFields":["@usr.id"],"name":"unique_users_failing_to_login","aggregation":"cardinality","groupByFields":["@network.client.ip"],"query":"source:auth0 @evt.name:(failed_login_incorrect_password OR failed_login_invalid_email_or_username)","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:auth0 @evt.name:success_login","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Successful","condition":"unique_users_failing_to_login>10 && successful_login>=1"},{"status":"info","notifications":[],"name":"Attempt","condition":"unique_users_failing_to_login>10"}],"type":"log_detection","id":"ryo-snu-uva","isDefault":true,"name":"Credential stuffing attack on Auth0"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when any user logs in to Azure AD without multi-factor authentication.\n\n### Strategy\nThis rule monitors Azure Activity logs for Active Directory logs and detects when any `@evt.category` has a value of  `SignInLogs`, and `@properties.authenticationRequirement` has a value of `singleFactorAuthentication`.\n\n### Triage & Response\n1. Reach out to the user to determine if the login was legitimate.\n2. If the login was legitimate, request that the user enables 2FA.\n3. If the login wasn''t legitimate, rotate the credentials.\n4. Review all user accounts to ensure MFA is enabled.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1598468815267,"filters":[],"queries":[{"distinctFields":[],"name":"user_login_without_mfa","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.activedirectory @evt.category:SignInLogs @properties.authenticationRequirement:singleFactorAuthentication","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"user_login_without_mfa > 0"}],"type":"log_detection","id":"c8i-66d-m7u","isDefault":true,"name":"Azure AD Login Without MFA"},{"creationAuthorId":0,"tags":["source:azure","technique:T1190-exploit-public-facing-application","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an Azure Frontdoor Web Application Firewall (WAF) logs a request from an IP address.\n\n### Strategy\nThis rule monitors Azure Activity logs for Frontdoor Web Application Firewall logs and detects when the `@evt.name` has a value of  `Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write` and `@properties.action` has a value of `Log`.\n\n### Triage & Response\n1. Inspect whether this request should have been blocked or not.\n2. Navigate to the IP dashboard and inspect other requests this IP address has made.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":3,"createdAt":1598468815399,"filters":[],"queries":[{"distinctFields":[],"name":"waf_logged_a_request","aggregation":"count","groupByFields":["@properties.clientIP"],"query":"source:azure.network @evt.name:\"Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write\" @properties.action:Log","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"waf_logged_a_request > 0"}],"type":"log_detection","id":"bkk-48l-vem","isDefault":true,"name":"Azure Frontdoor WAF Logged a Request"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an Azure network security group allows inbound traffic from all IP Addresses.\n\n### Strategy\nThis rule monitors Azure Activity logs for network changes and detects when the `@evt.name` has a value of  `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE`, `@properties.securityRules.properties.direction` has a value of `Inbound`, `@properties.securityRules.properties.access` has a value of `Allow`, and `@properties.securityRules.properties.sourceAddressPrefix` has a value of either `0.0.0.0/0` OR `*`.\n\n### Triage & Response\n1. Inspect which Virtual Machines are associated with this security group.\n2. Determine whether this security group and the VMs should permit inbound traffic from all IP addresses.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":3,"createdAt":1598468816111,"filters":[],"queries":[{"distinctFields":[],"name":"security_group_open_to_world","aggregation":"count","groupByFields":["@resourceId"],"query":"source:azure.network @evt.name:\"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE\" @properties.securityRules.properties.direction:Inbound @properties.securityRules.properties.access:Allow @properties.securityRules.properties.sourceAddressPrefix:(\"0.0.0.0/0\" OR \"*\")","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"security_group_open_to_world > 0"}],"type":"log_detection","id":"owu-2uz-8cb","isDefault":true,"name":"Azure Network Security Group Open to the World"},{"creationAuthorId":0,"tags":["source:azure","technique:T1190-exploit-public-facing-application","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an Azure Frontdoor Web Application Firewall (WAF) blocks a request from an IP address.\n\n### Strategy\nThis rule monitors Azure Activity logs for Frontdoor Web Application Firewall logs and detects when the `@evt.name` has a value of  `Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write` and `@properties.action` has a value of `Block`.\n\n### Triage & Response\n1. Inspect whether this request should have been blocked or not.\n2. Navigate to the IP dashboard and inspect other requests this IP address has made.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":3,"createdAt":1598468816869,"filters":[],"queries":[{"distinctFields":[],"name":"waf_blocked_a_request","aggregation":"count","groupByFields":["@properties.clientIP"],"query":"source:azure.network @evt.name:\"Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write\" @properties.action:Block","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"waf_blocked_a_request > 0"}],"type":"log_detection","id":"xyt-fqh-myv","isDefault":true,"name":"Azure Frontdoor WAF Blocked a Request"},{"creationAuthorId":0,"tags":["technique:T1552-unsecured-credentials","source:route53","tactic:TA0006-credential-access","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a requested domain resolves to the AWS Metadata IP (169.254.169.254).\n\n### Strategy\nInspect the Route 53 logs and determine if the response data for a DNS request matches the AWS Metadata IP (169.254.169.254). This could indicate an attacker is attempting to steal your credentials from the AWS metadata service.\n\n### Triage and Response\n1. Determine which instance is associated with the DNS request.\n2. Determine whether the domain name which was requested (`dns.question.name`) should be permitted. If not, conduct an investigation and determine what requested the domain and determine if the AWS metadata credentials were accessed by an attacker.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1603296598998,"filters":[],"queries":[{"distinctFields":[],"name":"domain_resolve_to_metadata_ip","aggregation":"count","groupByFields":["instance-id"],"query":"source:route53 @answers.Rdata:169.254.169.254","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"domain_resolve_to_metadata_ip > 0"}],"type":"log_detection","id":"mwi-zj7-db9","isDefault":true,"name":"EC2 instance resolved a suspicious AWS metadata DNS query"},{"creationAuthorId":0,"tags":["source:route53","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a requested domain has a suspicious TLD.\n\n### Strategy\nInspect the Route 53 logs and determine if the TLD of the DNS question (`@dns.question.name`) matches one of the top 5 TLDs on [Spamhaus''s Most Abused Top Level Domains list][1].\n\n### Triage and Response\n1. Determine which instance is associated with the DNS request.\n2. Determine whether the domain name which was requested (`dns.question.name`) should be permitted. If not, conduct an investigation and determine what requested the domain and determine if the AWS metadata credentials were accessed by an attacker.\n\n[1]: https://www.spamhaus.org/statistics/tlds/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1603296605789,"filters":[],"queries":[{"distinctFields":[],"name":"suspicious_tld","aggregation":"count","groupByFields":["instance-id"],"query":"@dns.question.name:(*.fit. OR *.work. OR *.webcam. OR *.loan. OR *.cf.)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"suspicious_tld > 0"}],"type":"log_detection","id":"dus-bf6-3jr","isDefault":true,"name":"EC2 instance requested a suspicious domain"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an Azure network security group or an Azure network security rule has been created, modified, or deleted.\n\n## Strategy\n\nMonitor Azure activity logs and detect when the `@evt.name` is equal to any one of the following names:\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE`\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/DELETE`\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/WRITE` \n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/DELETE`\n\nand `@evt.outcome` is equal to `Success`.\n\n## Triage & Response\n\n1. Inspect the security group or security rule and determine if it exposes any Azure resources that should not be exposed.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1607106297216,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.network @evt.name:(\"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/WRITE\" OR \"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/DELETE\" OR \"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/DELETE\" OR \"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE\") @evt.outcome:Success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"mju-ynx-i1h","isDefault":true,"name":"Azure Network Security Groups or Rules Created, Modified, or Deleted"},{"creationAuthorId":0,"tags":["source:azure","security:threat-intel"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an Azure firewall threat intelligence alert is received.\n\n## Strategy\n\nMonitor Azure Network Diagnostic logs and detect when `@evt.name` is equal to `AzureFirewallThreatIntelLog`.\n\n## Triage & Response\n\n1. Inspect the threat intelligence log.\n2. Investigate the activity from this IP address.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1607106300940,"filters":[],"queries":[{"distinctFields":[],"name":"azure_firewall_threat_intel_alert","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:azure.network @evt.name:AzureFirewallThreatIntelLog","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"azure_firewall_threat_intel_alert > 0"}],"type":"log_detection","id":"z0v-yfr-qat","isDefault":true,"name":"Azure Firewall Threat Intelligence Alert"}]}'
    headers:
      Cache-Control:
      - no-cache
      Connection:
      - keep-alive
      Content-Disposition:
      - inline
      Content-Security-Policy:
      - frame-ancestors 'self'; report-uri https://api.datadoghq.com/csp-report
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Tue, 20 Apr 2021 14:58:36 GMT
      Pragma:
      - no-cache
      Strict-Transport-Security:
      - max-age=15724800;
      Vary:
      - Accept-Encoding
      X-Content-Type-Options:
      - nosniff
      X-Dd-Debug:
      - /L+SFFO+m1pPY+hRCpk5325fvfrNl0KmiquUNJolBN/5hu3HIwflqjZSbJ6NxDFG
      X-Dd-Version:
      - "35.4351940"
      X-Frame-Options:
      - SAMEORIGIN
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
      Dd-Operation-Id:
      - ListSecurityMonitoringRules
      User-Agent:
      - terraform-provider-datadog/dev (terraform 2.4.4; terraform-cli 0.14.7) datadog-api-client-go/1.0.0-beta.19 (go go1.16.3; os darwin; arch amd64)
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=1&page%5Bsize%5D=100
    method: GET
  response:
    body: '{"meta":{"page":{"total_filtered_count":21,"total_count":121}},"data":[{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an Azure policy assignment has been created.\n\n## Strategy\n\nMonitor Azure activity logs and detect when the `@evt.name` is equal to `MICROSOFT.AUTHORIZATION/POLICYASSIGNMENTS/WRITE` and `@evt.outcome` is equal to `Success`.\n\n## Triage && Response\n\n1. Inspect the policy assignment and determine if an unsolicited change was made on any Azure resources.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1607106302885,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:azure @evt.name:\"MICROSOFT.AUTHORIZATION/POLICYASSIGNMENTS/WRITE\" @evt.outcome:Success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"uvd-ets-ju9","isDefault":true,"name":"Azure Policy Assignment Created"},{"creationAuthorId":0,"tags":["source:azure","tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect and identify the network IP address when multiple user accounts have login attempt activities recorded.\n\n## Strategy\n\nMonitor Azure Active Directory and detect when any `@evt.category` is equal to `SignInLogs` and more than 1 of the `@evt.outcome` are equal to `false` and was initiated by the same network IP address.\n\nSecurity Signal returns **HIGH** if`@evt.outcome` has value of `success` after multiple failed logins were initiated by the same network IP address.\n\n## Triage & Response\n\n1. Inspect the log and determine if this was a valid login attempt.\n2. If the user was compromised, rotate user credentials.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1607106304164,"filters":[],"queries":[{"distinctFields":["@usr.id"],"name":"failed_login_multiple_user_accounts_same_ip_address","aggregation":"cardinality","groupByFields":["@network.client.ip"],"query":"source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:failure","trackType":"logs"},{"distinctFields":[],"name":"successful_login_after_multiple_failed_login_attemtps","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:failure","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Successful login after multiple failed login attempts from the same network IP address","condition":"failed_login_multiple_user_accounts_same_ip_address > 1 && successful_login_after_multiple_failed_login_attemtps > 0"},{"status":"medium","notifications":[],"name":"Multiple failed login attempts from the same network IP address","condition":"failed_login_multiple_user_accounts_same_ip_address > 1 "}],"type":"log_detection","id":"igg-0ve-xxc","isDefault":true,"name":"Credential Stuffing Attack on Azure"},{"creationAuthorId":0,"tags":["source:azure","tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when a user is a victim of an Account Take Over (ATO) by a brute force attack.\n\n## Strategy\n\nMonitor Azure Active Directory Sign-in logs and detect when any `@evt.category` is equal to  `SignInLogs`, and `@evt.outcome` is equal to `failure`.\n\n## Triage & Response\n\n1. Inspect the log and determine if this was a valid login attempt.\n2. If the user was compromised, rotate user credentials.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":5,"createdAt":1607106309289,"filters":[],"queries":[{"distinctFields":[],"name":"failed_login","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:failure","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:failure","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Successful login","condition":"failed_login > 5 && successful_login > 0"},{"status":"info","notifications":[],"name":"Unsuccessful","condition":"failed_login > 5"}],"type":"log_detection","id":"y0f-vsz-xms","isDefault":true,"name":"Azure Portal brute force login"},{"creationAuthorId":0,"tags":["source:azure","tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect and identify the network IP address when multiple user accounts failed to complete the MFA process.\n\n## Strategy\n\nMonitor Azure Active Directory Sign-in logs and detect when any `@evt.category` is equal to `SignInLogs`, `@properties.authenticationRequirement` is equal to `multiFactorAuthentication` and `@evt.outcome` is equal to `failure`.\n\n## Triage & Response \n\n1. Inspect the log and determine if this was a valid login attempt.\n2. If the user was compromised, rotate user credentials.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":5,"createdAt":1607106317340,"filters":[],"queries":[{"distinctFields":["@usr.email"],"name":"failed_login_mfa_denied_w_multiple_user_accounts","aggregation":"cardinality","groupByFields":["@network.client.ip"],"query":"source:azure.activedirectory @evt.category:SignInLogs @properties.authenticationRequirement:multiFactorAuthentication @evt.outcome:failure","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Greater than 10 unique users","condition":"failed_login_mfa_denied_w_multiple_user_accounts > 10"},{"status":"low","notifications":[],"name":"Greater than 3 unique user","condition":"failed_login_mfa_denied_w_multiple_user_accounts > 3"}],"type":"log_detection","id":"zgm-z7i-mhu","isDefault":true,"name":"Azure Login Explicitly Denied MFA"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an Azure network security rule has been created, modified, or deleted.\n\n## Strategy\n\nMonitor Azure activity logs and detect when the `@evt.name` is equal to any of the following names:\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/WRITE` \n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/DELETE`\n\nand `@evt.outcome` is equal to `Success`.\n\n## Triage && Response\n\n1. Inspect the security rule and determine if it exposes any Azure resources that should not be made public.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1607106319051,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.sql @evt.name:\"MICROSOFT.SQL/SERVERS/FIREWALLRULES/WRITE\" @evt.outcome:Success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"kbv-sau-dwv","isDefault":true,"name":"Azure SQL Server Firewall Rules Created or Modified"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an invitation is sent to an external user.\n\n## Strategy\n\nMonitor Azure Active Directory Audit logs and detect when any `@evt.name` is equal to `Invite external user` and the `@evt.outcome` is equal to `success`.\n\n## Triage & Response\n\n1. Review and determine if the invitation and its recipient are valid.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1607106320758,"filters":[],"queries":[{"distinctFields":[],"name":"invite_external_user","aggregation":"count","groupByFields":["@usr.id","@properties.targetResources.userPrincipalName"],"query":"source:azure.activedirectory @evt.name:\"Invite external user\" @evt.outcome:success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"invite_external_user > 0"}],"type":"log_detection","id":"msq-9pm-ift","isDefault":true,"name":"Azure user invited an external user"},{"creationAuthorId":0,"tags":["source:okta"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is denied access to an app.\n\n### Strategy\nThis rule lets you monitor the following Okta events to detect when a user is denied access to an app:\n\n* `app.generic.unauth_app_access_attempt`\n\n### Triage & Response\n1. Determine whether or not the user should have access to this app.\n2. Contact the user to determine whether they attempted to access this app or whether their account is compromised.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1607371843994,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.email","@target_app"],"query":"source:okta @evt.name:app.generic.unauth_app_access_attempt","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"rht-pdf-gyx","isDefault":true,"name":"Okta User Attempted to Access Unauthorized App"},{"creationAuthorId":0,"tags":["category:authentication","tactic:TA0006-credential-access","template:true","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect Account Take Over (ATO) through credential stuffing attack.\n\nA credential stuffing attack is used to gain initial access by compromising user accounts.\n\nThe attacker obtains a list of compromised usernames and passwords from a previous user database breach, phishing attempt, or other means. Then, they use the list of username and passwords to attempt to login to accounts on your application.\n\nIt is common for an attacker to use multiple IP addresses to target your application in order to distribute the attack load for load balancing purposes, to make it more difficult to detect, or make it more difficult to block.\n\n### Strategy\n**To determine a successful attempt:** Detect a high number of failed logins from at least 25 unique users and at least one successful login for a user within a period of time from the same IP address.\n\n**To determine an unsuccessful attempt:** Detect a high number of failed logins from at least ten unique users within a period of time from the same IP address.\n\n### Triage and response\n\nUse [this Datadog runbook](https://app.datadoghq.com/notebook/credentialstuffingrunbook) to assist in your investigation.\n\n1. Determine if it is a legitimate attack or a false positive\n2. Determine compromised users\n3. Remediate compromised user accounts\n","options":{"detectionMethod":"threshold","evaluationWindow":1800,"maxSignalDuration":86400,"keepAlive":3600},"version":2,"createdAt":1608750331867,"filters":[],"queries":[{"distinctFields":["@usr.id"],"name":"unique_users_failing_to_login","aggregation":"cardinality","groupByFields":["@network.client.ip"],"query":"@evt.category:authentication @evt.outcome:failure","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@network.client.ip"],"query":"@evt.category:authentication @evt.outcome:success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Successful - Greater than 50","condition":"unique_users_failing_to_login>50 && successful_login>=1"},{"status":"medium","notifications":[],"name":"Successful","condition":"unique_users_failing_to_login>25 && successful_login>=1"},{"status":"info","notifications":[],"name":"Attempt","condition":"unique_users_failing_to_login>25"}],"type":"log_detection","id":"ypo-jbm-p2s","isDefault":true,"name":"Credential stuffing attack"},{"creationAuthorId":0,"tags":["source:microsoft-365"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user shares a Microsoft 365 Sharepoint document with a guest.\n\n### Strategy\nThis rule monitors the Microsoft 365 logs for the event name `SharingInvitationCreated` when the `TargetUserOrGroupType` is `Guest`.\n\n### Triage & Response\n1. Determine whether this document should be shared with the external user.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1608766365850,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@TargetUserOrGroupName","@ObjectId"],"query":"source:microsoft-365 service:SharePoint @evt.name:(SharingInvitationCreated) @TargetUserOrGroupType:Guest","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"v72-psu-eln","isDefault":true,"name":"Microsoft 365 SharePoint object shared with guest"},{"creationAuthorId":0,"tags":["source:microsoft-365"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user installs an app to Microsoft 365 Teams.\n\n### Strategy\nThis rule monitors the Microsoft 365 logs for the event name `AppInstalled`.\n\n### Triage & Response\n1. Determine whether this app should be installed to Microsoft 365 teams.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1608766367312,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@AddOnName"],"query":"source:microsoft-365 service:MicrosoftTeams @evt.name:AppInstalled","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"i03-grd-ppd","isDefault":true,"name":"Microsoft 365 Teams app installed"},{"creationAuthorId":0,"tags":["source:microsoft-365"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user creates an anonymous link for a Microsoft 365 document in OneDrive. This would allow any unauthenticated user to access this document, if they had the link.\n\n### Strategy\nThis rule monitors the Microsoft 365 logs for the event name `AnonymousLinkCreated`.\n\n### Triage & Response\n1. Determine whether this document should be available anonymously.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1608766368930,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id","@ObjectId"],"query":"source:microsoft-365 service:OneDrive @evt.name:AnonymousLinkCreated","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"y1h-h20-er6","isDefault":true,"name":"Microsoft 365 OneDrive Anonymous Link Created"},{"creationAuthorId":0,"tags":["tactic:TA0004-privilege-escalation","scope:ecs","source:cloudtrail","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user executes a command on an ECS container for the first time. An attacker may use this as a technique to escalate their privileges\nbecause they can run arbitrary commands on behalf of the container with the role and permissions associated with the\ncontainer.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if a user is executing a command on an ECS container:\n\n* `ExecuteCommand`\n\n### Triage & Response\n1. Determine if the user should be executing a command on this container\n","options":{"detectionMethod":"new_value","evaluationWindow":0,"maxSignalDuration":0,"newValueOptions":{"learningDuration":1,"forgetAfter":28},"keepAlive":0},"version":5,"createdAt":1615916348842,"filters":[{"action":"suppress","query":"foo"},{"action":"require","query":"bar"}],"queries":[{"distinctFields":[],"name":"","metric":"@usr.account_id","aggregation":"new_value","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @eventName:ExecuteCommand","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":["@me"],"name":""}],"type":"log_detection","id":"o2p-sbu-rlg","isDefault":true,"name":"Anomalous AWS user executed a command on ECS container"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617971626555,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestSearchSecurityMonitoringSignals-1617971626","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"uf5-sub-gvr","isDefault":false,"name":"Test-TestSearchSecurityMonitoringSignals-1617971626"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617971644219,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1617971644","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"5b2-kdc-3do","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1617971644"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617977693395,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestSearchSecurityMonitoringSignals-1617977693","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"pfs-wtb-6x6","isDefault":false,"name":"Test-TestSearchSecurityMonitoringSignals-1617977693"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617977738802,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1617977738","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"eai-snq-4vj","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1617977738"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617978059498,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1617978059","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"nvz-hsv-5ql","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1617978059"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617978302186,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1617978301","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"cyp-scn-o3m","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1617978301"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"Test rule","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":1,"createdAt":1618083170620,"filters":[],"queries":[{"distinctFields":[],"name":"","metric":"","aggregation":"count","groupByFields":[],"query":"@test:true","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"bno-qku-kqu","isDefault":false,"name":"Test-Create_a_detection_rule_returns_OK_response-1618083170"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1618221021757,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestSearchSecurityMonitoringSignals-1618221021","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"tcl-onp-xbd","isDefault":false,"name":"Test-TestSearchSecurityMonitoringSignals-1618221021"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1618221039709,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1618221039","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"jdo-kok-wpq","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1618221039"}]}'
    headers:
      Cache-Control:
      - no-cache
      Connection:
      - keep-alive
      Content-Disposition:
      - inline
      Content-Security-Policy:
      - frame-ancestors 'self'; report-uri https://api.datadoghq.com/csp-report
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Tue, 20 Apr 2021 14:58:36 GMT
      Pragma:
      - no-cache
      Strict-Transport-Security:
      - max-age=15724800;
      Vary:
      - Accept-Encoding
      X-Content-Type-Options:
      - nosniff
      X-Dd-Debug:
      - dPySkcOzIZtKyMKDAAzuysY3gNGGj6RtYogGuSb76E8mPvoqzREyRp6lPYm91hQU
      X-Dd-Version:
      - "35.4351940"
      X-Frame-Options:
      - SAMEORIGIN
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
      Dd-Operation-Id:
      - ListSecurityMonitoringRules
      User-Agent:
      - terraform-provider-datadog/dev (terraform 2.4.4; terraform-cli 0.14.7) datadog-api-client-go/1.0.0-beta.19 (go go1.16.3; os darwin; arch amd64)
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=2&page%5Bsize%5D=100
    method: GET
  response:
    body: '{"meta":{"page":{"total_filtered_count":0,"total_count":121}},"data":[]}'
    headers:
      Cache-Control:
      - no-cache
      Connection:
      - keep-alive
      Content-Disposition:
      - inline
      Content-Security-Policy:
      - frame-ancestors 'self'; report-uri https://api.datadoghq.com/csp-report
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Tue, 20 Apr 2021 14:58:36 GMT
      Pragma:
      - no-cache
      Strict-Transport-Security:
      - max-age=15724800;
      Vary:
      - Accept-Encoding
      X-Content-Type-Options:
      - nosniff
      X-Dd-Debug:
      - bgHykj7A9bfZx0Y5ZO3swhhp5tGUSNJHqFWR868+qg087CYrDOd5hQslC+noiEtH
      X-Dd-Version:
      - "35.4351940"
      X-Frame-Options:
      - SAMEORIGIN
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
      Dd-Operation-Id:
      - ListSecurityMonitoringRules
      User-Agent:
      - terraform-provider-datadog/dev (terraform 2.4.4; terraform-cli 0.14.7) datadog-api-client-go/1.0.0-beta.19 (go go1.16.3; os darwin; arch amd64)
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=0&page%5Bsize%5D=100
    method: GET
  response:
    body: '{"meta":{"page":{"total_filtered_count":100,"total_count":121}},"data":[{"creationAuthorId":0,"tags":["scope:iam","source:guardduty","technique:T1069-permission-groups-discovery","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is enumerating IAM principals.\n\n### Strategy\nThis rule lets you leverage GuardDuty to detect when an attacker is enumerating IAM principals. The GuardDuty Findings which trigger this signal:\n\n* [Recon:IAMUser/NetworkPermissions][1]\n* [Recon:IAMUser/ResourcePermissions][2]\n* [Recon:IAMUser/UserPermissions][3] \n\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon7\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon8\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon9","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870276065,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Recon\\:IAMUser\\/NetworkPermissions OR Recon\\:IAMUser\\/ResourcePermissions OR Recon\\:IAMUser\\/UserPermissions)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"u2j-xph-kc7","isDefault":true,"name":"AWS IAM principal enumeration"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is communicating with a cryptocurrency server\n\n### Strategy\nThis rule lets you leverage GuardDuty to detect when an EC2 instance has made a DNS request or is communicating with an IP that is associated with cryptocurrency operations. The following GuardDuty Findings trigger this signal:\n\n* [CryptoCurrency:EC2/BitcoinTool.B!DNS][1]\n* [CryptoCurrency:EC2/BitcoinTool.B][2]\n\n\n### Triage & Response\n1. Determine which domain name or IP address triggered the signal. This can be found in the samples. \n2. If the domain or IP address should not have been requested, open a security investigation, and determine which process requested the domain name or IP address.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_crypto.html#crypto3\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_crypto.html#crypto4","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870276326,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(CryptoCurrency\\:EC2\\/BitcoinTool.B\\!DNS OR CryptoCurrency\\:EC2\\/BitcoinTool.B)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ky3-ds4-ipb","isDefault":true,"name":"AWS EC2 instance communicating with a cryptocurrency server"},{"creationAuthorId":0,"tags":["technique:T1485-data-destruction","tactic:TA0040-impact","source:cloudtrail","scope:rds","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is destroying a RDS Cluster.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting a RDS cluster:\n\n* [DeleteDBCluster][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/rds/delete-db-cluster.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870276546,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteDBCluster","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"6ng-pk1-ukh","isDefault":true,"name":"AWS RDS Cluster deleted"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","scope:template","technique:T1110-brute-force","security:attack"],"isEnabled":false,"hasExtendedTitle":true,"message":"### Goal\nDetect Account Take Over (ATO) through brute force attempts\n\n### Strategy\nTo determine a successful attempt: Detect a high amount of failed logins and at least one successful login for a given user. This will generate a `HIGH` severity signal.\nTo determine an attempt: Detect a high amount of failed logins. This will generate an `INFO` severity signal.\n\n### Triage & Response\n1. Inspect the logs to see if this was a valid login attempt.\n2. See if 2FA was authenticated.\n3. If the user was compromised, rotate user credentials.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":7200,"keepAlive":3600},"version":3,"createdAt":1585870276794,"filters":[],"queries":[{"distinctFields":[],"name":"failed_login","aggregation":"count","groupByFields":["@usr.name"],"query":"@evt.name:authentication @evt.outcome:failure @usr.name:*","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@usr.name"],"query":"@evt.name:authentication @evt.outcome:success @usr.name:*","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":["@slack-secops"],"name":"Successful","condition":"failed_login > 50 && successful_login > 0"},{"status":"info","notifications":["@slack-secops"],"name":"Attempt","condition":"failed_login > 5"}],"type":"log_detection","id":"jhi-klp-smm","isDefault":true,"name":"TEMPLATE - Brute Force Attack Grouped By User"},{"creationAuthorId":0,"tags":["scope:eventbridge","technique:T1089-disabling-security-tools","source:cloudtrail","tactic:TA0005-defense-evasion","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is trying to evade defenses by deleting or disabling EventBridge rules.\n\n### Strategy\nThis rule lets you monitor these CloudTrail API calls to detect if an attacker is modifying or disabling EventBridge rules:\n\n* [DeleteRule][1]\n* [DisableRule][2]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DeleteRule.html\n[2]: https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DisableRule.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870277044,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DeleteRule OR DisableRule)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"mq6-cjx-h9o","isDefault":true,"name":"AWS EventBridge rule disabled or deleted"},{"creationAuthorId":0,"tags":["scope:ec2","source:cloudtrail","tactic:TA0005-defense-evasion","technique:T1066-indicator-removal-from-tools","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is removing FlowLogs to cover their tracks.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting FlowLogs:\n\n* [DeleteFlowLogs][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFlowLogs.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870278493,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteFlowLogs","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"cws-b4f-uoh","isDefault":true,"name":"AWS FlowLogs removed"},{"creationAuthorId":0,"tags":["technique:T1089-disabling-security-tools","scope:guardduty","source:cloudtrail","tactic:TA0005-defense-evasion","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is trying to evade defenses by deleting a GuardDuty detector.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting a GuardDuty Detector:\n\n* [DeleteDetector][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/delete-detector.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870279177,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteDetector","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"pzi-led-yyc","isDefault":true,"name":"AWS GuardDuty detector deleted"},{"creationAuthorId":0,"tags":["scope:ecs","technique:T1485-data-destruction","tactic:TA0040-impact","source:cloudtrail","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is destroying an ECS Cluster\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an ECS cluster is deleted:\n\n* [DeleteCluster][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeleteCluster.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870279810,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteCluster","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"vwu-6id-9lz","isDefault":true,"name":"AWS ECS cluster deleted"},{"creationAuthorId":0,"tags":["security:compliance","scope:s3","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when the S3 Public Access Block configuration has been removed \n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting the S3 Public Access Block configuration:\n\n* [DeleteAccountPublicAccessBlock][1]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and inform them of best practices of enabling Public Access Block on S3 buckets.\n3. Re-enable Public Access Block on the S3 bucket.\n\nMore details on S3 Public Block Public Access can be found [here][2].\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/s3api/delete-public-access-block.html\n[2]: https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870280316,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteAccountPublicAccessBlock","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"uxr-5wk-8hk","isDefault":true,"name":"AWS S3 Public Access Block removed"},{"creationAuthorId":0,"tags":["control:cis-3.14","security:compliance","scope:ec2","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is destroying a VPC.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting a VPC:\n\n* [DeleteVpc][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-vpc.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1585870280906,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DeleteVpc OR CreateVpc OR ModifyVpcAttribute OR AcceptVpcPeeringConnection OR CreateVpcPeeringConnection OR DeleteVpcPeeringConnection OR RejectVpcPeeringConnection OR  AttachClassicLinkVpc OR  DetachClassicLinkVpc OR DisableVpcClassicLink OR EnableVpcClassicLink)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"igj-dr4-ico","isDefault":true,"name":"AWS VPC created or modified"},{"creationAuthorId":0,"tags":["source:gsuite","scope:gsuite","security:threat-intel"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user attempts to log in with a password which is known to be compromised.\n\n### Strategy\nThis rule allows you to monitor this Google Activity API call to detect if an attacker is trying to login with a leaked password: \n\n* [Leaked password][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the compromised password.\n2. Contact the user and ensure they rotate the password on Google and any other accounts where they may have reused this password. Ensure the user is aware of strong password guidelines.\n\n[1]: https://developers.google.com/admin-sdk/reports/v1/appendix/activity/login#account_disabled_password_leak","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870280553,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@actor.email"],"query":"source:gsuite @event.type:account_warning @event.name:account_disabled_password_leak","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"9zi-bom-nmh","isDefault":true,"name":"User attempted login with leaked password"},{"creationAuthorId":0,"tags":["technique:T1083-file-and-directory-discovery","scope:s3","source:cloudtrail","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance makes an API call to AWS to list all of the S3 Buckets.\n\n### Strategy\nThis rule lets you monitor CloudTrail to detect a [ListBuckets][1] API call with the session name prefixed with `i-`. A session name prefixed with `i-` typically indicates that it is an EC2 instance using an [Instance Profile][2] to communicate with other AWS services, which is a common attacker technique to see the full list of S3 buckets in your AWS account.\n Determine if the EC2 instance should be making this API call. \n* If not, rotate the credentials, verify what else may have been accessed and open an investigation into how this instance was compromised.\n   * If the application or legitimate user on the EC2 instance is making the `ListBuckets` API call, consider whether this API call is really needed.  \n\n[1]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html\n[2]: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html#ec2-instance-profile","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870281123,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @userIdentity.session_name:i-* @evt.name:ListBuckets","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"t6r-kqt-hxb","isDefault":true,"name":"AWS S3 Buckets enumerated"},{"creationAuthorId":0,"tags":["security:compliance","scope:amazon","framework:cis-aws","control:cis-3.3","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect AWS root user activity. \n\n### Strategy\nMonitor CloudTrail and detect when any `@userIdentity.type` has a value of `Root`, but is not invoked by an AWS service.\n\n### Triage & Response\n1. Reach out to the user to determine if the login was legitimate. \n2. If the login wasn''t legitimate, rotate the credentials, enable 2FA, and open an investigation. \n\nFor best practices, check out the [AWS Root Account Best Practices][1] documentation.\n\n[1]: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1585870281964,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:cloudtrail @userIdentity.type:Root  -@userIdentity.invokedBy:*  -@eventType:AwsServiceEvent","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"2kn-z6k-6kf","isDefault":true,"name":"AWS root account activity"},{"creationAuthorId":0,"tags":["scope:ec2","technique:T1485-data-destruction","tactic:TA0040-impact","source:cloudtrail","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is destroying an EC2 subnet.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting an EC2 subnet.\n\n* [DeleteSubnet][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-subnet.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870282197,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteSubnet","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ygi-fi5-qns","isDefault":true,"name":"AWS EC2 subnet deleted"},{"creationAuthorId":0,"tags":["security:compliance","control:cis-3.9","framework:cis-aws","scope:amazon-config","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is trying to evade defenses by disabling an AWS configuration.\n\n### Strategy\nThis rule lets you monitor these CloudTrail API calls to detect if an attacker is trying to stop recording configurations of your AWS resources or trying to delete a delivery channel:\n\n* [StopConfigurationRecorder][1] \n* [DeleteDeliveryChannel][2] \n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/config/latest/APIReference/API_StopConfigurationRecorder.html\n[2]: https://docs.aws.amazon.com/config/latest/APIReference/API_DeleteDeliveryChannel.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1585870283149,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(StopConfigurationRecorder OR DeleteDeliveryChannel OR PutDeliveryChannel OR PutConfigurationRecorder)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"p1b-9np-rw1","isDefault":true,"name":"AWS config modified"},{"creationAuthorId":0,"tags":["security:threat-intel","scope:template"],"isEnabled":false,"hasExtendedTitle":true,"message":"### Goal\nDetect when a stolen laptop has been connected to the network.\n\n### Strategy\nUsing the Datadog [Lookup Processor](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#lookup-processor) you can maintain a blocklist of MAC addresses.\nWhen a MAC address connects to the network, the @threat.stolen_laptop attribute is set to `true`.\nThis threat detection rule queries for `@threat.stolen_laptop:true` and generates a security signal. \n\n### Triage & Response\nEnter your triage and response process for when a stolen laptop has connected to your network to help users responding to the security signal quickly triage and respond to the signal. \n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870283379,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.mac"],"query":"@threat.stolen_laptop:true @network.client.mac:*","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ap3-xy9-tsm","isDefault":true,"name":"TEMPLATE - Stolen Laptop Connected to Network"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":false,"hasExtendedTitle":true,"message":"### Goal\nDetect an account take over (ATO) through brute force attempts.\n\n### Strategy\nTo determine a successful attempt: Detect a high amount of failed logins and at least one successful login for a given IP address. This will generate a `HIGH` severity signal.\nTo determine an attempt: Detect a high amount of failed logins for a given IP address. This will generate an `INFO severity signal.\n\n### Triage & Response\n1. Inspect the logs to see if this was a valid login attempt.\n2. See if 2FA was authenticated.\n3. If the user was compromised, rotate user credentials.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":7200,"keepAlive":3600},"version":2,"createdAt":1585870283641,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.name"],"query":"@evt.name:authentication @evt.outcome:failure","trackType":"logs"},{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.name"],"query":"@evt.name:authentication @evt.outcome:success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":["@slack-secops"],"name":"Successful","condition":"a>5 && b>0"},{"status":"info","notifications":[],"name":"Attempted","condition":"a>5"}],"type":"log_detection","id":"wce-cxo-pe4","isDefault":true,"name":"TEMPLATE - Brute Force Attack Grouped By IP"},{"creationAuthorId":0,"tags":["security:compliance","scope:cloudtrail","framework:cis-aws","source:cloudtrail","control:cis-3.5"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is trying to evade defenses by disabling or modifying CloudTrail.\n\n### Strategy\nThis rule lets you monitor these CloudTrail API calls to detect if an attacker is modifying or disabling CloudTrail:\n\n* [DeleteTrail][1]\n* [UpdateTrail][2]\n* [StopLogging][3]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_DeleteTrail.html\n[2]: https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_UpdateTrail.html\n[3]: https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_StopLogging.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1585870283907,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DeleteTrail OR UpdateTrail OR StopLogging OR CreateTrail OR StartLogging)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"4hv-083-miw","isDefault":true,"name":"AWS CloudTrail configuration modified"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect Brute Force Attacks\n\n### Strategy\nLeverage GuardDuty and detect when an attacker is performing a brute force attack. The following are GuardDuty findings trigger this signal:\n\n* [UnauthorizedAccess:EC2/SSHBruteForce][1]\n* [UnauthorizedAccess:EC2/RDPBruteForce][2]\n\n\n### Triage & Response\n1. Inspect the role of the EC2 instance in the attack. Find the role in the signal name - either `ACTOR` or `TARGET`.\n   * If you are the `TARGET` and the instance is available on the internet, expect to see IPs scanning your systems.\n   * If you are the `TARGET` and the instance is **not** available on the internet, this means a host on your internal network is scanning your EC2 instance. Open an investigation.\n   * If you are the `ACTOR`, this means that your instance is performing brute force attacks on other systems. Open an investigation.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized9\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized10","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":11,"createdAt":1585870284202,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/SSHBruteForce OR UnauthorizedAccess\\:EC2\\/RDPBruteForce) @detail.service.resourceRole:ACTOR","trackType":"logs"},{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/SSHBruteForce OR UnauthorizedAccess\\:EC2\\/RDPBruteForce) @detail.service.resourceRole:TARGET","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"ACTOR","condition":"a > 0"},{"status":"info","notifications":[],"name":"TARGET","condition":"b > 0"}],"type":"log_detection","id":"vyl-ylc-3io","isDefault":true,"name":"AWS EC2 instance involved in brute force attack"},{"creationAuthorId":0,"tags":["security:compliance","scope:ec2","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EBS encryption is disabled by default. \n\n### Strategy\nMonitor CloudTrail and detect when EBS encryption is disabled by default via the following API call:\n\n* [DisableEbsEncryptionByDefault][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user and let them know that it is best practice to enable EBS encryption by default.\n3. Re-enable EBS encryption by default.\n\nFor more information about Amazon EBS Encryption, check out the [Amazon EBS Encryption][2] documentation.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableEbsEncryptionByDefault.html\n[2]: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870284527,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DisableEbsEncryptionByDefault","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"4s7-uuu-lo8","isDefault":true,"name":"AWS EBS default encryption disabled"},{"creationAuthorId":0,"tags":["security:compliance","framework:cis-aws","control:cis-3.2","scope:aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when any user logs in to your AWS console without multi-factor authentication.\n\n### Strategy\nThis rule monitors CloudTrail and detects when any `@evt.name` has a value of  `Console Login`, and `@additionalEventData.MFAUsed` has a value of `no`. \n\n**Note:** This rule ignores logins using SAML because 2FA is implemented on the IdP and not through AWS.\n\n### Triage & Response\n1. Reach out to the user to determine if the login was legitimate. \n2. If the login was legitimate, request that the user enables 2FA. \n3. If the login wasn''t legitimate, rotate the credentials. \n4. Review all user accounts to ensure MFA is enabled. \n\n**Note:** There is a separate rule to detect [Root Login without MFA][1]. \n\n[1]: /security_monitoring/default_rules/cloudtrail-aws-root-login-without-mfa/","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1585870278209,"filters":[],"queries":[{"distinctFields":[],"name":"user_login_without_mfa","aggregation":"count","groupByFields":["@userIdentity.accountId","@usr.name"],"query":"source:cloudtrail @evt.name:ConsoleLogin @additionalEventData.MFAUsed:No @responseElements.ConsoleLogin:Success -@userIdentity.type:Root -@additionalEventData.SamlProviderArn:*","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"user_login_without_mfa > 0"}],"type":"log_detection","id":"wkk-muq-vg8","isDefault":true,"name":"AWS Console login without MFA"},{"creationAuthorId":0,"tags":["security:compliance","scope:amazon","framework:cis-aws","control:cis-3.2","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a root user logs into the AWS console without multi-factor authentication.\n\n### Strategy\nMonitor CloudTrail and detect when any `@evt.name` has a value of `Console Login`, `@userIdentity.type` has a value of `Root`, and `@additionalEventData.MFAUsed` has a value of `no`. \n\n**Note:** This rule ignores logins using SAML because 2FA is implemented on the IdP and not through AWS.\n\n### Triage & Response\n1. Reach out to the user to determine if the login was legitimate. \n2. If the login was legitimate, request that the user enables 2FA on the root account. \n3. If the login wasn''t legitimate, rotate the credentials. \n4. Review all root user accounts to ensure MFA is enabled. \n\n**Note:** There is a separate rule to detect [Login without MFA for non-root users][1]. \n\n[1]: /security_monitoring/default_rules/cloudtrail-aws-login-without-mfa/","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1585870278956,"filters":[],"queries":[{"distinctFields":[],"name":"root_login_without_mfa","aggregation":"count","groupByFields":["@userIdentity.accountId"],"query":"source:cloudtrail @evt.name:ConsoleLogin @additionalEventData.MFAUsed:No @responseElements.ConsoleLogin:Success @userIdentity.type:Root -@additionalEventData.SamlProviderArn:*","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"root_login_without_mfa > 0"}],"type":"log_detection","id":"miy-rjb-9wq","isDefault":true,"name":"AWS Console root login without MFA"},{"creationAuthorId":0,"tags":["security:compliance","control:cis-3.8","scope:s3","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a S3 Bucket policy is modified.\n\n### Strategy\nMonitor CloudTrail and detect when S3 policies are being modified via one of the following API calls:\n* [PutBucketAcl][1]\n* [PutBucketPolicy][2]\n* [PutBucketCors][3]\n* [PutBucketLifecycle][4]\n* [PutBucketReplication][5]\n* [DeleteBucketPolicy][6]\n* [DeleteBucketCors][7]\n* [DeleteBucketLifecycle][8]\n* [DeleteBucketReplication][9]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAcl.html\n [2]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketPolicy.html\n [3]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketCors.html\n [4]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html\n [5]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketReplication.html\n [6]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketPolicy.html\n [7]:  https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketCors.html\n [8]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html\n [9]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketReplication.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475579499,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(PutBucketAcl OR PutBucketPolicy OR PutBucketCors OR PutBucketLifecycle OR PutBucketReplication OR DeleteBucketPolicy OR DeleteBucketCors OR DeleteBucketLifecycle OR DeleteBucketReplication)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"nl3-oht-jhi","isDefault":true,"name":"AWS S3 Bucket policy modified"},{"creationAuthorId":0,"tags":["security:compliance","scope:kms","framework:cis-aws","source:cloudtrail","control:cis-3.7"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a CMK is deleted or scheduled for deletion.\n\n### Strategy\nThis rule lets you monitor these CloudTrail API calls to detect if an attacker is deleting CMKs:\n* [DisableKey][1]\n* [ScheduleKeyDeletion][2]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/kms/latest/APIReference/API_DisableKey.html\n[2]: https://docs.aws.amazon.com/kms/latest/APIReference/API_ScheduleKeyDeletion.html ","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475576501,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DisableKey OR ScheduleKeyDeletion)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"iff-hhm-bd3","isDefault":true,"name":"AWS CMK deleted or scheduled for deletion"},{"creationAuthorId":0,"tags":["security:compliance","scope:ec2","control:cis-3.11","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS Network Access Control List (NACL) has been created or modified.\n\n### Strategy\nThis rule lets you monitor CloudTrail and detect when an AWS NACL has been created or modified with one of the following API calls:\n* [CreateNetworkAcl][1] \n* [CreateNetworkAclEntry][2] \n* [DeleteNetworkAcl][3] \n* [DeleteNetworkAclEntry][4] \n* [ReplaceNetworkAclEntry][5] \n* [ReplaceNetworkAclAssociation][6]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAcl.html\n[2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAclEntry.html\n[3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkAcl.html\n[4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkAclEntry.html\n[5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceNetworkAclEntry.html\n[6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceNetworkAclAssociation.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475579808,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(CreateNetworkAcl OR CreateNetworkAclEntry OR DeleteNetworkAcl OR DeleteNetworkAclEntry OR ReplaceNetworkAclEntry OR ReplaceNetworkAclAssociation)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"pcs-k05-rbc","isDefault":true,"name":"AWS Network Access Control List created or modified"},{"creationAuthorId":0,"tags":["security:compliance","scope:ec2","control:cis-3.12","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS Network Gateway has been created or modified.\n\n### Strategy\nMonitor CloudTrail and detect when an AWS Network Gateway has been created or modified with one of the following API calls:\n* [CreateCustomerGateway][1] \n* [DeleteCustomerGateway][2] \n* [AttachInternetGateway][3] \n* [CreateInternetGateway][4]\n* [DeleteInternetGateway][5] \n* [DetachInternetGateway][6]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCustomerGateway \n [2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteCustomerGateway \n [3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachInternetGateway \n [4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateInternetGateway \n [5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteInternetGateway \n [6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachInternetGateway.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475581301,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(CreateCustomerGateway OR DeleteCustomerGateway OR AttachInternetGateway OR CreateInternetGateway OR DeleteInternetGateway OR DetachInternetGateway)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"umr-47s-eyj","isDefault":true,"name":"AWS Network Gateway created or modified"},{"creationAuthorId":0,"tags":["scope:iam","security:compliance","framework:cis-aws","source:cloudtrail","control:cis-3.6"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is a victim of an Account Take Over (ATO) by a brute force attack.\n\n### Strategy\n This rule monitors CloudTrail and detects when any `@evt.name` has a value of `Console Login`, and `@responseElements.ConsoleLogin` has a value of `Failure`.\n\n### Triage & Response\n1. Determine if the user logged in with 2FA.\n2. Reach out to the user and ensure the login was legitimate.","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":7,"createdAt":1584475581986,"filters":[],"queries":[{"distinctFields":[],"name":"failed_login","aggregation":"count","groupByFields":["@userIdentity.accountId","@usr.name"],"query":"source:cloudtrail @evt.name:ConsoleLogin @responseElements.ConsoleLogin:Failure","trackType":"logs"},{"distinctFields":[],"name":"successful_login_without_mfa","aggregation":"count","groupByFields":["@userIdentity.accountId","@usr.name"],"query":"source:cloudtrail @evt.name:ConsoleLogin @responseElements.ConsoleLogin:Success @additionalEventData.MFAUsed:No","trackType":"logs"},{"distinctFields":[],"name":"successful_login_with_mfa","aggregation":"count","groupByFields":["@userIdentity.accountId","@usr.name"],"query":"source:cloudtrail @evt.name:ConsoleLogin @responseElements.ConsoleLogin:Success @additionalEventData.MFAUsed:Yes","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Potentially Successful - NO MFA","condition":"failed_login > 5 && successful_login_without_mfa > 0"},{"status":"info","notifications":[],"name":"Potentially Successful - MFA Used","condition":"failed_login > 5 && successful_login_with_mfa > 0"},{"status":"info","notifications":[],"name":"Unsuccessful","condition":"failed_login > 5"}],"type":"log_detection","id":"csj-nez-h1v","isDefault":true,"name":"AWS Console brute force login"},{"creationAuthorId":0,"tags":["security:compliance","control:cis-3.13","scope:ec2","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS Route Table has been created or modified.\n\n### Strategy\nThis rule lets you monitor CloudTrail and detect when an AWS Route Table has been created or modified with one of the following API calls:\n* [CreateRoute][1] \n* [CreateRouteTable][2] \n* [ReplaceRoute][3] \n* [ReplaceRouteTableAssociation][4] \n* [DeleteRouteTable][5] \n* [DeleteRoute][6] \n* [DisassociateRouteTable][7]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRoute.html \n [2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRouteTable \n [3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRoute.html \n [4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRouteTableAssociation \n [5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRouteTable.html \n [6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRoute.html \n [7]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateRouteTable.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475582644,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(CreateRoute OR CreateRouteTable OR ReplaceRoute OR ReplaceRouteTableAssociation OR DeleteRouteTable OR DeleteRoute OR DisassociateRouteTable)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"qgo-jqs-03x","isDefault":true,"name":"AWS Route Table created or modified"},{"creationAuthorId":0,"tags":["security:compliance","scope:amazon","framework:cis-aws","source:cloudtrail","control:cis-3.1"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when unauthorized activity is detected in AWS.\n\n### Strategy\nThis rule lets you monitor CloudTrail to detect when the error message of `AccessDenied` is returned.\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":8,"createdAt":1584475582956,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail \"AccessDenied\"","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"greater than 1000 failed attempts","condition":"a > 1000"},{"status":"medium","notifications":[],"name":"greater than 100 failed attempts","condition":"a > 100"},{"status":"low","notifications":[],"name":"greater than 10 failed attempts","condition":"a > 10"}],"type":"log_detection","id":"3d9-oev-jbm","isDefault":true,"name":"AWS unauthorized activity"},{"creationAuthorId":0,"tags":["scope:iam","security:compliance","framework:cis-aws","source:cloudtrail","control:cis-3.4"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect a change to an AWS IAM Policy.\n\n### Strategy\nThis rule lets you monitor CloudTrail and detect when any event pertaining to an AWS IAM policy is detected with one of the following API calls:\n* [DeleteGroupPolicy][1]\n* [DeleteRolePolicy][16]\n* [DeleteUserPolicy][2]\n* [PutGroupPolicy][3]\n* [PutRolePolicy][4]\n* [PutUserPolicy][5]\n* [CreatePolicy][6]\n* [DeletePolicy][7]\n* [CreatePolicyVersion][8]\n* [DeletePolicyVersion][9]\n* [AttachRolePolicy][10]\n* [DetachRolePolicy][11]\n* [AttachUserPolicy][12]\n* [DetachUserPolicy][13]\n* [AttachGroupPolicy][14]\n* [DetachGroupPolicy][15]\n\n### Triage & Response\n1. Review the IAM Policy change and ensure it does not negatively impact your risk in relation to authentication or authorization controls.\n\n[1]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteGroupPolicy.html\n[2]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteUserPolicy.html\n[3]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutGroupPolicy.html\n[4]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutRolePolicy.html\n[5]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutUserPolicy.html\n[6]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicy.html\n[7]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeletePolicy.html\n[8]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicyVersion.html\n[9]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeletePolicyVersion.html\n[10]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachRolePolicy.html\n[11]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachRolePolicy.html\n[12]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachUserPolicy.html\n[13]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachUserPolicy.html\n[14]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachGroupPolicy.html\n[15]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachGroupPolicy.html\n[16]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteRolePolicy.html\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":6,"createdAt":1584475584008,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DeleteGroupPolicy OR DeleteRolePolicy OR DeleteUserPolicy OR PutGroupPolicy OR PutRolePolicy OR PutUserPolicy OR CreatePolicy OR DeletePolicy OR CreatePolicyVersion OR DeletePolicyVersion OR AttachRolePolicy OR DetachRolePolicy OR AttachUserPolicy OR DetachUserPolicy OR AttachGroupPolicy OR DetachGroupPolicy)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"z8s-u06-ctu","isDefault":true,"name":"AWS IAM policy changed"},{"creationAuthorId":0,"tags":["security:compliance","scope:ec2","framework:cis-aws","source:cloudtrail","control:cis-3.10"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS security group has been modified.\n\n### Strategy\nMonitor CloudTrail and detect when an AWS security group has been created or modified with one of the following API calls:\n* [AuthorizeSecurityGroupIngress][1] \n* [AuthorizeSecurityGroupEgress][2] \n* [RevokeSecurityGroupIngress][3] \n* [RevokeSecurityGroupEgress][4] \n* [CreateSecurityGroup][5] \n* [DeleteSecurityGroup][6]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupIngress.html \n [2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupEgress.html \n [3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeSecurityGroupIngress.html \n [4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeSecurityGroupEgress.html \n [5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html \n [6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSecurityGroup.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475583507,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(AuthorizeSecurityGroupIngress OR AuthorizeSecurityGroupEgress OR RevokeSecurityGroupIngress OR RevokeSecurityGroupEgress OR CreateSecurityGroup OR DeleteSecurityGroup)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"bax-btp-3ct","isDefault":true,"name":"AWS security group created or modified"},{"creationAuthorId":0,"tags":["source:twistlock"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect vulnerabilities in container images.\n\n### Strategy\nThis rule lets you monitor Twistlock logs to detect `Critical` severity vulnerabilities in a container image. \n\n### Triage & Response\n1. Determine the impact of this vulnerability.\n2. Update the container image in the registry with a patched version of the software.\n3. Deploy the new image to all containers running the vulnerable image.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870278701,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@vulnerability.cve","@vulnerability.package.name","@vulnerability.image_name"],"query":"source:twistlock @vulnerability.log_type:vulnerability @vulnerability.severity:critical","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"d7s-rex-gjv","isDefault":true,"name":"Container image vulnerability detected"},{"creationAuthorId":0,"tags":["source:twistlock"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a container is not running within compliance standards.\n\n### Strategy\nThis rule lets you monitor Twistlock logs to detect when `Critical` severity compliance issues are discovered in a running container. \n\n### Triage & Response\n1. Determine the impact of the compliance finding.\n2. Remediate the compliance finding.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870281390,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@vulnerability.compliance_id","@vulnerability.container_name"],"query":"source:twistlock @vulnerability.log_type:compliance @vulnerability.severity:critical","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"9vp-d1j-kwp","isDefault":true,"name":"Container violated compliance standards"},{"creationAuthorId":0,"tags":["source:signal_sciences","scope:signal_sciences"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an IP is flagged by Signal Sciences.\n\n### Strategy\nThis rule lets you monitor Signal Sciences events submitted through the Signal Sciences [integration][1] to detect when an IP is flagged. \n\n### Triage & Response\n1. Determine whether the attack is a false positive.\n2. Determine whether the attack was successful.\n3. If the attack exploited a vulnerability in the application, triage the vulnerability.\n\n[1]: https://app.datadoghq.com/account/settings#integrations/sigsci","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":3,"createdAt":1584993292228,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":[],"query":"source:signal_sciences @title:*flag","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"bmg-ftn-dzo","isDefault":true,"name":"Signal Sciences flagged an IP"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.service.account"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a new service account is created.\n\n### Strategy\nThis rule lets you monitor GCP admin activity audit logs to determine when a service account is created. \n\n### Triage & Response\n1. Contact the user who created the service account and ensure that the account is needed and that the role is scoped properly.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870281733,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.service.account @evt.name:google.iam.admin.v1.CreateServiceAccount","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"szx-4kh-eqs","isDefault":true,"name":"GCP service account created"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.service.account"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a new service account key is created.  An attacker could use this key as a backdoor to your account. \n\n### Strategy\nThis rule lets you monitor GCP admin activity audit logs to detect the creation of a service account key. \n\n### Triage & Response\n1. Contact the user who created the service account key to ensure they''re managing the key securely.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870277946,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.service.account @evt.name:google.iam.admin.v1.CreateServiceAccountKey","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"79j-4wh-xlq","isDefault":true,"name":"GCP service account key created"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.project"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect a change to the IAM policy. \n\n### Strategy\nThis rule lets you monitor GCP admin activity audit logs to determine when the `SetIamPolicy` method is invoked. \n\n### Triage & Response\n1. Review the log and inspect the policy deltas (`@data.protoPayload.serviceData.policyDelta.bindingDeltas`) and ensure none of the actions are `REMOVE`.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870280073,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.project @evt.name:SetIamPolicy","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"fgm-8w4-cgx","isDefault":true,"name":"GCP IAM policy modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.project"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a change to a GCP logging sink has been made. This could stop audit logs from being sent to Datadog.\n\n### Strategy\nMonitor GCP admin activity audit logs to determine when any of the following methods are invoked:\n\n* `google.logging.v2.ConfigServiceV2.UpdateSink`\n* `google.logging.v2.ConfigServiceV2.DeleteSink`\n\n### Triage & Response\n1. Review the sink and ensure the sink is properly configured.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871191688,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id","@data.protoPayload.resourceName"],"query":"source:gcp.project @evt.name:(google.logging.v2.ConfigServiceV2.UpdateSink OR google.logging.v2.ConfigServiceV2.DeleteSink)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"hil-rl3-yxs","isDefault":true,"name":"GCP logging sink modified"},{"creationAuthorId":0,"tags":["scope:gcp.gce.route","source:gcp","security:compliance"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a VPC network is created. \n\n### Strategy\nThis rule lets you monitor GCP GCE activity audit logs to determine when the following method is invoked to create a new VPC network:\n\n* `beta.compute.networks.insert`\n\n### Triage & Response\n1. Review the VPC network.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871193403,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","@data.protoPayload.resourceName","@usr.id"],"query":"source:gcp.gce.route @evt.name:beta.compute.networks.insert","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"a9z-oic-grb","isDefault":true,"name":"GCP GCE VPC network modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.gcs.bucket"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when permissions have changed on a GCS Bucket.\n\n### Strategy\nMonitor GCS bucket admin activity audit logs to determine the following method is invoked:\n\n* `storage.setIamPermissions`\n\n### Triage & Response\n1. Review the bucket permissions and ensure they are not overly permissive.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871193842,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","bucket_name","@usr.id"],"query":"source:gcp.gcs.bucket @evt.name:storage.setIamPermissions","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"fdk-tly-4qr","isDefault":true,"name":"GCP Bucket permissions modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.gce.firewall.rule"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a firewall rule is created, modified or deleted. \n\n### Strategy\nMonitor GCP GCE activity audit logs to determine when any of the following methods are invoked:\n\n* `v1.compute.firewalls.delete`\n* `v1.compute.firewalls.insert`\n* `v1.compute.firewalls.patch` \n\n### Triage & Response\n1. Review the log and role and ensure the permissions are scoped properly.\n2. Review the users associated with the role and ensure they should have the permissions attached to the role.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870279610,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","@data.protoPayload.resourceOriginalState.name","@usr.id"],"query":"source:gcp.gce.firewall.rule @evt.name:(v1.compute.firewalls.delete OR v1.compute.firewalls.insert OR v1.compute.firewalls.patch)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"n1w-sql-apl","isDefault":true,"name":"GCP GCE Firewall rule modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.iam.role"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a custom role is created or modified. \n\n### Strategy\nMonitor GCP IAM activity audit logs to determine when any of the following methods are invoked:\n\n* `google.iam.admin.v1.CreateRole`\n* `google.iam.admin.v1.UpdateRole` \n\n### Triage & Response\n1. Review the log and role and ensure the permissions are scoped properly.\n2. Review the users associated with the role and ensure they should have the permissions attached to the role.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870282410,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.iam.role @evt.name:(google.iam.admin.v1.CreateRole OR google.iam.admin.v1.UpdateRole)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"rhy-fzm-gwl","isDefault":true,"name":"GCP IAM custom role created or modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.cloudsql.database"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a Cloud SQL DB has been modified.\n\n### Strategy\nThis rule lets you monitor GCP Cloud SQL admin activity audit logs to determine when one of the following methods are invoked:\n\n* `cloudsql.instances.create`\n* `cloudsql.instances.create`\n* `cloudsql.users.update`\n\n### Triage & Response\n1. Review the Cloud SQL DB and ensure it is configured properly with the correct permissions.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871198921,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","database_id","@usr.id"],"query":"source:gcp.cloudsql.database @evt.name:(cloudsql.instances.create OR cloudsql.instances.create OR cloudsql.users.create OR cloudsql.users.update)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ikf-ye8-cnu","isDefault":true,"name":"GCP Cloud SQL database modified"},{"creationAuthorId":0,"tags":["scope:gcp.gce.route","source:gcp","security:compliance"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a firewall rule is created or modified. \n\n### Strategy\nThis rule lets you monitor GCP GCE activity audit logs to determine if a firewall is being adjusted by showing you when any of the following methods are invoked:\n\n* `beta.compute.routes.insert`\n* `beta.compute.routes.patch`\n\n### Triage & Response\n1. Veirify that the GCP route is configured properly and that the user intended to modify the firewall.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870282924,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","@data.protoPayload.resourceName","@usr.id"],"query":"source:gcp.gce.route @evt.name(beta.compute.routes.insert OR beta.compute.routes.patch)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"lht-ml8-u6r","isDefault":true,"name":"GCP GCE network route created or modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.gcs.bucket"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an administrative change to a GCS Bucket has been made. This could change the retention policy or bucket lock. For more information, see the [GCS Bucket Lock docs][1].\n\n### Strategy\nThis rule lets you monitor GCS bucket admin activity audit logs to determine if a bucket has been updated with the following method:\n\n* `storage.buckets.update`\n\n### Triage & Response\n1. Review the bucket to ensure that it is properly configured.\n\n[1]: https://cloud.google.com/storage/docs/bucket-lock","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871279860,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","bucket_name","@usr.id"],"query":"source:gcp.gcs.bucket @evt.name:storage.buckets.update","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"iz3-sc4-ryy","isDefault":true,"name":"GCP Bucket modified"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","technique:T1046-network-service-scanning","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is conducting a port scan.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Recon:EC2/Portscan][2]\n\n\n### Triage & Response\n1. Determine why traffic from the EC2 instance appears to be conducting a port scan.\n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n \n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon5\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525376478,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Recon\\:EC2\\/Portscan)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"y1y-h5t-gnp","isDefault":true,"name":"AWS EC2 instance conducting a port scan"},{"creationAuthorId":0,"tags":["scope:iam","security:compliance","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user disables [S3 Block Public Access][1]\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][2] finding:\n\n* [Policy:IAMUser/S3BlockPublicAccessDisabled][3]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Contact the user and determine why the user disabled the S3 Block Access feature.   \n3. Re-enable S3 Block Public Access.\n\n[1]: https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html\n[2]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_policy.html#policy2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525377921,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Policy\\:IAMUser\\/S3BlockPublicAccessDisabled)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"loc-nk4-pkc","isDefault":true,"name":"AWS IAM user disabled S3 Block Public Access"},{"creationAuthorId":0,"tags":["scope:ec2","security:threat-intel","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS API call is made from a non EC2 IP for a credential which is scoped to an EC2 Instance.  \n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:IAMUser/InstanceCredentialExfiltration][2]\n\n\n### Triage & Response\n1. Determine the EC2 instance this credential is scoped to. This can be found in the samples. \n2. Determine if the EC2 instance credentials are compromised.  \n3. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized11\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525378639,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:IAMUser\\/InstanceCredentialExfiltration)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"iaa-n0t-0jz","isDefault":true,"name":"AWS EC2 instance credential exfiltrated"},{"creationAuthorId":0,"tags":["scope:iam","security:threat-intel","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user makes API requests from a malicious IP.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Recon:IAMUser/TorIPCaller][2]\n* [Recon:IAMUser/MaliciousIPCaller.Custom][3]\n* [Recon:IAMUser/MaliciousIPCaller][4]\n* [UnauthorizedAccess:IAMUser/MaliciousIPCaller][5]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][6] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon1\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon2\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon3\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized5\n[6]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525380153,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Recon\\:IAMUser\\/TorIPCaller OR Recon\\:IAMUser\\/MaliciousIPCaller.Custom OR Recon\\:IAMUser\\/MaliciousIPCaller OR UnauthorizedAccess\\:IAMUser\\/MaliciousIPCaller)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"8w7-aaz-ojp","isDefault":true,"name":"AWS IAM user requests from malicious IP"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","technique:T1046-network-service-scanning","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is being probed by a scanner.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Recon:EC2/PortProbeUnprotectedPort][2]\n* [Recon:EC2/PortProbeEMRUnprotectedPort][3]\n\n\n### Triage & Response\n1. This is typically an informative signal. However, if this instance should not be publicly available, you should review the security group for this instance. \n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon6\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#PortProbeEMRUnprotectedPort\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525381084,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Recon\\:EC2\\/PortProbeUnprotectedPort OR Recon\\:EC2\\/PortProbeEMRUnprotectedPort)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"mrq-h3x-jus","isDefault":true,"name":"AWS EC2 instance probed by scanner"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0011-command-and-control","technique:T1188-multi-hop-proxy","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance makes an outbound network connection from TOR.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/TorClient][2]\n\n\n### Triage & Response\n1. Determine if the EC2 instance should be making requests to TOR. \n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance. \n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized13\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525381864,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/TorClient)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ihd-q9p-mwx","isDefault":true,"name":"AWS EC2 instance outbound connections to TOR"},{"creationAuthorId":0,"tags":["scope:iam","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user is launching compute resources and has no prior history of invoking this API.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [ResourceConsumption:IAMUser/ComputeResources][2]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][3] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_resource.html#resourceconsumption\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525382816,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(ResourceConsumption\\:IAMUser\\/ComputeResources)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"fwu-iey-ovx","isDefault":true,"name":"AWS IAM user anomalous resource consumption"},{"creationAuthorId":0,"tags":["scope:ec2","security:threat-intel","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance receives an inbound network connection from TOR.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/TorIPCaller][2]\n\n\n### Triage & Response\n1. This is typically an informative signal. However, if this instance should not be publicly available, you should review the security group for this instance. \n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized7\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525383148,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/TorIPCaller)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"1ew-u8i-att","isDefault":true,"name":"AWS EC2 instance inbound connections from TOR"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is participating in a Denial of Service (DoS) attack.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Backdoor:EC2/DenialOfService.Tcp][2]\n* [Backdoor:EC2/DenialOfService.Udp][3]\n* [Backdoor:EC2/DenialOfService.Dns][4]\n* [Backdoor:EC2/DenialOfService.UdpOnTcpPorts][5]\n* [Backdoor:EC2/DenialOfService.UnusualProtocol][6]\n\n\n### Triage & Response\n1. Determine if the EC2 instance is compromised and participating in a DoS attack.\n2. If the instance is compromised:\n   * Review the AWS [documentation][7] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor8\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor9\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor10\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor11\n[6]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor12\n[7]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525383757,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Backdoor\\:EC2\\/DenialOfService.Tcp OR Backdoor\\:EC2\\/DenialOfService.Udp OR Backdoor\\:EC2\\/DenialOfService.Dns OR Backdoor\\:EC2\\/DenialOfService.UdpOnTcpPorts OR Backdoor\\:EC2\\/DenialOfService.UnusualProtocol)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"3l6-vrm-iyn","isDefault":true,"name":"AWS EC2 instance participating in a DoS attack"},{"creationAuthorId":0,"tags":["tactic:TA0004-privilege-escalation","scope:iam","source:guardduty","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user is attempting to escalate permissions.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [PrivilegeEscalation:IAMUser/AdministrativePermissions][2]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][3] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_privilegeescalation.html#privilegeescalation1\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525384559,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(PrivilegeEscalation\\:IAMUser\\/AdministrativePermissions)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"dsb-ciq-vrt","isDefault":true,"name":"AWS IAM user escalating privileges"},{"creationAuthorId":0,"tags":["scope:iam","technique:T1089-disabling-security-tools","source:guardduty","tactic:TA0005-defense-evasion","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user is changing sensitive configurations and has no prior history of invoking these APIs.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Stealth:IAMUser/S3ServerAccessLoggingDisabled][2]\n* [Stealth:IAMUser/PasswordPolicyChange][3]\n* [Stealth:IAMUser/CloudTrailLoggingDisabled][4]\n* [Stealth:IAMUser/LoggingConfigurationModified][5]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][6] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_stealth.html#stealth4\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_stealth.html#stealth1\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_stealth.html#stealth2\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_stealth.html#stealth3\n[6]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525385196,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Stealth\\:IAMUser\\/S3ServerAccessLoggingDisabled OR Stealth\\:IAMUser\\/PasswordPolicyChange OR Stealth\\:IAMUser\\/CloudTrailLoggingDisabled OR Stealth\\:IAMUser\\/LoggingConfigurationModified)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"48o-8me-0mo","isDefault":true,"name":"AWS IAM user changing sensitive configurations"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is compromised and sending spam emails.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Backdoor:EC2/Spambot][2]\n\n\n### Triage & Response\n1. Determine if the EC2 should be sending out email over port 25. \n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor6\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525385866,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Backdoor\\:EC2\\/Spambot)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ecn-gew-dg2","isDefault":true,"name":"AWS EC2 instance Sending spam emails"},{"creationAuthorId":0,"tags":["scope:iam","source:guardduty","security:attack","tactic:TA0003-persistence"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user is attempting to gain persistence within an AWS account.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Persistence:IAMUser/NetworkPermissions][2]\n* [Persistence:IAMUser/ResourcePermissions][3]\n* [Persistence:IAMUser/UserPermissions][4]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][5] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_persistence.html#persistence1\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_persistence.html#persistence2\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_persistence.html#persistence3\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525386519,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Persistence\\:IAMUser\\/NetworkPermissions OR Persistence\\:IAMUser\\/ResourcePermissions OR Persistence\\:IAMUser\\/UserPermissions)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"4ho-oxn-reh","isDefault":true,"name":"AWS IAM user attempting to gain persistence"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0006-credential-access","security:attack","technique:T1522-cloud-instance-metadata-api"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance makes a DNS request and resolves to the AWS metadata IP address (169.254.169.254).\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/MetadataDNSRebind][2]\n\n\n### Triage & Response\n1. Determine which process made the DNS request. The DNS request can be found in the samples.\n2. Ensure the process is not a victim of an SSRF attack to steal the AWS EC2 Instance profile''s STS credentials.  \n2. If the STS credentials are compromised:\n   * Review the AWS [documentation][3] on revoking the session.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#ec2-metadatadnsrebind\n[3]: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_revoke-sessions.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":2,"createdAt":1587525387807,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/MetadataDNSRebind)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"aad-vqz-7tk","isDefault":true,"name":"AWS EC2 Instance Victim to Metadata DNS Rebind Attack"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is being used as a TOR relay.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/TorRelay][2]\n\n\n### Triage & Response\n1. Determine if the EC2 instance should be uses as a TOR relay. \n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance. \n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized14\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525388119,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/TorRelay)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"tpv-3qf-v90","isDefault":true,"name":"AWS EC2 instance connecting to TOR as a relay"},{"creationAuthorId":0,"tags":["scope:iam","source:guardduty","security:anomaly"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user login is suspicious.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [UnauthorizedAccess:IAMUser/ConsoleLoginSuccess.B][2]\n* [UnauthorizedAccess:IAMUser/ConsoleLogin][3]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][4] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized4\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized12\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525388403,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:IAMUser\\/ConsoleLoginSuccess.B OR UnauthorizedAccess\\:IAMUser\\/ConsoleLogin)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"kme-i0z-ylv","isDefault":true,"name":"AWS IAM user suspicious login"},{"creationAuthorId":0,"tags":["scope:ec2","security:threat-intel","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance makes an outbound network connection to a malcious IP address.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/MaliciousIPCaller.Custom][2]\n\n\n### Triage & Response\n1. Determine which IP address triggered the signal. This can be found in the sample.\n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized5\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525389461,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/MaliciousIPCaller.Custom)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"22j-qk6-qv3","isDefault":true,"name":"AWS EC2 instance communicating with malicious IP"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","security:anomaly"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is communicating over an unusual port.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Behavior:EC2/NetworkPortUnusual][2]\n\n\n### Triage & Response\n1. Determine which port triggered the signal. This can be found in the samples.\n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_behavior.html#behavior3\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525391873,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Behavior\\:EC2\\/NetworkPortUnusual)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"qfd-ned-cjn","isDefault":true,"name":"AWS EC2 instance communicating over unusual port"},{"creationAuthorId":0,"tags":["scope:iam","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user makes API requests with hacking tools.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [PenTest:IAMUser/KaliLinux][2]\n* [PenTest:IAMUser/ParrotLinux][3]\n* [PenTest:IAMUser/PentooLinux][4]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][5] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_pentest.html#pentest1\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_pentest.html#pentest2\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_pentest.html#pentest3\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525392995,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(PenTest\\:IAMUser\\/KaliLinux OR PenTest\\:IAMUser\\/ParrotLinux OR PenTest\\:IAMUser\\/PentooLinux)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ocf-ys6-78v","isDefault":true,"name":"AWS IAM user making API requests with hacking tools"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is communicating with a malicious server.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Backdoor:EC2/C&CActivity.B!DNS][2]\n* [Trojan:EC2/BlackholeTraffic][3]\n* [Trojan:EC2/DropPoint][4]\n* [Trojan:EC2/BlackholeTraffic!DNS][5]\n* [Trojan:EC2/DriveBySourceTraffic!DNS][6]\n* [Trojan:EC2/DropPoint!DNS][7]\n* [Trojan:EC2/DGADomainRequest.B][8]\n* [Trojan:EC2/DGADomainRequest.C!DNS][9]\n* [Trojan:EC2/DNSDataExfiltration][10]\n* [Trojan:EC2/PhishingDomainRequest!DNS][11]\n\n\n### Triage & Response\n1. Determine which domain name or IP address triggered the signal. This can be found in the samples.\n2. If the instance is compromised:\n   * Review the AWS [documentation][12] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor6\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan4\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan5\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan6\n[6]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan7\n[7]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan8\n[8]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan9\n[9]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan95\n[10]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan10\n[11]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan11\n[12]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525393367,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Trojan\\:EC2\\/BlackholeTraffic OR Trojan\\:EC2\\/DropPoint OR Trojan\\:EC2\\/BlackholeTraffic\\!DNS OR Trojan\\:EC2\\/DriveBySourceTraffic\\!DNS OR Trojan\\:EC2\\/DropPoint\\!DNS OR Trojan\\:EC2\\/DGADomainRequest.B OR Trojan\\:EC2\\/DGADomainRequest.C\\!DNS OR Backdoor\\:EC2\\/C&CActivity.B\\!DNS OR Trojan\\:EC2\\/PhishingDomainRequest\\!DNS)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"9du-jhn-b4f","isDefault":true,"name":"AWS EC2 instance communicated with a malicious server"},{"creationAuthorId":0,"tags":["scope:iam","security:compliance","source:guardduty","control:cis-1.1","framework:cis-aws","control:cis-3.3"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when the AWS root user credentials are used.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Policy:IAMUser/RootCredentialUsage][2]\n\n\n### Triage & Response\n1. Determine whether the root account activity was legitimate. \n * Review the sample for context. \n * Review CloudTrail logs for a full investigation. \n3. If the root user''s credentials are compromised:\n * Review the AWS [documentation][3] on remediating compromised AWS credentials.\n\n**[Root Account Best Practices][4]**\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_policy.html#policy1\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n[4]: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":5,"createdAt":1587525393683,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":[],"query":"source:guardduty @evt.name:(Policy\\:IAMUser\\/RootCredentialUsage)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"cjm-gyr-zxb","isDefault":true,"name":"AWS Root credential activity"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","security:anomaly"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance network traffic volume is unusual.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Behavior:EC2/TrafficVolumeUnusual][2]\n\n\n### Triage & Response\n1. Determine which port triggered the signal. This can be found in the samples.\n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_behavior.html#behavior4\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525393982,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Behavior\\:EC2\\/TrafficVolumeUnusual)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ipt-dpt-t69","isDefault":true,"name":"AWS EC2 instance network traffic volume unusual"},{"creationAuthorId":0,"tags":["scope:apache","technique:T1190-exploit-public-facing-application","source:apache","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This identifies attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":8,"createdAt":1587530038000,"filters":[{"action":"require","query":"source:foo"}],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:apache @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ipl-oaz-eqf","isDefault":true,"name":"Apache HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["technique:T1190-exploit-public-facing-application","source:elb","scope:elb","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This will identify attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous User Agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an INFO signal.  \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1587530043452,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:elb @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"csd-1pb-wxh","isDefault":true,"name":"AWS ELB HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["technique:T1190-exploit-public-facing-application","source:nginx","scope:nginx","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This will identify attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1587530047261,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:nginx @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"5jr-xi3-uto","isDefault":true,"name":"NGINX HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["technique:T1190-exploit-public-facing-application","scope:nginx-ingress-controller","source:nginx-ingress-controller","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This will identify attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1587530154864,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:nginx-ingress-controller @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"oxj-rwr-gxq","isDefault":true,"name":"NGINX ingress controller HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["technique:T1190-exploit-public-facing-application","source:fastly","scope:fastly","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This identifies attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2]. \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1587530162282,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:fastly @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"dqs-oru-107","isDefault":true,"name":"Fastly HTTP Requests from Security Scanner"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when there is unauthorized activity by a service account in GCP\n\n### Strategy\nMonitor GCP logs and detect when a service account makes an API request and the request returns the status code equal to `7` within the log attribute `@data.protoPayload.status.code`. The status code `7` indicates the service account did not have permission to make the API call.\n\n### Triage & Response\n1. Determine the service account that made the unauthorized calls.\n2. Investigate if there is a misconfiguration in IAM permissions or if an attacker compromised the service account","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":5,"createdAt":1587592191518,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.* @data.protoPayload.status.code:7 @usr.id:(*gserviceaccount.com OR *google.com)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"greater than 1000 failed attempts","condition":"a > 1000"},{"status":"medium","notifications":[],"name":"greater than 100 failed attempts","condition":"a > 100"},{"status":"low","notifications":[],"name":"greater than 10 failed attempts","condition":"a > 10"}],"type":"log_detection","id":"89d-2v1-fvm","isDefault":true,"name":"GCP unauthorized service account activity"},{"creationAuthorId":0,"tags":["source:iis","scope:iis","technique:T1190-exploit-public-facing-application","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This will identify attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1587530716843,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:iis @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ftm-iao-udy","isDefault":true,"name":"IIS HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when unauthorized activity by a user is detected in GCP\n\n### Strategy\nMonitor GCP logs and detect when a user account makes an API request and the request returns the status code equal to `7` within the log attribute `@data.protoPayload.status.code`. The status code `7` indicates the user account did not have permission to make the API call.\n\n### Triage & Response\n1. Determine the user who made the unauthorized calls.\n2. Determine if there is a misconfiguration in IAM permissions or whether an attacker has compromised the user account.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":5,"createdAt":1587592193834,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.* @data.protoPayload.status.code:7 -@usr.id:(*gserviceaccount.com OR *google.com)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"greater than 1000 failed attempts","condition":"a > 1000"},{"status":"medium","notifications":[],"name":"greater than 100 failed attempts","condition":"a > 100"},{"status":"low","notifications":[],"name":"greater than 10 failed attempts","condition":"a > 10"}],"type":"log_detection","id":"stt-ows-yte","isDefault":true,"name":"GCP unauthorized user activity"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.pubsub.topic"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a GCP Pub/Sub Subscribtion has been deleted. This could stop audit logs from being sent to Datadog.\n\n### Strategy\nMonitor GCP admin activity audit logs to determine when the following method is invoked:\n\n* `google.pubsub.v1.Publisher.DeleteTopic`\n\n### Triage & Response\n1. Review the subscribtion and ensure it is properly configured.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1587592198839,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id","@data.protoPayload.resourceName"],"query":"source:gcp.pubsub.topic @evt.name:google.pubsub.v1.Publisher.DeleteTopic","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"dp6-zom-jyv","isDefault":true,"name":"GCP Pub/Sub topic deleted"},{"creationAuthorId":0,"tags":["technique:T1083-file-and-directory-discovery","source:gcp","scope:gcp.gcs.bucket","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a service account lists out GCS Buckets.\n\n### Strategy\nThis rule lets you monitor GCS bucket admin activity audit logs to determine when a service account invokes the following method:\n\n* `storage.buckets.list`\n\n### Triage & Response\n1. Determine whether this service account should be making list bucket calls.\n * If the account was compromised, secure the account and investigate how it was compromised and if the account made other unauthorized calls.\n * If the owner of the service account intended to make the `ListBuckets` API call, consider whether this API call is needed. It could cause a security issue for the application to know the name of the bucket it needs to access. If it''s not needed, modify this rule''s filter to stop generating signals for this specific service account.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1587592199858,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","bucket_name","@usr.id"],"query":"source:gcp.gcs.bucket @evt.name:storage.buckets.list @usr.id:*gserviceaccount.com","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"cnc-wi1-llf","isDefault":true,"name":"GCP Bucket enumerated"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.pubsub.subscription"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a change to a GCP Pub/Sub Subscription has been made. This could stop audit logs from being sent to Datadog.\n\n### Strategy\nMonitor GCP admin activity audit logs to determine when any of the following methods are invoked:\n\n* `google.pubsub.v1.Subscriber.UpdateSubscription`\n* `google.pubsub.v1.Subscriber.DeleteSubscription`\n\n### Triage & Response\n1. Review the subscribtion and ensure it is properly configured.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1587592205917,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id","@data.protoPayload.resourceName"],"query":"source:gcp.pubsub.subscription @evt.name:(google.pubsub.v1.Subscriber.UpdateSubscription OR google.pubsub.v1.Subscriber.DeleteSubscription)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"tsj-mac-mdc","isDefault":true,"name":"GCP Pub/Sub Subscriber modified"},{"creationAuthorId":0,"tags":["source:okta"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a new Okta API token is created.\n\n### Strategy\nThis rule lets you monitor the following Okta event to detect when a new Okta API token is created:\n\n* `system.api_token.create`\n\n### Triage & Response\n1. Contact the user who created the API token and ensure that the API token is needed.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1589315541698,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.email"],"query":"source:okta @evt.name:system.api_token.create","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"lpf-tho-8sx","isDefault":true,"name":"Okta API Token Created or Enabled"},{"creationAuthorId":0,"tags":["source:okta"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user attempts to bypass multi-factor authentication (MFA).\n\n### Strategy\nThis rule lets you monitor the following Okta events to detect when a user attempts to bypass MFA:\n\n* `user.mfa.attempt_bypass`\n\n### Triage & Response\n1. Contact the user who attempted to bypass MFA and ensure the request was legitimate.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1589315643307,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.email"],"query":"source:okta @evt.name:user.mfa.attempt_bypass","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"wbd-slu-e6s","isDefault":true,"name":"Okta MFA Bypass Attempted"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user attaches to a pod.\n\n### Strategy\nThis rule monitors when a user attaches (`@objectRef.subresource:attach`) to a pod (`@objectRef.resource:pods`).\n\nA user should not need to attach to a pod. Attaching to a pod allows a user to attach to any process in a running container which may give an attacker access to sensitive data.\n\n### Triage & Response\n1. Determine if the user should be attaching to a running container.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":8,"createdAt":1589375996858,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:pods @objectRef.subresource:attach @http.method:create @http.status_code:[101 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:pods @objectRef.subresource:attach @verb:create @responseStatus.code:[101 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"j6t-mva-rul","isDefault":true,"name":"User Attached to a Pod"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an unauthenticated request user is permitted in Kubernetes.\n\n### Strategy\nThis rule monitors when any action is permitted (`@http.status_code:[100 TO 299]`) for an unauthenticated user (`@user.username:\\\"system:anonymous\\\"`).\nThe `/healthz` endpoint is commonly accessed unauthenticated and it is excluded in the query filter.\n\n### Triage & Response\n1. Inspect all of the HTTP paths accessed and determine if any of the path should be permitted by unauthenticated users.\n2. Determine what IP addresses accessed Kubernetes endpoints which may contain sensitive data.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1589376002149,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":[],"query":"@apiVersion:audit.k8s.io* @usr.name:\"system:anonymous\" @http.status_code:[100 TO 299] -@http.url_details.path:\"/healthz\"","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":[],"query":"@apiVersion:audit.k8s.io* @user.username:\"system:anonymous\" @responseStatus.code:[100 TO 299] -@requestURI:\"/healthz\"","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"f1o-py5-a50","isDefault":true,"name":"Anonymous Request Authorized"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a pod is attached to the host network.\n\n### Strategy\nThis rule monitors when a create (`@http.method:create`) action occurs for a pod (`@objectRef.resource:pods`) with the host network `@requestObject.spec.hostNetwork:true` attached.\n\nAttaching the `hostNetwork` permits a pod to access the node''s network adapter allowing a pod to listen to all network traffic for all pods on the node and communicate with other pods on the network namespace.\n\n### Triage & Response\n1. Determine if the pod needs `hostNetwork` access.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1589376007079,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@requestObject.metadata.generateName"],"query":"source:kubernetes.audit @objectRef.resource:pods @http.method:create @requestObject.spec.hostNetwork:true @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@requestObject.metadata.generateName"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:pods @verb:create @requestObject.spec.hostNetwork:true @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"d3g-xpz-cwc","isDefault":true,"name":"Kubernetes Pod Created with hostNetwork"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is creating a pod in one of the Kubernetes default namespaces.\n\n### Strategy\nThis rule monitors when a create (`@http.method:create`) action occurs for a pod (`@objectRef.resource:pods`) within either of the `kube-system` or `kube-public` namespaces.\n\nThe only users creating pods in the `kube-system` namespace should be cluster administrators. Furthermore, it is best practice to not run any cluster critical infrastructure in the `kube-system` namespace.\n\nThe `kube-public` namespace is intended for Kubernetes objects which should be readable by unauthenticated users. Thus, a pod should likely not be created in the `kube-public` namespace.\n\n### Triage & Response\n1. Determine if the user should be creating this new pod in one of the default namespaces.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1589376012191,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:pods @http.method:create @objectRef.namespace:(\"kube-system\" OR \"kube-public\") @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:pods @verb:create @objectRef.namespace:(\"kube-system\" OR \"kube-public\") @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"tvf-ju6-h3i","isDefault":true,"name":"Kubernetes Pod Created in Kube Namespace"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is creating a service account in one of the Kubernetes default namespaces.\n\n### Strategy\nThis rule monitors when a create (`@http.method:create`) action occurs for a service account (`@objectRef.resource:serviceaccounts`) within either of the `kube-system` or `kube-public` namespaces.\n\nThe only users creating service accounts in the `kube-system` namespace should be cluster administrators. Furthermore, it is best practice to not run any cluster critical infrastructure in the `kube-system` namespace.\n\nThe `kube-public` namespace is intended for kubernetes objects which should be readable by unauthenticated users. Thus, a service account should likely not be created in the `kube-public` namespace.\n\n### Triage & Response\n1. Determine if the user should be creating this new service account in one of the default namespaces.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1589376017036,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:serviceaccounts @http.method:create @objectRef.namespace:(\"kube-system\" OR \"kube-public\") @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:serviceaccounts @verb:create @objectRef.namespace:(\"kube-system\" OR \"kube-public\") @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"loy-9ka-bc2","isDefault":true,"name":"Kubernetes Service Account Created in Kube Namespace"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is creating a Kubernetes namespace.\n\n### Strategy\nThis rule monitors when a `create` action occurs for the Kubernetes namespace (`@objectRef.resource:namespaces`) to detect when a user is creating a new Kubernetes namespace.\n\n### Triage & Response\n1. Determine if the user should be creating this new namespace.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1589376020564,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@objectRef.name","@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:namespaces @http.method:create -@objectRef.name:(\"default\" OR \"kube-system\" OR \"kube-public\") @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@objectRef.name","@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:namespaces @verb:create -@objectRef.name:(\"default\" OR \"kube-system\" OR \"kube-public\") @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"zgq-pd9-wgw","isDefault":true,"name":"New Kubernetes Namespace Created"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a service''s port is attached to the node''s IP.\n\n### Strategy\nThis rule monitors when a create (`@http.method:create`) action occurs for a service (`@objectRef.resource:services`) attaching the service''s port to the node''s IP `@requestObject.spec.type:NodePort`.\n\nExposing the service''s port to the the node''s IP allows other hosts on the network namespace to access this service.\n\n### Triage & Response\n1. Determine if the service needs to expose it''s network connection with `NodePort` access.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1589376023160,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@objectRef.name"],"query":"source:kubernetes.audit @objectRef.resource:services @http.method:create @requestObject.spec.type:NodePort @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@objectRef.name"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:services @verb:create @requestObject.spec.type:NodePort @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"cvp-3wz-v3s","isDefault":true,"name":"Kubernetes Service Created with NodePort"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user execs into a pod.\n\n### Strategy\nThis rule monitors when a user execs (`@objectRef.subresource:exec`) into to a pod (`@objectRef.resource:pods`).\n\nA user should not need to exec into a pod. Execing into a pod allows a user to execute any process in container which is not already running.\nIt is most common to execute the bash process to gain an interactive shell.\nIf this is an attacker, they can access any data which the pod has permissions to, including secrets.\n\n### Triage & Response\n1. Determine if the user should be execing into a running container.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":8,"createdAt":1589376094658,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:pods @objectRef.subresource:exec @http.method:create @http.status_code:[101 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:pods @objectRef.subresource:exec @verb:create @responseStatus.code:[101 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"hyd-cu4-79x","isDefault":true,"name":"User Exec into a Pod"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","source:auth0","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## **Goal:**\nDetect a brute force attack on a user. \n\n## **Strategy:**\n**To determine a successful attempt:** Detect when the same user fails to login five times and then successfully logs in. This generates a `MEDIUM` severity signal.\n\n**To determine an unsuccessful attempt:** Detect when the same user fails to login five times. This generates an `INFO` severity signal.\n\n## **Triage & Response:**\n1. Inspect the logs to see if this was a valid login attempt.\n2. See if 2FA was authenticated\n3. If the user was compromised, rotate user credentials.\n\n","options":{"detectionMethod":"threshold","evaluationWindow":600,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1597422956269,"filters":[],"queries":[{"distinctFields":[],"name":"failed_login","aggregation":"count","groupByFields":["@usr.id"],"query":"source:auth0 @evt.name:(failed_login_incorrect_password OR failed_login_invalid_email_or_username)","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@usr.id"],"query":"source:auth0 @evt.name:success_login","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Successful","condition":"failed_login>5 && successful_login>=1"},{"status":"info","notifications":[],"name":"Attempt","condition":"failed_login>10"}],"type":"log_detection","id":"dde-oia-yjr","isDefault":true,"name":"Brute force attack on an Auth0 user"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","source:auth0","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## **Goal:**\nDetect log ins from the same user from multiple countries within a short time frame.\n\n## **Strategy:**\nUtilize geo-ip data to detect when a user logs in from two IP addresses which are in different countries within a short time frame.\n\n## **Triage & Response:**\n1. See if 2FA was used for authentication.\n2. Contact the user and see if this behavior is expected.\n3. If the user was compromised, rotate the user credentials.\n","options":{"detectionMethod":"threshold","evaluationWindow":3600,"maxSignalDuration":86400,"keepAlive":3600},"version":5,"createdAt":1597422956982,"filters":[],"queries":[{"distinctFields":["@network.client.geoip.country.name"],"name":"successful_logins_by_country","aggregation":"cardinality","groupByFields":["@usr.id"],"query":"source:auth0 @evt.name:success_login","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"successful_logins_by_country > 1"}],"type":"log_detection","id":"j6f-xqz-wig","isDefault":true,"name":"Auth0 user authenticating from multiple countries"},{"creationAuthorId":0,"tags":["technique:T1078-valid-accounts","source:auth0","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"## **Goal:**\nDetect when a user logs in with a breached password.\n\n## **Strategy:**\nAuth0 logs an event when a user logs in with a breached password. When this event is detected, Datadog generates a `MEDIUM` severity Security Signal.\n\nYou can see more information on how Auth0 detects breached passwords on their [documentation][1].\n\n## **Triage & Response:**\n1. Inspect the policy and user location to see if this was a login from approved location\n2. See if 2FA was authenticated\n3. If the user was compromised, rotate user credentials.\n\n[1][https://auth0.com/docs/anomaly-detection/brute-force-protection]\n","options":{"detectionMethod":"threshold","evaluationWindow":0,"maxSignalDuration":0,"keepAlive":0},"version":5,"createdAt":1597422957145,"filters":[],"queries":[{"distinctFields":[],"name":"breached_password","aggregation":"count","groupByFields":["@usr.id"],"query":"source:auth0 @evt.name:breached_password","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"breached_password > 0"}],"type":"log_detection","id":"yhw-avf-dz0","isDefault":true,"name":"Auth0 user logged in with a breached password"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","source:auth0","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## **Goal:**\nDetect Account Take Over (ATO) through credential stuffing attack.\n\n## **Strategy:**\n**To determine a successful attempt:** Detect a high number of failed logins from at least ten unique users and at least one successful login for a user. This generates a `HIGH` severity signal.\n\n**To determine an unsuccessful attempt:** Detect a high number of failed logins from at least ten unique users. This generates an `INFO` severity signal.\n\n## **Triage & Response:**\n1. Inspect the logs to see if this was a valid login attempt.\n2. See if 2FA was authenticated\n3. If the user was compromised, rotate user credentials.\n\n","options":{"detectionMethod":"threshold","evaluationWindow":600,"maxSignalDuration":86400,"keepAlive":3600},"version":5,"createdAt":1597422958108,"filters":[],"queries":[{"distinctFields":["@usr.id"],"name":"unique_users_failing_to_login","aggregation":"cardinality","groupByFields":["@network.client.ip"],"query":"source:auth0 @evt.name:(failed_login_incorrect_password OR failed_login_invalid_email_or_username)","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:auth0 @evt.name:success_login","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Successful","condition":"unique_users_failing_to_login>10 && successful_login>=1"},{"status":"info","notifications":[],"name":"Attempt","condition":"unique_users_failing_to_login>10"}],"type":"log_detection","id":"ryo-snu-uva","isDefault":true,"name":"Credential stuffing attack on Auth0"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when any user logs in to Azure AD without multi-factor authentication.\n\n### Strategy\nThis rule monitors Azure Activity logs for Active Directory logs and detects when any `@evt.category` has a value of  `SignInLogs`, and `@properties.authenticationRequirement` has a value of `singleFactorAuthentication`.\n\n### Triage & Response\n1. Reach out to the user to determine if the login was legitimate.\n2. If the login was legitimate, request that the user enables 2FA.\n3. If the login wasn''t legitimate, rotate the credentials.\n4. Review all user accounts to ensure MFA is enabled.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1598468815267,"filters":[],"queries":[{"distinctFields":[],"name":"user_login_without_mfa","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.activedirectory @evt.category:SignInLogs @properties.authenticationRequirement:singleFactorAuthentication","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"user_login_without_mfa > 0"}],"type":"log_detection","id":"c8i-66d-m7u","isDefault":true,"name":"Azure AD Login Without MFA"},{"creationAuthorId":0,"tags":["source:azure","technique:T1190-exploit-public-facing-application","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an Azure Frontdoor Web Application Firewall (WAF) logs a request from an IP address.\n\n### Strategy\nThis rule monitors Azure Activity logs for Frontdoor Web Application Firewall logs and detects when the `@evt.name` has a value of  `Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write` and `@properties.action` has a value of `Log`.\n\n### Triage & Response\n1. Inspect whether this request should have been blocked or not.\n2. Navigate to the IP dashboard and inspect other requests this IP address has made.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":3,"createdAt":1598468815399,"filters":[],"queries":[{"distinctFields":[],"name":"waf_logged_a_request","aggregation":"count","groupByFields":["@properties.clientIP"],"query":"source:azure.network @evt.name:\"Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write\" @properties.action:Log","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"waf_logged_a_request > 0"}],"type":"log_detection","id":"bkk-48l-vem","isDefault":true,"name":"Azure Frontdoor WAF Logged a Request"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an Azure network security group allows inbound traffic from all IP Addresses.\n\n### Strategy\nThis rule monitors Azure Activity logs for network changes and detects when the `@evt.name` has a value of  `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE`, `@properties.securityRules.properties.direction` has a value of `Inbound`, `@properties.securityRules.properties.access` has a value of `Allow`, and `@properties.securityRules.properties.sourceAddressPrefix` has a value of either `0.0.0.0/0` OR `*`.\n\n### Triage & Response\n1. Inspect which Virtual Machines are associated with this security group.\n2. Determine whether this security group and the VMs should permit inbound traffic from all IP addresses.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":3,"createdAt":1598468816111,"filters":[],"queries":[{"distinctFields":[],"name":"security_group_open_to_world","aggregation":"count","groupByFields":["@resourceId"],"query":"source:azure.network @evt.name:\"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE\" @properties.securityRules.properties.direction:Inbound @properties.securityRules.properties.access:Allow @properties.securityRules.properties.sourceAddressPrefix:(\"0.0.0.0/0\" OR \"*\")","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"security_group_open_to_world > 0"}],"type":"log_detection","id":"owu-2uz-8cb","isDefault":true,"name":"Azure Network Security Group Open to the World"},{"creationAuthorId":0,"tags":["source:azure","technique:T1190-exploit-public-facing-application","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an Azure Frontdoor Web Application Firewall (WAF) blocks a request from an IP address.\n\n### Strategy\nThis rule monitors Azure Activity logs for Frontdoor Web Application Firewall logs and detects when the `@evt.name` has a value of  `Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write` and `@properties.action` has a value of `Block`.\n\n### Triage & Response\n1. Inspect whether this request should have been blocked or not.\n2. Navigate to the IP dashboard and inspect other requests this IP address has made.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":3,"createdAt":1598468816869,"filters":[],"queries":[{"distinctFields":[],"name":"waf_blocked_a_request","aggregation":"count","groupByFields":["@properties.clientIP"],"query":"source:azure.network @evt.name:\"Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write\" @properties.action:Block","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"waf_blocked_a_request > 0"}],"type":"log_detection","id":"xyt-fqh-myv","isDefault":true,"name":"Azure Frontdoor WAF Blocked a Request"},{"creationAuthorId":0,"tags":["technique:T1552-unsecured-credentials","source:route53","tactic:TA0006-credential-access","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a requested domain resolves to the AWS Metadata IP (169.254.169.254).\n\n### Strategy\nInspect the Route 53 logs and determine if the response data for a DNS request matches the AWS Metadata IP (169.254.169.254). This could indicate an attacker is attempting to steal your credentials from the AWS metadata service.\n\n### Triage and Response\n1. Determine which instance is associated with the DNS request.\n2. Determine whether the domain name which was requested (`dns.question.name`) should be permitted. If not, conduct an investigation and determine what requested the domain and determine if the AWS metadata credentials were accessed by an attacker.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1603296598998,"filters":[],"queries":[{"distinctFields":[],"name":"domain_resolve_to_metadata_ip","aggregation":"count","groupByFields":["instance-id"],"query":"source:route53 @answers.Rdata:169.254.169.254","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"domain_resolve_to_metadata_ip > 0"}],"type":"log_detection","id":"mwi-zj7-db9","isDefault":true,"name":"EC2 instance resolved a suspicious AWS metadata DNS query"},{"creationAuthorId":0,"tags":["source:route53","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a requested domain has a suspicious TLD.\n\n### Strategy\nInspect the Route 53 logs and determine if the TLD of the DNS question (`@dns.question.name`) matches one of the top 5 TLDs on [Spamhaus''s Most Abused Top Level Domains list][1].\n\n### Triage and Response\n1. Determine which instance is associated with the DNS request.\n2. Determine whether the domain name which was requested (`dns.question.name`) should be permitted. If not, conduct an investigation and determine what requested the domain and determine if the AWS metadata credentials were accessed by an attacker.\n\n[1]: https://www.spamhaus.org/statistics/tlds/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1603296605789,"filters":[],"queries":[{"distinctFields":[],"name":"suspicious_tld","aggregation":"count","groupByFields":["instance-id"],"query":"@dns.question.name:(*.fit. OR *.work. OR *.webcam. OR *.loan. OR *.cf.)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"suspicious_tld > 0"}],"type":"log_detection","id":"dus-bf6-3jr","isDefault":true,"name":"EC2 instance requested a suspicious domain"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an Azure network security group or an Azure network security rule has been created, modified, or deleted.\n\n## Strategy\n\nMonitor Azure activity logs and detect when the `@evt.name` is equal to any one of the following names:\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE`\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/DELETE`\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/WRITE` \n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/DELETE`\n\nand `@evt.outcome` is equal to `Success`.\n\n## Triage & Response\n\n1. Inspect the security group or security rule and determine if it exposes any Azure resources that should not be exposed.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1607106297216,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.network @evt.name:(\"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/WRITE\" OR \"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/DELETE\" OR \"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/DELETE\" OR \"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE\") @evt.outcome:Success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"mju-ynx-i1h","isDefault":true,"name":"Azure Network Security Groups or Rules Created, Modified, or Deleted"},{"creationAuthorId":0,"tags":["source:azure","security:threat-intel"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an Azure firewall threat intelligence alert is received.\n\n## Strategy\n\nMonitor Azure Network Diagnostic logs and detect when `@evt.name` is equal to `AzureFirewallThreatIntelLog`.\n\n## Triage & Response\n\n1. Inspect the threat intelligence log.\n2. Investigate the activity from this IP address.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1607106300940,"filters":[],"queries":[{"distinctFields":[],"name":"azure_firewall_threat_intel_alert","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:azure.network @evt.name:AzureFirewallThreatIntelLog","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"azure_firewall_threat_intel_alert > 0"}],"type":"log_detection","id":"z0v-yfr-qat","isDefault":true,"name":"Azure Firewall Threat Intelligence Alert"}]}'
    headers:
      Cache-Control:
      - no-cache
      Connection:
      - keep-alive
      Content-Disposition:
      - inline
      Content-Security-Policy:
      - frame-ancestors 'self'; report-uri https://api.datadoghq.com/csp-report
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Tue, 20 Apr 2021 14:58:36 GMT
      Pragma:
      - no-cache
      Strict-Transport-Security:
      - max-age=15724800;
      Vary:
      - Accept-Encoding
      X-Content-Type-Options:
      - nosniff
      X-Dd-Debug:
      - l4HFlaRP3QwYSqoGKhzbYfv7zgkK63HIRR7YkyVYZspq0lGjjTBwoK8V/alf+XYt
      X-Dd-Version:
      - "35.4351940"
      X-Frame-Options:
      - SAMEORIGIN
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
      Dd-Operation-Id:
      - ListSecurityMonitoringRules
      User-Agent:
      - terraform-provider-datadog/dev (terraform 2.4.4; terraform-cli 0.14.7) datadog-api-client-go/1.0.0-beta.19 (go go1.16.3; os darwin; arch amd64)
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=1&page%5Bsize%5D=100
    method: GET
  response:
    body: '{"meta":{"page":{"total_filtered_count":21,"total_count":121}},"data":[{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an Azure policy assignment has been created.\n\n## Strategy\n\nMonitor Azure activity logs and detect when the `@evt.name` is equal to `MICROSOFT.AUTHORIZATION/POLICYASSIGNMENTS/WRITE` and `@evt.outcome` is equal to `Success`.\n\n## Triage && Response\n\n1. Inspect the policy assignment and determine if an unsolicited change was made on any Azure resources.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1607106302885,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:azure @evt.name:\"MICROSOFT.AUTHORIZATION/POLICYASSIGNMENTS/WRITE\" @evt.outcome:Success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"uvd-ets-ju9","isDefault":true,"name":"Azure Policy Assignment Created"},{"creationAuthorId":0,"tags":["source:azure","tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect and identify the network IP address when multiple user accounts have login attempt activities recorded.\n\n## Strategy\n\nMonitor Azure Active Directory and detect when any `@evt.category` is equal to `SignInLogs` and more than 1 of the `@evt.outcome` are equal to `false` and was initiated by the same network IP address.\n\nSecurity Signal returns **HIGH** if`@evt.outcome` has value of `success` after multiple failed logins were initiated by the same network IP address.\n\n## Triage & Response\n\n1. Inspect the log and determine if this was a valid login attempt.\n2. If the user was compromised, rotate user credentials.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1607106304164,"filters":[],"queries":[{"distinctFields":["@usr.id"],"name":"failed_login_multiple_user_accounts_same_ip_address","aggregation":"cardinality","groupByFields":["@network.client.ip"],"query":"source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:failure","trackType":"logs"},{"distinctFields":[],"name":"successful_login_after_multiple_failed_login_attemtps","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:failure","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Successful login after multiple failed login attempts from the same network IP address","condition":"failed_login_multiple_user_accounts_same_ip_address > 1 && successful_login_after_multiple_failed_login_attemtps > 0"},{"status":"medium","notifications":[],"name":"Multiple failed login attempts from the same network IP address","condition":"failed_login_multiple_user_accounts_same_ip_address > 1 "}],"type":"log_detection","id":"igg-0ve-xxc","isDefault":true,"name":"Credential Stuffing Attack on Azure"},{"creationAuthorId":0,"tags":["source:azure","tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when a user is a victim of an Account Take Over (ATO) by a brute force attack.\n\n## Strategy\n\nMonitor Azure Active Directory Sign-in logs and detect when any `@evt.category` is equal to  `SignInLogs`, and `@evt.outcome` is equal to `failure`.\n\n## Triage & Response\n\n1. Inspect the log and determine if this was a valid login attempt.\n2. If the user was compromised, rotate user credentials.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":5,"createdAt":1607106309289,"filters":[],"queries":[{"distinctFields":[],"name":"failed_login","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:failure","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:failure","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Successful login","condition":"failed_login > 5 && successful_login > 0"},{"status":"info","notifications":[],"name":"Unsuccessful","condition":"failed_login > 5"}],"type":"log_detection","id":"y0f-vsz-xms","isDefault":true,"name":"Azure Portal brute force login"},{"creationAuthorId":0,"tags":["source:azure","tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect and identify the network IP address when multiple user accounts failed to complete the MFA process.\n\n## Strategy\n\nMonitor Azure Active Directory Sign-in logs and detect when any `@evt.category` is equal to `SignInLogs`, `@properties.authenticationRequirement` is equal to `multiFactorAuthentication` and `@evt.outcome` is equal to `failure`.\n\n## Triage & Response \n\n1. Inspect the log and determine if this was a valid login attempt.\n2. If the user was compromised, rotate user credentials.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":5,"createdAt":1607106317340,"filters":[],"queries":[{"distinctFields":["@usr.email"],"name":"failed_login_mfa_denied_w_multiple_user_accounts","aggregation":"cardinality","groupByFields":["@network.client.ip"],"query":"source:azure.activedirectory @evt.category:SignInLogs @properties.authenticationRequirement:multiFactorAuthentication @evt.outcome:failure","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Greater than 10 unique users","condition":"failed_login_mfa_denied_w_multiple_user_accounts > 10"},{"status":"low","notifications":[],"name":"Greater than 3 unique user","condition":"failed_login_mfa_denied_w_multiple_user_accounts > 3"}],"type":"log_detection","id":"zgm-z7i-mhu","isDefault":true,"name":"Azure Login Explicitly Denied MFA"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an Azure network security rule has been created, modified, or deleted.\n\n## Strategy\n\nMonitor Azure activity logs and detect when the `@evt.name` is equal to any of the following names:\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/WRITE` \n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/DELETE`\n\nand `@evt.outcome` is equal to `Success`.\n\n## Triage && Response\n\n1. Inspect the security rule and determine if it exposes any Azure resources that should not be made public.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1607106319051,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.sql @evt.name:\"MICROSOFT.SQL/SERVERS/FIREWALLRULES/WRITE\" @evt.outcome:Success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"kbv-sau-dwv","isDefault":true,"name":"Azure SQL Server Firewall Rules Created or Modified"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an invitation is sent to an external user.\n\n## Strategy\n\nMonitor Azure Active Directory Audit logs and detect when any `@evt.name` is equal to `Invite external user` and the `@evt.outcome` is equal to `success`.\n\n## Triage & Response\n\n1. Review and determine if the invitation and its recipient are valid.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1607106320758,"filters":[],"queries":[{"distinctFields":[],"name":"invite_external_user","aggregation":"count","groupByFields":["@usr.id","@properties.targetResources.userPrincipalName"],"query":"source:azure.activedirectory @evt.name:\"Invite external user\" @evt.outcome:success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"invite_external_user > 0"}],"type":"log_detection","id":"msq-9pm-ift","isDefault":true,"name":"Azure user invited an external user"},{"creationAuthorId":0,"tags":["source:okta"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is denied access to an app.\n\n### Strategy\nThis rule lets you monitor the following Okta events to detect when a user is denied access to an app:\n\n* `app.generic.unauth_app_access_attempt`\n\n### Triage & Response\n1. Determine whether or not the user should have access to this app.\n2. Contact the user to determine whether they attempted to access this app or whether their account is compromised.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1607371843994,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.email","@target_app"],"query":"source:okta @evt.name:app.generic.unauth_app_access_attempt","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"rht-pdf-gyx","isDefault":true,"name":"Okta User Attempted to Access Unauthorized App"},{"creationAuthorId":0,"tags":["category:authentication","tactic:TA0006-credential-access","template:true","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect Account Take Over (ATO) through credential stuffing attack.\n\nA credential stuffing attack is used to gain initial access by compromising user accounts.\n\nThe attacker obtains a list of compromised usernames and passwords from a previous user database breach, phishing attempt, or other means. Then, they use the list of username and passwords to attempt to login to accounts on your application.\n\nIt is common for an attacker to use multiple IP addresses to target your application in order to distribute the attack load for load balancing purposes, to make it more difficult to detect, or make it more difficult to block.\n\n### Strategy\n**To determine a successful attempt:** Detect a high number of failed logins from at least 25 unique users and at least one successful login for a user within a period of time from the same IP address.\n\n**To determine an unsuccessful attempt:** Detect a high number of failed logins from at least ten unique users within a period of time from the same IP address.\n\n### Triage and response\n\nUse [this Datadog runbook](https://app.datadoghq.com/notebook/credentialstuffingrunbook) to assist in your investigation.\n\n1. Determine if it is a legitimate attack or a false positive\n2. Determine compromised users\n3. Remediate compromised user accounts\n","options":{"detectionMethod":"threshold","evaluationWindow":1800,"maxSignalDuration":86400,"keepAlive":3600},"version":2,"createdAt":1608750331867,"filters":[],"queries":[{"distinctFields":["@usr.id"],"name":"unique_users_failing_to_login","aggregation":"cardinality","groupByFields":["@network.client.ip"],"query":"@evt.category:authentication @evt.outcome:failure","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@network.client.ip"],"query":"@evt.category:authentication @evt.outcome:success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Successful - Greater than 50","condition":"unique_users_failing_to_login>50 && successful_login>=1"},{"status":"medium","notifications":[],"name":"Successful","condition":"unique_users_failing_to_login>25 && successful_login>=1"},{"status":"info","notifications":[],"name":"Attempt","condition":"unique_users_failing_to_login>25"}],"type":"log_detection","id":"ypo-jbm-p2s","isDefault":true,"name":"Credential stuffing attack"},{"creationAuthorId":0,"tags":["source:microsoft-365"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user shares a Microsoft 365 Sharepoint document with a guest.\n\n### Strategy\nThis rule monitors the Microsoft 365 logs for the event name `SharingInvitationCreated` when the `TargetUserOrGroupType` is `Guest`.\n\n### Triage & Response\n1. Determine whether this document should be shared with the external user.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1608766365850,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@TargetUserOrGroupName","@ObjectId"],"query":"source:microsoft-365 service:SharePoint @evt.name:(SharingInvitationCreated) @TargetUserOrGroupType:Guest","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"v72-psu-eln","isDefault":true,"name":"Microsoft 365 SharePoint object shared with guest"},{"creationAuthorId":0,"tags":["source:microsoft-365"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user installs an app to Microsoft 365 Teams.\n\n### Strategy\nThis rule monitors the Microsoft 365 logs for the event name `AppInstalled`.\n\n### Triage & Response\n1. Determine whether this app should be installed to Microsoft 365 teams.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1608766367312,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@AddOnName"],"query":"source:microsoft-365 service:MicrosoftTeams @evt.name:AppInstalled","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"i03-grd-ppd","isDefault":true,"name":"Microsoft 365 Teams app installed"},{"creationAuthorId":0,"tags":["source:microsoft-365"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user creates an anonymous link for a Microsoft 365 document in OneDrive. This would allow any unauthenticated user to access this document, if they had the link.\n\n### Strategy\nThis rule monitors the Microsoft 365 logs for the event name `AnonymousLinkCreated`.\n\n### Triage & Response\n1. Determine whether this document should be available anonymously.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1608766368930,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id","@ObjectId"],"query":"source:microsoft-365 service:OneDrive @evt.name:AnonymousLinkCreated","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"y1h-h20-er6","isDefault":true,"name":"Microsoft 365 OneDrive Anonymous Link Created"},{"creationAuthorId":0,"tags":["tactic:TA0004-privilege-escalation","scope:ecs","source:cloudtrail","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user executes a command on an ECS container for the first time. An attacker may use this as a technique to escalate their privileges\nbecause they can run arbitrary commands on behalf of the container with the role and permissions associated with the\ncontainer.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if a user is executing a command on an ECS container:\n\n* `ExecuteCommand`\n\n### Triage & Response\n1. Determine if the user should be executing a command on this container\n","options":{"detectionMethod":"new_value","evaluationWindow":0,"maxSignalDuration":0,"newValueOptions":{"learningDuration":1,"forgetAfter":28},"keepAlive":0},"version":5,"createdAt":1615916348842,"filters":[{"action":"suppress","query":"foo"},{"action":"require","query":"bar"}],"queries":[{"distinctFields":[],"name":"","metric":"@usr.account_id","aggregation":"new_value","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @eventName:ExecuteCommand","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":["@me"],"name":""}],"type":"log_detection","id":"o2p-sbu-rlg","isDefault":true,"name":"Anomalous AWS user executed a command on ECS container"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617971626555,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestSearchSecurityMonitoringSignals-1617971626","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"uf5-sub-gvr","isDefault":false,"name":"Test-TestSearchSecurityMonitoringSignals-1617971626"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617971644219,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1617971644","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"5b2-kdc-3do","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1617971644"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617977693395,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestSearchSecurityMonitoringSignals-1617977693","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"pfs-wtb-6x6","isDefault":false,"name":"Test-TestSearchSecurityMonitoringSignals-1617977693"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617977738802,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1617977738","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"eai-snq-4vj","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1617977738"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617978059498,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1617978059","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"nvz-hsv-5ql","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1617978059"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617978302186,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1617978301","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"cyp-scn-o3m","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1617978301"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"Test rule","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":1,"createdAt":1618083170620,"filters":[],"queries":[{"distinctFields":[],"name":"","metric":"","aggregation":"count","groupByFields":[],"query":"@test:true","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"bno-qku-kqu","isDefault":false,"name":"Test-Create_a_detection_rule_returns_OK_response-1618083170"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1618221021757,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestSearchSecurityMonitoringSignals-1618221021","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"tcl-onp-xbd","isDefault":false,"name":"Test-TestSearchSecurityMonitoringSignals-1618221021"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1618221039709,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1618221039","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"jdo-kok-wpq","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1618221039"}]}'
    headers:
      Cache-Control:
      - no-cache
      Connection:
      - keep-alive
      Content-Disposition:
      - inline
      Content-Security-Policy:
      - frame-ancestors 'self'; report-uri https://api.datadoghq.com/csp-report
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Tue, 20 Apr 2021 14:58:36 GMT
      Pragma:
      - no-cache
      Strict-Transport-Security:
      - max-age=15724800;
      Vary:
      - Accept-Encoding
      X-Content-Type-Options:
      - nosniff
      X-Dd-Debug:
      - S1wfaMZOKGT/IoMw6fqAwAwGWo2vQ44sjF3YzuETnQfxZO2T5eJbs0aX3UKb9Dwu
      X-Dd-Version:
      - "35.4351940"
      X-Frame-Options:
      - SAMEORIGIN
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
      Dd-Operation-Id:
      - ListSecurityMonitoringRules
      User-Agent:
      - terraform-provider-datadog/dev (terraform 2.4.4; terraform-cli 0.14.7) datadog-api-client-go/1.0.0-beta.19 (go go1.16.3; os darwin; arch amd64)
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=2&page%5Bsize%5D=100
    method: GET
  response:
    body: '{"meta":{"page":{"total_filtered_count":0,"total_count":121}},"data":[]}'
    headers:
      Cache-Control:
      - no-cache
      Connection:
      - keep-alive
      Content-Disposition:
      - inline
      Content-Security-Policy:
      - frame-ancestors 'self'; report-uri https://api.datadoghq.com/csp-report
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Tue, 20 Apr 2021 14:58:36 GMT
      Pragma:
      - no-cache
      Strict-Transport-Security:
      - max-age=15724800;
      Vary:
      - Accept-Encoding
      X-Content-Type-Options:
      - nosniff
      X-Dd-Debug:
      - PhosSd3Ch1B6B0DXI71steKUi7XhPDttnPiIP1NdXTw0VJNWpoUnYyBmODS5ne3q
      X-Dd-Version:
      - "35.4351940"
      X-Frame-Options:
      - SAMEORIGIN
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
      Dd-Operation-Id:
      - ListSecurityMonitoringRules
      User-Agent:
      - terraform-provider-datadog/dev (terraform 2.4.4; terraform-cli 0.14.7) datadog-api-client-go/1.0.0-beta.19 (go go1.16.3; os darwin; arch amd64)
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=0&page%5Bsize%5D=100
    method: GET
  response:
    body: '{"meta":{"page":{"total_filtered_count":100,"total_count":121}},"data":[{"creationAuthorId":0,"tags":["scope:iam","source:guardduty","technique:T1069-permission-groups-discovery","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is enumerating IAM principals.\n\n### Strategy\nThis rule lets you leverage GuardDuty to detect when an attacker is enumerating IAM principals. The GuardDuty Findings which trigger this signal:\n\n* [Recon:IAMUser/NetworkPermissions][1]\n* [Recon:IAMUser/ResourcePermissions][2]\n* [Recon:IAMUser/UserPermissions][3] \n\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon7\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon8\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon9","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870276065,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Recon\\:IAMUser\\/NetworkPermissions OR Recon\\:IAMUser\\/ResourcePermissions OR Recon\\:IAMUser\\/UserPermissions)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"u2j-xph-kc7","isDefault":true,"name":"AWS IAM principal enumeration"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is communicating with a cryptocurrency server\n\n### Strategy\nThis rule lets you leverage GuardDuty to detect when an EC2 instance has made a DNS request or is communicating with an IP that is associated with cryptocurrency operations. The following GuardDuty Findings trigger this signal:\n\n* [CryptoCurrency:EC2/BitcoinTool.B!DNS][1]\n* [CryptoCurrency:EC2/BitcoinTool.B][2]\n\n\n### Triage & Response\n1. Determine which domain name or IP address triggered the signal. This can be found in the samples. \n2. If the domain or IP address should not have been requested, open a security investigation, and determine which process requested the domain name or IP address.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_crypto.html#crypto3\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_crypto.html#crypto4","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870276326,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(CryptoCurrency\\:EC2\\/BitcoinTool.B\\!DNS OR CryptoCurrency\\:EC2\\/BitcoinTool.B)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ky3-ds4-ipb","isDefault":true,"name":"AWS EC2 instance communicating with a cryptocurrency server"},{"creationAuthorId":0,"tags":["technique:T1485-data-destruction","tactic:TA0040-impact","source:cloudtrail","scope:rds","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is destroying a RDS Cluster.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting a RDS cluster:\n\n* [DeleteDBCluster][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/rds/delete-db-cluster.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870276546,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteDBCluster","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"6ng-pk1-ukh","isDefault":true,"name":"AWS RDS Cluster deleted"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","scope:template","technique:T1110-brute-force","security:attack"],"isEnabled":false,"hasExtendedTitle":true,"message":"### Goal\nDetect Account Take Over (ATO) through brute force attempts\n\n### Strategy\nTo determine a successful attempt: Detect a high amount of failed logins and at least one successful login for a given user. This will generate a `HIGH` severity signal.\nTo determine an attempt: Detect a high amount of failed logins. This will generate an `INFO` severity signal.\n\n### Triage & Response\n1. Inspect the logs to see if this was a valid login attempt.\n2. See if 2FA was authenticated.\n3. If the user was compromised, rotate user credentials.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":7200,"keepAlive":3600},"version":3,"createdAt":1585870276794,"filters":[],"queries":[{"distinctFields":[],"name":"failed_login","aggregation":"count","groupByFields":["@usr.name"],"query":"@evt.name:authentication @evt.outcome:failure @usr.name:*","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@usr.name"],"query":"@evt.name:authentication @evt.outcome:success @usr.name:*","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":["@slack-secops"],"name":"Successful","condition":"failed_login > 50 && successful_login > 0"},{"status":"info","notifications":["@slack-secops"],"name":"Attempt","condition":"failed_login > 5"}],"type":"log_detection","id":"jhi-klp-smm","isDefault":true,"name":"TEMPLATE - Brute Force Attack Grouped By User"},{"creationAuthorId":0,"tags":["scope:eventbridge","technique:T1089-disabling-security-tools","source:cloudtrail","tactic:TA0005-defense-evasion","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is trying to evade defenses by deleting or disabling EventBridge rules.\n\n### Strategy\nThis rule lets you monitor these CloudTrail API calls to detect if an attacker is modifying or disabling EventBridge rules:\n\n* [DeleteRule][1]\n* [DisableRule][2]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DeleteRule.html\n[2]: https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DisableRule.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870277044,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DeleteRule OR DisableRule)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"mq6-cjx-h9o","isDefault":true,"name":"AWS EventBridge rule disabled or deleted"},{"creationAuthorId":0,"tags":["scope:ec2","source:cloudtrail","tactic:TA0005-defense-evasion","technique:T1066-indicator-removal-from-tools","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is removing FlowLogs to cover their tracks.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting FlowLogs:\n\n* [DeleteFlowLogs][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFlowLogs.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870278493,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteFlowLogs","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"cws-b4f-uoh","isDefault":true,"name":"AWS FlowLogs removed"},{"creationAuthorId":0,"tags":["technique:T1089-disabling-security-tools","scope:guardduty","source:cloudtrail","tactic:TA0005-defense-evasion","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is trying to evade defenses by deleting a GuardDuty detector.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting a GuardDuty Detector:\n\n* [DeleteDetector][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/delete-detector.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870279177,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteDetector","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"pzi-led-yyc","isDefault":true,"name":"AWS GuardDuty detector deleted"},{"creationAuthorId":0,"tags":["scope:ecs","technique:T1485-data-destruction","tactic:TA0040-impact","source:cloudtrail","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is destroying an ECS Cluster\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an ECS cluster is deleted:\n\n* [DeleteCluster][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeleteCluster.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870279810,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteCluster","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"vwu-6id-9lz","isDefault":true,"name":"AWS ECS cluster deleted"},{"creationAuthorId":0,"tags":["security:compliance","scope:s3","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when the S3 Public Access Block configuration has been removed \n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting the S3 Public Access Block configuration:\n\n* [DeleteAccountPublicAccessBlock][1]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and inform them of best practices of enabling Public Access Block on S3 buckets.\n3. Re-enable Public Access Block on the S3 bucket.\n\nMore details on S3 Public Block Public Access can be found [here][2].\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/s3api/delete-public-access-block.html\n[2]: https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870280316,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteAccountPublicAccessBlock","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"uxr-5wk-8hk","isDefault":true,"name":"AWS S3 Public Access Block removed"},{"creationAuthorId":0,"tags":["control:cis-3.14","security:compliance","scope:ec2","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is destroying a VPC.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting a VPC:\n\n* [DeleteVpc][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-vpc.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1585870280906,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DeleteVpc OR CreateVpc OR ModifyVpcAttribute OR AcceptVpcPeeringConnection OR CreateVpcPeeringConnection OR DeleteVpcPeeringConnection OR RejectVpcPeeringConnection OR  AttachClassicLinkVpc OR  DetachClassicLinkVpc OR DisableVpcClassicLink OR EnableVpcClassicLink)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"igj-dr4-ico","isDefault":true,"name":"AWS VPC created or modified"},{"creationAuthorId":0,"tags":["source:gsuite","scope:gsuite","security:threat-intel"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user attempts to log in with a password which is known to be compromised.\n\n### Strategy\nThis rule allows you to monitor this Google Activity API call to detect if an attacker is trying to login with a leaked password: \n\n* [Leaked password][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the compromised password.\n2. Contact the user and ensure they rotate the password on Google and any other accounts where they may have reused this password. Ensure the user is aware of strong password guidelines.\n\n[1]: https://developers.google.com/admin-sdk/reports/v1/appendix/activity/login#account_disabled_password_leak","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870280553,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@actor.email"],"query":"source:gsuite @event.type:account_warning @event.name:account_disabled_password_leak","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"9zi-bom-nmh","isDefault":true,"name":"User attempted login with leaked password"},{"creationAuthorId":0,"tags":["technique:T1083-file-and-directory-discovery","scope:s3","source:cloudtrail","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance makes an API call to AWS to list all of the S3 Buckets.\n\n### Strategy\nThis rule lets you monitor CloudTrail to detect a [ListBuckets][1] API call with the session name prefixed with `i-`. A session name prefixed with `i-` typically indicates that it is an EC2 instance using an [Instance Profile][2] to communicate with other AWS services, which is a common attacker technique to see the full list of S3 buckets in your AWS account.\n Determine if the EC2 instance should be making this API call. \n* If not, rotate the credentials, verify what else may have been accessed and open an investigation into how this instance was compromised.\n   * If the application or legitimate user on the EC2 instance is making the `ListBuckets` API call, consider whether this API call is really needed.  \n\n[1]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html\n[2]: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html#ec2-instance-profile","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870281123,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @userIdentity.session_name:i-* @evt.name:ListBuckets","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"t6r-kqt-hxb","isDefault":true,"name":"AWS S3 Buckets enumerated"},{"creationAuthorId":0,"tags":["security:compliance","scope:amazon","framework:cis-aws","control:cis-3.3","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect AWS root user activity. \n\n### Strategy\nMonitor CloudTrail and detect when any `@userIdentity.type` has a value of `Root`, but is not invoked by an AWS service.\n\n### Triage & Response\n1. Reach out to the user to determine if the login was legitimate. \n2. If the login wasn''t legitimate, rotate the credentials, enable 2FA, and open an investigation. \n\nFor best practices, check out the [AWS Root Account Best Practices][1] documentation.\n\n[1]: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1585870281964,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:cloudtrail @userIdentity.type:Root  -@userIdentity.invokedBy:*  -@eventType:AwsServiceEvent","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"2kn-z6k-6kf","isDefault":true,"name":"AWS root account activity"},{"creationAuthorId":0,"tags":["scope:ec2","technique:T1485-data-destruction","tactic:TA0040-impact","source:cloudtrail","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is destroying an EC2 subnet.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if an attacker is deleting an EC2 subnet.\n\n* [DeleteSubnet][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-subnet.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870282197,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DeleteSubnet","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ygi-fi5-qns","isDefault":true,"name":"AWS EC2 subnet deleted"},{"creationAuthorId":0,"tags":["security:compliance","control:cis-3.9","framework:cis-aws","scope:amazon-config","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is trying to evade defenses by disabling an AWS configuration.\n\n### Strategy\nThis rule lets you monitor these CloudTrail API calls to detect if an attacker is trying to stop recording configurations of your AWS resources or trying to delete a delivery channel:\n\n* [StopConfigurationRecorder][1] \n* [DeleteDeliveryChannel][2] \n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/config/latest/APIReference/API_StopConfigurationRecorder.html\n[2]: https://docs.aws.amazon.com/config/latest/APIReference/API_DeleteDeliveryChannel.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1585870283149,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(StopConfigurationRecorder OR DeleteDeliveryChannel OR PutDeliveryChannel OR PutConfigurationRecorder)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"p1b-9np-rw1","isDefault":true,"name":"AWS config modified"},{"creationAuthorId":0,"tags":["security:threat-intel","scope:template"],"isEnabled":false,"hasExtendedTitle":true,"message":"### Goal\nDetect when a stolen laptop has been connected to the network.\n\n### Strategy\nUsing the Datadog [Lookup Processor](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#lookup-processor) you can maintain a blocklist of MAC addresses.\nWhen a MAC address connects to the network, the @threat.stolen_laptop attribute is set to `true`.\nThis threat detection rule queries for `@threat.stolen_laptop:true` and generates a security signal. \n\n### Triage & Response\nEnter your triage and response process for when a stolen laptop has connected to your network to help users responding to the security signal quickly triage and respond to the signal. \n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870283379,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.mac"],"query":"@threat.stolen_laptop:true @network.client.mac:*","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ap3-xy9-tsm","isDefault":true,"name":"TEMPLATE - Stolen Laptop Connected to Network"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":false,"hasExtendedTitle":true,"message":"### Goal\nDetect an account take over (ATO) through brute force attempts.\n\n### Strategy\nTo determine a successful attempt: Detect a high amount of failed logins and at least one successful login for a given IP address. This will generate a `HIGH` severity signal.\nTo determine an attempt: Detect a high amount of failed logins for a given IP address. This will generate an `INFO severity signal.\n\n### Triage & Response\n1. Inspect the logs to see if this was a valid login attempt.\n2. See if 2FA was authenticated.\n3. If the user was compromised, rotate user credentials.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":7200,"keepAlive":3600},"version":2,"createdAt":1585870283641,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.name"],"query":"@evt.name:authentication @evt.outcome:failure","trackType":"logs"},{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.name"],"query":"@evt.name:authentication @evt.outcome:success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":["@slack-secops"],"name":"Successful","condition":"a>5 && b>0"},{"status":"info","notifications":[],"name":"Attempted","condition":"a>5"}],"type":"log_detection","id":"wce-cxo-pe4","isDefault":true,"name":"TEMPLATE - Brute Force Attack Grouped By IP"},{"creationAuthorId":0,"tags":["security:compliance","scope:cloudtrail","framework:cis-aws","source:cloudtrail","control:cis-3.5"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an attacker is trying to evade defenses by disabling or modifying CloudTrail.\n\n### Strategy\nThis rule lets you monitor these CloudTrail API calls to detect if an attacker is modifying or disabling CloudTrail:\n\n* [DeleteTrail][1]\n* [UpdateTrail][2]\n* [StopLogging][3]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_DeleteTrail.html\n[2]: https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_UpdateTrail.html\n[3]: https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_StopLogging.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1585870283907,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DeleteTrail OR UpdateTrail OR StopLogging OR CreateTrail OR StartLogging)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"4hv-083-miw","isDefault":true,"name":"AWS CloudTrail configuration modified"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect Brute Force Attacks\n\n### Strategy\nLeverage GuardDuty and detect when an attacker is performing a brute force attack. The following are GuardDuty findings trigger this signal:\n\n* [UnauthorizedAccess:EC2/SSHBruteForce][1]\n* [UnauthorizedAccess:EC2/RDPBruteForce][2]\n\n\n### Triage & Response\n1. Inspect the role of the EC2 instance in the attack. Find the role in the signal name - either `ACTOR` or `TARGET`.\n   * If you are the `TARGET` and the instance is available on the internet, expect to see IPs scanning your systems.\n   * If you are the `TARGET` and the instance is **not** available on the internet, this means a host on your internal network is scanning your EC2 instance. Open an investigation.\n   * If you are the `ACTOR`, this means that your instance is performing brute force attacks on other systems. Open an investigation.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized9\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized10","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":11,"createdAt":1585870284202,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/SSHBruteForce OR UnauthorizedAccess\\:EC2\\/RDPBruteForce) @detail.service.resourceRole:ACTOR","trackType":"logs"},{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/SSHBruteForce OR UnauthorizedAccess\\:EC2\\/RDPBruteForce) @detail.service.resourceRole:TARGET","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"ACTOR","condition":"a > 0"},{"status":"info","notifications":[],"name":"TARGET","condition":"b > 0"}],"type":"log_detection","id":"vyl-ylc-3io","isDefault":true,"name":"AWS EC2 instance involved in brute force attack"},{"creationAuthorId":0,"tags":["security:compliance","scope:ec2","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EBS encryption is disabled by default. \n\n### Strategy\nMonitor CloudTrail and detect when EBS encryption is disabled by default via the following API call:\n\n* [DisableEbsEncryptionByDefault][1]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user and let them know that it is best practice to enable EBS encryption by default.\n3. Re-enable EBS encryption by default.\n\nFor more information about Amazon EBS Encryption, check out the [Amazon EBS Encryption][2] documentation.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableEbsEncryptionByDefault.html\n[2]: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870284527,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:DisableEbsEncryptionByDefault","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"4s7-uuu-lo8","isDefault":true,"name":"AWS EBS default encryption disabled"},{"creationAuthorId":0,"tags":["security:compliance","framework:cis-aws","control:cis-3.2","scope:aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when any user logs in to your AWS console without multi-factor authentication.\n\n### Strategy\nThis rule monitors CloudTrail and detects when any `@evt.name` has a value of  `Console Login`, and `@additionalEventData.MFAUsed` has a value of `no`. \n\n**Note:** This rule ignores logins using SAML because 2FA is implemented on the IdP and not through AWS.\n\n### Triage & Response\n1. Reach out to the user to determine if the login was legitimate. \n2. If the login was legitimate, request that the user enables 2FA. \n3. If the login wasn''t legitimate, rotate the credentials. \n4. Review all user accounts to ensure MFA is enabled. \n\n**Note:** There is a separate rule to detect [Root Login without MFA][1]. \n\n[1]: /security_monitoring/default_rules/cloudtrail-aws-root-login-without-mfa/","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1585870278209,"filters":[],"queries":[{"distinctFields":[],"name":"user_login_without_mfa","aggregation":"count","groupByFields":["@userIdentity.accountId","@usr.name"],"query":"source:cloudtrail @evt.name:ConsoleLogin @additionalEventData.MFAUsed:No @responseElements.ConsoleLogin:Success -@userIdentity.type:Root -@additionalEventData.SamlProviderArn:*","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"user_login_without_mfa > 0"}],"type":"log_detection","id":"wkk-muq-vg8","isDefault":true,"name":"AWS Console login without MFA"},{"creationAuthorId":0,"tags":["security:compliance","scope:amazon","framework:cis-aws","control:cis-3.2","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a root user logs into the AWS console without multi-factor authentication.\n\n### Strategy\nMonitor CloudTrail and detect when any `@evt.name` has a value of `Console Login`, `@userIdentity.type` has a value of `Root`, and `@additionalEventData.MFAUsed` has a value of `no`. \n\n**Note:** This rule ignores logins using SAML because 2FA is implemented on the IdP and not through AWS.\n\n### Triage & Response\n1. Reach out to the user to determine if the login was legitimate. \n2. If the login was legitimate, request that the user enables 2FA on the root account. \n3. If the login wasn''t legitimate, rotate the credentials. \n4. Review all root user accounts to ensure MFA is enabled. \n\n**Note:** There is a separate rule to detect [Login without MFA for non-root users][1]. \n\n[1]: /security_monitoring/default_rules/cloudtrail-aws-login-without-mfa/","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1585870278956,"filters":[],"queries":[{"distinctFields":[],"name":"root_login_without_mfa","aggregation":"count","groupByFields":["@userIdentity.accountId"],"query":"source:cloudtrail @evt.name:ConsoleLogin @additionalEventData.MFAUsed:No @responseElements.ConsoleLogin:Success @userIdentity.type:Root -@additionalEventData.SamlProviderArn:*","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"root_login_without_mfa > 0"}],"type":"log_detection","id":"miy-rjb-9wq","isDefault":true,"name":"AWS Console root login without MFA"},{"creationAuthorId":0,"tags":["security:compliance","control:cis-3.8","scope:s3","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a S3 Bucket policy is modified.\n\n### Strategy\nMonitor CloudTrail and detect when S3 policies are being modified via one of the following API calls:\n* [PutBucketAcl][1]\n* [PutBucketPolicy][2]\n* [PutBucketCors][3]\n* [PutBucketLifecycle][4]\n* [PutBucketReplication][5]\n* [DeleteBucketPolicy][6]\n* [DeleteBucketCors][7]\n* [DeleteBucketLifecycle][8]\n* [DeleteBucketReplication][9]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAcl.html\n [2]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketPolicy.html\n [3]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketCors.html\n [4]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html\n [5]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketReplication.html\n [6]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketPolicy.html\n [7]:  https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketCors.html\n [8]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html\n [9]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketReplication.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475579499,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(PutBucketAcl OR PutBucketPolicy OR PutBucketCors OR PutBucketLifecycle OR PutBucketReplication OR DeleteBucketPolicy OR DeleteBucketCors OR DeleteBucketLifecycle OR DeleteBucketReplication)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"nl3-oht-jhi","isDefault":true,"name":"AWS S3 Bucket policy modified"},{"creationAuthorId":0,"tags":["security:compliance","scope:kms","framework:cis-aws","source:cloudtrail","control:cis-3.7"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a CMK is deleted or scheduled for deletion.\n\n### Strategy\nThis rule lets you monitor these CloudTrail API calls to detect if an attacker is deleting CMKs:\n* [DisableKey][1]\n* [ScheduleKeyDeletion][2]\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/kms/latest/APIReference/API_DisableKey.html\n[2]: https://docs.aws.amazon.com/kms/latest/APIReference/API_ScheduleKeyDeletion.html ","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475576501,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DisableKey OR ScheduleKeyDeletion)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"iff-hhm-bd3","isDefault":true,"name":"AWS CMK deleted or scheduled for deletion"},{"creationAuthorId":0,"tags":["security:compliance","scope:ec2","control:cis-3.11","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS Network Access Control List (NACL) has been created or modified.\n\n### Strategy\nThis rule lets you monitor CloudTrail and detect when an AWS NACL has been created or modified with one of the following API calls:\n* [CreateNetworkAcl][1] \n* [CreateNetworkAclEntry][2] \n* [DeleteNetworkAcl][3] \n* [DeleteNetworkAclEntry][4] \n* [ReplaceNetworkAclEntry][5] \n* [ReplaceNetworkAclAssociation][6]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAcl.html\n[2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAclEntry.html\n[3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkAcl.html\n[4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkAclEntry.html\n[5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceNetworkAclEntry.html\n[6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceNetworkAclAssociation.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475579808,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(CreateNetworkAcl OR CreateNetworkAclEntry OR DeleteNetworkAcl OR DeleteNetworkAclEntry OR ReplaceNetworkAclEntry OR ReplaceNetworkAclAssociation)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"pcs-k05-rbc","isDefault":true,"name":"AWS Network Access Control List created or modified"},{"creationAuthorId":0,"tags":["security:compliance","scope:ec2","control:cis-3.12","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS Network Gateway has been created or modified.\n\n### Strategy\nMonitor CloudTrail and detect when an AWS Network Gateway has been created or modified with one of the following API calls:\n* [CreateCustomerGateway][1] \n* [DeleteCustomerGateway][2] \n* [AttachInternetGateway][3] \n* [CreateInternetGateway][4]\n* [DeleteInternetGateway][5] \n* [DetachInternetGateway][6]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCustomerGateway \n [2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteCustomerGateway \n [3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachInternetGateway \n [4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateInternetGateway \n [5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteInternetGateway \n [6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachInternetGateway.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475581301,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(CreateCustomerGateway OR DeleteCustomerGateway OR AttachInternetGateway OR CreateInternetGateway OR DeleteInternetGateway OR DetachInternetGateway)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"umr-47s-eyj","isDefault":true,"name":"AWS Network Gateway created or modified"},{"creationAuthorId":0,"tags":["scope:iam","security:compliance","framework:cis-aws","source:cloudtrail","control:cis-3.6"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is a victim of an Account Take Over (ATO) by a brute force attack.\n\n### Strategy\n This rule monitors CloudTrail and detects when any `@evt.name` has a value of `Console Login`, and `@responseElements.ConsoleLogin` has a value of `Failure`.\n\n### Triage & Response\n1. Determine if the user logged in with 2FA.\n2. Reach out to the user and ensure the login was legitimate.","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":7,"createdAt":1584475581986,"filters":[],"queries":[{"distinctFields":[],"name":"failed_login","aggregation":"count","groupByFields":["@userIdentity.accountId","@usr.name"],"query":"source:cloudtrail @evt.name:ConsoleLogin @responseElements.ConsoleLogin:Failure","trackType":"logs"},{"distinctFields":[],"name":"successful_login_without_mfa","aggregation":"count","groupByFields":["@userIdentity.accountId","@usr.name"],"query":"source:cloudtrail @evt.name:ConsoleLogin @responseElements.ConsoleLogin:Success @additionalEventData.MFAUsed:No","trackType":"logs"},{"distinctFields":[],"name":"successful_login_with_mfa","aggregation":"count","groupByFields":["@userIdentity.accountId","@usr.name"],"query":"source:cloudtrail @evt.name:ConsoleLogin @responseElements.ConsoleLogin:Success @additionalEventData.MFAUsed:Yes","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Potentially Successful - NO MFA","condition":"failed_login > 5 && successful_login_without_mfa > 0"},{"status":"info","notifications":[],"name":"Potentially Successful - MFA Used","condition":"failed_login > 5 && successful_login_with_mfa > 0"},{"status":"info","notifications":[],"name":"Unsuccessful","condition":"failed_login > 5"}],"type":"log_detection","id":"csj-nez-h1v","isDefault":true,"name":"AWS Console brute force login"},{"creationAuthorId":0,"tags":["security:compliance","control:cis-3.13","scope:ec2","framework:cis-aws","source:cloudtrail"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS Route Table has been created or modified.\n\n### Strategy\nThis rule lets you monitor CloudTrail and detect when an AWS Route Table has been created or modified with one of the following API calls:\n* [CreateRoute][1] \n* [CreateRouteTable][2] \n* [ReplaceRoute][3] \n* [ReplaceRouteTableAssociation][4] \n* [DeleteRouteTable][5] \n* [DeleteRoute][6] \n* [DisassociateRouteTable][7]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRoute.html \n [2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRouteTable \n [3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRoute.html \n [4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRouteTableAssociation \n [5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRouteTable.html \n [6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRoute.html \n [7]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateRouteTable.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475582644,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(CreateRoute OR CreateRouteTable OR ReplaceRoute OR ReplaceRouteTableAssociation OR DeleteRouteTable OR DeleteRoute OR DisassociateRouteTable)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"qgo-jqs-03x","isDefault":true,"name":"AWS Route Table created or modified"},{"creationAuthorId":0,"tags":["security:compliance","scope:amazon","framework:cis-aws","source:cloudtrail","control:cis-3.1"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when unauthorized activity is detected in AWS.\n\n### Strategy\nThis rule lets you monitor CloudTrail to detect when the error message of `AccessDenied` is returned.\n\n### Triage & Response\n1. Determine which user in your organization owns the API key that made this API call.\n2. Contact the user to see if they intended to make this API call.\n3. If the user did not make the API call:\n * Rotate the credentials.\n * Investigate if the same credentials made other unauthorized API calls.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":8,"createdAt":1584475582956,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail \"AccessDenied\"","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"greater than 1000 failed attempts","condition":"a > 1000"},{"status":"medium","notifications":[],"name":"greater than 100 failed attempts","condition":"a > 100"},{"status":"low","notifications":[],"name":"greater than 10 failed attempts","condition":"a > 10"}],"type":"log_detection","id":"3d9-oev-jbm","isDefault":true,"name":"AWS unauthorized activity"},{"creationAuthorId":0,"tags":["scope:iam","security:compliance","framework:cis-aws","source:cloudtrail","control:cis-3.4"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect a change to an AWS IAM Policy.\n\n### Strategy\nThis rule lets you monitor CloudTrail and detect when any event pertaining to an AWS IAM policy is detected with one of the following API calls:\n* [DeleteGroupPolicy][1]\n* [DeleteRolePolicy][16]\n* [DeleteUserPolicy][2]\n* [PutGroupPolicy][3]\n* [PutRolePolicy][4]\n* [PutUserPolicy][5]\n* [CreatePolicy][6]\n* [DeletePolicy][7]\n* [CreatePolicyVersion][8]\n* [DeletePolicyVersion][9]\n* [AttachRolePolicy][10]\n* [DetachRolePolicy][11]\n* [AttachUserPolicy][12]\n* [DetachUserPolicy][13]\n* [AttachGroupPolicy][14]\n* [DetachGroupPolicy][15]\n\n### Triage & Response\n1. Review the IAM Policy change and ensure it does not negatively impact your risk in relation to authentication or authorization controls.\n\n[1]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteGroupPolicy.html\n[2]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteUserPolicy.html\n[3]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutGroupPolicy.html\n[4]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutRolePolicy.html\n[5]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutUserPolicy.html\n[6]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicy.html\n[7]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeletePolicy.html\n[8]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicyVersion.html\n[9]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeletePolicyVersion.html\n[10]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachRolePolicy.html\n[11]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachRolePolicy.html\n[12]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachUserPolicy.html\n[13]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachUserPolicy.html\n[14]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachGroupPolicy.html\n[15]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachGroupPolicy.html\n[16]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteRolePolicy.html\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":6,"createdAt":1584475584008,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(DeleteGroupPolicy OR DeleteRolePolicy OR DeleteUserPolicy OR PutGroupPolicy OR PutRolePolicy OR PutUserPolicy OR CreatePolicy OR DeletePolicy OR CreatePolicyVersion OR DeletePolicyVersion OR AttachRolePolicy OR DetachRolePolicy OR AttachUserPolicy OR DetachUserPolicy OR AttachGroupPolicy OR DetachGroupPolicy)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"z8s-u06-ctu","isDefault":true,"name":"AWS IAM policy changed"},{"creationAuthorId":0,"tags":["security:compliance","scope:ec2","framework:cis-aws","source:cloudtrail","control:cis-3.10"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS security group has been modified.\n\n### Strategy\nMonitor CloudTrail and detect when an AWS security group has been created or modified with one of the following API calls:\n* [AuthorizeSecurityGroupIngress][1] \n* [AuthorizeSecurityGroupEgress][2] \n* [RevokeSecurityGroupIngress][3] \n* [RevokeSecurityGroupEgress][4] \n* [CreateSecurityGroup][5] \n* [DeleteSecurityGroup][6]\n\n### Triage & Response\n1. Determine who the user was who made this API call.\n2. Contact the user and see if this was an API call which was made by the user.\n3. If the API call was not made by the user:\n   * Rotate the user credentials and investigate what other API calls.\n   * Determine what other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupIngress.html \n [2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupEgress.html \n [3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeSecurityGroupIngress.html \n [4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeSecurityGroupEgress.html \n [5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html \n [6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSecurityGroup.html","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1584475583507,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @evt.name:(AuthorizeSecurityGroupIngress OR AuthorizeSecurityGroupEgress OR RevokeSecurityGroupIngress OR RevokeSecurityGroupEgress OR CreateSecurityGroup OR DeleteSecurityGroup)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"bax-btp-3ct","isDefault":true,"name":"AWS security group created or modified"},{"creationAuthorId":0,"tags":["source:twistlock"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect vulnerabilities in container images.\n\n### Strategy\nThis rule lets you monitor Twistlock logs to detect `Critical` severity vulnerabilities in a container image. \n\n### Triage & Response\n1. Determine the impact of this vulnerability.\n2. Update the container image in the registry with a patched version of the software.\n3. Deploy the new image to all containers running the vulnerable image.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870278701,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@vulnerability.cve","@vulnerability.package.name","@vulnerability.image_name"],"query":"source:twistlock @vulnerability.log_type:vulnerability @vulnerability.severity:critical","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"d7s-rex-gjv","isDefault":true,"name":"Container image vulnerability detected"},{"creationAuthorId":0,"tags":["source:twistlock"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a container is not running within compliance standards.\n\n### Strategy\nThis rule lets you monitor Twistlock logs to detect when `Critical` severity compliance issues are discovered in a running container. \n\n### Triage & Response\n1. Determine the impact of the compliance finding.\n2. Remediate the compliance finding.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1585870281390,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@vulnerability.compliance_id","@vulnerability.container_name"],"query":"source:twistlock @vulnerability.log_type:compliance @vulnerability.severity:critical","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"9vp-d1j-kwp","isDefault":true,"name":"Container violated compliance standards"},{"creationAuthorId":0,"tags":["source:signal_sciences","scope:signal_sciences"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an IP is flagged by Signal Sciences.\n\n### Strategy\nThis rule lets you monitor Signal Sciences events submitted through the Signal Sciences [integration][1] to detect when an IP is flagged. \n\n### Triage & Response\n1. Determine whether the attack is a false positive.\n2. Determine whether the attack was successful.\n3. If the attack exploited a vulnerability in the application, triage the vulnerability.\n\n[1]: https://app.datadoghq.com/account/settings#integrations/sigsci","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":3,"createdAt":1584993292228,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":[],"query":"source:signal_sciences @title:*flag","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"bmg-ftn-dzo","isDefault":true,"name":"Signal Sciences flagged an IP"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.service.account"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a new service account is created.\n\n### Strategy\nThis rule lets you monitor GCP admin activity audit logs to determine when a service account is created. \n\n### Triage & Response\n1. Contact the user who created the service account and ensure that the account is needed and that the role is scoped properly.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870281733,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.service.account @evt.name:google.iam.admin.v1.CreateServiceAccount","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"szx-4kh-eqs","isDefault":true,"name":"GCP service account created"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.service.account"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a new service account key is created.  An attacker could use this key as a backdoor to your account. \n\n### Strategy\nThis rule lets you monitor GCP admin activity audit logs to detect the creation of a service account key. \n\n### Triage & Response\n1. Contact the user who created the service account key to ensure they''re managing the key securely.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870277946,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.service.account @evt.name:google.iam.admin.v1.CreateServiceAccountKey","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"79j-4wh-xlq","isDefault":true,"name":"GCP service account key created"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.project"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect a change to the IAM policy. \n\n### Strategy\nThis rule lets you monitor GCP admin activity audit logs to determine when the `SetIamPolicy` method is invoked. \n\n### Triage & Response\n1. Review the log and inspect the policy deltas (`@data.protoPayload.serviceData.policyDelta.bindingDeltas`) and ensure none of the actions are `REMOVE`.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870280073,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.project @evt.name:SetIamPolicy","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"fgm-8w4-cgx","isDefault":true,"name":"GCP IAM policy modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.project"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a change to a GCP logging sink has been made. This could stop audit logs from being sent to Datadog.\n\n### Strategy\nMonitor GCP admin activity audit logs to determine when any of the following methods are invoked:\n\n* `google.logging.v2.ConfigServiceV2.UpdateSink`\n* `google.logging.v2.ConfigServiceV2.DeleteSink`\n\n### Triage & Response\n1. Review the sink and ensure the sink is properly configured.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871191688,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id","@data.protoPayload.resourceName"],"query":"source:gcp.project @evt.name:(google.logging.v2.ConfigServiceV2.UpdateSink OR google.logging.v2.ConfigServiceV2.DeleteSink)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"hil-rl3-yxs","isDefault":true,"name":"GCP logging sink modified"},{"creationAuthorId":0,"tags":["scope:gcp.gce.route","source:gcp","security:compliance"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a VPC network is created. \n\n### Strategy\nThis rule lets you monitor GCP GCE activity audit logs to determine when the following method is invoked to create a new VPC network:\n\n* `beta.compute.networks.insert`\n\n### Triage & Response\n1. Review the VPC network.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871193403,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","@data.protoPayload.resourceName","@usr.id"],"query":"source:gcp.gce.route @evt.name:beta.compute.networks.insert","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"a9z-oic-grb","isDefault":true,"name":"GCP GCE VPC network modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.gcs.bucket"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when permissions have changed on a GCS Bucket.\n\n### Strategy\nMonitor GCS bucket admin activity audit logs to determine the following method is invoked:\n\n* `storage.setIamPermissions`\n\n### Triage & Response\n1. Review the bucket permissions and ensure they are not overly permissive.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871193842,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","bucket_name","@usr.id"],"query":"source:gcp.gcs.bucket @evt.name:storage.setIamPermissions","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"fdk-tly-4qr","isDefault":true,"name":"GCP Bucket permissions modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.gce.firewall.rule"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a firewall rule is created, modified or deleted. \n\n### Strategy\nMonitor GCP GCE activity audit logs to determine when any of the following methods are invoked:\n\n* `v1.compute.firewalls.delete`\n* `v1.compute.firewalls.insert`\n* `v1.compute.firewalls.patch` \n\n### Triage & Response\n1. Review the log and role and ensure the permissions are scoped properly.\n2. Review the users associated with the role and ensure they should have the permissions attached to the role.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870279610,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","@data.protoPayload.resourceOriginalState.name","@usr.id"],"query":"source:gcp.gce.firewall.rule @evt.name:(v1.compute.firewalls.delete OR v1.compute.firewalls.insert OR v1.compute.firewalls.patch)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"n1w-sql-apl","isDefault":true,"name":"GCP GCE Firewall rule modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.iam.role"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a custom role is created or modified. \n\n### Strategy\nMonitor GCP IAM activity audit logs to determine when any of the following methods are invoked:\n\n* `google.iam.admin.v1.CreateRole`\n* `google.iam.admin.v1.UpdateRole` \n\n### Triage & Response\n1. Review the log and role and ensure the permissions are scoped properly.\n2. Review the users associated with the role and ensure they should have the permissions attached to the role.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870282410,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.iam.role @evt.name:(google.iam.admin.v1.CreateRole OR google.iam.admin.v1.UpdateRole)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"rhy-fzm-gwl","isDefault":true,"name":"GCP IAM custom role created or modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.cloudsql.database"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a Cloud SQL DB has been modified.\n\n### Strategy\nThis rule lets you monitor GCP Cloud SQL admin activity audit logs to determine when one of the following methods are invoked:\n\n* `cloudsql.instances.create`\n* `cloudsql.instances.create`\n* `cloudsql.users.update`\n\n### Triage & Response\n1. Review the Cloud SQL DB and ensure it is configured properly with the correct permissions.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871198921,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","database_id","@usr.id"],"query":"source:gcp.cloudsql.database @evt.name:(cloudsql.instances.create OR cloudsql.instances.create OR cloudsql.users.create OR cloudsql.users.update)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ikf-ye8-cnu","isDefault":true,"name":"GCP Cloud SQL database modified"},{"creationAuthorId":0,"tags":["scope:gcp.gce.route","source:gcp","security:compliance"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a firewall rule is created or modified. \n\n### Strategy\nThis rule lets you monitor GCP GCE activity audit logs to determine if a firewall is being adjusted by showing you when any of the following methods are invoked:\n\n* `beta.compute.routes.insert`\n* `beta.compute.routes.patch`\n\n### Triage & Response\n1. Veirify that the GCP route is configured properly and that the user intended to modify the firewall.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585870282924,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","@data.protoPayload.resourceName","@usr.id"],"query":"source:gcp.gce.route @evt.name(beta.compute.routes.insert OR beta.compute.routes.patch)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"lht-ml8-u6r","isDefault":true,"name":"GCP GCE network route created or modified"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.gcs.bucket"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an administrative change to a GCS Bucket has been made. This could change the retention policy or bucket lock. For more information, see the [GCS Bucket Lock docs][1].\n\n### Strategy\nThis rule lets you monitor GCS bucket admin activity audit logs to determine if a bucket has been updated with the following method:\n\n* `storage.buckets.update`\n\n### Triage & Response\n1. Review the bucket to ensure that it is properly configured.\n\n[1]: https://cloud.google.com/storage/docs/bucket-lock","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1585871279860,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","bucket_name","@usr.id"],"query":"source:gcp.gcs.bucket @evt.name:storage.buckets.update","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"iz3-sc4-ryy","isDefault":true,"name":"GCP Bucket modified"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","technique:T1046-network-service-scanning","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is conducting a port scan.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Recon:EC2/Portscan][2]\n\n\n### Triage & Response\n1. Determine why traffic from the EC2 instance appears to be conducting a port scan.\n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n \n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon5\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525376478,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Recon\\:EC2\\/Portscan)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"y1y-h5t-gnp","isDefault":true,"name":"AWS EC2 instance conducting a port scan"},{"creationAuthorId":0,"tags":["scope:iam","security:compliance","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user disables [S3 Block Public Access][1]\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][2] finding:\n\n* [Policy:IAMUser/S3BlockPublicAccessDisabled][3]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Contact the user and determine why the user disabled the S3 Block Access feature.   \n3. Re-enable S3 Block Public Access.\n\n[1]: https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html\n[2]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_policy.html#policy2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525377921,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Policy\\:IAMUser\\/S3BlockPublicAccessDisabled)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"loc-nk4-pkc","isDefault":true,"name":"AWS IAM user disabled S3 Block Public Access"},{"creationAuthorId":0,"tags":["scope:ec2","security:threat-intel","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS API call is made from a non EC2 IP for a credential which is scoped to an EC2 Instance.  \n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:IAMUser/InstanceCredentialExfiltration][2]\n\n\n### Triage & Response\n1. Determine the EC2 instance this credential is scoped to. This can be found in the samples. \n2. Determine if the EC2 instance credentials are compromised.  \n3. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized11\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525378639,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:IAMUser\\/InstanceCredentialExfiltration)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"iaa-n0t-0jz","isDefault":true,"name":"AWS EC2 instance credential exfiltrated"},{"creationAuthorId":0,"tags":["scope:iam","security:threat-intel","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user makes API requests from a malicious IP.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Recon:IAMUser/TorIPCaller][2]\n* [Recon:IAMUser/MaliciousIPCaller.Custom][3]\n* [Recon:IAMUser/MaliciousIPCaller][4]\n* [UnauthorizedAccess:IAMUser/MaliciousIPCaller][5]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][6] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon1\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon2\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon3\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized5\n[6]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525380153,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Recon\\:IAMUser\\/TorIPCaller OR Recon\\:IAMUser\\/MaliciousIPCaller.Custom OR Recon\\:IAMUser\\/MaliciousIPCaller OR UnauthorizedAccess\\:IAMUser\\/MaliciousIPCaller)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"8w7-aaz-ojp","isDefault":true,"name":"AWS IAM user requests from malicious IP"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","technique:T1046-network-service-scanning","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is being probed by a scanner.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Recon:EC2/PortProbeUnprotectedPort][2]\n* [Recon:EC2/PortProbeEMRUnprotectedPort][3]\n\n\n### Triage & Response\n1. This is typically an informative signal. However, if this instance should not be publicly available, you should review the security group for this instance. \n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#recon6\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_recon.html#PortProbeEMRUnprotectedPort\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525381084,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Recon\\:EC2\\/PortProbeUnprotectedPort OR Recon\\:EC2\\/PortProbeEMRUnprotectedPort)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"mrq-h3x-jus","isDefault":true,"name":"AWS EC2 instance probed by scanner"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0011-command-and-control","technique:T1188-multi-hop-proxy","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance makes an outbound network connection from TOR.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/TorClient][2]\n\n\n### Triage & Response\n1. Determine if the EC2 instance should be making requests to TOR. \n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance. \n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized13\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525381864,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/TorClient)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ihd-q9p-mwx","isDefault":true,"name":"AWS EC2 instance outbound connections to TOR"},{"creationAuthorId":0,"tags":["scope:iam","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user is launching compute resources and has no prior history of invoking this API.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [ResourceConsumption:IAMUser/ComputeResources][2]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][3] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_resource.html#resourceconsumption\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525382816,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(ResourceConsumption\\:IAMUser\\/ComputeResources)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"fwu-iey-ovx","isDefault":true,"name":"AWS IAM user anomalous resource consumption"},{"creationAuthorId":0,"tags":["scope:ec2","security:threat-intel","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance receives an inbound network connection from TOR.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/TorIPCaller][2]\n\n\n### Triage & Response\n1. This is typically an informative signal. However, if this instance should not be publicly available, you should review the security group for this instance. \n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized7\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525383148,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/TorIPCaller)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"1ew-u8i-att","isDefault":true,"name":"AWS EC2 instance inbound connections from TOR"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is participating in a Denial of Service (DoS) attack.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Backdoor:EC2/DenialOfService.Tcp][2]\n* [Backdoor:EC2/DenialOfService.Udp][3]\n* [Backdoor:EC2/DenialOfService.Dns][4]\n* [Backdoor:EC2/DenialOfService.UdpOnTcpPorts][5]\n* [Backdoor:EC2/DenialOfService.UnusualProtocol][6]\n\n\n### Triage & Response\n1. Determine if the EC2 instance is compromised and participating in a DoS attack.\n2. If the instance is compromised:\n   * Review the AWS [documentation][7] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor8\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor9\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor10\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor11\n[6]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor12\n[7]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525383757,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Backdoor\\:EC2\\/DenialOfService.Tcp OR Backdoor\\:EC2\\/DenialOfService.Udp OR Backdoor\\:EC2\\/DenialOfService.Dns OR Backdoor\\:EC2\\/DenialOfService.UdpOnTcpPorts OR Backdoor\\:EC2\\/DenialOfService.UnusualProtocol)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"3l6-vrm-iyn","isDefault":true,"name":"AWS EC2 instance participating in a DoS attack"},{"creationAuthorId":0,"tags":["tactic:TA0004-privilege-escalation","scope:iam","source:guardduty","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user is attempting to escalate permissions.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [PrivilegeEscalation:IAMUser/AdministrativePermissions][2]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][3] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_privilegeescalation.html#privilegeescalation1\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525384559,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(PrivilegeEscalation\\:IAMUser\\/AdministrativePermissions)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"dsb-ciq-vrt","isDefault":true,"name":"AWS IAM user escalating privileges"},{"creationAuthorId":0,"tags":["scope:iam","technique:T1089-disabling-security-tools","source:guardduty","tactic:TA0005-defense-evasion","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user is changing sensitive configurations and has no prior history of invoking these APIs.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Stealth:IAMUser/S3ServerAccessLoggingDisabled][2]\n* [Stealth:IAMUser/PasswordPolicyChange][3]\n* [Stealth:IAMUser/CloudTrailLoggingDisabled][4]\n* [Stealth:IAMUser/LoggingConfigurationModified][5]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][6] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_stealth.html#stealth4\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_stealth.html#stealth1\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_stealth.html#stealth2\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_stealth.html#stealth3\n[6]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525385196,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Stealth\\:IAMUser\\/S3ServerAccessLoggingDisabled OR Stealth\\:IAMUser\\/PasswordPolicyChange OR Stealth\\:IAMUser\\/CloudTrailLoggingDisabled OR Stealth\\:IAMUser\\/LoggingConfigurationModified)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"48o-8me-0mo","isDefault":true,"name":"AWS IAM user changing sensitive configurations"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is compromised and sending spam emails.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Backdoor:EC2/Spambot][2]\n\n\n### Triage & Response\n1. Determine if the EC2 should be sending out email over port 25. \n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor6\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525385866,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Backdoor\\:EC2\\/Spambot)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ecn-gew-dg2","isDefault":true,"name":"AWS EC2 instance Sending spam emails"},{"creationAuthorId":0,"tags":["scope:iam","source:guardduty","security:attack","tactic:TA0003-persistence"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user is attempting to gain persistence within an AWS account.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Persistence:IAMUser/NetworkPermissions][2]\n* [Persistence:IAMUser/ResourcePermissions][3]\n* [Persistence:IAMUser/UserPermissions][4]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][5] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_persistence.html#persistence1\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_persistence.html#persistence2\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_persistence.html#persistence3\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525386519,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(Persistence\\:IAMUser\\/NetworkPermissions OR Persistence\\:IAMUser\\/ResourcePermissions OR Persistence\\:IAMUser\\/UserPermissions)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"4ho-oxn-reh","isDefault":true,"name":"AWS IAM user attempting to gain persistence"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0006-credential-access","security:attack","technique:T1522-cloud-instance-metadata-api"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance makes a DNS request and resolves to the AWS metadata IP address (169.254.169.254).\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/MetadataDNSRebind][2]\n\n\n### Triage & Response\n1. Determine which process made the DNS request. The DNS request can be found in the samples.\n2. Ensure the process is not a victim of an SSRF attack to steal the AWS EC2 Instance profile''s STS credentials.  \n2. If the STS credentials are compromised:\n   * Review the AWS [documentation][3] on revoking the session.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#ec2-metadatadnsrebind\n[3]: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_revoke-sessions.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":2,"createdAt":1587525387807,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/MetadataDNSRebind)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"aad-vqz-7tk","isDefault":true,"name":"AWS EC2 Instance Victim to Metadata DNS Rebind Attack"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0040-impact","technique:T1496-resource-hijacking","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is being used as a TOR relay.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/TorRelay][2]\n\n\n### Triage & Response\n1. Determine if the EC2 instance should be uses as a TOR relay. \n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance. \n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized14\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525388119,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/TorRelay)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"tpv-3qf-v90","isDefault":true,"name":"AWS EC2 instance connecting to TOR as a relay"},{"creationAuthorId":0,"tags":["scope:iam","source:guardduty","security:anomaly"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user login is suspicious.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [UnauthorizedAccess:IAMUser/ConsoleLoginSuccess.B][2]\n* [UnauthorizedAccess:IAMUser/ConsoleLogin][3]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][4] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized4\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized12\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525388403,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:IAMUser\\/ConsoleLoginSuccess.B OR UnauthorizedAccess\\:IAMUser\\/ConsoleLogin)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"kme-i0z-ylv","isDefault":true,"name":"AWS IAM user suspicious login"},{"creationAuthorId":0,"tags":["scope:ec2","security:threat-intel","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance makes an outbound network connection to a malcious IP address.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/MaliciousIPCaller.Custom][2]\n\n\n### Triage & Response\n1. Determine which IP address triggered the signal. This can be found in the sample.\n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized5\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525389461,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/MaliciousIPCaller.Custom)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"22j-qk6-qv3","isDefault":true,"name":"AWS EC2 instance communicating with malicious IP"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","security:anomaly"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is communicating over an unusual port.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Behavior:EC2/NetworkPortUnusual][2]\n\n\n### Triage & Response\n1. Determine which port triggered the signal. This can be found in the samples.\n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_behavior.html#behavior3\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525391873,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Behavior\\:EC2\\/NetworkPortUnusual)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"qfd-ned-cjn","isDefault":true,"name":"AWS EC2 instance communicating over unusual port"},{"creationAuthorId":0,"tags":["scope:iam","source:guardduty"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an AWS IAM user makes API requests with hacking tools.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [PenTest:IAMUser/KaliLinux][2]\n* [PenTest:IAMUser/ParrotLinux][3]\n* [PenTest:IAMUser/PentooLinux][4]\n\n\n### Triage & Response\n1. Determine which user triggered the signal. This can be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3. If the user''s credentials are compromised:\n  * Review the AWS [documentation][5] on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_pentest.html#pentest1\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_pentest.html#pentest2\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_pentest.html#pentest3\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525392995,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@detail.resource.accessKeyDetails.userName"],"query":"source:guardduty @evt.name:(PenTest\\:IAMUser\\/KaliLinux OR PenTest\\:IAMUser\\/ParrotLinux OR PenTest\\:IAMUser\\/PentooLinux)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ocf-ys6-78v","isDefault":true,"name":"AWS IAM user making API requests with hacking tools"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance is communicating with a malicious server.\n\n### Strategy\nThis rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Backdoor:EC2/C&CActivity.B!DNS][2]\n* [Trojan:EC2/BlackholeTraffic][3]\n* [Trojan:EC2/DropPoint][4]\n* [Trojan:EC2/BlackholeTraffic!DNS][5]\n* [Trojan:EC2/DriveBySourceTraffic!DNS][6]\n* [Trojan:EC2/DropPoint!DNS][7]\n* [Trojan:EC2/DGADomainRequest.B][8]\n* [Trojan:EC2/DGADomainRequest.C!DNS][9]\n* [Trojan:EC2/DNSDataExfiltration][10]\n* [Trojan:EC2/PhishingDomainRequest!DNS][11]\n\n\n### Triage & Response\n1. Determine which domain name or IP address triggered the signal. This can be found in the samples.\n2. If the instance is compromised:\n   * Review the AWS [documentation][12] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_backdoor.html#backdoor6\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan4\n[4]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan5\n[5]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan6\n[6]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan7\n[7]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan8\n[8]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan9\n[9]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan95\n[10]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan10\n[11]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_trojan.html#trojan11\n[12]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525393367,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Trojan\\:EC2\\/BlackholeTraffic OR Trojan\\:EC2\\/DropPoint OR Trojan\\:EC2\\/BlackholeTraffic\\!DNS OR Trojan\\:EC2\\/DriveBySourceTraffic\\!DNS OR Trojan\\:EC2\\/DropPoint\\!DNS OR Trojan\\:EC2\\/DGADomainRequest.B OR Trojan\\:EC2\\/DGADomainRequest.C\\!DNS OR Backdoor\\:EC2\\/C&CActivity.B\\!DNS OR Trojan\\:EC2\\/PhishingDomainRequest\\!DNS)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"9du-jhn-b4f","isDefault":true,"name":"AWS EC2 instance communicated with a malicious server"},{"creationAuthorId":0,"tags":["scope:iam","security:compliance","source:guardduty","control:cis-1.1","framework:cis-aws","control:cis-3.3"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when the AWS root user credentials are used.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Policy:IAMUser/RootCredentialUsage][2]\n\n\n### Triage & Response\n1. Determine whether the root account activity was legitimate. \n * Review the sample for context. \n * Review CloudTrail logs for a full investigation. \n3. If the root user''s credentials are compromised:\n * Review the AWS [documentation][3] on remediating compromised AWS credentials.\n\n**[Root Account Best Practices][4]**\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_policy.html#policy1\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n[4]: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":5,"createdAt":1587525393683,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":[],"query":"source:guardduty @evt.name:(Policy\\:IAMUser\\/RootCredentialUsage)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"cjm-gyr-zxb","isDefault":true,"name":"AWS Root credential activity"},{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","security:anomaly"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an EC2 instance network traffic volume is unusual.\n\n### Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [Behavior:EC2/TrafficVolumeUnusual][2]\n\n\n### Triage & Response\n1. Determine which port triggered the signal. This can be found in the samples.\n2. If the instance is compromised:\n   * Review the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_behavior.html#behavior4\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1587525393982,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(Behavior\\:EC2\\/TrafficVolumeUnusual)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ipt-dpt-t69","isDefault":true,"name":"AWS EC2 instance network traffic volume unusual"},{"creationAuthorId":0,"tags":["scope:apache","technique:T1190-exploit-public-facing-application","source:apache","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This identifies attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":8,"createdAt":1587530038000,"filters":[{"action":"require","query":"source:foo"}],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:apache @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ipl-oaz-eqf","isDefault":true,"name":"Apache HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["technique:T1190-exploit-public-facing-application","source:elb","scope:elb","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This will identify attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous User Agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an INFO signal.  \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1587530043452,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:elb @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"csd-1pb-wxh","isDefault":true,"name":"AWS ELB HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["technique:T1190-exploit-public-facing-application","source:nginx","scope:nginx","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This will identify attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1587530047261,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:nginx @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"5jr-xi3-uto","isDefault":true,"name":"NGINX HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["technique:T1190-exploit-public-facing-application","scope:nginx-ingress-controller","source:nginx-ingress-controller","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This will identify attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1587530154864,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:nginx-ingress-controller @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"oxj-rwr-gxq","isDefault":true,"name":"NGINX ingress controller HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["technique:T1190-exploit-public-facing-application","source:fastly","scope:fastly","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This identifies attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2]. \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1587530162282,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:fastly @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"dqs-oru-107","isDefault":true,"name":"Fastly HTTP Requests from Security Scanner"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when there is unauthorized activity by a service account in GCP\n\n### Strategy\nMonitor GCP logs and detect when a service account makes an API request and the request returns the status code equal to `7` within the log attribute `@data.protoPayload.status.code`. The status code `7` indicates the service account did not have permission to make the API call.\n\n### Triage & Response\n1. Determine the service account that made the unauthorized calls.\n2. Investigate if there is a misconfiguration in IAM permissions or if an attacker compromised the service account","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":5,"createdAt":1587592191518,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.* @data.protoPayload.status.code:7 @usr.id:(*gserviceaccount.com OR *google.com)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"greater than 1000 failed attempts","condition":"a > 1000"},{"status":"medium","notifications":[],"name":"greater than 100 failed attempts","condition":"a > 100"},{"status":"low","notifications":[],"name":"greater than 10 failed attempts","condition":"a > 10"}],"type":"log_detection","id":"89d-2v1-fvm","isDefault":true,"name":"GCP unauthorized service account activity"},{"creationAuthorId":0,"tags":["source:iis","scope:iis","technique:T1190-exploit-public-facing-application","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a web application is being scanned. This will identify attacker IP addresses who are not trying to hide their attempt to attack your system. More advanced hackers will use an inconspicuous user agent. \n\n### Strategy\nInspect the user agent in the HTTP headers to determine if an IP is scanning your application and generate an `INFO` signal. \n\n### Triage and Response\n1. Determine if this IP is making authenticated requests to the application.\n2. If the IP is making authenticated requests to the application:\n * Investigate the HTTP logs and determine if the user is attacking your application.\n\nThe HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]: https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1587530716843,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:iis @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"ftm-iao-udy","isDefault":true,"name":"IIS HTTP requests from security scanner"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when unauthorized activity by a user is detected in GCP\n\n### Strategy\nMonitor GCP logs and detect when a user account makes an API request and the request returns the status code equal to `7` within the log attribute `@data.protoPayload.status.code`. The status code `7` indicates the user account did not have permission to make the API call.\n\n### Triage & Response\n1. Determine the user who made the unauthorized calls.\n2. Determine if there is a misconfiguration in IAM permissions or whether an attacker has compromised the user account.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":5,"createdAt":1587592193834,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:gcp.* @data.protoPayload.status.code:7 -@usr.id:(*gserviceaccount.com OR *google.com)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"greater than 1000 failed attempts","condition":"a > 1000"},{"status":"medium","notifications":[],"name":"greater than 100 failed attempts","condition":"a > 100"},{"status":"low","notifications":[],"name":"greater than 10 failed attempts","condition":"a > 10"}],"type":"log_detection","id":"stt-ows-yte","isDefault":true,"name":"GCP unauthorized user activity"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.pubsub.topic"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a GCP Pub/Sub Subscribtion has been deleted. This could stop audit logs from being sent to Datadog.\n\n### Strategy\nMonitor GCP admin activity audit logs to determine when the following method is invoked:\n\n* `google.pubsub.v1.Publisher.DeleteTopic`\n\n### Triage & Response\n1. Review the subscribtion and ensure it is properly configured.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1587592198839,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id","@data.protoPayload.resourceName"],"query":"source:gcp.pubsub.topic @evt.name:google.pubsub.v1.Publisher.DeleteTopic","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"dp6-zom-jyv","isDefault":true,"name":"GCP Pub/Sub topic deleted"},{"creationAuthorId":0,"tags":["technique:T1083-file-and-directory-discovery","source:gcp","scope:gcp.gcs.bucket","tactic:TA0007-discovery","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a service account lists out GCS Buckets.\n\n### Strategy\nThis rule lets you monitor GCS bucket admin activity audit logs to determine when a service account invokes the following method:\n\n* `storage.buckets.list`\n\n### Triage & Response\n1. Determine whether this service account should be making list bucket calls.\n * If the account was compromised, secure the account and investigate how it was compromised and if the account made other unauthorized calls.\n * If the owner of the service account intended to make the `ListBuckets` API call, consider whether this API call is needed. It could cause a security issue for the application to know the name of the bucket it needs to access. If it''s not needed, modify this rule''s filter to stop generating signals for this specific service account.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1587592199858,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["project_id","bucket_name","@usr.id"],"query":"source:gcp.gcs.bucket @evt.name:storage.buckets.list @usr.id:*gserviceaccount.com","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"cnc-wi1-llf","isDefault":true,"name":"GCP Bucket enumerated"},{"creationAuthorId":0,"tags":["source:gcp","security:compliance","scope:gcp.pubsub.subscription"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a change to a GCP Pub/Sub Subscription has been made. This could stop audit logs from being sent to Datadog.\n\n### Strategy\nMonitor GCP admin activity audit logs to determine when any of the following methods are invoked:\n\n* `google.pubsub.v1.Subscriber.UpdateSubscription`\n* `google.pubsub.v1.Subscriber.DeleteSubscription`\n\n### Triage & Response\n1. Review the subscribtion and ensure it is properly configured.","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":4,"createdAt":1587592205917,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id","@data.protoPayload.resourceName"],"query":"source:gcp.pubsub.subscription @evt.name:(google.pubsub.v1.Subscriber.UpdateSubscription OR google.pubsub.v1.Subscriber.DeleteSubscription)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"tsj-mac-mdc","isDefault":true,"name":"GCP Pub/Sub Subscriber modified"},{"creationAuthorId":0,"tags":["source:okta"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a new Okta API token is created.\n\n### Strategy\nThis rule lets you monitor the following Okta event to detect when a new Okta API token is created:\n\n* `system.api_token.create`\n\n### Triage & Response\n1. Contact the user who created the API token and ensure that the API token is needed.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1589315541698,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.email"],"query":"source:okta @evt.name:system.api_token.create","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"lpf-tho-8sx","isDefault":true,"name":"Okta API Token Created or Enabled"},{"creationAuthorId":0,"tags":["source:okta"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user attempts to bypass multi-factor authentication (MFA).\n\n### Strategy\nThis rule lets you monitor the following Okta events to detect when a user attempts to bypass MFA:\n\n* `user.mfa.attempt_bypass`\n\n### Triage & Response\n1. Contact the user who attempted to bypass MFA and ensure the request was legitimate.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1589315643307,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.email"],"query":"source:okta @evt.name:user.mfa.attempt_bypass","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"wbd-slu-e6s","isDefault":true,"name":"Okta MFA Bypass Attempted"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user attaches to a pod.\n\n### Strategy\nThis rule monitors when a user attaches (`@objectRef.subresource:attach`) to a pod (`@objectRef.resource:pods`).\n\nA user should not need to attach to a pod. Attaching to a pod allows a user to attach to any process in a running container which may give an attacker access to sensitive data.\n\n### Triage & Response\n1. Determine if the user should be attaching to a running container.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":8,"createdAt":1589375996858,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:pods @objectRef.subresource:attach @http.method:create @http.status_code:[101 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:pods @objectRef.subresource:attach @verb:create @responseStatus.code:[101 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"j6t-mva-rul","isDefault":true,"name":"User Attached to a Pod"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an unauthenticated request user is permitted in Kubernetes.\n\n### Strategy\nThis rule monitors when any action is permitted (`@http.status_code:[100 TO 299]`) for an unauthenticated user (`@user.username:\\\"system:anonymous\\\"`).\nThe `/healthz` endpoint is commonly accessed unauthenticated and it is excluded in the query filter.\n\n### Triage & Response\n1. Inspect all of the HTTP paths accessed and determine if any of the path should be permitted by unauthenticated users.\n2. Determine what IP addresses accessed Kubernetes endpoints which may contain sensitive data.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1589376002149,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":[],"query":"@apiVersion:audit.k8s.io* @usr.name:\"system:anonymous\" @http.status_code:[100 TO 299] -@http.url_details.path:\"/healthz\"","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":[],"query":"@apiVersion:audit.k8s.io* @user.username:\"system:anonymous\" @responseStatus.code:[100 TO 299] -@requestURI:\"/healthz\"","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"f1o-py5-a50","isDefault":true,"name":"Anonymous Request Authorized"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a pod is attached to the host network.\n\n### Strategy\nThis rule monitors when a create (`@http.method:create`) action occurs for a pod (`@objectRef.resource:pods`) with the host network `@requestObject.spec.hostNetwork:true` attached.\n\nAttaching the `hostNetwork` permits a pod to access the node''s network adapter allowing a pod to listen to all network traffic for all pods on the node and communicate with other pods on the network namespace.\n\n### Triage & Response\n1. Determine if the pod needs `hostNetwork` access.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1589376007079,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@requestObject.metadata.generateName"],"query":"source:kubernetes.audit @objectRef.resource:pods @http.method:create @requestObject.spec.hostNetwork:true @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@requestObject.metadata.generateName"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:pods @verb:create @requestObject.spec.hostNetwork:true @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"d3g-xpz-cwc","isDefault":true,"name":"Kubernetes Pod Created with hostNetwork"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is creating a pod in one of the Kubernetes default namespaces.\n\n### Strategy\nThis rule monitors when a create (`@http.method:create`) action occurs for a pod (`@objectRef.resource:pods`) within either of the `kube-system` or `kube-public` namespaces.\n\nThe only users creating pods in the `kube-system` namespace should be cluster administrators. Furthermore, it is best practice to not run any cluster critical infrastructure in the `kube-system` namespace.\n\nThe `kube-public` namespace is intended for Kubernetes objects which should be readable by unauthenticated users. Thus, a pod should likely not be created in the `kube-public` namespace.\n\n### Triage & Response\n1. Determine if the user should be creating this new pod in one of the default namespaces.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1589376012191,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:pods @http.method:create @objectRef.namespace:(\"kube-system\" OR \"kube-public\") @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:pods @verb:create @objectRef.namespace:(\"kube-system\" OR \"kube-public\") @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"tvf-ju6-h3i","isDefault":true,"name":"Kubernetes Pod Created in Kube Namespace"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is creating a service account in one of the Kubernetes default namespaces.\n\n### Strategy\nThis rule monitors when a create (`@http.method:create`) action occurs for a service account (`@objectRef.resource:serviceaccounts`) within either of the `kube-system` or `kube-public` namespaces.\n\nThe only users creating service accounts in the `kube-system` namespace should be cluster administrators. Furthermore, it is best practice to not run any cluster critical infrastructure in the `kube-system` namespace.\n\nThe `kube-public` namespace is intended for kubernetes objects which should be readable by unauthenticated users. Thus, a service account should likely not be created in the `kube-public` namespace.\n\n### Triage & Response\n1. Determine if the user should be creating this new service account in one of the default namespaces.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1589376017036,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:serviceaccounts @http.method:create @objectRef.namespace:(\"kube-system\" OR \"kube-public\") @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:serviceaccounts @verb:create @objectRef.namespace:(\"kube-system\" OR \"kube-public\") @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"loy-9ka-bc2","isDefault":true,"name":"Kubernetes Service Account Created in Kube Namespace"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is creating a Kubernetes namespace.\n\n### Strategy\nThis rule monitors when a `create` action occurs for the Kubernetes namespace (`@objectRef.resource:namespaces`) to detect when a user is creating a new Kubernetes namespace.\n\n### Triage & Response\n1. Determine if the user should be creating this new namespace.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":6,"createdAt":1589376020564,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@objectRef.name","@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:namespaces @http.method:create -@objectRef.name:(\"default\" OR \"kube-system\" OR \"kube-public\") @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@objectRef.name","@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:namespaces @verb:create -@objectRef.name:(\"default\" OR \"kube-system\" OR \"kube-public\") @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"zgq-pd9-wgw","isDefault":true,"name":"New Kubernetes Namespace Created"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a service''s port is attached to the node''s IP.\n\n### Strategy\nThis rule monitors when a create (`@http.method:create`) action occurs for a service (`@objectRef.resource:services`) attaching the service''s port to the node''s IP `@requestObject.spec.type:NodePort`.\n\nExposing the service''s port to the the node''s IP allows other hosts on the network namespace to access this service.\n\n### Triage & Response\n1. Determine if the service needs to expose it''s network connection with `NodePort` access.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":7,"createdAt":1589376023160,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@objectRef.name"],"query":"source:kubernetes.audit @objectRef.resource:services @http.method:create @requestObject.spec.type:NodePort @http.status_code:[200 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@objectRef.name"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:services @verb:create @requestObject.spec.type:NodePort @responseStatus.code:[200 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"cvp-3wz-v3s","isDefault":true,"name":"Kubernetes Service Created with NodePort"},{"creationAuthorId":0,"tags":["source:kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user execs into a pod.\n\n### Strategy\nThis rule monitors when a user execs (`@objectRef.subresource:exec`) into to a pod (`@objectRef.resource:pods`).\n\nA user should not need to exec into a pod. Execing into a pod allows a user to execute any process in container which is not already running.\nIt is most common to execute the bash process to gain an interactive shell.\nIf this is an attacker, they can access any data which the pod has permissions to, including secrets.\n\n### Triage & Response\n1. Determine if the user should be execing into a running container.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":8,"createdAt":1589376094658,"filters":[],"queries":[{"distinctFields":[],"name":"standardized_attributes","aggregation":"count","groupByFields":["@usr.name"],"query":"source:kubernetes.audit @objectRef.resource:pods @objectRef.subresource:exec @http.method:create @http.status_code:[101 TO 299]","trackType":"logs"},{"distinctFields":[],"name":"non_standardized_attributes","aggregation":"count","groupByFields":["@user.username"],"query":"@apiVersion:audit.k8s.io* @objectRef.resource:pods @objectRef.subresource:exec @verb:create @responseStatus.code:[101 TO 299]","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"standardized","condition":"standardized_attributes > 0"},{"status":"info","notifications":[],"name":"non-standardized","condition":"non_standardized_attributes > 0"}],"type":"log_detection","id":"hyd-cu4-79x","isDefault":true,"name":"User Exec into a Pod"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","source:auth0","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## **Goal:**\nDetect a brute force attack on a user. \n\n## **Strategy:**\n**To determine a successful attempt:** Detect when the same user fails to login five times and then successfully logs in. This generates a `MEDIUM` severity signal.\n\n**To determine an unsuccessful attempt:** Detect when the same user fails to login five times. This generates an `INFO` severity signal.\n\n## **Triage & Response:**\n1. Inspect the logs to see if this was a valid login attempt.\n2. See if 2FA was authenticated\n3. If the user was compromised, rotate user credentials.\n\n","options":{"detectionMethod":"threshold","evaluationWindow":600,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1597422956269,"filters":[],"queries":[{"distinctFields":[],"name":"failed_login","aggregation":"count","groupByFields":["@usr.id"],"query":"source:auth0 @evt.name:(failed_login_incorrect_password OR failed_login_invalid_email_or_username)","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@usr.id"],"query":"source:auth0 @evt.name:success_login","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Successful","condition":"failed_login>5 && successful_login>=1"},{"status":"info","notifications":[],"name":"Attempt","condition":"failed_login>10"}],"type":"log_detection","id":"dde-oia-yjr","isDefault":true,"name":"Brute force attack on an Auth0 user"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","source:auth0","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## **Goal:**\nDetect log ins from the same user from multiple countries within a short time frame.\n\n## **Strategy:**\nUtilize geo-ip data to detect when a user logs in from two IP addresses which are in different countries within a short time frame.\n\n## **Triage & Response:**\n1. See if 2FA was used for authentication.\n2. Contact the user and see if this behavior is expected.\n3. If the user was compromised, rotate the user credentials.\n","options":{"detectionMethod":"threshold","evaluationWindow":3600,"maxSignalDuration":86400,"keepAlive":3600},"version":5,"createdAt":1597422956982,"filters":[],"queries":[{"distinctFields":["@network.client.geoip.country.name"],"name":"successful_logins_by_country","aggregation":"cardinality","groupByFields":["@usr.id"],"query":"source:auth0 @evt.name:success_login","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"successful_logins_by_country > 1"}],"type":"log_detection","id":"j6f-xqz-wig","isDefault":true,"name":"Auth0 user authenticating from multiple countries"},{"creationAuthorId":0,"tags":["technique:T1078-valid-accounts","source:auth0","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"## **Goal:**\nDetect when a user logs in with a breached password.\n\n## **Strategy:**\nAuth0 logs an event when a user logs in with a breached password. When this event is detected, Datadog generates a `MEDIUM` severity Security Signal.\n\nYou can see more information on how Auth0 detects breached passwords on their [documentation][1].\n\n## **Triage & Response:**\n1. Inspect the policy and user location to see if this was a login from approved location\n2. See if 2FA was authenticated\n3. If the user was compromised, rotate user credentials.\n\n[1][https://auth0.com/docs/anomaly-detection/brute-force-protection]\n","options":{"detectionMethod":"threshold","evaluationWindow":0,"maxSignalDuration":0,"keepAlive":0},"version":5,"createdAt":1597422957145,"filters":[],"queries":[{"distinctFields":[],"name":"breached_password","aggregation":"count","groupByFields":["@usr.id"],"query":"source:auth0 @evt.name:breached_password","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"breached_password > 0"}],"type":"log_detection","id":"yhw-avf-dz0","isDefault":true,"name":"Auth0 user logged in with a breached password"},{"creationAuthorId":0,"tags":["tactic:TA0006-credential-access","source:auth0","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## **Goal:**\nDetect Account Take Over (ATO) through credential stuffing attack.\n\n## **Strategy:**\n**To determine a successful attempt:** Detect a high number of failed logins from at least ten unique users and at least one successful login for a user. This generates a `HIGH` severity signal.\n\n**To determine an unsuccessful attempt:** Detect a high number of failed logins from at least ten unique users. This generates an `INFO` severity signal.\n\n## **Triage & Response:**\n1. Inspect the logs to see if this was a valid login attempt.\n2. See if 2FA was authenticated\n3. If the user was compromised, rotate user credentials.\n\n","options":{"detectionMethod":"threshold","evaluationWindow":600,"maxSignalDuration":86400,"keepAlive":3600},"version":5,"createdAt":1597422958108,"filters":[],"queries":[{"distinctFields":["@usr.id"],"name":"unique_users_failing_to_login","aggregation":"cardinality","groupByFields":["@network.client.ip"],"query":"source:auth0 @evt.name:(failed_login_incorrect_password OR failed_login_invalid_email_or_username)","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:auth0 @evt.name:success_login","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Successful","condition":"unique_users_failing_to_login>10 && successful_login>=1"},{"status":"info","notifications":[],"name":"Attempt","condition":"unique_users_failing_to_login>10"}],"type":"log_detection","id":"ryo-snu-uva","isDefault":true,"name":"Credential stuffing attack on Auth0"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when any user logs in to Azure AD without multi-factor authentication.\n\n### Strategy\nThis rule monitors Azure Activity logs for Active Directory logs and detects when any `@evt.category` has a value of  `SignInLogs`, and `@properties.authenticationRequirement` has a value of `singleFactorAuthentication`.\n\n### Triage & Response\n1. Reach out to the user to determine if the login was legitimate.\n2. If the login was legitimate, request that the user enables 2FA.\n3. If the login wasn''t legitimate, rotate the credentials.\n4. Review all user accounts to ensure MFA is enabled.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":4,"createdAt":1598468815267,"filters":[],"queries":[{"distinctFields":[],"name":"user_login_without_mfa","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.activedirectory @evt.category:SignInLogs @properties.authenticationRequirement:singleFactorAuthentication","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"user_login_without_mfa > 0"}],"type":"log_detection","id":"c8i-66d-m7u","isDefault":true,"name":"Azure AD Login Without MFA"},{"creationAuthorId":0,"tags":["source:azure","technique:T1190-exploit-public-facing-application","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an Azure Frontdoor Web Application Firewall (WAF) logs a request from an IP address.\n\n### Strategy\nThis rule monitors Azure Activity logs for Frontdoor Web Application Firewall logs and detects when the `@evt.name` has a value of  `Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write` and `@properties.action` has a value of `Log`.\n\n### Triage & Response\n1. Inspect whether this request should have been blocked or not.\n2. Navigate to the IP dashboard and inspect other requests this IP address has made.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":3,"createdAt":1598468815399,"filters":[],"queries":[{"distinctFields":[],"name":"waf_logged_a_request","aggregation":"count","groupByFields":["@properties.clientIP"],"query":"source:azure.network @evt.name:\"Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write\" @properties.action:Log","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"waf_logged_a_request > 0"}],"type":"log_detection","id":"bkk-48l-vem","isDefault":true,"name":"Azure Frontdoor WAF Logged a Request"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an Azure network security group allows inbound traffic from all IP Addresses.\n\n### Strategy\nThis rule monitors Azure Activity logs for network changes and detects when the `@evt.name` has a value of  `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE`, `@properties.securityRules.properties.direction` has a value of `Inbound`, `@properties.securityRules.properties.access` has a value of `Allow`, and `@properties.securityRules.properties.sourceAddressPrefix` has a value of either `0.0.0.0/0` OR `*`.\n\n### Triage & Response\n1. Inspect which Virtual Machines are associated with this security group.\n2. Determine whether this security group and the VMs should permit inbound traffic from all IP addresses.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":3,"createdAt":1598468816111,"filters":[],"queries":[{"distinctFields":[],"name":"security_group_open_to_world","aggregation":"count","groupByFields":["@resourceId"],"query":"source:azure.network @evt.name:\"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE\" @properties.securityRules.properties.direction:Inbound @properties.securityRules.properties.access:Allow @properties.securityRules.properties.sourceAddressPrefix:(\"0.0.0.0/0\" OR \"*\")","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"security_group_open_to_world > 0"}],"type":"log_detection","id":"owu-2uz-8cb","isDefault":true,"name":"Azure Network Security Group Open to the World"},{"creationAuthorId":0,"tags":["source:azure","technique:T1190-exploit-public-facing-application","security:attack","tactic:TA0001-initial-access"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when an Azure Frontdoor Web Application Firewall (WAF) blocks a request from an IP address.\n\n### Strategy\nThis rule monitors Azure Activity logs for Frontdoor Web Application Firewall logs and detects when the `@evt.name` has a value of  `Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write` and `@properties.action` has a value of `Block`.\n\n### Triage & Response\n1. Inspect whether this request should have been blocked or not.\n2. Navigate to the IP dashboard and inspect other requests this IP address has made.\n","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":3,"createdAt":1598468816869,"filters":[],"queries":[{"distinctFields":[],"name":"waf_blocked_a_request","aggregation":"count","groupByFields":["@properties.clientIP"],"query":"source:azure.network @evt.name:\"Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write\" @properties.action:Block","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"waf_blocked_a_request > 0"}],"type":"log_detection","id":"xyt-fqh-myv","isDefault":true,"name":"Azure Frontdoor WAF Blocked a Request"},{"creationAuthorId":0,"tags":["technique:T1552-unsecured-credentials","source:route53","tactic:TA0006-credential-access","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a requested domain resolves to the AWS Metadata IP (169.254.169.254).\n\n### Strategy\nInspect the Route 53 logs and determine if the response data for a DNS request matches the AWS Metadata IP (169.254.169.254). This could indicate an attacker is attempting to steal your credentials from the AWS metadata service.\n\n### Triage and Response\n1. Determine which instance is associated with the DNS request.\n2. Determine whether the domain name which was requested (`dns.question.name`) should be permitted. If not, conduct an investigation and determine what requested the domain and determine if the AWS metadata credentials were accessed by an attacker.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1603296598998,"filters":[],"queries":[{"distinctFields":[],"name":"domain_resolve_to_metadata_ip","aggregation":"count","groupByFields":["instance-id"],"query":"source:route53 @answers.Rdata:169.254.169.254","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"","condition":"domain_resolve_to_metadata_ip > 0"}],"type":"log_detection","id":"mwi-zj7-db9","isDefault":true,"name":"EC2 instance resolved a suspicious AWS metadata DNS query"},{"creationAuthorId":0,"tags":["source:route53","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a requested domain has a suspicious TLD.\n\n### Strategy\nInspect the Route 53 logs and determine if the TLD of the DNS question (`@dns.question.name`) matches one of the top 5 TLDs on [Spamhaus''s Most Abused Top Level Domains list][1].\n\n### Triage and Response\n1. Determine which instance is associated with the DNS request.\n2. Determine whether the domain name which was requested (`dns.question.name`) should be permitted. If not, conduct an investigation and determine what requested the domain and determine if the AWS metadata credentials were accessed by an attacker.\n\n[1]: https://www.spamhaus.org/statistics/tlds/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1603296605789,"filters":[],"queries":[{"distinctFields":[],"name":"suspicious_tld","aggregation":"count","groupByFields":["instance-id"],"query":"@dns.question.name:(*.fit. OR *.work. OR *.webcam. OR *.loan. OR *.cf.)","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"","condition":"suspicious_tld > 0"}],"type":"log_detection","id":"dus-bf6-3jr","isDefault":true,"name":"EC2 instance requested a suspicious domain"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an Azure network security group or an Azure network security rule has been created, modified, or deleted.\n\n## Strategy\n\nMonitor Azure activity logs and detect when the `@evt.name` is equal to any one of the following names:\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE`\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/DELETE`\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/WRITE` \n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/DELETE`\n\nand `@evt.outcome` is equal to `Success`.\n\n## Triage & Response\n\n1. Inspect the security group or security rule and determine if it exposes any Azure resources that should not be exposed.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1607106297216,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.network @evt.name:(\"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/WRITE\" OR \"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/DELETE\" OR \"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/DELETE\" OR \"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE\") @evt.outcome:Success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"mju-ynx-i1h","isDefault":true,"name":"Azure Network Security Groups or Rules Created, Modified, or Deleted"},{"creationAuthorId":0,"tags":["source:azure","security:threat-intel"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an Azure firewall threat intelligence alert is received.\n\n## Strategy\n\nMonitor Azure Network Diagnostic logs and detect when `@evt.name` is equal to `AzureFirewallThreatIntelLog`.\n\n## Triage & Response\n\n1. Inspect the threat intelligence log.\n2. Investigate the activity from this IP address.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1607106300940,"filters":[],"queries":[{"distinctFields":[],"name":"azure_firewall_threat_intel_alert","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:azure.network @evt.name:AzureFirewallThreatIntelLog","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"azure_firewall_threat_intel_alert > 0"}],"type":"log_detection","id":"z0v-yfr-qat","isDefault":true,"name":"Azure Firewall Threat Intelligence Alert"}]}'
    headers:
      Cache-Control:
      - no-cache
      Connection:
      - keep-alive
      Content-Disposition:
      - inline
      Content-Security-Policy:
      - frame-ancestors 'self'; report-uri https://api.datadoghq.com/csp-report
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Tue, 20 Apr 2021 14:58:36 GMT
      Pragma:
      - no-cache
      Strict-Transport-Security:
      - max-age=15724800;
      Vary:
      - Accept-Encoding
      X-Content-Type-Options:
      - nosniff
      X-Dd-Debug:
      - vdJ3/nHEY1ioXQ6pQrBVvsQK1s4yyc+wufBMPSoXql71qZVuP/xMdtNo6DafhOAk
      X-Dd-Version:
      - "35.4351940"
      X-Frame-Options:
      - SAMEORIGIN
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
      Dd-Operation-Id:
      - ListSecurityMonitoringRules
      User-Agent:
      - terraform-provider-datadog/dev (terraform 2.4.4; terraform-cli 0.14.7) datadog-api-client-go/1.0.0-beta.19 (go go1.16.3; os darwin; arch amd64)
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=1&page%5Bsize%5D=100
    method: GET
  response:
    body: '{"meta":{"page":{"total_filtered_count":21,"total_count":121}},"data":[{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an Azure policy assignment has been created.\n\n## Strategy\n\nMonitor Azure activity logs and detect when the `@evt.name` is equal to `MICROSOFT.AUTHORIZATION/POLICYASSIGNMENTS/WRITE` and `@evt.outcome` is equal to `Success`.\n\n## Triage && Response\n\n1. Inspect the policy assignment and determine if an unsolicited change was made on any Azure resources.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1607106302885,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:azure @evt.name:\"MICROSOFT.AUTHORIZATION/POLICYASSIGNMENTS/WRITE\" @evt.outcome:Success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"uvd-ets-ju9","isDefault":true,"name":"Azure Policy Assignment Created"},{"creationAuthorId":0,"tags":["source:azure","tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect and identify the network IP address when multiple user accounts have login attempt activities recorded.\n\n## Strategy\n\nMonitor Azure Active Directory and detect when any `@evt.category` is equal to `SignInLogs` and more than 1 of the `@evt.outcome` are equal to `false` and was initiated by the same network IP address.\n\nSecurity Signal returns **HIGH** if`@evt.outcome` has value of `success` after multiple failed logins were initiated by the same network IP address.\n\n## Triage & Response\n\n1. Inspect the log and determine if this was a valid login attempt.\n2. If the user was compromised, rotate user credentials.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1607106304164,"filters":[],"queries":[{"distinctFields":["@usr.id"],"name":"failed_login_multiple_user_accounts_same_ip_address","aggregation":"cardinality","groupByFields":["@network.client.ip"],"query":"source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:failure","trackType":"logs"},{"distinctFields":[],"name":"successful_login_after_multiple_failed_login_attemtps","aggregation":"count","groupByFields":["@network.client.ip"],"query":"source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:failure","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Successful login after multiple failed login attempts from the same network IP address","condition":"failed_login_multiple_user_accounts_same_ip_address > 1 && successful_login_after_multiple_failed_login_attemtps > 0"},{"status":"medium","notifications":[],"name":"Multiple failed login attempts from the same network IP address","condition":"failed_login_multiple_user_accounts_same_ip_address > 1 "}],"type":"log_detection","id":"igg-0ve-xxc","isDefault":true,"name":"Credential Stuffing Attack on Azure"},{"creationAuthorId":0,"tags":["source:azure","tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when a user is a victim of an Account Take Over (ATO) by a brute force attack.\n\n## Strategy\n\nMonitor Azure Active Directory Sign-in logs and detect when any `@evt.category` is equal to  `SignInLogs`, and `@evt.outcome` is equal to `failure`.\n\n## Triage & Response\n\n1. Inspect the log and determine if this was a valid login attempt.\n2. If the user was compromised, rotate user credentials.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":5,"createdAt":1607106309289,"filters":[],"queries":[{"distinctFields":[],"name":"failed_login","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:failure","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:failure","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Successful login","condition":"failed_login > 5 && successful_login > 0"},{"status":"info","notifications":[],"name":"Unsuccessful","condition":"failed_login > 5"}],"type":"log_detection","id":"y0f-vsz-xms","isDefault":true,"name":"Azure Portal brute force login"},{"creationAuthorId":0,"tags":["source:azure","tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect and identify the network IP address when multiple user accounts failed to complete the MFA process.\n\n## Strategy\n\nMonitor Azure Active Directory Sign-in logs and detect when any `@evt.category` is equal to `SignInLogs`, `@properties.authenticationRequirement` is equal to `multiFactorAuthentication` and `@evt.outcome` is equal to `failure`.\n\n## Triage & Response \n\n1. Inspect the log and determine if this was a valid login attempt.\n2. If the user was compromised, rotate user credentials.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":5,"createdAt":1607106317340,"filters":[],"queries":[{"distinctFields":["@usr.email"],"name":"failed_login_mfa_denied_w_multiple_user_accounts","aggregation":"cardinality","groupByFields":["@network.client.ip"],"query":"source:azure.activedirectory @evt.category:SignInLogs @properties.authenticationRequirement:multiFactorAuthentication @evt.outcome:failure","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Greater than 10 unique users","condition":"failed_login_mfa_denied_w_multiple_user_accounts > 10"},{"status":"low","notifications":[],"name":"Greater than 3 unique user","condition":"failed_login_mfa_denied_w_multiple_user_accounts > 3"}],"type":"log_detection","id":"zgm-z7i-mhu","isDefault":true,"name":"Azure Login Explicitly Denied MFA"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an Azure network security rule has been created, modified, or deleted.\n\n## Strategy\n\nMonitor Azure activity logs and detect when the `@evt.name` is equal to any of the following names:\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/WRITE` \n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/DELETE`\n\nand `@evt.outcome` is equal to `Success`.\n\n## Triage && Response\n\n1. Inspect the security rule and determine if it exposes any Azure resources that should not be made public.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1607106319051,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id"],"query":"source:azure.sql @evt.name:\"MICROSOFT.SQL/SERVERS/FIREWALLRULES/WRITE\" @evt.outcome:Success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"kbv-sau-dwv","isDefault":true,"name":"Azure SQL Server Firewall Rules Created or Modified"},{"creationAuthorId":0,"tags":["security:compliance","source:azure"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Goal\n\nDetect when an invitation is sent to an external user.\n\n## Strategy\n\nMonitor Azure Active Directory Audit logs and detect when any `@evt.name` is equal to `Invite external user` and the `@evt.outcome` is equal to `success`.\n\n## Triage & Response\n\n1. Review and determine if the invitation and its recipient are valid.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":4,"createdAt":1607106320758,"filters":[],"queries":[{"distinctFields":[],"name":"invite_external_user","aggregation":"count","groupByFields":["@usr.id","@properties.targetResources.userPrincipalName"],"query":"source:azure.activedirectory @evt.name:\"Invite external user\" @evt.outcome:success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"invite_external_user > 0"}],"type":"log_detection","id":"msq-9pm-ift","isDefault":true,"name":"Azure user invited an external user"},{"creationAuthorId":0,"tags":["source:okta"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user is denied access to an app.\n\n### Strategy\nThis rule lets you monitor the following Okta events to detect when a user is denied access to an app:\n\n* `app.generic.unauth_app_access_attempt`\n\n### Triage & Response\n1. Determine whether or not the user should have access to this app.\n2. Contact the user to determine whether they attempted to access this app or whether their account is compromised.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1607371843994,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.email","@target_app"],"query":"source:okta @evt.name:app.generic.unauth_app_access_attempt","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"rht-pdf-gyx","isDefault":true,"name":"Okta User Attempted to Access Unauthorized App"},{"creationAuthorId":0,"tags":["category:authentication","tactic:TA0006-credential-access","template:true","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect Account Take Over (ATO) through credential stuffing attack.\n\nA credential stuffing attack is used to gain initial access by compromising user accounts.\n\nThe attacker obtains a list of compromised usernames and passwords from a previous user database breach, phishing attempt, or other means. Then, they use the list of username and passwords to attempt to login to accounts on your application.\n\nIt is common for an attacker to use multiple IP addresses to target your application in order to distribute the attack load for load balancing purposes, to make it more difficult to detect, or make it more difficult to block.\n\n### Strategy\n**To determine a successful attempt:** Detect a high number of failed logins from at least 25 unique users and at least one successful login for a user within a period of time from the same IP address.\n\n**To determine an unsuccessful attempt:** Detect a high number of failed logins from at least ten unique users within a period of time from the same IP address.\n\n### Triage and response\n\nUse [this Datadog runbook](https://app.datadoghq.com/notebook/credentialstuffingrunbook) to assist in your investigation.\n\n1. Determine if it is a legitimate attack or a false positive\n2. Determine compromised users\n3. Remediate compromised user accounts\n","options":{"detectionMethod":"threshold","evaluationWindow":1800,"maxSignalDuration":86400,"keepAlive":3600},"version":2,"createdAt":1608750331867,"filters":[],"queries":[{"distinctFields":["@usr.id"],"name":"unique_users_failing_to_login","aggregation":"cardinality","groupByFields":["@network.client.ip"],"query":"@evt.category:authentication @evt.outcome:failure","trackType":"logs"},{"distinctFields":[],"name":"successful_login","aggregation":"count","groupByFields":["@network.client.ip"],"query":"@evt.category:authentication @evt.outcome:success","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Successful - Greater than 50","condition":"unique_users_failing_to_login>50 && successful_login>=1"},{"status":"medium","notifications":[],"name":"Successful","condition":"unique_users_failing_to_login>25 && successful_login>=1"},{"status":"info","notifications":[],"name":"Attempt","condition":"unique_users_failing_to_login>25"}],"type":"log_detection","id":"ypo-jbm-p2s","isDefault":true,"name":"Credential stuffing attack"},{"creationAuthorId":0,"tags":["source:microsoft-365"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user shares a Microsoft 365 Sharepoint document with a guest.\n\n### Strategy\nThis rule monitors the Microsoft 365 logs for the event name `SharingInvitationCreated` when the `TargetUserOrGroupType` is `Guest`.\n\n### Triage & Response\n1. Determine whether this document should be shared with the external user.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1608766365850,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@TargetUserOrGroupName","@ObjectId"],"query":"source:microsoft-365 service:SharePoint @evt.name:(SharingInvitationCreated) @TargetUserOrGroupType:Guest","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"v72-psu-eln","isDefault":true,"name":"Microsoft 365 SharePoint object shared with guest"},{"creationAuthorId":0,"tags":["source:microsoft-365"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user installs an app to Microsoft 365 Teams.\n\n### Strategy\nThis rule monitors the Microsoft 365 logs for the event name `AppInstalled`.\n\n### Triage & Response\n1. Determine whether this app should be installed to Microsoft 365 teams.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1608766367312,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@AddOnName"],"query":"source:microsoft-365 service:MicrosoftTeams @evt.name:AppInstalled","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"i03-grd-ppd","isDefault":true,"name":"Microsoft 365 Teams app installed"},{"creationAuthorId":0,"tags":["source:microsoft-365"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user creates an anonymous link for a Microsoft 365 document in OneDrive. This would allow any unauthenticated user to access this document, if they had the link.\n\n### Strategy\nThis rule monitors the Microsoft 365 logs for the event name `AnonymousLinkCreated`.\n\n### Triage & Response\n1. Determine whether this document should be available anonymously.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":3,"createdAt":1608766368930,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["@usr.id","@ObjectId"],"query":"source:microsoft-365 service:OneDrive @evt.name:AnonymousLinkCreated","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"y1h-h20-er6","isDefault":true,"name":"Microsoft 365 OneDrive Anonymous Link Created"},{"creationAuthorId":0,"tags":["tactic:TA0004-privilege-escalation","scope:ecs","source:cloudtrail","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect when a user executes a command on an ECS container for the first time. An attacker may use this as a technique to escalate their privileges\nbecause they can run arbitrary commands on behalf of the container with the role and permissions associated with the\ncontainer.\n\n### Strategy\nThis rule lets you monitor this CloudTrail API call to detect if a user is executing a command on an ECS container:\n\n* `ExecuteCommand`\n\n### Triage & Response\n1. Determine if the user should be executing a command on this container\n","options":{"detectionMethod":"new_value","evaluationWindow":0,"maxSignalDuration":0,"newValueOptions":{"learningDuration":1,"forgetAfter":28},"keepAlive":0},"version":5,"createdAt":1615916348842,"filters":[{"action":"suppress","query":"foo"},{"action":"require","query":"bar"}],"queries":[{"distinctFields":[],"name":"","metric":"@usr.account_id","aggregation":"new_value","groupByFields":["@userIdentity.arn"],"query":"source:cloudtrail @eventName:ExecuteCommand","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":["@me"],"name":""}],"type":"log_detection","id":"o2p-sbu-rlg","isDefault":true,"name":"Anomalous AWS user executed a command on ECS container"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617971626555,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestSearchSecurityMonitoringSignals-1617971626","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"uf5-sub-gvr","isDefault":false,"name":"Test-TestSearchSecurityMonitoringSignals-1617971626"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617971644219,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1617971644","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"5b2-kdc-3do","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1617971644"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617977693395,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestSearchSecurityMonitoringSignals-1617977693","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"pfs-wtb-6x6","isDefault":false,"name":"Test-TestSearchSecurityMonitoringSignals-1617977693"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617977738802,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1617977738","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"eai-snq-4vj","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1617977738"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617978059498,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1617978059","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"nvz-hsv-5ql","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1617978059"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1617978302186,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1617978301","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"cyp-scn-o3m","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1617978301"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"Test rule","options":{"detectionMethod":"threshold","evaluationWindow":900,"maxSignalDuration":86400,"keepAlive":3600},"version":1,"createdAt":1618083170620,"filters":[],"queries":[{"distinctFields":[],"name":"","metric":"","aggregation":"count","groupByFields":[],"query":"@test:true","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"","condition":"a > 0"}],"type":"log_detection","id":"bno-qku-kqu","isDefault":false,"name":"Test-Create_a_detection_rule_returns_OK_response-1618083170"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1618221021757,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestSearchSecurityMonitoringSignals-1618221021","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"tcl-onp-xbd","isDefault":false,"name":"Test-TestSearchSecurityMonitoringSignals-1618221021"},{"creationAuthorId":1445416,"tags":[],"isEnabled":true,"hasExtendedTitle":false,"message":"rule message","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":300,"keepAlive":300},"version":1,"createdAt":1618221039709,"filters":[{"action":"require","query":"env:prod"}],"queries":[{"distinctFields":[],"name":"rule","aggregation":"count","groupByFields":[],"query":"Test-TestListSecurityMonitoringSignals-1618221039","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"rule-case","condition":"rule > 0"}],"type":"log_detection","id":"jdo-kok-wpq","isDefault":false,"name":"Test-TestListSecurityMonitoringSignals-1618221039"}]}'
    headers:
      Cache-Control:
      - no-cache
      Connection:
      - keep-alive
      Content-Disposition:
      - inline
      Content-Security-Policy:
      - frame-ancestors 'self'; report-uri https://api.datadoghq.com/csp-report
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Tue, 20 Apr 2021 14:58:36 GMT
      Pragma:
      - no-cache
      Strict-Transport-Security:
      - max-age=15724800;
      Vary:
      - Accept-Encoding
      X-Content-Type-Options:
      - nosniff
      X-Dd-Debug:
      - F5gm0Rce1/Abr9/0Fw8HAqWfiz0FdiH8er/AXnN6lOn3L6KyGgbsLCwgPlob1No8
      X-Dd-Version:
      - "35.4351940"
      X-Frame-Options:
      - SAMEORIGIN
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
      Dd-Operation-Id:
      - ListSecurityMonitoringRules
      User-Agent:
      - terraform-provider-datadog/dev (terraform 2.4.4; terraform-cli 0.14.7) datadog-api-client-go/1.0.0-beta.19 (go go1.16.3; os darwin; arch amd64)
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=2&page%5Bsize%5D=100
    method: GET
  response:
    body: '{"meta":{"page":{"total_filtered_count":0,"total_count":121}},"data":[]}'
    headers:
      Cache-Control:
      - no-cache
      Connection:
      - keep-alive
      Content-Disposition:
      - inline
      Content-Security-Policy:
      - frame-ancestors 'self'; report-uri https://api.datadoghq.com/csp-report
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Tue, 20 Apr 2021 14:58:37 GMT
      Pragma:
      - no-cache
      Strict-Transport-Security:
      - max-age=15724800;
      Vary:
      - Accept-Encoding
      X-Content-Type-Options:
      - nosniff
      X-Dd-Debug:
      - tpRCH6w417YjBovRJ8VmtuXmNONVYiRp2c8d2AxjPdGBn8PCtgG4vAztrx3qUZAN
      X-Dd-Version:
      - "35.4351940"
      X-Frame-Options:
      - SAMEORIGIN
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
      Dd-Operation-Id:
      - GetSecurityMonitoringRule
      User-Agent:
      - terraform-provider-datadog/dev (terraform 2.4.4; terraform-cli 0.14.7) datadog-api-client-go/1.0.0-beta.19 (go go1.16.3; os darwin; arch amd64)
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules/vyl-ylc-3io
    method: GET
  response:
    body: '{"creationAuthorId":0,"tags":["scope:ec2","source:guardduty","tactic:TA0006-credential-access","technique:T1110-brute-force","security:attack"],"isEnabled":true,"hasExtendedTitle":true,"message":"### Goal\nDetect Brute Force Attacks\n\n### Strategy\nLeverage GuardDuty and detect when an attacker is performing a brute force attack. The following are GuardDuty findings trigger this signal:\n\n* [UnauthorizedAccess:EC2/SSHBruteForce][1]\n* [UnauthorizedAccess:EC2/RDPBruteForce][2]\n\n\n### Triage & Response\n1. Inspect the role of the EC2 instance in the attack. Find the role in the signal name - either `ACTOR` or `TARGET`.\n   * If you are the `TARGET` and the instance is available on the internet, expect to see IPs scanning your systems.\n   * If you are the `TARGET` and the instance is **not** available on the internet, this means a host on your internal network is scanning your EC2 instance. Open an investigation.\n   * If you are the `ACTOR`, this means that your instance is performing brute force attacks on other systems. Open an investigation.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized9\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized10","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":3600,"keepAlive":3600},"version":11,"createdAt":1585870284202,"filters":[],"queries":[{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/SSHBruteForce OR UnauthorizedAccess\\:EC2\\/RDPBruteForce) @detail.service.resourceRole:ACTOR","trackType":"logs"},{"distinctFields":[],"name":"","aggregation":"count","groupByFields":["instance-id"],"query":"source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/SSHBruteForce OR UnauthorizedAccess\\:EC2\\/RDPBruteForce) @detail.service.resourceRole:TARGET","trackType":"logs"}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"ACTOR","condition":"a > 0"},{"status":"info","notifications":[],"name":"TARGET","condition":"b > 0"}],"type":"log_detection","id":"vyl-ylc-3io","isDefault":true,"name":"AWS EC2 instance involved in brute force attack"}'
    headers:
      Cache-Control:
      - no-cache
      Connection:
      - keep-alive
      Content-Disposition:
      - inline
      Content-Security-Policy:
      - frame-ancestors 'self'; report-uri https://api.datadoghq.com/csp-report
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Tue, 20 Apr 2021 14:58:37 GMT
      Pragma:
      - no-cache
      Strict-Transport-Security:
      - max-age=15724800;
      Vary:
      - Accept-Encoding
      X-Content-Type-Options:
      - nosniff
      X-Dd-Debug:
      - L3ULR3HwCWYmEqCWGz2Yob3chcH4pjowBacBXkncP7o+/uPqKt9yGEYf/g1AJPzQ
      X-Dd-Version:
      - "35.4351940"
      X-Frame-Options:
      - SAMEORIGIN
    status: 200 OK
    code: 200
    duration: ""
