---
version: 1
interactions:
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=0&page%5Bsize%5D=100
    method: GET
  response:
    body: |
      {"meta":{"page":{"total_filtered_count":100,"total_count":152}},"data":[{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Controller-Manager","control:1.3.5","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAllow pods to verify the API server's serving certificate before establishing connections.\n\n## Rationale\n\nProcesses running within pods that need to contact the API server must verify the API server's serving certificate. Failing to do so could be a subject to man-in-the-middle attacks. Providing the root certificate for the API server's serving certificate to the controller manager with the `--root-ca-file` argument allows the controller manager to inject the trusted bundle into pods so that they can verify TLS connections to the API server.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--root-ca-file` argument exists and is set to a certificate bundle file containing the root certificate for the API server's serving certificate.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and set the `--root-ca-file` parameter to the certificate bundle file: `--root-ca-file=<path/to/file>`\n\n## Impact\n\nYou need to setup and maintain root certificate authority file.\n\n## Default value\n\nBy default, `--root-ca-file` is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-controller-manager/ ][1]\n2. [https://github.com/kubernetes/kubernetes/issues/11000][2]\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.                \n\n[1]: https://kubernetes.io/docs/admin/kube-controller-manager/ \n[2]: https://github.com/kubernetes/kubernetes/issues/11000\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.5","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"k7t-yxp-axc","createdAt":1599598174692,"name":"--root-ca-file argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:1.2.2","security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe Docker daemon requires access to the Docker socket which is, by default, owned by the user `root` and the group `docker`.\n\n## Rationale\n\nDocker allows you to share a directory between the Docker host and a guest container without limiting the access rights of the container. This means that you can start a container and map the `/` directory on your host to the container. The container is able to modify your host file system without any restrictions. This means that you could gain elevated privileges simply by being a member of the `docker` group and subsequently start a container which maps the root `/` directory on the host.\n\n\n## Audit\n\nRun the following command on the Docker host to see the members of the `docker` group, and ensure that only trusted users are members:\n\n```\ngetent group docker\n```\n\n## Remediation\n\nYou should remove any untrusted users from the `docker` group. Additionally, you should not create a mapping of sensitive directories from the host to container volumes.\n\n## Impact\n\nProvided the proceeding instructions are implemented, rights to build and execute containers as normal user would be restricted.\n\n## Default value\n\nNot Applicable\n\n## References\n\n1. [https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface]\n2. [https://www.andreas-jung.com/contents/on-docker-security-docker-group-considered-harmful]\n3. [http://www.projectatomic.io/blog/2015/08/why-we-dont-let-non-root-users-run-docker-in-centos-fedora-or-rhel/]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.                \n\n[1]: https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface \n[2]: https://www.andreas-jung.com/contents/on-docker-security-docker-group-considered-harmful \n[3]: http://www.projectatomic.io/blog/2015/08/why-we-dont-let-non-root-users-run-docker-in-centos-fedora-or-rhel/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.2","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"dev-mh8-u1i","createdAt":1599598174666,"name":"Only trusted users are allowed to control Docker daemon"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","control:2.6","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use automatically generated self-signed certificates for TLS connections between peers.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be accessible only by authenticated etcd peers in the etcd cluster. Hence, do not use self-signed certificates for authentication.\n\n## Audit\n\nThis recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable.\n\nRun the following command on the etcd server node: \n```\nps -ef | grep etcd\n```\nVerify that if the `--peer-auto-tls` argument exists, it is not set to `true`.\n\n## Remediation\n\nEdit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and either remove the `--peer-auto-tls` parameter or set it to false. \n\n```\n--peer-auto-tls=false\n```\n\n## Impact\n\nAll peers attempting to communicate with the etcd server will require a valid client certificate for authentication.\n\n## Default value\n\n*Note*: This recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable. By default, `--peer-auto-tls` argument is set to false.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][1]\n2. [https://kubernetes.io/docs/admin/etcd/ ][2]\n3. [https://coreos.com/etcd/docs/latest/op-guide/configuration.html#peer-auto-tls][3]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.4 Controlled Use of Administrative Privileges             \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/ \n[3]: https://coreos.com/etcd/docs/latest/op-guide/configuration.html#peer-auto-tls\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.6","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"l0y-lyz-foj","createdAt":1599598174666,"name":"--peer-auto-tls argument is not set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.14","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy using the `--restart` flag in the docker run command you can specify a restart policy for how a container should or should not be restarted on exit. You should choose the on-failure restart policy and limit the restart attempts to 5.\n\n## Rationale\n\nIf you indefinitely keep trying to start the container, it could possibly lead to a denial of service on the host. It could be an easy way to do a distributed denial of service attack especially if you have many containers on the same host. Additionally, ignoring the exit status of the container and always attempting to restart the container, leads to non-investigation of the root cause behind containers getting terminated. If a container gets terminated, you should investigate on the reason behind it instead of just attempting to restart it indefinitely. You should use the on-failure restart policy to limit the number of container restarts to a maximum of 5 attempts.\n\n## Audit\n\nExecute this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: RestartPolicyName={{ .HostConfig.RestartPolicy.Name }} MaximumRetryCount={{ .HostConfig.RestartPolicy.MaximumRetryCount }}'` \n\nIf this command returns `RestartPolicyName=always`, then the system is not configured optimally. If this command returns `RestartPolicyName=no` or just `RestartPolicyName=`, then restart policies are not being used and the container would never be restarted automatically. This may be a secure option, but it is not the best option from a usability standpoint. If this command returns `RestartPolicyName=on-failure`, then verify that the number of restart attempts is set to 5 or less by looking at `MaximumRetryCount`.\n\n## Remediation\n\nIf you wish a container to be automatically restarted, use `docker run --detach --restart=on-failure:5 nginx`\n\n## Impact\n\nIf this option is set, a container will only attempt to restart itself 5 times.\n\n## Default value\n\nBy default, containers are not configured with restart policies.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/run/#restart-policies-restart\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.14","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.14\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ycq-buv-pf8","createdAt":1599598174688,"name":"'on-failure' container restart policy is set to '5'"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","control:1.1.4","security:compliance","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the controller manager pod specification file ownership is set to root:root.\n\n## Rationale\n\nThe controller manager pod specification file controls various parameters that set the behavior of various components of the master node. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/manifests/kube-controller-manager.yaml\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/manifests/kube-controller-manager.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kube-controller-manager.yaml` file ownership is set to root:root.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-controller-manager\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.4","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"jwf-xdm-mi9","createdAt":1599599105053,"name":"Controller manager pod specification file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.31","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSetup TLS connection on the API server.\n\n## Rationale\n\nAPI server communication contains sensitive parameters that should remain encrypted in transit. Configure the API server to serve only HTTPS traffic. If `--client-ca-file` argument is set, any request presenting a client certificate signed by one of the authorities in the `client-ca-file` is authenticated with an identity corresponding to the CommonName of the client certificate.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--client-ca-file` argument exists and it is set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection on the apiserver. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the client certificate authority file: `--client-ca-file=<path/to/client-ca-file>`\n\n## Impact\n\nTLS and client certificate authentication must be configured for your Kubernetes cluster deployment.\n\n## Default value\n\nBy default, `--client-ca-file` argument is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. http://rootsquash.com/2016/05/10/securing-the-kubernetes-api/ \n3. https://github.com/kelseyhightower/docker-kubernetes-tls-guide\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.31","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.31\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"nad-eon-2rv","createdAt":1599599105054,"name":"--client-ca-file argument is set as appropriate (API server)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.27","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nValidate service account before validating token.\n\n## Rationale\n\nIf --service-account-lookup is not enabled, the apiserver only verifies that the authentication token is valid, and does not validate that the service account token mentioned in the request is actually present in etcd. This allows using a service account token even after the corresponding service account is deleted. This is an example of time of check to time of use security issue.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that if the `--service-account-lookup` argument exists it is set to `true`.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the below parameter. `--service-account-lookup=true` Alternatively, you can delete the `--service-account-lookup` parameter from this file so that the default takes effect.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `--service-account-lookup` argument is set to true.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://github.com/kubernetes/kubernetes/issues/24167 \n3. https://en.wikipedia.org/wiki/Time_of_check_to_time_of_use\n\n## CIS controls\n\nVersion 6 16 Account Monitoring and Control Account Monitoring and Control Version 7 16 Account Monitoring and Control Account Monitoring and Control\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.27","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.27\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ycp-ppm-trb","createdAt":1599599105043,"name":"--service-account-lookup argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.12","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable kubelet server certificate rotation.\n\n## Rationale\n\n`RotateKubeletServerCertificate` causes the kubelet to both request a serving certificate after bootstrapping its client credentials and rotate the certificate as its existing credentials expire. This automated periodic rotation ensures that the there are no downtimes due to expired certificates and thus addressing availability in the CIA security triad.\n\n*Note*: This recommendation only applies if you let kubelets get their certificates from the API server. In case your kubelet certificates come from an outside authority/tool (e.g. Vault) then you need to take care of rotation yourself.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that `RotateKubeletServerCertificate` argument exists and is set to `true`.\n\n## Remediation\n\nOn the master edit `/var/lib/kubelet/kubeadm-flags.env` and set the parameter `KUBELET_CERTIFICATE_ARGS --feature-gates=RotateKubeletServerCertificate=true` or as an alternative, and suggested as a last resort, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_CERTIFICATE_ARGS` variable:\n\n```\n--feature-gates=RotateKubeletServerCertificate=true\n```\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, kubelet server certificate rotation is disabled.\n\n## References\n\n1. https://github.com/kubernetes/kubernetes/pull/45059\n2. https://kubernetes.io/docs/admin/kubelet-tls-bootstrapping/#kubelet-configuration\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted.\n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n\n[1]: https://github.com/kubernetes/kubernetes/pull/45059\n[2]: https://kubernetes.io/docs/admin/kubelet-tls-bootstrapping/#kubelet-configuration\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.12","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"afr-qkp-94a","createdAt":1599599105048,"name":"RotateKubeletServerCertificate argument is set to true (Kubelet)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Docker-Daemon-Configuration","control:2.3","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe `iptables` firewall is used to set up, maintain, and inspect the tables of IP packet filter rules within the Linux kernel. The Docker daemon should be allowed to make changes to the `iptables` ruleset.\n\n## Rationale\n\nDocker will not make changes to your system `iptables` rules unless you allow it to do so. If you do allow this, Docker server will automatically make any required changes. You should let Docker make changes to `iptables` automatically in order to avoid networking misconfigurations that could affect the communication between containers and with the outside world. Additionally, this reduces the administrative overhead of updating `iptables` every time you add containers or modify networking options.\n\n## Audit\n\nTo confirm that the Docker daemon is allowed to change the `iptables` ruleset, review the `dockerd` startup options and the settings in `/etc/docker/daemon.json`. To review the `dockerd` startup options, run: \n```\nps -ef | grep dockerd \n```\nEnsure that the `--iptables` parameter is either not present or not set to `false`. Also review the `/etc/docker/daemon.json` file to check that the `iptables` setting is not set to `false`.\n\n## Remediation\n\nDo not run the Docker daemon with `--iptables=false` parameter. \n\n## Impact\n\nThe Docker daemon service requires `iptables` rules to be enabled before it starts. Any restarts of `iptables` during Docker daemon operation may result in losing Docker-created rules. Adding `iptables-persistent` to your `iptables` install can mitigate.\n\n## Default value\n\nBy default, `iptables` is set to true.\n\n## References\n\n1. [https://docs.docker.com/engine/userguide/networking/default_network/container-communication/][1]\n2. [https://fralef.me/docker-and-iptables.html][2]\n\n## CIS controls\n\nVersion 6.5 Controlled Use of Administration Privileges                \n\n[1]: https://docs.docker.com/engine/userguide/networking/default_network/container-communication/\n[2]: https://fralef.me/docker-and-iptables.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.3","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"3fv-xgy-7fb","createdAt":1599599453907,"name":"Docker is allowed to make changes to iptables"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.7","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that all the registry certificate files, usually found under the `/etc/docker/certs.d/<registry-name>` directory, are individually owned and group owned by root.\n\n## Rationale\n\nThe `/etc/docker/certs.d/<registry-name>` directory contains Docker registry certificates. These certificate files must be individually owned and group owned by root to ensure that less privileged users are unable to modify the contents of the directory.\n\n## Audit\n\nYou should execute the command below to verify that the registry certificate files are individually owned and group owned by root: \n\n```\nstat -c %U:%G /etc/docker/certs.d/* | grep -v root:root \n```\n\nThis command does not return any data.\n\n## Remediation\n\nExecute the following command: `chown root:root /etc/docker/certs.d/<registry-name>/*`\n\nThis sets the individual ownership and group ownership for the registry certificate files to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the individual ownership and group ownership for registry certificate files is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.7","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"fbv-qsy-urc","createdAt":1599599454050,"name":"Registry certificate file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.17","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `controller-manager.conf` file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe `controller-manager.conf` file is the kubeconfig file for the Controller Manager. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/controller-manager.conf\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/controller-manager.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `controller-manager.conf` has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-controller-manager/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.17","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.17\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"iss-afi-xfp","createdAt":1599599454121,"name":"controller-manager.conf file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.11","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not allow all requests.\n\n## Rationale\n\nSetting admission control plugin AlwaysAdmit allows all requests and do not filter any requests. The AlwaysAdmit admission controller was deprecated in Kubernetes v1.13. Its behavior was equivalent to turning off all admission controllers.\n\n## Audit\n\nRun the following command on the master node:\n\n```bash\nps -ef | grep kube-apiserver\n```\n\nVerify the `--enable-admission-plugins` argument's value (if set) does not include `AlwaysAdmit`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and either remove the --enable-admission-plugins parameter, or set it to a value that does not include AlwaysAdmit.\n\n## Impact\n\nOnly requests explicitly allowed by the admissions control plugins would be served.\n\n## Default value\n\nAlwaysAdmit is not in the list of default admission plugins.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#alwaysadmit\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.11","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ysr-4gg-vu5","createdAt":1599599454382,"name":"Admission control plugin AlwaysAdmit is not set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.6","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `kubelet.conf` file ownership is set to `root:root`.\n\n## Rationale\n\nThe `kubelet.conf` file is the kubeconfig file for the node, and controls various parameters that set the behavior and identity of the worker node. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %U:%G /etc/kubernetes/kubelet.conf`. Verify that the ownership is set to `root:root`.\n\n## Remediation\n\nRun this command (based on the file location on your system) on the each worker node. For example, `chown root:root /etc/kubernetes/kubelet.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kubelet.conf` file ownership is set to `root:root`.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.6","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mrc-waf-mbs","createdAt":1599599696342,"name":"kubelet.conf file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.16","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `scheduler.conf` file ownership is set to `root:root`.\n\n## Rationale\n\nThe `scheduler.conf` file is the kubeconfig file for the Scheduler. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/scheduler.conf\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/scheduler.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `scheduler.conf` file ownership is set to root:root.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kubeadm/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.16","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.16\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"pbp-y4b-dhf","createdAt":1599600185878,"name":"scheduler.conf file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.2","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not allow all requests. Enable explicit authorization.\n\n## Rationale\n\nKubelets, by default, allow all authenticated requests (even anonymous ones) without needing explicit authorization checks from the API server. You should restrict this behavior and only allow explicitly authorized requests.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. If the `--authorization-mode` argument is present check that it is not set to AlwaysAllow. If it is not present check that there is a Kubelet config file specified by `--config`, and that file sets authorization: mode to something other than AlwaysAllow. It is also possible to review the running configuration of a Kubelet via the /configs endpoint on the Kubelet API port (typically `10250/TCP`). Accessing these with appropriate credentials will provide details of the Kubelet's configuration.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set authorization: mode to Webhook. If using executable arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_AUTHZ_ARGS` variable.\n\n`--authorization-mode=Webhook`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nUnauthorized requests will be denied.\n\n## Default value\n\nBy default, `--authorization-mode` argument is set to `AlwaysAllow`.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authentication][2]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\nVersion 7.14 Controlled Access Based on the Need to Know\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authentication\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.2","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"un4-gin-3dq","createdAt":1599600248005,"name":"--authorization-mode argument is not set to AlwaysAllow (Kubelet)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.8","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `/etc/kubernetes/manifests/etcd.yaml` file ownership is set to `root:root`.\n\n## Rationale\n\nThe etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` controls various parameters that set the behavior of the etcd service in the master node. etcd is a highly-available key-value store which Kubernetes uses for persistent storage of all of its REST API object. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/manifests/etcd.yaml\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/manifests/etcd.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `/etc/kubernetes/manifests/etcd.yaml` file ownership is set to root:root.\n\n## References\n\n1. https://coreos.com/etcd\n2. https://kubernetes.io/docs/admin/etcd/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.8","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oac-lbl-npz","createdAt":1599600311388,"name":"etcd pod specification file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.3","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable Kubelet authentication using certificates.\n\n## Rationale\n\nThe connections from the API server to the kubelet are used for fetching logs for pods, attaching (through kubectl) to running pods, and using the kubelet's port-forwarding functionality. These connections terminate at the kubelet's HTTPS endpoint. By default, the API server does not verify the kubelet's serving certificate, which makes the connection subject to man-in-the-middle attacks, and unsafe to run over untrusted and/or public networks. Enabling Kubelet certificate authentication ensures that the API server could authenticate the Kubelet before submitting any requests.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--client-ca-file` argument exists and is set to the location of the client certificate authority file. If the `--client-ca-file` argument is not present, check that there is a Kubelet config file specified by `--config`, and that the file sets authentication: x509: clientCAFile to the location of the client certificate authority file.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `authentication: x509: clientCAFile` to the location of the client CA file. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_AUTHZ_ARGS` variable.\n\n`--client-ca-file=<path/to/client-ca-file>`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nYou require TLS to be configured on API server as well as kubelets.\n\n## Default value\n\nBy default, `--client-ca-file argument` is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-authentication-authorization/][2]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted.\n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-authentication-authorization/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.3","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"x6l-4d1-dwh","createdAt":1599600373842,"name":"--client-ca-file argument is set as appropriate (Kubelet)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Pod-Security-Policies","control:5.2.3","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not generally permit containers to be run with the hostIPC flag set to true.\n\n## Rationale\n\nA container running in the host's IPC namespace can use IPC to interact with processes outside the container. There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to share the host IPC namespace. If you have a requirement to containers that require hostIPC, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n## Audit\n\nGet the set of PSPs with the following command: `kubectl get psp`\n\nFor each PSP, check whether privileged is enabled: `kubectl get psp <name> -o=jsonpath='{.spec.hostIPC}'`\n\nVerify that there is at least one PSP which does not return true.\n\n## Remediation\n\nCreate a PSP as described in the Kubernetes documentation, ensuring that the .spec.hostIPC field is omitted or set to false.\n\n## Impact\n\nPods defined with spec.hostIPC: true will not be permitted unless they are run under a specific PSP.\n\n## Default value\n\nBy default, PodSecurityPolicies are not defined.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/policy/pod-security-policy][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://kubernetes.io/docs/concepts/policy/pod-security-policy\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.2.3","framework":"cis-kubernetes","requirement":"Pod-Security-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vs4-ja0-gkh","createdAt":1599600435891,"name":"Minimize the admission of containers wishing to share the host IPC namespace"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","control:5.1","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAppArmor is an effective and easy-to-use Linux application security system. It is available on some Linux distributions by default, for example, on Debian and Ubuntu.\n\n## Rationale\n\nAppArmor protects the Linux OS and applications from various threats by enforcing a security policy which is also known as an AppArmor profile. You can create your own AppArmor profile for containers or use Docker's default profile. Enabling this feature enforces security policies on containers as defined in the profile.\n\n## Audit\n\nYou should run this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: AppArmorProfile={{ .AppArmorProfile }}'` \n\nThis command returns a valid AppArmor Profile for each container instance.\n\n## Remediation\n\nIf AppArmor is applicable for your Linux OS, enable it.\n\n1. Verify AppArmor is installed.\n2. Create or import a AppArmor profile for Docker containers.\n3. Enable enforcement of the policy.\n4. Start your Docker container using the customized AppArmor profile. For example: `docker run --interactive --tty --security-opt=\"apparmor:PROFILENAME\" ubuntu /bin/bash` Alternatively, Docker's default AppArmor policy can be used.\n\n## Impact\n\nThe container will have the security controls defined in the AppArmor profile. It should be noted that if the AppArmor profile is misconfigured, this may cause issues with the operation of the container.\n\n## Default value\n\nBy default, the docker-default AppArmor profile is applied to running containers. This profile can be found at `/etc/apparmor.d/docker`\n\n## References\n\n1. https://docs.docker.com/engine/security/apparmor/\n2. https://docs.docker.com/engine/reference/run/#security-configuration\n3. https://docs.docker.com/engine/security/security/#other-kernel-security-features\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.1","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"s4z-dsj-llz","createdAt":1599600498264,"name":"An AppArmor Profile is enabled"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Pod-Security-Policies","control:5.2.2","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not generally permit containers to be run with the hostPID flag set to true.\n\n## Rationale\n\nA container running in the host's PID namespace can inspect processes running outside the container. If the container also has access to ptrace capabilities this can be used to escalate privileges outside of the container. There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to share the host PID namespace. If you need to run containers which require hostPID, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n## Audit\n\nGet the set of PSPs with the following command: `kubectl get psp`\n\nFor each PSP, check whether privileged is enabled: `kubectl get psp <name> -o=jsonpath='{.spec.hostPID}'`\n\nVerify that there is at least one PSP which does not return true.\n\n## Remediation\n\nCreate a PSP as described in the Kubernetes documentation, ensuring that the `.spec.hostPID` field is omitted or set to false.\n\n## Impact\n\nPods defined with spec.hostPID: true will not be permitted unless they are run under a specific PSP.\n\n## Default value\n\nBy default, PodSecurityPolicies are not defined.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/policy/pod-security-policy][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://kubernetes.io/docs/concepts/policy/pod-security-policy\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.2.2","framework":"cis-kubernetes","requirement":"Pod-Security-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"flc-1s1-okw","createdAt":1599600559953,"name":"Minimize the admission of containers wishing to share the host process ID namespace"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.7","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the certificate authorities file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe certificate authorities file controls the authorities used to validate API requests. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command: `ps -ef | grep kubelet`. Find the file specified by the `--client-ca-file` argument. Run the following command: `stat -c %a <filename>`. Verify that the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the following command to modify the file permissions of the `--client-ca-file`:\n\n```\nchmod 644 <filename>\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default no `--client-ca-file` is specified.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/authentication/#x509-client-certs][1]\n\n## CIS controls\n\nVersion 6 5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7 14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\n[1]: https://kubernetes.io/docs/admin/authentication/#x509-client-certs\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.7","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qtd-deo-dgb","createdAt":1599600622129,"name":"Certificate authorities file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.3.4","requirement:Controller-Manager","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nExplicitly set a service account private key file for service accounts on the controller manager.\n\n## Rationale\n\nTo ensure that keys for service account tokens can be rotated as needed, a separate public/private key pair should be used for signing service account tokens. The private key should be specified to the controller manager with `--service-account-private-key-file` as appropriate.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--service-account-private-key-file` argument is set as appropriate.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and set the `--service-account-private-key-file parameter` to the private key file for service accounts:\n\n```\n--service-account-private-key-file=<filename>\n```\n\n## Impact\n\nYou would need to securely maintain the key file and rotate the keys based on your organization's key rotation policy.\n\n## Default value\n\nBy default, `--service-account-private-key-file` it not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-controller-manager/][1]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.4 Controlled Use of Administrative Privileges          \n\n[1]: https://kubernetes.io/docs/admin/kube-controller-manager/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.4","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mj1-ode-sln","createdAt":1599600796213,"name":"--service-account-private-key-file argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","control:1.2.7","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `docker.socket`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges, it is very important to audit its activities and usage. Its behavior depends on some key files and directories, including the `docker.socket` file, which holds various parameters for the Docker daemon, it should be audited.\n\n## Audit\n\n1. Locate the `docker.socket` file by running: \n    ```\n    systemctl show -p FragmentPath docker.socket \n    ```\n2. If the file does not exist, this recommendation is not applicable. If the `docker.socket` file exists, verify that there is an audit rule corresponding to the `docker.socket` file by running: \n    ```\n    auditctl -l | grep docker.socket \n    ```\n\n## Remediation\n\nIf the file exists, you should add a rule for it. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /usr/lib/systemd/system/docker.socket -k docker \n```\n\nThen restart the audit daemon: \n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `docker.socket` may not be present, but if it is, it should be audited.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.7","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"afg-qbt-7uw","createdAt":1599600857858,"name":"docker.socket auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.15","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe Process ID (PID) namespace isolates the process ID space, meaning that processes in different PID namespaces can have the same PID. This creates process level isolation between the containers and the host.\n\n## Rationale\n\nPID namespace provides separation between processes. It prevents system processes from being visible, and allows process ids to be reused including PID 1. If the host's PID namespace is shared with containers, it would basically allow these to see all of the processes on the host system. This reduces the benefit of process level isolation between the host and the containers. Under these circumstances a malicious user who has access to a container could get access to processes on the host itself, manipulate them, and even be able to kill them. This could allow for the host itself being shut down, which could be extremely serious, particularly in a multi-tenanted environment. You should not share the host's process namespace with the containers running on it.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: PidMode={{ .HostConfig.PidMode }}'` \n\nIf the command returns `host`, it means that the host PID namespace is shared with its containers; any other result means that the system is configured in line with good security practice.\n\n## Remediation\n\nYou should not start a container with the `--pid=host` argument. For example, do not start a container with the command: `docker run --interactive --tty --pid=host centos /bin/bash`\n\n## Impact\n\nContainer processes cannot see processes on the host system. In certain circumstances, you may want your container to share the host's process namespace. For example, you could build a container containing debugging tools such as strace or gdb, and want to use these tools when debugging processes on the host. If this is desired, then share specific host processes using the `-p` switch. For example: `docker run --pid=host rhel7 strace -p 1234`\n\n## Default value\n\nBy default, all containers have the PID namespace enabled and the therefore the host's process namespace is not shared with its containers.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#pid-settings-pid 2. http://man7.org/linux/man-pages/man7/pid_namespaces.7.html\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.15","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.15\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mk8-jwd-4ag","createdAt":1599600919537,"name":"Host's process namespace is not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.4","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUse https for kubelet connections.\n\n## Rationale\n\nConnections from apiserver to kubelets could potentially carry sensitive data such as secrets and keys. It is thus important to use in-transit encryption for any communication between the apiserver and kubelets.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--kubelet-https` argument either does not exist or is set to `true`.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and remove the `--kubelet-https` parameter.\n\n## Impact\n\nYou require TLS to be configured on apiserver as well as kubelets.\n\n## Default value\n\nBy default, kubelet connections are over https.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-apiserver/ ][1]\n2. [https://kubernetes.io/docs/admin/kubelet-authentication-authorization/][2]\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.                \n\n[1]: https://kubernetes.io/docs/admin/kube-apiserver/ \n[2]: https://kubernetes.io/docs/admin/kubelet-authentication-authorization/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.4","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"critical","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ftg-h4g-hqj","createdAt":1599600981186,"name":"--kubelet-https argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:2.5","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use `aufs` as the storage driver for your Docker instance.\n\n## Rationale\n\nThe `aufs` storage driver is the oldest storage driver used on Linux systems. It is based on a Linux kernel patch-set that is unlikely in future to be merged into the main OS kernel. The `aufs` driver is also known to cause some serious kernel crashes. `aufs` has only legacy support within systems using Docker. Most importantly, `aufs` is not a supported driver in many Linux distributions using latest Linux kernels.\n\n## Audit\n\nVerify that `aufs` is not used as storage driver by running this command and ensuring `aufs` is not listed: \n```\ndocker info --format 'Storage Driver: {{ .Driver }}' \n```\n\n## Remediation\n\nDo not explicitly use `aufs` as storage driver. For example, do not start Docker daemon with the `--storage-driver aufs` flag.\n\n## Impact\n\n`aufs` is the only storage driver that allows containers to share executable and shared library memory. It might be useful if you are running thousands of containers with the same program or libraries. However, you should review its use with respect to your organization's security policy.\n\n## Default value\n\nBy default, Docker uses `devicemapper` as the storage driver on most of the platforms. The default storage driver can vary based on your OS vendor. You should use the storage driver that is recommended by your preferred vendor and which is in line with policy around the applications which are being deployed.\n\n## References\n\n1. [https://docs.docker.com/engine/userguide/storagedriver/selectadriver/#supported-backing-filesystems][1]\n2. [http://muehe.org/posts/switching-docker-from-aufs-to-devicemapper/][2]\n3. [http://jpetazzo.github.io/assets/2015-03-05-deep-dive-into-docker-storage-drivers.html#1][3]\n4. [https://docs.docker.com/engine/userguide/storagedriver/][4]\n\n## CIS controls\n\nVersion 6.18 Application Software Security                \n\n[1]: https://docs.docker.com/engine/userguide/storagedriver/selectadriver/#supported-backing-filesystems \n[2]: http://muehe.org/posts/switching-docker-from-aufs-to-devicemapper/ \n[3]: http://jpetazzo.github.io/assets/2015-03-05-deep-dive-into-docker-storage-drivers.html#1 \n[4]: https://docs.docker.com/engine/userguide/storagedriver/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.5","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"n0x-jqo-rof","createdAt":1599601042737,"name":"aufs storage driver is not used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.22","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable auditing on the Kubernetes API Server and set the desired audit log path.\n\n## Rationale\n\nAuditing the Kubernetes API Server provides a security-relevant chronological set of records documenting the sequence of activities that have affected system by individual users, administrators or other components of the system. Even though currently, Kubernetes provides only basic audit capabilities, it should be enabled. You can enable it by setting an appropriate audit log path.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-log-path` argument is set as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --audit-log-path parameter to a suitable path and file where you would like audit logs to be written, for example: --audit-log-path=/var/log/apiserver/audit.log\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, auditing is not enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/concepts/cluster-administration/audit/ 3. https://github.com/kubernetes/features/issues/22\n\n## CIS controls\n\nVersion 6 6.2 Ensure Audit Log Settings Support Appropriate Log Entry Formatting Validate audit log settings for each hardware device and the software installed on it, ensuring that logs include a date, timestamp, source addresses, destination addresses, and various other useful elements of each packet and/or transaction. Systems should record logs in a standardized format such as syslog entries or those outlined by the Common Event Expression initiative. If systems cannot generate logs in a standardized format, log normalization tools can be deployed to convert logs into such a format. Version 7 6.2 Activate audit logging Ensure that local logging has been enabled on all systems and networking devices. 6.3 Enable Detailed Logging Enable system logging to include detailed information such as an event source, date, user, timestamp, source addresses, destination addresses, and other useful elements.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.22","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.22\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"fny-sti-0dk","createdAt":1599601104396,"name":"--audit-log-path argument is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.17","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nLimit the Node and Pod objects that a kubelet could modify.\n\n## Rationale\n\nUsing the NodeRestriction plug-in ensures that the kubelet is restricted to the Node and Pod objects that it could modify as defined. Such kubelets will only be allowed to modify their own Node API object, and only modify Pod API objects that are bound to their node.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--enable-admission-plugins` argument is set to a value that includes `NodeRestriction`.\n\n## Remediation\n\nFollow the Kubernetes documentation and configure NodeRestriction plug-in on kubelets. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --enable-admission-plugins parameter to a value that includes NodeRestriction. --enable-admission-plugins=...,NodeRestriction,...\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, NodeRestriction is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#noderestriction 3. https://kubernetes.io/docs/admin/authorization/node/ 4. https://acotten.com/post/kube17-security\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.17","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.17\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"jre-tn7-yma","createdAt":1599601166101,"name":"Admission control plugin NodeRestriction is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.1","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the API server pod specification file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe API server pod specification file controls various parameters that set the behavior of the API server. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node:\n\n```bash\nstat -c %a /etc/kubernetes/manifests/kube-apiserver.yaml\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/manifests/kube-apiserver.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `kube-apiserver.yaml` file has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.1","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"8tj-q6g-eyj","createdAt":1599601227733,"name":"API server pod specification file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.21","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/sysconfig/docker` file permissions are correctly set to 644 or more restrictively.\n\n## Rationale\n\nThe `/etc/sysconfig/docker` file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be writeable only by root in order to ensure that it is not modified by less privileged users.\n\n## Audit\n\nVerify that the `/etc/sysconfig/docker` file permissions are set to `644` or more restrictive, by running: \n```\nstat -c %a /etc/sysconfig/docker\n```\n\n## Remediation\n\nRun the following command: `chmod 644 /etc/sysconfig/docker`\n\nThis sets the file permissions for this file to 644.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system and in this case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/admin/configuring/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.21","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.21\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"au3-ayl-tdm","createdAt":1599601289420,"name":"/etc/sysconfig/docker file permissions are set to 644 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.4.2","requirement:Scheduler","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not bind the scheduler service to non-loopback insecure addresses.\n\n## Rationale\n\nThe Scheduler API service which runs on port 10251/TCP by default is used for health and metrics information and is available without authentication or encryption. As such it should only be bound to a localhost interface, to minimize the cluster's attack surface\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-scheduler\n```\nVerify that the `--bind-address` argument is set to `127.0.0.1`.\n\n## Remediation\n\nEdit the Scheduler pod specification file `/etc/kubernetes/manifests/kube-scheduler.yaml` on the master node and ensure the correct value for the `--bind-address` parameter.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `--bind-address` parameter is set to `0.0.0.0`.\n\n## References\n\n1. [https://kubernetes.io/docs/reference/command-line-tools-reference/kube-scheduler/][1]\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.                \n\n[1]: https://kubernetes.io/docs/reference/command-line-tools-reference/kube-scheduler/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.4.2","framework":"cis-kubernetes","requirement":"Scheduler","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.4.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"g1h-91b-y2x","createdAt":1599601351149,"name":"--bind-address argument is set to 127.0.0.1 (Scheduler)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.11","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the etcd data directory has permissions of 700 or more restrictive.\n\n## Rationale\n\netcd is a highly-available key-value store used by Kubernetes deployments for persistent storage of all of its REST API objects. This data directory should be protected from any unauthorized reads or writes. It should not be readable or writable by any group members or the world.\n\n## Audit\n\nOn the etcd server node, get the etcd data directory passed as an argument `--data-dir`, from the command:\n\n```bash\nps -ef | grep etcd\n```\n\n Based on the etcd data directory found above, run the command:\n \n ```bash\n stat -c %a /var/lib/etcd\n ```\n \n Verify the permissions are `700` or more restrictive.\n\n## Remediation\n\nOn the etcd server node, get the etcd data directory, passed as an argument `--data-dir`, from the below command: `ps -ef | grep etcd`\n\nRun the command (based on the etcd data directory found above): `chmod 700 /var/lib/etcd`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, etcd data directory has permissions of 755.\n\n## References\n\n1. https://coreos.com/etcd/docs/latest/op-guide/configuration.html#data-dir\n2. https://kubernetes.io/docs/admin/etcd/\n\n## CIS controls\n\nVersion 6\n\n14 Controlled Access Based on the Need to Know\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.11","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qgj-hf0-an1","createdAt":1599601412710,"name":"etcd data directory permissions are set to 700 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.10","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/etc/docker/daemon.json`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `/etc/docker/daemon.json`. This holds various parameters for the Docker daemon, and so it should be audited.\n\n## Audit\n\nVerify that there is an audit rule associated with the `/etc/docker/daemon.json` file. To display the rule for the `/etc/docker/daemon.json` file, run: \n\n```\nauditctl -l | grep /etc/docker/daemon.json\n```\n\n## Remediation\n\nYou should add a rule for the `/etc/docker/daemon.json` file. For example, add the following line to the `/etc/audit/audit.rules` file: \n\n```\n-w /etc/docker/daemon.json -k docker \n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `/etc/docker/daemon.json` may not exist on the system and in that case, this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n2. [https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file][2]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html \n[2]: https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.10","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"v2o-aio-i0e","createdAt":1599601474412,"name":"/etc/docker/daemon.json auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent","control:3.1"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the docker.service file ownership and group ownership are correctly set to root.\n\n## Rationale\n\nThe docker.service file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be individually and group owned by the root user in order to ensure that it is not modified or corrupted by a less privileged user.\n\n## Audit\n\n1. Locate the `docker.service` file by running: \n    ```\n    systemctl show -p FragmentPath docker.service \n    ```\n2. If the file does not exist, this recommendation is not applicable. If the file exists, verify that it is owned and group-owned by root, by running the following command with the correct filepath:\n    ```\n    stat -c %U:%G /usr/lib/systemd/system/docker.service | grep -v root:root \n    ```\n    The command should not return anything.\n\n## Remediation\n\n1. Find out the file location: `systemctl show -p FragmentPath docker.service`\n2. If the file does not exist, this recommendation is not applicable. If the file does exist, you should execute the command below, including the correct file path, in order to set the ownership and group ownership for the file to root.\n\nFor example, `chown root:root /usr/lib/systemd/system/docker.service`\n\n## Impact\n\nNone.\n\n## Default value\n\nThis file may not be present on the system and if it is not, this recommendation is not applicable. By default, if the file is present, the correct permissions are for the ownership and group ownership to be set to \"root\".\n\n## References\n\n1. https://docs.docker.com/engine/admin/systemd/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.1","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mhz-jes-n2m","createdAt":1599601536215,"name":"docker.service file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.14","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAutomate service accounts management.\n\n## Rationale\n\nWhen you create a pod, if you do not specify a service account, it is automatically assigned the default service account in the same namespace. You should create your own service account and let the API server manage its security tokens.\n\n## Audit\n\nRun the following command on the master node:\n\n```bash\nps -ef | grep kube-apiserver\n```\n\nVerify the `--disable-admission-plugins` argument is set to a value that does not include `ServiceAccount`.\n\n## Remediation\n\nFollow the documentation and create ServiceAccount objects as per your environment. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and ensure that the --disable-admission-plugins parameter is set to a value that does not include ServiceAccount.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, ServiceAccount is set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#serviceaccount 3. https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n\n## CIS controls\n\nVersion 6 16 Account Monitoring and Control Account Monitoring and Control Version 7 16 Account Monitoring and Control Account Monitoring and Control\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.14","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.14\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"wrk-jrm-u8h","createdAt":1599601597784,"name":"Admission control plugin ServiceAccount is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent","control:1.2.8"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/etc/default/docker`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `/etc/default/docker`. It holds various parameters related to the Docker daemon and should therefore be audited.\n\n## Audit\n\nVerify that there is an audit rule associated with the `/etc/default/docker` file. To see the rule for the `/etc/default/docker` file, run: \n```\nauditctl -l | grep /etc/default/docker \n```\n\n## Remediation\n\nYou should add a rule for the `/etc/default/docker` file. For example, add the following line to the `/etc/audit/audit.rules` file: \n\n```\n-w /etc/default/docker -k docker \n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited so these defaults should be changed in line with organizational security policy. The file `/etc/default/docker` may not be present, and if so, this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7 14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.8","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qfi-cgy-a6e","createdAt":1599601659531,"name":"/etc/default/docker auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.2","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the docker.service file permissions are either set to 644 or to a more restrictive value.\n\n## Rationale\n\nThe docker.service file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore not be writable by any other user other than root in order to ensure that it can not be modified by less privileged users.\n\n## Audit\n\n1. Locate the `docker.service` file by running: \n    ```\n    systemctl show -p FragmentPath docker.service\n    ```\n2. If the file does not exist, this recommendation is not applicable. If the file exists, verify that the file permissions are set to `644` or a more restrictive value by running the following command with the correct filepath:\n    ```\n    stat -c %a /usr/lib/systemd/system/docker.service\n    ```\n\n## Remediation\n\n1. Find out the file location: `systemctl show -p FragmentPath docker.service`\n2. If the file does not exist, this recommendation is not applicable. If the file exists, execute the command below including the correct file path to set the file permissions to 644. For example, `chmod 644 /usr/lib/systemd/system/docker.service`\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system. In that case, this recommendation is not applicable. By default, if the file is present, the file permissions are correctly set to 644.\n\n## References\n\n1. https://docs.docker.com/articles/systemd/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.2","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"zyv-o6s-69z","createdAt":1599601721176,"name":"docker.service file permissions are appropriately set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Pod-Security-Policies","control:5.2.5","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not generally permit containers to be run with the allowPrivilegeEscalation flag set to true.\n\n## Rationale\n\nA container running with the `allowPrivilegeEscalation` flag set to true may have processes that can gain more privileges than their parent. There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to allow privilege escalation. The option exists (and is defaulted to true) to permit setuid binaries to run. If you have need to run containers that use setuid binaries or require privilege escalation, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n## Audit\n\nGet the set of PSPs with the following command: `kubectl get psp`\n\nFor each PSP, check whether privileged is enabled: `kubectl get psp <name> -o=jsonpath='{.spec.allowPrivilegeEscalation}'`\n\nVerify that there is at least one PSP which does not return true.\n\n## Remediation\n\nCreate a PSP as described in the Kubernetes documentation, ensuring that the `.spec.allowPrivilegeEscalation` field is omitted or set to false.\n\n## Impact\n\nPods defined with `spec.allowPrivilegeEscalation: true` will not be permitted unless they are run under a specific PSP.\n\n## Default value\n\nBy default, PodSecurityPolicies are not defined.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/policy/pod-security-policy][1]\n\n## CIS controls\n\nVersion 6 5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://kubernetes.io/docs/concepts/policy/pod-security-policy\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.2.5","framework":"cis-kubernetes","requirement":"Pod-Security-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"frf-hog-dra","createdAt":1599601783271,"name":"Minimize the admission of containers with allowPrivilegeEscalation"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.22","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/default/docker` file permissions are correctly set to 644 or more restrictively.\n\n## Rationale\n\nThe `/etc/default/docker` file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be writeable only by root in order to ensure that it is not modified by less privileged users.\n\n## Audit\n\nVerify that the `/etc/default/docker` file permissions are set to `644` or more restrictively, by running: \n```\nstat -c %a /etc/default/docker\n```\n\n## Remediation\n\nRun the following command: `chmod 644 /etc/default/docker`\n\nThis sets the file permissions for this file to 644.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system and in this case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/admin/configuring/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.22","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.22\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"pqb-2cq-piw","createdAt":1599601845070,"name":"/etc/default/docker file permissions are set to 644 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.24","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIt is possible to attach to a particular `cgroup` when a container is instantiated. Confirming `cgroup` usage would ensure that containers are running in defined `cgroup`s.\n\n## Rationale\n\nSystem administrators typically define `cgroup`s in which containers are supposed to run. If `cgroup`s are not explicitly defined by the system administrator, containers run in the docker `cgroup` by default. At run time, it is possible to attach a container to a different `cgroup` other than the one originally defined. This usage should be monitored and confirmed, as by attaching to a different `cgroup`, excess permissions and resources might be granted to the container and this can therefore prove to be a security risk.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CgroupParent={{ .HostConfig.CgroupParent }}'` \n\nThis command returns the cgroup where the containers are running. If it is blank, it means that containers are running under the default docker cgroup. Any other return value indicates that the system is not configured in line with good security practice.\n\n## Remediation\n\nYou should not use the `--cgroup-parent` option within the docker run command unless strictly required.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, containers run under docker `cgroup`.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#specify-custom-cgroups\n2. https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Resource_Management_Guide/ch01.html\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n\n## Audit\n\nYou should run the following command: docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CgroupParent={{ .HostConfig.CgroupParent }}' The above command returns the cgroup where the containers are running. If it is blank, it means that containers are running under the default docker cgroup. Any other return value indicates that the system is not configured in line with good security practice.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.24","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.24\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"maa-bf8-zan","createdAt":1599601906764,"name":"cgroup usage is confirmed"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.12","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the etcd data directory ownership is set to `etcd:etcd`.\n\n## Rationale\n\n`etcd` is a highly-available key-value store used by Kubernetes deployments for persistent storage of all of its REST API objects. This data directory should be protected from any unauthorized reads or writes. It should be owned by `etcd:etcd`.\n\n## Audit\n\nOn the etcd server node, get the etcd data directory passed as an argument `--data-dir` from the command:\n\n```bash\nps -ef | grep etcd\n```\n\nBased on the etcd data directory found above, run the command:\n\n```bash\nstat -c %U:%G /var/lib/etcd\n```\n\nVerify the ownership is set to `etcd:etcd`.\n\n## Remediation\n\nOn the etcd server node, get the etcd data directory, passed as an argument `--data-dir`, from the below command: `ps -ef | grep etcd`\n\nRun the command (based on the etcd data directory found above): `chown etcd:etcd /var/lib/etcd`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, etcd data directory ownership is set to `etcd:etcd`.\n\n## References\n\n1. https://coreos.com/etcd/docs/latest/op-guide/configuration.html#data-dir\n2. https://kubernetes.io/docs/admin/etcd/\n\n## CIS controls\n\nVersion 6\n\n14 Controlled Access Based on the Need to Know\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.12","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"25d-zal-sfr","createdAt":1599601968321,"name":"etcd data directory ownership is set to etcd:etcd"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.5","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not disable timeouts on streaming connections.\n\n## Rationale\n\nSetting idle timeouts ensures that you are protected against denial-of-service attacks, inactive connections, and running out of ephemeral ports.\n\n*Note*: By default, `--streaming-connection-idle-timeout` is set to four hours, which might be too high for your environment. Setting this as appropriate would additionally ensure that such streaming connections are timed out after serving legitimate use cases.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--streaming-connection-idle-timeout` argument is not set to 0. If the argument is not present, and there is a Kubelet config file specified by `--config`, check that it does not set `streamingConnectionIdleTimeout` to 0.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `streamingConnectionIdleTimeout` to a value other than 0. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_SYSTEM_PODS_ARGS` variable.\n\n`--streaming-connection-idle-timeout=5m`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nLong-lived connections could be interrupted.\n\n## Default value\n\nBy default, `--streaming-connection-idle-timeout` is set to four hours.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://github.com/kubernetes/kubernetes/pull/18552][2]\n\n## CIS controls\n\nVersion 6.9 Limitation and Control of Network Ports, Protocols, and Services\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://github.com/kubernetes/kubernetes/pull/18552\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.5","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"xmg-h3a-wj4","createdAt":1599602030157,"name":"--streaming-connection-idle-timeout argument is not set to 0"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.3","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIf kube-proxy is running, and if it is using a file-based kubeconfig file, ensure that the proxy kubeconfig file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe kube-proxy kubeconfig file controls various parameters of the kube-proxy service in the worker node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system. It is possible to run kube-proxy with the kubeconfig parameters configured as a Kubernetes ConfigMap instead of a file. In this case, there is no proxy kubeconfig file.\n\n## Audit\n\nFind the kubeconfig file being used by `kube-proxy` by running the following command: `ps -ef | grep kube-proxy`. If `kube-proxy` is running, get the kubeconfig file location from the `--kubeconfig` parameter.\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %a <proxy kubeconfig file>`. Verify that if a file is specified and it exists, the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the each worker node:\n\n```\nchmod 644 <proxy kubeconfig file>\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, proxy file has permissions of 640.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-proxy/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior. \n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.        \n\n[1]: https://kubernetes.io/docs/admin/kube-proxy/\n\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.3","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"alc-y7j-j9q","createdAt":1599602091672,"name":"Proxy kubeconfig file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.7","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe TCP/IP port numbers below 1024are considered privileged ports. Normal users and processes are not allowed to use them for various security reasons. Docker does, however allow a container port to be mapped to a privileged port.\n\n## Rationale\n\nBy default, if the user does not specifically declare a container port to host port mapping, Docker automatically and correctly maps the container port to one available in the `49153`-`65535` range on the host. Docker does, however, allow a container port to be mapped to a privileged port on the host if the user explicitly declares it. This is because containers are executed with `NET_BIND_SERVICE` Linux kernel capability which does not restrict privileged port mapping. The privileged ports receive and transmit various pieces of data which are security sensitive and allowing containers to use them is not in line with good security practice.\n\n## Audit\n\nList all running containers instances and their port mappings by executing this command: `docker ps --quiet | xargs docker inspect --format '{{ .Id }}: Ports={{ .NetworkSettings.Ports }}'` You should then review the list and ensure that container ports are not mapped to host port numbers below `102.4`.\n\n## Remediation\n\nDo not map container ports to privileged host ports when starting a container. You should also ensure that there is no such container to host privileged port mapping declarations in the Dockerfile.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, mapping a container port to a privileged port on the host is allowed.\n\n**Note**: There might be certain cases where you want to map privileged ports, because if you forbid it, then the corresponding application has to run outside of a container.\n\nFor example: HTTP and HTTPS load balancers have to bind `80/tcp` and `443/tcp` respectively. Forbidding to map privileged ports effectively forbids from running those in a container, and mandates using an external load balancer. In such cases, those containers instances should be marked as exceptions for this recommendation.\n\n## References\n\n1. https://docs.docker.com/engine/userguide/networking/\n\n## CIS controls\n\nVersion 6\n\n9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system.\n\nVersion 7\n\n9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.7","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ua5-ygj-jad","createdAt":1599602153218,"name":"Privileged ports are not mapped within containers"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:Logging","security:compliance","control:3.2.1","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nKubernetes can audit the details of requests made to the API server. The `--audit-policy-file` flag must be set for this logging to be enabled.\n\n## Rationale\n\nLogging is an important detective control for all systems, to detect potential unauthorised access.\n\n## Audit\n\nRun the following command on one of the cluster master nodes: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-policy-file` is set. Review the contents of the file specified and ensure that it contains a valid audit policy.\n\n## Remediation\n\nCreate an audit policy file for your cluster.\n\n## Impact\n\nAudit logs will be created on the master nodes, which will consume disk space. Care should be taken to avoid generating too large volumes of log information as this could impact the available of the cluster nodes.\n\n## Default value\n\nUnless the `--audit-policy-file` flag is specified, no auditing will be carried out.\n\n## References\n\n1. [https://kubernetes.io/docs/tasks/debug-application-cluster/audit/][1]\n\n## CIS controls\n\nVersion 7.6.2 Activate audit logging - Ensure that local logging has been enabled on all systems and networking devices.\n\n[1]: https://kubernetes.io/docs/tasks/debug-application-cluster/audit/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"3.2.1","framework":"cis-kubernetes","requirement":"Logging","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-3.2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ehp-xpm-xi3","createdAt":1599602215207,"name":"Minimal audit policy is created"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.12","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe container's root filesystem should be treated as a 'golden image' by using Docker run's `--read-only` option. This prevents any writes to the container's root filesystem at container runtime and enforces the principle of immutable infrastructure.\n\n## Rationale\n\nEnabling this option forces containers at runtime to explicitly define their data writing strategy to persist or not persist their data. This also reduces security attack vectors since the container instance's filesystem cannot be tampered with or written to unless it has explicit read-write permissions on its filesystem folder and directories.\n\n## Audit\n\nRun this command on the docker host: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: ReadonlyRootfs={{ .HostConfig.ReadonlyRootfs }}'` \n\nIf this command returns `true`, it means the container's root filesystem is mounted read-only. If the above command returns `false`, it means the container's root filesystem is writeable.\n\n## Remediation\n\nAdd a `--read-only` flag at a container's runtime to enforce the container's root filesystem being mounted as read only. For example, `docker run <Run arguments> --read-only <Container Image Name or ID> <Command>`\n\nEnabling the `--read-only` option at a container's runtime should be used by administrators to force a container's executable processes to only write container data to explicit storage locations during its lifetime. \n\nExamples of explicit storage locations during a container's runtime include, but are not limited to:\n\n1. Using the `--tmpfs` option to mount a temporary file system for non-persistent data writes. `docker run --interactive --tty --read-only --tmpfs \"/run\" --tmpfs \"/tmp\" centos /bin/bash`\n2. Enabling Docker rw mounts at a container's runtime to persist container data directly on the Docker host filesystem. For example, `docker run --interactive --tty --read-only -v /opt/app/data:/run/app/data:rw centos /bin/bash`\n\n3. Utilizing the Docker shared-storage volume plugin for Docker data volume to persist container data. For example, `docker volume create -d convoy --opt o=size=20GB my-named-volume docker run --interactive --tty --read-only -v my-named-volume:/run/app/data centos /bin/bash`\n\n3. Transmitting container data outside of the Docker controlled area during the container's runtime for container data in order to ensure that it is persistent. Examples include hosted databases, network file shares and APIs.\n\n## Impact\n\nEnabling `--read-only` at container runtime may break some container OS packages if a data writing strategy is not defined. You should define what the container's data should and should not persist at runtime in order to decide which strategy to use. Example: Enable use `--tmpfs` for temporary file writes to /tmp Use Docker shared data volumes for persistent data writes\n\n## Default value\n\nBy default, a container has its root filesystem writeable, allowing all container processes to write files owned by the container's actual runtime user.\n\n## References\n\n1. http://docs.docker.com/reference/commandline/cli/#run\n2. https://docs.docker.com/engine/tutorials/dockervolumes/\n3. http://www.projectatomic.io/blog/2015/12/making-docker-images-write-only-in-production/\n4. https://docs.docker.com/engine/reference/commandline/run/#mount-tmpfs-tmpfs\n5. https://docs.docker.com/engine/tutorials/dockervolumes/#creating-and-mounting-a-data-volume-container\n\n## CIS controls\n\nVersion 6\n\n14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.12","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"635-mc8-3mr","createdAt":1599602276896,"name":"Container's root filesystem is mounted as read only"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","source:compliance-agent","control:1.2.8","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nRestrict kubelet nodes to reading only objects associated with them.\n\n## Rationale\n\nThe Node authorization mode only allows kubelets to read Secret, ConfigMap, PersistentVolume, and PersistentVolumeClaim objects associated with their nodes.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--authorization-mode` argument exists and is set to a value to include Node.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--authorization-mode` parameter to a value that includes Node. `--authorization-mode=Node,RBAC`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, Node authorization is not enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-apiserver/ ][1]\n2. [https://kubernetes.io/docs/admin/authorization/node/ ][2]\n3. [https://github.com/kubernetes/kubernetes/pull/46076 ][3]\n4. [https://acotten.com/post/kube17-security][4]\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.              \n\n[1]: https://kubernetes.io/docs/admin/kube-apiserver/ \n[2]: https://kubernetes.io/docs/admin/authorization/node/ \n[3]: https://github.com/kubernetes/kubernetes/pull/46076 \n[4]: https://acotten.com/post/kube17-security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.8","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vgg-kwx-7dh","createdAt":1599602338742,"name":"--authorization-mode argument includes Node"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.3.3","requirement:Controller-Manager","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUse individual service account credentials for each controller.\n\n## Rationale\n\nThe controller manager creates a service account per controller in the kube-system namespace, generates a credential for it, and builds a dedicated API client with that service account credential for each controller loop to use. Setting the `--use-service-account-credentials` to true runs each control loop within the controller manager using a separate service account credential. When used in combination with RBAC, this ensures that the control loops run with the minimum permissions required to perform their intended tasks.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--use-service-account-credentials` argument is set to true.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node to set the below parameter:\n\n```\n--use-service-account-credentials=true\n```\n\n## Impact\n\nWhatever authorizer is configured for the cluster, it must grant sufficient permissions to the service accounts to perform their intended tasks. When using the RBAC authorizer, those roles are created and bound to the appropriate service accounts in the kube-system namespace automatically with default roles and rolebindings that are auto-reconciled on startup. If using other authorization methods (ABAC, Webhook, etc.), the cluster deployer is responsible for granting appropriate permissions to the service accounts (the required permissions can be seen by inspecting the `controller-roles.yaml` and `controller-role-bindings.yaml` files for the RBAC roles.\n\n## Default value\n\nBy default, `--use-service-account-credentials` is set to false.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-controller-manager/ ][1]\n2. [https://kubernetes.io/docs/admin/service-accounts-admin/ ][2]\n3. [https://github.com/kubernetes/kubernetes/blob/release-1.6/plugin/pkg/auth/authorizer/rbac/bootstrappolicy/testdata/controller-roles.yaml ][3]\n4. [https://github.com/kubernetes/kubernetes/blob/release-1.6/plugin/pkg/auth/authorizer/rbac/bootstrappolicy/testdata/controller-role-bindings.yaml ][4]\n5. [https://kubernetes.io/docs/admin/authorization/rbac/#controller-roles][5]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.4 Controlled Use of Administrative Privileges \n\n[1]: https://kubernetes.io/docs/admin/kube-controller-manager/ \n[2]: https://kubernetes.io/docs/admin/service-accounts-admin/ \n[3]: https://github.com/kubernetes/kubernetes/blob/release-1.6/plugin/pkg/auth/authorizer/rbac/bootstrappolicy/testdata/controller-roles.yaml \n[4]: https://github.com/kubernetes/kubernetes/blob/release-1.6/plugin/pkg/auth/authorizer/rbac/bootstrappolicy/testdata/controller-role-bindings.yaml \n[5]: https://kubernetes.io/docs/admin/authorization/rbac/#controller-roles\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.3","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"b7m-bho-nat","createdAt":1599602400314,"name":"--use-service-account-credentials argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.6","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nProtect tuned kernel parameters from overriding kubelet default kernel parameter values.\n\n## Rationale\n\nKernel parameters are usually tuned and hardened by the system administrators before putting the systems into production. These parameters protect the kernel and the system. Your kubelet kernel defaults that rely on such parameters should be appropriately set to match the desired secured system state. Ignoring this could potentially lead to running pods with undesired kernel behavior.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--protect-kernel-defaults` argument is set to true. If the `--protect-kernel-defaults` argument is not present, check that there is a Kubelet config file specified by `--config`, and that the file sets `protectKernelDefaults` to `true`.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `protectKernelDefaults: true`. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_SYSTEM_PODS_ARGS` variable.\n\n`--protect-kernel-defaults=true`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nYou would have to re-tune kernel parameters to match kubelet parameters.\n\n## Default value\n\nBy default, `--protect-kernel-defaults` is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.3 Secure Configurations for Hardware and Software on Mobile Devices, Laptops, Workstations, and Servers\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.6","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"uiw-kms-wwu","createdAt":1599602462044,"name":"--protect-kernel-defaults argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.4","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/var/lib/docker`.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories. For example, audit `/var/lib/docker`, which holds all the information about containers it should be audited.\n\n## Audit\n\nVerify that there is an audit rule applied to the `/var/lib/docker` directory. To see the rule for the `/var/lib/docker` directory, run: \n\n```\nauditctl -l | grep /var/lib/docker\n```\n\n## Remediation\n\nYou should add a rule for the `/var/lib/docker` directory. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /var/lib/docker -k docker \n```\n\nThen restart the audit daemon:\n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.4","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tfa-927-tto","createdAt":1599602523672,"name":"/var/lib/docker auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.31","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe Docker socket docker.sock should not be mounted inside a container.\n\n## Rationale\n\nIf the Docker socket is mounted inside a container it could allow processes running within the container to execute Docker commands which would effectively allow for full control of the host.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Volumes={{ .Mounts }}' | grep docker.sock` This returns any instances where `docker.sock` has been mapped to a container as a volume.\n\n## Remediation\n\nYou should ensure that no containers mount docker.sock as a volume.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, docker.sock is not mounted inside containers.\n\n## References\n\n1. https://raesene.github.io/blog/2016/03/06/The-Dangers-Of-Docker.sock/\n2. https://forums.docker.com/t/docker-in-docker-vs-mounting-var-run-docker-sock/9450/2\n3. https://github.com/docker/docker/issues/21109\n\n## CIS controls\n\nVersion 6\n\n9 Limitation and Control of Network Ports, Protocols, and Services\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.31","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.31\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"3iw-zus-yz3","createdAt":1599602585460,"name":"Docker socket is not mounted inside any containers"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.7","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not always authorize all requests.\n\n## Rationale\n\nThe API Server, can be configured to allow all requests. This mode should not be used on any production cluster.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--authorization-mode` argument exists and is not set to `AlwaysAllow`.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--authorization-mode` parameter to values other than `AlwaysAllow`. One such example could be as below:\n\n```\n--authorization-mode=RBAC\n```\n\n## Impact\n\nOnly authorized requests will be served.\n\n## Default value\n\nBy default, `AlwaysAllow` is not enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-apiserver/ ][1]\n2. [https://kubernetes.io/docs/admin/authorization/node/ ][2]\n\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.              \n\n[1]: https://kubernetes.io/docs/admin/kube-apiserver/ \n[2]: https://kubernetes.io/docs/admin/authorization/node/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.7","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"kli-btm-jbr","createdAt":1599602646953,"name":"--authorization-mode argument is not set to AlwaysAllow (API server)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.4","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUsing the `--privileged` flag provides all Linux kernel capabilities to the container to which it is applied and therefore overwrites the `--cap-add` and `--cap-drop` flags. For this reason, ensure that it is not used.\n\n## Rationale\n\nThe `--privileged` flag provides all capabilities to the container to which it is applied, and also lifts all the limitations enforced by the device cgroup controller. As a consequence this the container has most of the rights of the underlying host. This flag only exists to allow for specific use cases (for example running Docker within Docker) and should not generally be used.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Privileged={{ .HostConfig.Privileged }}'` This command returns `Privileged=false` for each container instance.\n\n## Remediation\n\nDo not run containers with the `--privileged` flag. For example, do not start a container using the command `docker run --interactive --tty --privileged centos /bin/bash`\n\n## Impact\n\nIf you start a container without the `--privileged` flag, it will not have excessive default capabilities.\n\n## Default value\n\nFalse\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.4","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"rbd-urm-klo","createdAt":1599602708557,"name":"Privileged containers are not used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.21","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable profiling, if not needed.\n\n## Rationale\n\nProfiling allows for the identification of specific performance bottlenecks. It generates a significant amount of program data that could potentially be exploited to uncover system and program details. If you are not experiencing any bottlenecks and do not need the profiler for troubleshooting purposes, it is recommended to turn it off to reduce the potential attack surface.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--profiling` argument is set to `false`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the below parameter. --profiling=false\n\n## Impact\n\nProfiling information would not be available.\n\n## Default value\n\nBy default, profiling is enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.21","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.21\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"wk0-7yo-dw9","createdAt":1599602770265,"name":"--profiling argument is set to false (API server)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.18","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the daemon.json file permissions are correctly set to 644 or more restrictively.\n\n## Rationale\n\nThe daemon.json file contains sensitive parameters that may alter the behavior of the docker daemon. Therefore it should be writeable only by root to ensure it is not modified by less privileged users.\n\n## Audit\n\nVerify that the `daemon.json` file permissions are set to `644` or more restrictive, by running: \n```\nstat -c %a /etc/docker/daemon.json\n```\n\n## Remediation\n\nRun `chmod 644 /etc/docker/daemon.json`\n\nThis sets the file permissions for this file to 644.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system, and in that case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.18","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.18\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"7df-4w8-g7l","createdAt":1599602831833,"name":"daemon.json file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.2","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the API server pod specification file ownership is set to root:root.\n\n## Rationale\n\nThe API server pod specification file controls various parameters that set the behavior of the API server. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/manifests/kube-apiserver.yaml\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, chown root:root /etc/kubernetes/manifests/kube-apiserver.yaml\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the kube-apiserver.yaml file ownership is set to root:root.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6 5.1 Minimize And Sparingly Use Administrative Privileges Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior. Version 7 5.2 Maintain Secure Images Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.2","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vbb-t30-k0f","createdAt":1599602893246,"name":"API server pod specification file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","security:compliance","scored:false","control:1.2.33","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEncrypt etcd key-value store.\n\n## Rationale\n\netcd is a highly available key-value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be encrypted at rest to avoid any disclosures.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--encryption-provider-config` argument is set to a EncryptionConfig file. Additionally, ensure that the EncryptionConfig file has all the desired resources covered especially any secrets.\n\n## Remediation\n\nFollow the Kubernetes documentation and configure a EncryptionConfig file. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--encryption-provider-config` parameter to the path of that file: `--encryption-provider-config=</path/to/EncryptionConfig/File>`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `--encryption-provider-config` is not set.\n\n## References\n\n1. https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/ \n2. https://acotten.com/post/kube17-security \n3. https://kubernetes.io/docs/admin/kube-apiserver/ \n4. https://github.com/kubernetes/features/issues/92\n\n## CIS controls\n\nVersion 6 14.5 Encrypt At Rest Sensitive Information Sensitive information stored on systems shall be encrypted at rest and require a secondary authentication mechanism, not integrated into the operating system, in order to access the information. \n\nVersion 7 14.8 Encrypt Sensitive Information at Rest Encrypt all sensitive information at rest using a tool that requires a secondary authentication mechanism not integrated into the operating system, in order to access the information.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.33","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.33\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"7rg-crl-fs0","createdAt":1599602954959,"name":"--encryption-provider-config argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:5.28","security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should use the `--pids-limit` flag at container runtime.\n\n## Rationale\n\nAttackers could launch a fork bomb with a single command inside the container. This fork bomb could crash the entire system and would require a restart of the host to make the system functional again. Using the PIDs cgroup parameter --pids-limit would prevent this kind of attack by restricting the number of forks that can happen inside a container within a specified time frame.\n\n## Audit\n\nRun this command and ensure that `PidsLimit` is not set to 0 or -\n1.  A PidsLimit of 0 or -1 means that any number of processes can be forked concurrently inside the container. \n\n```\ndocker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: PidsLimit={{ .HostConfig.PidsLimit }}'\n```\n\n## Remediation\n\nUse `--pids-limit` flag with an appropriate value when launching the container. For example, `docker run -it --pids-limit 100 <Image_ID>`\n\nIn the above example, the number of processes allowed to run at any given time is set to 100. After a limit of 100 concurrently running processes is reached, Docker would restrict any new process creation.\n\n## Impact\n\nSet the PIDs limit value as appropriate. Incorrect values might leave containers unusable.\n\n## Default value\n\nThe Default value for `--pids-limit` is 0 which means there is no restriction on the number of forks. Note that the PIDs cgroup limit works only for kernel versions 4.3 and higher.\n\n## References\n\n1. https://github.com/docker/docker/pull/18697\n2. https://docs.docker.com/engine/reference/commandline/run/#options\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.28","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.28\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tmp-lms-u8p","createdAt":1599603016485,"name":"PIDs cgroup limit is used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.6","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the scheduler pod specification file ownership is set to root:root.\n\n## Rationale\n\nThe scheduler pod specification file controls various parameters that set the behavior of the kube-scheduler service in the master node. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/manifests/kube-scheduler.yaml\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/manifests/kube-scheduler.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kube-scheduler.yaml` file ownership is set to root:root.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-scheduler/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.6","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"y79-4ts-a0k","createdAt":1599603078027,"name":"Scheduler pod specification file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","control:1.4.1","security:compliance","requirement:Scheduler","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable profiling, if not needed.\n\n## Rationale\n\nProfiling allows for the identification of specific performance bottlenecks. It generates a significant amount of program data that could potentially be exploited to uncover system and program details. If you are not experiencing any bottlenecks and do not need the profiler for troubleshooting purposes, it is recommended to turn it off to reduce the potential attack surface.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-scheduler\n```\nVerify that the `--profiling` argument is set to `false`.\n\n## Remediation\n\nEdit the Scheduler pod specification file `/etc/kubernetes/manifests/kube-scheduler.yaml` file on the master node and set the below parameter:\n\n```\n--profiling=false\n```\n\n## Impact\n\nProfiling information would not be available.\n\n## Default value\n\nBy default, profiling is enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-scheduler/ ][1]\n2. [https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md][2]\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges                \n\n[1]: https://kubernetes.io/docs/admin/kube-scheduler/ \n[2]: https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.4.1","framework":"cis-kubernetes","requirement":"Scheduler","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.4.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"hya-urf-09b","createdAt":1599603139661,"name":"--profiling argument is set to false (Scheduler)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.25","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nRotate log files on reaching 100 MB or as appropriate.\n\n## Rationale\n\nKubernetes automatically rotates the log files. Retaining old log files ensures that you would have sufficient log data available for carrying out any investigation or correlation. If you have set file size of 100 MB and the number of old log files to keep as 10, you would approximate have 1 GB of log data that you could potentially use for your analysis.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-log-maxsize` argument is set to `100` or as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--audit-log-maxsize` parameter to an appropriate size in MB. For example, to set it as 100 MB: `--audit-log-maxsize=100`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, auditing is not enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/concepts/cluster-administration/audit/ 3. https://github.com/kubernetes/features/issues/22\n\n## CIS controls\n\nVersion 6 6.3 Ensure Audit Logging Systems Are Not Subject To Loss (i.e. rotation/archive) Ensure that all systems that store logs have adequate storage space for the logs generated on a regular basis, so that log files will not fill up between log rotation intervals. The logs must be archived and digitally signed on a periodic basis. Version 7 6.4 Ensure adequate storage for logs Ensure that all systems that store logs have adequate storage space for the logs generated.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.25","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.25\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qhy-gng-bh4","createdAt":1599603202907,"name":"--audit-log-maxsize argument is set to 100 or as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.17","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the daemon.json file individual ownership and group ownership is correctly set to root.\n\n## Rationale\n\nThe daemon.json file contains sensitive parameters that could alter the behavior of the docker daemon. It should therefore be owned and group owned by root to ensure it can not be modified by less privileged users.\n\n## Audit\n\nVerify that the `daemon.json` file is owned and group-owned by root by running: \n```\nstat -c %U:%G /etc/docker/daemon.json | grep -v root:root \n```\nThe command should return no results.\n\n## Remediation\n\nRun `chown root:root /etc/docker/daemon.json`\n\nThis sets the ownership and group ownership for the file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system, and in that case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.17","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.17\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"hlb-qzw-opk","createdAt":1599603264485,"name":"daemon.json file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.8","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the certificate authorities file ownership is set to `root:root`.\n\n## Rationale\n\nThe certificate authorities file controls the authorities used to validate API requests. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the following command: `ps -ef | grep kubelet`. Find the file specified by the `--client-ca-file` argument. Run the following command: `stat -c %U:%G <filename>`. Verify that the ownership is set to `root:root`.\n\n## Remediation\n\nRun the following command to modify the ownership of the `--client-ca-file`:\n\n```\nchown root:root <filename>\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default no `--client-ca-file` is specified.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/authentication/#x509-client-certs][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/authentication/#x509-client-certs\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.8","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ifc-9ej-k7k","createdAt":1599603326156,"name":"Client certificate authorities file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.16","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker socket file has permissions of 660 or are configured more restrictively.\n\n## Rationale\n\nOnly root and the members of the docker group should be allowed to read and write to the default Docker Unix socket. The Docker socket file should therefore have permissions of 660 or more restrictive permissions.\n\n## Audit\n\nVerify that the Docker socket file has permissions of `660` or more restrictive, by running: \n```\nstat -c %a /var/run/docker.sock\n```\n\n## Remediation\n\nRun the command `chmod 660 /var/run/docker.sock`\n\nThis sets the file permissions of the Docker socket file to 660.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for the Docker socket file is correctly set to 660.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option\n2. https://docs.docker.com/engine/reference/commandline/dockerd/#bind-docker-to-another-hostport-or-a-unix-socket\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.16","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.16\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"jxv-zrr-1c1","createdAt":1599603387716,"name":"Docker socket file permissions are set to 660 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","control:1.2.3","security:compliance","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use token based authentication.\n\n## Rationale\n\nThe token-based authentication utilizes static tokens to authenticate requests to the apiserver. The tokens are stored in clear-text in a file on the apiserver, and cannot be revoked or rotated without restarting the apiserver. Hence, do not use static token-based authentication.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver \n```\nVerify that the `--token-auth-file` argument does not exist.\n\n## Remediation\n\nFollow the documentation and configure alternate mechanisms for authentication. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and remove the `--token-auth-file=<filename>` parameter.\n\n## Impact\n\nYou will have to configure and use alternate authentication mechanisms such as certificates. Static token based authentication could not be used.\n\n## Default value\n\nBy default, `--token-auth-file` argument is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/authentication/#static-token-file\n2. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n16.14 Encrypt/Hash All Authentication Files And Monitor Their Access - Verify that all authentication files are encrypted or hashed and that these files cannot be accessed without root or administrator privileges. Audit all access to password files in the system.\n\nVersion 7\n\n16.4 Encrypt or Hash all Authentication Credentials - Encrypt or hash with a salt all authentication credentials when stored.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.3","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mvv-hb7-ucv","createdAt":1599603449449,"name":"--token-auth-file parameter is not set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.12","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/usr/sbin/runc`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `/usr/sbin/runc`, and so it should be audited.\n\n## Audit\n\nVerify that there is an audit rule corresponding to the `/usr/sbin/runc` file. To display the rule for the `/usr/sbin/runc` file, run:\n\n```\nauditctl -l | grep /usr/sbin/runc\n```\n\n## Remediation\n\nYou should add a rule for `/usr/sbin/runc` file. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /usr/sbin/runc -k docker\n```\n\nThen restart the audit daemon:\n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The `file/usr/sbin/runc` may not be present on the system, and in that case this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n2. [https://github.com/docker/docker/pull/20662][2]\n3. [https://containerd.tools/][3]\n4. [https://github.com/opencontainers/runc][4]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html \n[2]: https://github.com/docker/docker/pull/20662 \n[3]: https://containerd.tools/ \n[4]: https://github.com/opencontainers/runc\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.12","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ksp-ylk-dub","createdAt":1599603510904,"name":"/usr/sbin/runc auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.10","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSetup TLS connection on the Kubelets.\n\n## Rationale\n\nKubelet communication contains sensitive parameters that should remain encrypted in transit. Configure the Kubelets to serve only HTTPS traffic.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--tls-cert-file` and `--tls-private-key-file` arguments exist and they are set as appropriate. If these arguments are not present, check that there is a Kubelet config specified by `--config` and that it contains appropriate settings for `tlsCertFile` and `tlsPrivateKeyFile`.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `tlsCertFile` to the location of the certificate file to use to identify this Kubelet, and `tlsPrivateKeyFile` to the location of the corresponding private key file. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameters in K`UBELET_CERTIFICATE_ARGS` variable.\n\n```\n--tls-cert-file=<path/to/tls-certificate-file>\n--tls-private-key-file=<path/to/tls-key-file>\n```\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nTLS and client certificate authentication must be configured for your Kubernetes cluster deployment.\n\n## Default value\n\nBy default, `--tls-cert-file` and `--tls-private-key-file` arguments are not set. If `--tls-cert-file` and `--tls-private-key-file` are not provided, a self-signed certificate and key are generated for the public address and saved to the directory passed to `--cert-dir`.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [http://rootsquash.com/2016/05/10/securing-the-kubernetes-api/ ][2]\n3. [https://github.com/kelseyhightower/docker-kubernetes-tls-guide ][3]\n4. [https://jvns.ca/blog/2017/08/05/how-kubernetes-certificates-work/][4]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted.\n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: http://rootsquash.com/2016/05/10/securing-the-kubernetes-api/\n[3]: https://github.com/kelseyhightower/docker-kubernetes-tls-guide\n[4]: https://jvns.ca/blog/2017/08/05/how-kubernetes-certificates-work/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.10","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"gqg-7cf-6bu","createdAt":1599603572402,"name":"--tls-cert-file and --tls-private-key-file arguments are set as appropriate (Kubelet)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:1.1.3","framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the controller manager pod specification file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe controller manager pod specification file controls various parameters that set the behavior of the Controller Manager on the master node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/manifests/kube-controller-manager.yaml\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/manifests/kube-controller-manager.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `kube-controller-manager.yaml` file has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.3","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"pr0-hcf-xkw","createdAt":1599603633988,"name":"Controller manager pod specification file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","source:compliance-agent","control:1.1.19","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the Kubernetes PKI directory and file ownership is set to root:root.\n\n## Rationale\n\nKubernetes makes use of a number of certificates as part of its operation. You should set the ownership of the directory containing the PKI information and all files in that directory to maintain their integrity. The directory and files should be owned by root:root.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nls -laR /etc/kubernetes/pki/\n```\n\nVerify the ownership of all files and directories in this hierarchy is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown -R root:root /etc/kubernetes/pki/`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `/etc/kubernetes/pki/` directory and all of the files and directories contained within it, are set to be owned by the root user.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.19","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.19\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tgm-6a5-ttf","createdAt":1599603695482,"name":"Kubernetes PKI directory and file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.20","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not disable the secure port.\n\n## Rationale\n\nThe secure port is used to serve https with authentication and authorization. If you disable it, no https traffic is served and all traffic is served unencrypted.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--secure-port` argument is either not set or is set to an integer value between `1` and `65535`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and either remove the --secure-port parameter or set it to a different (non-zero) desired port.\n\n## Impact\n\nYou need to set the API Server up with the right TLS certificates.\n\n## Default value\n\nBy default, port 6443 is used as the secure port.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. Version 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.20","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.20\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"5w3-iw4-y16","createdAt":1599603757033,"name":"--secure-port argument is not set to 0"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Controller-Manager","source:compliance-agent","control:1.3.7","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not bind the Controller Manager service to non-loopback insecure addresses.\n\n## Rationale\n\nThe Controller Manager API service which runs on port 10252/TCP by default is used for health and metrics information and is available without authentication or encryption. As such it should only be bound to a localhost interface, to minimize the cluster's attack surface\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--bind-address` argument is set to `127.0.0.1`.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and ensure the correct value for the `--bind-address` parameter.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `--bind-address` parameter is set to `0.0.0.0`.\n\n## References\n\n1. https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager/ \n\n*Notes*: Although the current Kubernetes documentation site says that `--address` is deprecated in favour of `--bind-address`. Kubeadm 1.11 still makes use of `--address`.\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.7","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"pvo-5un-k18","createdAt":1599603818624,"name":"--bind-address argument is set to 127.0.0.1 (Controller Manager)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.6","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nVerify kubelet's certificate before establishing connection.\n\n## Rationale\n\nThe connections from the apiserver to the kubelet are used for fetching logs for pods, attaching (through kubectl) to running pods, and using the kubelets port-forwarding functionality. These connections terminate at the kubelets HTTPS endpoint. By default, the apiserver does not verify the kubelets serving certificate, which makes the connection subject to man-in-the-middle attacks, and unsafe to run over untrusted and/or public networks.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--kubelet-certificate-authority` argument exists and is set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and setup the TLS connection between the apiserver and kubelets. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--kubelet-certificate-authority` parameter to the path to the cert file for the certificate authority. \n\n```\n--kubelet-certificate-authority=<ca-string>\n```\n\n## Impact\n\nYou require TLS to be configured on apiserver as well as kubelets.\n\n## Default value\n\nBy default, `--kubelet-certificate-authority` argument is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://kubernetes.io/docs/admin/kubelet-authentication-authorization/ \n3. https://kubernetes.io/docs/concepts/cluster-administration/master-node-communication/#apiserver---kubelet\n\n## CIS controls\n\nVersion 6.3.4 Use Only Secure Channels For Remote System Administration - Perform all remote administration of servers, workstation, network devices, and similar equipment over secure channels. Protocols such as telnet, VNC, RDP, or others that do not actively support strong encryption should only be used if they are performed over a secondary encryption channel, such as SSL, TLS or IPSEC. \n\nVersion 7.4.5 Use Multifactor Authentication For All Administrative Access - Use multi-factor authentication and encrypted channels for all administrative account access.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.6","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"sbm-nxt-qv3","createdAt":1599603880124,"name":"--kubelet-certificate-authority argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","control:2.4","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEtcd should be configured to make use of TLS encryption for peer connections.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be encrypted in transit and also amongst peers in the etcd clusters.\n\n## Audit\n\nThis recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable.\n\nRun the following command on the etcd server node: \n```\nps -ef | grep etcd\n```\nVerify that the `--peer-cert-file` and `--peer-key-file` arguments are set as appropriate. \n\n## Remediation\n\nFollow the etcd service documentation and configure peer TLS encryption as appropriate for your etcd cluster. Then, edit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and set the below parameters:\n\n```\n--peer-cert-file=</path/to/peer-cert-file> \n--peer-key-file=</path/to/peer-key-file>\n```\n\n## Impact\n\nEtcd cluster peers would need to set up TLS for their communication.\n\n## Default value\n\n*Note*: This recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable. By default, peer communication over TLS is not configured.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][1]\n2. [https://kubernetes.io/docs/admin/etcd/][2]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.  \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.4","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"lzq-1mk-xc7","createdAt":1599603941695,"name":"--peer-cert-file and --peer-key-file arguments are set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.5","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/etc/docker`.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privilege and its behavior depends on some key files and directories, including `/etc/docker`. This holds various certificates and keys used for TLS communication between Docker daemon and Docker client and so it should be audited.\n\n## Audit\n\nVerify that there is an audit rule applied to the `/etc/docker` directory. To see the rule for the `/etc/docker` directory, run: \n\n```\nauditctl -l | grep /etc/docker\n```\n\n## Remediation\n\nYou should add a rule for the `/etc/docker` directory. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /etc/docker -k docker \n```\n\nThen restart the audit daemon:\n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.5","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"5ns-uab-zcf","createdAt":1599604003342,"name":"/etc/docker auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.16","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIPC (POSIX/SysV IPC) namespace provides separation of named shared memory segments, semaphores and message queues. The IPC namespace on the host should therefore not be shared with containers and should remain isolated.\n\n## Rationale\n\nThe IPC namespace provides separation of IPC between the host and containers. If the host's IPC namespace is shared with the container, it would allow processes within the container to see all of IPC communications on the host system. This would remove the benefit of IPC level isolation between host and containers. An attacker with access to a container could get access to the host at this level with major consequences. The IPC namespace should therefore not be shared between the host and its containers.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: IpcMode={{ .HostConfig.IpcMode }}'` \n\nIf the command returns `host`, it means that the host IPC namespace is shared with the container. Any other result means that it is not shared, and that the system is configured in line with good security practice.\n\n## Remediation\n\nDo not start a container with the `--ipc=host` argument. For example, do not start a container with the command `docker run --interactive --tty --ipc=host centos /bin/bash`\n\n## Impact\n\nShared memory segments are used in order to accelerate interprocess communications, commonly in high-performance applications. If this type of application is containerized into multiple containers, you might need to share the IPC namespace of the containers in order to achieve high performance. Under these circumstances, you should still only share container specific IPC namespaces and not the host IPC namespace. A container's IPC namespace can be shared with another container. For example, `docker run --interactive --tty --ipc=container:e3a7a1a97c58 centos /bin/bash`\n\n## Default value\n\nBy default, all containers have their IPC namespace enabled and host IPC namespace is not shared with any container.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#ipc-settings-ipc\n2. http://man7.org/linux/man-pages/man7/namespaces.7.html\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.16","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.16\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qpe-nj2-sl8","createdAt":1599604030036,"name":"Host's IPC namespace is not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","control:1.3.2","security:compliance","requirement:Controller-Manager","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable profiling, if not needed.\n\n## Rationale\n\nProfiling allows for the identification of specific performance bottlenecks. It generates a significant amount of program data that could potentially be exploited to uncover system and program details. If you are not experiencing any bottlenecks and do not need the profiler for troubleshooting purposes, it is recommended to turn it off to reduce the potential attack surface.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--profiling` argument is set to `false`.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and set the below parameter:\n\n```\n--profiling=false\n```\n\n## Impact\n\nProfiling information would not be available.\n\n## Default value\n\nBy default, profiling is enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-controller-manager/ ][1]\n2. [https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md][2]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.4 Controlled Use of Administrative Privileges \n\n[1]: https://kubernetes.io/docs/admin/kube-controller-manager/ \n[2]: https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.2","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"1ie-ddf-7wm","createdAt":1599604031896,"name":"--profiling argument is set to false (Controller Manager)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.6","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/docker` directory permissions are correctly set to 755 or more restrictively.\n\n## Rationale\n\nThe `/etc/docker` directory contains certificates and keys in addition to various sensitive files. It should therefore only be writeable by root to ensure that it can not be modified by a less privileged user.\n\n## Audit\n\nYou should execute the command below to verify that the directory has permissions of 755+: \n\n```\nstat -c %a /etc/docker\n```\n\n## Remediation\n\nRun the following command: `chmod 755 /etc/docker`\n\nThis sets the permissions for the directory to 755.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for this directory are set to 755.\n\n## References\n\n1. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.6","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"een-7do-u18","createdAt":1599604083943,"name":"/etc/docker directory permissions are set to 755 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.30","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSetup TLS connection on the API server.\n\n## Rationale\n\nAPI server communication contains sensitive parameters that should remain encrypted in transit. Configure the API server to serve only HTTPS traffic.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--tls-cert-file` and `--tls-private-key-file` arguments exist and they are set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection on the apiserver. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the TLS certificate and private key file parameters. \n```\n--tls-cert-file=<path/to/tls-certificate-file> \n--tls-private-key-file=<path/to/tls-key-file>\n```\n\n## Impact\n\nTLS and client certificate authentication must be configured for your Kubernetes cluster deployment.\n\n## Default value\n\nBy default, `--tls-cert-file` and `--tls-private-key-file` arguments are not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. http://rootsquash.com/2016/05/10/securing-the-kubernetes-api/ \n3. https://github.com/kelseyhightower/docker-kubernetes-tls-guide\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \nVersion 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.30","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.30\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"m9r-8ka-arc","createdAt":1599604115727,"name":"--tls-cert-file and --tls-private-key-file arguments are set as appropriate (API server)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","security:compliance","scored:false","control:1.1.20","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that Kubernetes PKI certificate files have permissions of 644 or more restrictive.\n\n## Rationale\n\nKubernetes makes use of a number of certificate files as part of the operation of its components. The permissions on these files should be set to 644 or more restrictive to protect their integrity.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nfind /etc/kubernetes/pki -name \"*.crt\" | xargs stat -c '%n %a'\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod -R 644 /etc/kubernetes/pki/*.crt`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the certificates used by Kubernetes are set to have permissions of 644\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.20","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.20\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ion-6fc-xd4","createdAt":1599604147464,"name":"Kubernetes PKI certificate file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.5","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the scheduler pod specification file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe scheduler pod specification file controls various parameters that set the behavior of the Scheduler service in the master node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/manifests/kube-scheduler.yaml\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/manifests/kube-scheduler.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kube-scheduler.yaml` file has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-scheduler/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.5","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qxe-hc6-qlm","createdAt":1599604179189,"name":"Scheduler pod specification file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","source:compliance-agent","control:2.1","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nConfigure TLS encryption for the etcd service.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be encrypted in transit.\n\n## Audit\n\nRun the following command on the etcd server node:\n```\nps -ef | grep etcd\n```\nVerify that the `--cert-file` and the `--key-file` arguments are set as appropriate.\n\n## Remediation\n\nFollow the etcd service documentation and configure TLS encryption. Then, edit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and set the below parameters:\n\n```\n--cert-file=</path/to/ca-file> \n--key-file=</path/to/key-file>\n```\n\n## Impact\n\nClient connections only over TLS would be served.\n\n## Default value\n\nBy default, TLS encryption is not set.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][1]\n2. [https://kubernetes.io/docs/admin/etcd/][2]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.                \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.1","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ezf-1mn-luf","createdAt":1599604210918,"name":"--cert-file and --key-file arguments are set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.26","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSet global request timeout for API server requests as appropriate.\n\n## Rationale\n\nSetting global request timeout allows extending the API server request timeout limit to a duration appropriate to the user's connection speed. By default, it is set to 60 seconds which might be problematic on slower connections making cluster resources inaccessible once the data volume for requests exceeds what can be transmitted in 60 seconds. But, setting this timeout limit to be too large can exhaust the API server resources making it prone to Denial-of-Service attack. Hence, it is recommended to set this limit as appropriate and change the default limit of 60 seconds only if needed.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--request-timeout` argument is either not set or set to an appropriate value.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml and set the below parameter as appropriate and if needed. For example, --request-timeout=300s\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, --request-timeout is set to 60 seconds.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://github.com/kubernetes/kubernetes/pull/51415\n\n## CIS controls\n\nVersion 6 14.6 Enforce Detailed Audit Logging For Sensitive Information Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. Version 7 14.9 Enforce Detail Logging for Access or Changes to Sensitive Data Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.26","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.26\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"1kt-cbt-hvl","createdAt":1599604242564,"name":"--request-timeout argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Pod-Security-Policies","control:5.2.4","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not generally permit containers to be run with the hostNetwork flag set to true.\n\n## Rationale\n\nA container running in the host's network namespace could access the local loopback device, and could access network traffic to and from other pods. There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to share the host network namespace. If you have need to run containers which require hostNetwork, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n## Audit\n\nGet the set of PSPs with the following command: `kubectl get psp`\n\nFor each PSP, check whether privileged is enabled: `kubectl get psp <name> -o=jsonpath='{.spec.hostNetwork}'`\n\nVerify that there is at least one PSP which does not return true.\n\n## Remediation\n\nCreate a PSP as described in the Kubernetes documentation, ensuring that the `.spec.hostNetwork` field is omitted or set to false.\n\n## Impact\n\nPods defined with spec.hostNetwork: true will not be permitted unless they are run under a specific PSP.\n\n## Default value\n\nBy default, PodSecurityPolicies are not defined.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/policy/pod-security-policy][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://kubernetes.io/docs/concepts/policy/pod-security-policy\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.2.4","framework":"cis-kubernetes","requirement":"Pod-Security-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mlb-fwt-s80","createdAt":1599604274257,"name":"Minimize the admission of containers wishing to share the host network namespace"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:1.2.3","security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit all Docker daemon activities.\n\n## Rationale\n\nAs well as auditing the normal Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges. It is very important to audit its activities and usage.\n\n## Audit\n\nVerify that there are audit rules for the Docker daemon. To see the rules associated with the Docker daemon, run: \n\n```\nauditctl -l | grep /usr/bin/dockerd\n```\n\n## Remediation\n\nYou should add rules for the Docker daemon. For example, add the following line to the `/etc/audit/audit.rules` file: \n\n```\n-w /usr/bin/dockerd -k docker \n```\n\nThen restart the audit daemon using the following command:\n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, the Docker daemon is not audited.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.6.2 Ensure Audit Log Settings Support Appropriate Log Entry Formatting - Validate audit log settings for each hardware device and the software installed on it, ensuring that logs include a date, timestamp, source addresses, destination addresses, and various other useful elements of each packet and/or transaction. Systems should record logs in a standardized format such as syslog entries or those outlined by the Common Event Expression initiative. If systems cannot generate logs in a standardized format, log normalization tools can be deployed to convert logs into such a format. \n\nVersion 7.6.2 Activate audit logging - Ensure that local logging has been enabled on all systems and networking devices. \n\nVersion 6.3 Enable Detailed Logging - Enable system logging to include detailed information such as an event source, date, user, timestamp, source addresses, destination addresses, and other useful elements.                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.3","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"fpu-oe5-feu","createdAt":1599604305682,"name":"Auditing is configured for the Docker daemon"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.25","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should restrict the container from acquiring additional privileges via SUID or SGID bits.\n\n## Rationale\n\nA process can set the `no_new_priv` bit in the kernel and this persists across forks, clones and execve. The `no_new_priv` bit ensures that the process and its child processes do not gain any additional privileges via SUID or SGID bits. This reduces the danger associated with many operations because the possibility of subverting privileged binaries is lessened.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: SecurityOpt={{ .HostConfig.SecurityOpt }}'` \n\nThis command returns all of the security options currently configured for containers. The option `no-new-privileges` should be one of them.\n\n## Remediation\n\nStart your container with the options `docker run --rm -it --security-opt=no-new-privileges ubuntu bash`\n\n## Impact\n\nThe `no_new_priv` option prevents LSMs like SELinux from allowing processes to acquire new privileges.\n\n## Default value\n\nBy default, new privileges are not restricted.\n\n## References\n\n1. https://github.com/projectatomic/atomic-site/issues/269\n2. https://github.com/docker/docker/pull/20727\n3. https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt\n4. https://lwn.net/Articles/475678/\n5. https://lwn.net/Articles/475362/\n\n## CIS controls\n\nVersion 6\n\n5 Controlled Use of Administration Privileges Controlled Use of Administration Privileges\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.25","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.25\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"cft-3kh-z3l","createdAt":1599604337425,"name":"Container is restricted from acquiring additional privileges"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.4","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable the read-only port.\n\n## Rationale\n\nThe Kubelet process provides a read-only API in addition to the main Kubelet API. Unauthenticated access is provided to this read-only API which could possibly retrieve potentially sensitive information about the cluster.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--read-only-port` argument exists and is set to 0. If the `--read-only-port` argument is not present, check that there is a Kubelet config file specified by `--config`. Check that if there is a readOnlyPort entry in the file, it is set to 0.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `readOnlyPort` to 0. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_SYSTEM_PODS_ARGS` variable.\n\n`--read-only-port=0`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nRemoval of the read-only port will require that any service which made use of it will need to be re-configured to use the main Kubelet API.\n\n## Default value\n\nBy default, `--read-only-port` is set to 10255/TCP. However, if a config file is specified by `--config` the default value for `readOnlyPort` is 0.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system.\n\nVersion 7 9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.4","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"dgo-kog-lle","createdAt":1599604369044,"name":"--read-only-port argument is set to 0"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.4","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIf kube-proxy is running, ensure that the file ownership of its kubeconfig file is set to root:root.\n\n## Rationale\n\nThe kubeconfig file for kube-proxy controls various parameters for the kube-proxy service in the worker node. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nFind the kubeconfig file being used by `kube-proxy` by running the following command: `ps -ef | grep kube-proxy`. If `kube-proxy` is running, get the kubeconfig file location from the `--kubeconfig` parameter.\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %U:%G <proxy kubeconfig file>`. Verify that the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the each worker node:\n\n`chown root:root <proxy kubeconfig file>`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, proxy file ownership is set to root:root.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-proxy/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kube-proxy/\n\n## Audit\n\nFind the kubeconfig file being used by kube-proxy by running the following command: ps -ef | grep kube-proxy If kube-proxy is running, get the kubeconfig file location from the --kubeconfig parameter. Run the below command (based on the file location on your system) on the each worker node. For example, stat -c %U:%G <proxy kubeconfig file> Verify that the ownership is set to root:root.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.4","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oat-dei-klo","createdAt":1599604401268,"name":"Proxy kubeconfig file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.1","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the kubelet service file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe kubelet service file controls various parameters that set the behavior of the kubelet service in the worker node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %a /etc/systemd/system/kubelet.service.d/10-kubeadm.conf`. Verify that the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the each worker node.\n\nFor example, `chmod 644 /etc/systemd/system/kubelet.service.d/10-kubeadm.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the kubelet service file has permissions of 640.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#44-joining-your-nodes ][2]\n3. [https://kubernetes.io/docs/admin/kubeadm/#kubelet-drop-in][3]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#44-joining-your-nodes\n[3]: https://kubernetes.io/docs/admin/kubeadm/#kubelet-drop-in\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.1","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"j8k-7ii-fwo","createdAt":1599604432646,"name":"Kubelet service file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.5","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/docker` directory ownership and group ownership is correctly set to root.\n\n## Rationale\n\nThe `/etc/docker` directory contains certificates and keys in addition to various other sensitive files. It should therefore be individual owned and group owned by root in order to ensure that it can not be modified by less privileged users.\n\n## Audit\n\nYou should execute the command below to verify that the directory is owned and group owned by root: \n\n```\nstat -c %U:%G /etc/docker | grep -v root:root\n``` \n\nThis command does not return any data.\n\n## Remediation\n\nTo resolve this issue, run the following command: `chown root:root /etc/docker`\n\nThis sets the ownership and group ownership for the directory to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the ownership and group ownership for this directory is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.`\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.5","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"heb-axz-wdc","createdAt":1599604466531,"name":"/etc/docker directory ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","control:3.20","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/sysconfig/docker` file individual ownership and group ownership is correctly set to root.\n\n## Rationale\n\nThe `/etc/sysconfig/docker` file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be individually owned and group owned by root to ensure that it is not modified by less privileged users.\n\n## Audit\n\nVerify that the `/etc/sysconfig/docker` file is individually owned and group-owned by root by running: \n```\nstat -c %U:%G /etc/sysconfig/docker | grep -v root:root\n```\nThe command should return no results.\n\n## Remediation\n\nRun the following command: `chown root:root /etc/sysconfig/docker`\n\nThis sets the ownership and group ownership for the file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system, and in this case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/admin/configuring/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.20","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.20\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"xrt-uiz-s7o","createdAt":1599604498138,"name":"/etc/sysconfig/docker file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.15","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `scheduler.conf` file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe `scheduler.conf` file is the kubeconfig file for the Scheduler. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/scheduler.conf\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/scheduler.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `scheduler.conf` has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.15","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.15\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"fmc-m0d-pe5","createdAt":1599604530000,"name":"scheduler.conf file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent","control:1.2.9"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/etc/sysconfig/docker`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges, it is very important to audit its activities and usage. Its behavior depends on some key files and directories, including `/etc/sysconfig/docker`. It contains various parameters related to the Docker daemon when run on CentOS and RHEL based distributions. If present, it is important that it is audited.\n\n## Audit\n\nVerify that there is an audit rule associated with the `/etc/sysconfig/docker` file. To see the rule for the `/etc/sysconfig/docker` file, run: \n```\nauditctl -l | grep /etc/sysconfig/docker\n```\n\n## Remediation\n\nYou should add a rule for `/etc/sysconfig/docker` file. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /etc/sysconfig/docker -k docker\n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `/etc/sysconfig/docker` may not be present on the system and in that case, this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.9","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ps6-vb4-bim","createdAt":1599604561498,"name":"/etc/sysconfig/docker auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","source:compliance-agent","control:2.1"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy default, all network traffic is allowed between containers on the same host on the default network bridge. You can restrict all inter-container communication and link specific containers together that require communication. Or, you can create a custom network and only join containers that need to communicate to that custom network.\n\n## Rationale\n\nBy default, unrestricted network traffic is enabled between all containers on the same host on the default network bridge. Each container has the potential of reading all packets across the container network on the same host. This might lead to an unintended and unwanted disclosure of information to other containers. Hence, restrict inter-container communication on the default network bridge.\n\n## Audit\n\nVerify that the default network bridge has been configured to restrict inter-container communication by running:\n```\ndocker network ls --quiet | xargs docker network inspect --format '{{ .Name }}: {{ .Options }}' \n```\nCheck that it returns `com.docker.network.bridge.enable_icc:false` for the default network bridge.\n\n## Remediation\n\nEdit the Docker daemon configuration file to ensure that inter-container communication is disabled:\n\n```\n\"icc\": false\n```\n\nAlternatively, run the Docker daemon directly and pass `--icc=false` as an argument:\n\n```\ndockerd --icc=false \n```\n\nFollow the Docker documentation and create a custom network, and only join containers that need to communicate to that custom network. The `--icc` parameter only applies to the default docker bridge. If you use a custom network, adopt the segmenting networks approach instead.\n\n## Impact\n\nInter-container communication is disabled on the default network bridge. If any communication between containers on the same host is desired, it needs to be explicitly defined using container linking or custom networks.\n\n## Default value\n\nBy default, all inter-container communication is allowed on the default network bridge.\n\n## References\n\n1. [https://docs.docker.com/engine/userguide/networking/][1]\n2. [https://docs.docker.com/engine/userguide/networking/default_network/container-communication/#communication-between-containers][2]\n\n## CIS controls\n\nNone                \n\n[1]: https://docs.docker.com/engine/userguide/networking/ \n[2]: https://docs.docker.com/engine/userguide/networking/default_network/container-communication/#communication-between-containers\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_network","complianceFrameworks":[{"control":"2.1","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"dmd-zy3-5un","createdAt":1599604593277,"name":"Network traffic is restricted between containers on the default bridge"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.16","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nReject creating pods that do not match Pod Security Policies.\n\n## Rationale\n\nA Pod Security Policy is a cluster-level resource that controls the actions that a pod can perform and what it has the ability to access. The PodSecurityPolicy objects define a set of conditions that a pod must run with in order to be accepted into the system. Pod Security Policies are comprised of settings and strategies that control the security features a pod has access to and hence this must be used to control pod access permissions. Note: When the PodSecurityPolicy admission plugin is in use, there needs to be at least one PodSecurityPolicy in place for ANY pods to be admitted. See section 1.7 for recommendations on PodSecurityPolicy settings.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--enable-admission-plugins` argument is set to a value that includes `PodSecurityPolicy`.\n\n## Remediation\n\nFollow the documentation and create Pod Security Policy objects as per your environment. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --enable-admission-plugins parameter to a value that includes PodSecurityPolicy: --enable-admission-plugins=...,PodSecurityPolicy,... Then restart the API Server.\n\n## Impact\n\nThe policy objects must be created and granted before pod creation would be allowed.\n\n## Default value\n\nBy default, PodSecurityPolicy is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#podsecuritypolicy 3. https://kubernetes.io/docs/concepts/policy/pod-security-policy/#enabling-pod-security-policies\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.16","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.16\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vwz-aw9-c09","createdAt":1599604624793,"name":"Admission control plugin PodSecurityPolicy is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.4","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the file permissions on the docker.socket file are correctly set to 644 or more restrictively.\n\n## Rationale\n\nThe docker.socket file contains sensitive parameters that may alter the behavior of the Docker remote API. It should therefore be writeable only by root in order to ensure that it is not modified by less privileged users.\n\n## Audit\n\n1. Locate the `docker.socket` file by running: \n    ```\n    systemctl show -p FragmentPath docker.socket \n    ```\n2. If the file does not exist, this recommendation is not applicable. If the file exists, verify that the file permissions are set to `644` or more restrictively, by running the following command with the correct filepath:\n    ```\n    stat -c %a /usr/lib/systemd/system/docker.socket\n    ```\n\n## Remediation\n\n1. Find out the file location: `systemctl show -p FragmentPath docker.socket`\n2. If the file does not exist, this recommendation is not applicable. If the file does exist, you should execute the command below, including the correct file path to set the file permissions to 644. For example, `chmod 644 /usr/lib/systemd/system/docker.socket`\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system and in that case, this recommendation is not applicable. By default, if the file is present, the permissions should be set to 644 or more restrictively.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#bind-docker-to-another-hostport-or-a-unix-socket\n2. https://github.com/YungSang/fedora-atomic-packer/blob/master/oem/docker.socket\n3. http://daviddaeschler.com/2014/12/14/centos-7rhel-7-and-docker-containers-on-boot/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.4","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"myf-zyh-89p","createdAt":1599604656679,"name":"docker.socket file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","control:2.4","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDocker considers a private registry either secure or insecure. By default, registries are considered secure.\n\n## Rationale\n\nA secure registry uses TLS. A copy of the registry's CA certificate is placed on the Docker host in the `/etc/docker/certs.d/<registry-name>/` directory. An insecure registry is one which does not have a valid registry certificate, or one not not using TLS. You should not use insecure registries because they present a risk of traffic interception and modification. Additionally, once a registry has been marked as insecure, commands such as `docker pull`, `docker push`, and `docker search` will not result in an error message, and users may indefinitely be working with this type of insecure registry without ever being notified of the risk of potential compromise.\n\n## Audit\n\nFind out if any insecure registries are in use by running: \n```\ndocker info --format 'Insecure Registries: {{.RegistryConfig.InsecureRegistryCIDRs}}'\n```\n\n## Remediation\n\nYou should ensure that no insecure registries are in use.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, Docker assumes all registries except local ones are secure.\n\n## References\n\n1. [https://docs.docker.com/registry/insecure/][1]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.                \n\n[1]: https://docs.docker.com/registry/insecure/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.4","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"wki-o8r-1ha","createdAt":1599604688564,"name":"Insecure registries are not used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.14","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `admin.conf` file ownership is set to root:root.\n\n## Rationale\n\nThe `admin.conf` file contains the admin credentials for the cluster. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/admin.conf\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/admin.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `admin.conf` file ownership is set to `root:root`.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kubeadm/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.14","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.14\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"kcn-wwa-os0","createdAt":1599604720378,"name":"admin.conf file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.19","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/default/docker` file ownership and group-ownership is correctly set to root.\n\n## Rationale\n\nThe `/etc/default/docker` file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be individually owned and group owned by root to ensure that it cannot be modified by less privileged users.\n\n## Audit\n\nVerify that the `/etc/default/docker` file is individually owned and group-owned by root by running: \n```\nstat -c %U:%G /etc/default/docker | grep -v root:root \n```\nThe command should return no results.\n\n## Remediation\n\nExecute the following command: `chown root:root /etc/default/docker`\n\nThis sets the ownership and group ownership of the file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system, and in this case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/admin/configuring/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.19","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.19\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"o5w-d8y-ka1","createdAt":1599604751728,"name":"/etc/default/docker file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.5","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the kubelet.conf file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe `kubelet.conf` file is the kubeconfig file for the node, and controls various parameters that set the behavior and identity of the worker node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %a /etc/kubernetes/kubelet.conf`. Verify that the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun this command (based on the file location on your system) on the each worker node. For example, `chmod 644 /etc/kubernetes/kubelet.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kubelet.conf` file has permissions of 640.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior. \n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.5","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"x88-8vs-ygw","createdAt":1599604783481,"name":"kubelet.conf file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.5","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should not allow sensitive host system directories such as those listed below to be mounted as container volumes, especially in read-write mode. `/` `/boot` `/dev` `/etc` `/lib` `/proc` `/sys` `/usr`\n\n## Rationale\n\nIf sensitive directories are mounted in read-write mode, it is possible to make changes to files within them. This has obvious security implications and should be avoided.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Volumes={{ .Mounts }}'` This command returns a list of currently mapped directories and indicates whether they are mounted in read-write mode for each container instance.\n\n## Remediation\n\nDo not mount directories which are security sensitive on the host within containers, especially in read-write mode.\n\n## Impact\n\nNone\n\n## Default value\n\nDocker defaults to using a read-write volume but you can also mount a directory read-only. By default, no sensitive host directories are mounted within containers.\n\n## References\n\n1. https://docs.docker.com/engine/tutorials/dockervolumes/\n\n## CIS controls\n\nVersion 6\n\n14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.5","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"dmq-wqu-2im","createdAt":1599604814929,"name":"Sensitive host system directories are not mounted on containers"}]}
    headers:
      Content-Type:
      - application/json
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=1&page%5Bsize%5D=100
    method: GET
  response:
    body: |
      {"meta":{"page":{"total_filtered_count":52,"total_count":152}},"data":[{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.28","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nExplicitly set a service account public key file for service accounts on the apiserver.\n\n## Rationale\n\nBy default, if no --service-account-key-file is specified to the apiserver, it uses the private key from the TLS serving certificate to verify service account tokens. To ensure that the keys for service account tokens could be rotated as needed, a separate public/private key pair should be used for signing service account tokens. Hence, the public key should be specified to the apiserver with --service-account-key-file.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--service-account-key-file` argument exists and is set as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--service-account-key-file` parameter to the public key file for service accounts: `--service-account-key-file=<filename>`\n\n## Impact\n\nThe corresponding private key must be provided to the controller manager. You would need to securely maintain the key file and rotate the keys based on your organization's key rotation policy.\n\n## Default value\n\nBy default, `--service-account-key-file` argument is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://github.com/kubernetes/kubernetes/issues/24167\n\n## CIS controls\n\nVersion 6 3 Secure Configurations for Hardware and Software on Mobile Devices, Laptops, Workstations, and Servers \nVersion 7 5 Secure Configuration for Hardware and Software on Mobile Devices, Laptops, Workstations and Servers \n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.28","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.28\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"xtg-mzn-vft","createdAt":1599604846892,"name":"--service-account-key-file argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent","control:5.30"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should not share the host's user namespaces with containers running on it.\n\n## Rationale\n\nUser namespaces ensure that a root process inside the container will be mapped to a non-root process outside the container. Sharing the user namespaces of the host with the container does not therefore isolate users on the host from users in the containers.\n\n## Audit\n\nRun this command and ensure that it does not return any value for `UsernsMode`. If it returns a value of `host`, it means that the host user namespace is shared with its containers: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: UsernsMode={{ .HostConfig.UsernsMode }}'`\n\n## Remediation\n\nDo not share user namespaces between host and containers. For example, do not run the command `docker run --rm -it --userns=host ubuntu bash`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the host user namespace is shared with containers unless user namespace support is enabled.\n\n## References\n\n1. https://docs.docker.com/engine/security/userns-remap/\n2. https://docs.docker.com/engine/reference/commandline/run/#options\n3. https://github.com/docker/docker/pull/12648\n4. https://events.linuxfoundation.org/sites/events/files/slides/User%20Namespaces%20-%20ContainerCon%202015%20-%2016-9-final_0.pdf\n\n## CIS controls\n\nVersion 6\n\n12 Boundary Defense Boundary Defense\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.30","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.30\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"e7c-uzf-jwy","createdAt":1599604878282,"name":"Host's user namespaces are not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","requirement:Container-Images-and-Build-File-Configuration","framework:cis-docker","control:4.6","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should add the `HEALTHCHECK` instruction to your Docker container images in order to ensure that health checks are executed against running containers.\n\n## Rationale\n\nAn important security control is that of availability. Adding the `HEALTHCHECK` instruction to your container image ensures that the Docker engine periodically checks the running container instances against that instruction to ensure that containers are still operational. Based on the results of the health check, the Docker engine could terminate containers which are not responding correctly, and instantiate new ones.\n\n## Audit\n\nRun this command to ensure that Docker images have the appropriate `HEALTHCHECK` instruction configured: `docker inspect --format='{{ .Config.Healthcheck }}' <IMAGE>`\n\n## Remediation\n\nYou should follow the Docker documentation and rebuild your container images to include the `HEALTHCHECK` instruction.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `HEALTHCHECK` is not set.\n\n## References\n\n1. https://docs.docker.com/engine/reference/builder/#healthcheck\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_image","complianceFrameworks":[{"control":"4.6","framework":"cis-docker","requirement":"Container-Images-and-Build-File-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-4.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"5xs-afd-sfx","createdAt":1599604909942,"name":"HEALTHCHECK instructions have been added to container images"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:5.7.4","source:compliance-agent","requirement:General-Policies","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nKubernetes provides a default namespace, where objects are placed if no namespace is specified for them. Placing objects in this namespace makes application of RBAC and other controls more difficult.\n\n## Rationale\n\nResources in a Kubernetes cluster should be segregated by namespace, to allow for security controls to be applied at that level and to make it easier to manage resources.\n\n## Audit\n\nRun this command to list objects in default namespace: `kubectl get all`\n\nThe only entries there should be system managed resources such as the Kubernetes service.\n\n## Remediation\n\nEnsure that namespaces are created to allow for appropriate segregation of Kubernetes resources and that all new resources are created in a specific namespace.\n\n## Impact\n\nNone\n\n## Default value\n\nUnless a namespace is specific on object creation, the default namespace will be used.\n\n## References\n\nNone\n\n## CIS controls\n\nNone\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.7.4","framework":"cis-kubernetes","requirement":"General-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.7.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"gly-1rp-obv","createdAt":1599604941259,"name":"The default namespace should not be used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.21","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSeccomp filtering provides a means for a process to specify a filter for incoming system calls. The default Docker seccomp profile works on a whitelist basis and allows for a large number of common system calls, whilst blocking all others. This filtering should not be disabled unless it causes a problem with your container application usage.\n\n## Rationale\n\nA large number of system calls are exposed to every userland process with many of them going unused for the entire lifetime of the process. Most of applications do not need all these system calls and would therefore benefit from having a reduced set of available system calls. Having a reduced set of system calls reduces the total kernel surface exposed to the application and thus improvises application security.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: SecurityOpt={{ .HostConfig.SecurityOpt }}'` \n\nThis returns either `<no value>` or your modified seccomp profile. If it returns `[seccomp:unconfined]`, the container is running without any seccomp profiles and is therefore not configured in line with good security practices.\n\n## Remediation\n\nBy default, seccomp profiles are enabled. You do not need to do anything unless you want to modify and use a modified seccomp profile.\n\n## Impact\n\nWith Docker 1.10 and greater, the default seccomp profile blocks syscalls, regardless of `--cap-add passed` to the container. You should create your own custom seccomp profile in such cases. You can also disable the default seccomp profile by passing `--security-opt=seccomp:unconfined` on docker run.\n\n## Default value\n\nWhen you run a container, it uses the default profile unless you override it with the `--security-opt` option.\n\n## References\n\n1. http://blog.scalock.com/new-docker-security-features-and-what-they-mean-seccomp-profiles\n2. https://docs.docker.com/engine/reference/run/#security-configuration\n3. https://github.com/docker/docker/blob/master/profiles/seccomp/default.json\n4. https://docs.docker.com/engine/security/seccomp/\n5. https://www.kernel.org/doc/Documentation/prctl/seccomp_filter.txt\n6. https://github.com/docker/docker/issues/22870\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.21","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.21\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"hub-v5u-cw0","createdAt":1599604972925,"name":"Default seccomp profile is not Disabled"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.7","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAllow Kubelet to manage `iptables`.\n\n## Rationale\n\nKubelets can automatically manage the required changes to `iptables` based on how you choose your networking options for the pods. It is recommended to let kubelets manage the changes to `iptables`. This ensures that the `iptables` configuration remains in sync with pods networking configuration. Manually configuring `iptables` with dynamic pod network configuration changes might hamper the communication between pods/containers and to the outside world. You might have `iptables` rules too restrictive or too open.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that if the `--make-iptables-util-chains` argument exists then it is set to true. If the `--make-iptables-util-chains` argument does not exist, and there is a Kubelet config file specified by `--config`, verify that the file does not set `makeIPTablesUtilChains` to `false`.\n\n## Remediation\n\nIf using a kubelet config file, edit the file to set `makeIPTablesUtilChains: true`. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and remove the `--make-iptables-util-chains` argument from the `KUBELET_SYSTEM_PODS_ARGS` variable. Based on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nKubelet would manage the `iptables` on the system and keep it in sync. If you are using any other `iptables` management solution, then there might be some conflicts.\n\n## Default value\n\nBy default, `--make-iptables-util-chains argument` is set to true.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.9 Limitation and Control of Network Ports, Protocols, and Services\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.7","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"f3g-zcg-jm0","createdAt":1599605004390,"name":"--make-iptables-util-chains argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.2","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSELinux is an effective and easy-to-use Linux application security system. It is available by default on some distributions such as Red Hat and Fedora.\n\n## Rationale\n\nSELinux provides a Mandatory Access Control (MAC) system that greatly augments the default Discretionary Access Control (DAC) model. You can therefore add an extra layer of safety to your containers by enabling SELinux on your Linux host.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: SecurityOpt={{ .HostConfig.SecurityOpt }}'` \n\nThis command returns all the security options currently configured on the containers listed.\n\n## Remediation\n\nIf SELinux is applicable for your Linux OS, you should use it.\n\n1. Set the SELinux State.\n2. Set the SELinux Policy.\n3. Create or import a SELinux policy template for Docker containers.\n4. Start Docker in daemon mode with SELinux enabled. For example: `docker daemon --selinux-enabled`\n5. Start your Docker container using the security options. For example, `docker run --interactive --tty --security-opt label=level:TopSecret centos /bin/bash`\n\n## Impact\n\nAny restrictions defined in the SELinux policy will be applied to your containers. It should be noted that if your SELinux policy is misconfigured, this may have an impact on the correct operation of the affected containers.\n\n## Default value\n\nBy default, no SELinux security options are applied on containers.\n\n## References\n\n1. https://docs.docker.com/engine/security/security/#other-kernel-security-features\n2. https://docs.docker.com/engine/reference/run/#security-configuration\n3. http://docs.fedoraproject.org/en-US/Fedora/13/html/Security-Enhanced_Linux/\n4. https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux_atomic_host/7/html/container_security_guide/docker_selinux_security_policy\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.2","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"eww-c9f-0hf","createdAt":1599605036108,"name":"SELinux security options are set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.26","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIf the container image does not have an HEALTHCHECK instruction defined, you should use the `--health-cmd` parameter at container runtime to check container health.\n\n## Rationale\n\nIf the container image you are using does not have a pre-defined HEALTHCHECK instruction, use the `--health-cmd` parameter to check container health at runtime. Based on the reported health status, remedial actions can be taken if necessary.\n\n## Audit\n\nRun this command and ensure that all containers are reporting their health status: `docker ps --quiet | xargs docker inspect --format '{{ .Id }}: Health={{ .State.Health.Status }}'`\n\n## Remediation\n\nYou should run the container using the `--health-cmd` parameter. For example, `docker run -d --health-cmd='stat /etc/passwd || exit 1' nginx`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, health checks are not carried out at container runtime.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#healthcheck\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.26","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.26\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ojg-sb1-nso","createdAt":1599605067593,"name":"Container health is checked at runtime"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","control:2.5","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEtcd should be configured for peer authentication.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be accessible only by authenticated etcd peers in the etcd cluster.\n\n## Audit\n\nThis recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable.\n\nRun the following command on the etcd server node: \n```\nps -ef | grep etcd\n```\nVerify that the `--peer-client-cert-auth` argument is set to `true`.  \n\n## Remediation\n\nEdit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and set the below parameter:\n\n```\n--peer-client-cert-auth=true\n```\n\n## Impact\n\nAll peers attempting to communicate with the etcd server will require a valid client certificate for authentication.\n\n## Default value\n\n*Note*: This recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable. By default, `--peer-client-cert-auth` argument is set to false.\n\n## References\n\n1. https://coreos.com/etcd/docs/latest/op-guide/security.html \n2. https://kubernetes.io/docs/admin/etcd/ \n3. https://coreos.com/etcd/docs/latest/op-guide/configuration.html#peer-client-cert-auth\n\n## CIS controls\n\nVersion 6.14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities. \n\nVersion 7.14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.                \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/ \n[3]: https://coreos.com/etcd/docs/latest/op-guide/configuration.html#peer-client-cert-auth\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.5","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"l01-5y2-miz","createdAt":1599605099307,"name":"--peer-client-cert-auth argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","requirement:Container-Images-and-Build-File-Configuration","framework:cis-docker","control:4.1","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nContainers should run as a non-root user.\n\n## Rationale\n\nIt is good practice to run the container as a non-root user, where possible. This can be done either via the USER directive in the Dockerfile or through [gosu][1] or similar where used as part of the CMD or ENTRYPOINT directives.\n\n## Remediation\n\nEnsure that the Dockerfile for each container image contains `USER <username or ID>`\n\nIn this case, the user name or ID refers to the user that was found in the container base image. If there is no specific user created in the container base image, then make use of the `useradd` command to add a specific user before the USER instruction in the Dockerfile. \n\nFor example, add the below lines in the Dockerfile to create a user in the container:\n`RUN useradd -d /home/username -m -s /bin/bash username USER username`\n\n**Note**: If there are users in the image that are not needed, you should consider deleting them. After deleting those users, commit the image and then generate new instances of the containers. Alternatively, if it is not possible to set the USER directive in the Dockerfile, a script running as part of the CMD or ENTRYPOINT sections of the Dockerfile should be used to ensure that the container process switches to a non-root user.\n\n## Impact\n\nRunning as a non-root user can present challenges when binding mount volumes from the underlying host. In this case, ensure that the user running the contained process can read and write to the bound directory, according to their requirements.\n\n## Default value\n\nBy default, containers are run with root privileges and also run as the root user inside the container.\n\n## References\n\n1. https://github.com/docker/docker/issues/2918\n2. https://github.com/docker/docker/pull/4572\n3. https://github.com/docker/docker/issues/7906\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://github.com/tianon/gosu\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"4.1","framework":"cis-docker","requirement":"Container-Images-and-Build-File-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-4.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"iml-sbn-bao","createdAt":1599605130883,"name":"A user for the container has been created"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Controller-Manager","control:1.3.6","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable kubelet server certificate rotation on controller-manager.\n\n## Rationale\n\n`RotateKubeletServerCertificate` causes the kubelet to both request a serving certificate after bootstrapping its client credentials and rotate the certificate as its existing credentials expire. This automated periodic rotation ensures that the there are no downtimes due to expired certificates and thus addressing availability in the CIA security triad. \n\n*Note*: This recommendation only applies if you let kubelets get their certificates from the API server. In case your kubelet certificates come from an outside authority/tool (e.g. Vault) then you need to take care of rotation yourself.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-controller-manager\n```\nVerify that `RotateKubeletServerCertificate` argument exists and is set to `true`.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and set the `--feature-gates` parameter to include `RotateKubeletServerCertificate=true`. \n\n```\n--feature-gates=RotateKubeletServerCe`rtificate=true\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `RotateKubeletServerCertificate` is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet-tls-bootstrapping/#approval-controller ][1]\n2. [https://github.com/kubernetes/features/issues/267 ][2]\n3. [https://github.com/kubernetes/kubernetes/pull/45059 ][3]\n4. [https://kubernetes.io/docs/admin/kube-controller-manager/][4]\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.               \n\n[1]: https://kubernetes.io/docs/admin/kubelet-tls-bootstrapping/#approval-controller \n[2]: https://github.com/kubernetes/features/issues/267 \n[3]: https://github.com/kubernetes/kubernetes/pull/45059 \n[4]: https://kubernetes.io/docs/admin/kube-controller-manager/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.6","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"asw-6hh-yc2","createdAt":1599605162809,"name":"RotateKubeletServerCertificate argument is set to true (Controller Manager)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.2","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the kubelet service file ownership is set to root:root.\n\n## Rationale\n\nThe kubelet service file controls various parameters that set the behavior of the kubelet service in the worker node. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %U:%G /etc/systemd/system/kubelet.service.d/10-kubeadm.conf`. Verify that the ownership is set to root:root.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the each worker node.\n\nFor example, `chown root:root /etc/systemd/system/kubelet.service.d/10-kubeadm.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, kubelet service file ownership is set to root:root.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#44-joining-your-nodes ][2]\n3. [https://kubernetes.io/docs/admin/kubeadm/#kubelet-drop-in][3]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#44-joining-your-nodes\n[3]: https://kubernetes.io/docs/admin/kubeadm/#kubelet-drop-in\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.2","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"sy4-z1k-udc","createdAt":1599605194356,"name":"Kubelet service file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.8","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that all the registry certificate files, usually found under `/etc/docker/certs.d/<registry-name> directory`, have permissions of 444 or are set more restrictively.\n\n## Rationale\n\nThe `/etc/docker/certs.d/<registry-name>` directory contains Docker registry certificates. These certificate files must have permissions of 444or more restrictive permissions in order to ensure that unprivileged users do not have full access to them..\n\n## Audit\n\nYou should execute the command below to verify that registry certificate files have permissions of 444+.\n\n```\nstat -c %a /etc/docker/certs.d/<registry-name>/*\n```\n\n## Remediation\n\nRun the following command: `chmod 444 /etc/docker/certs.d/<registry-name>/*`\n\nThis sets the permissions for the registry certificate files to 444.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for registry certificate files might not be 444. The default file permissions are governed by the system or user specific umask values which are defined within the operating system itself.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.8","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"sjq-1m3-njp","createdAt":1599605226177,"name":"Registry certificate file permissions are set to 444 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","source:compliance-agent","control:1.2.9","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nTurn on Role Based Access Control.\n\n## Rationale\n\nRole Based Access Control (RBAC) allows fine-grained control over the operations that different entities can perform on different objects in the cluster. It is recommended to use the RBAC authorization mode.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--authorization-mode` argument exists and is set to a value to include RBAC.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--authorization-mode` parameter to a value that includes RBAC, for example: `--authorization-mode=Node,RBAC`\n\n## Impact\n\nWhen RBAC is enabled you will need to ensure that appropriate RBAC settings (including Roles, RoleBindings and ClusterRoleBindings) are configured to allow appropriate access.\n\n## Default value\n\nBy default, RBAC authorization is not enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/reference/access-authn-authz/rbac/][1]\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.                \n\n[1]: https://kubernetes.io/docs/reference/access-authn-authz/rbac/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.9","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"bn4-mzo-nyg","createdAt":1599605257601,"name":"--authorization-mode argument includes RBAC"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","source:compliance-agent","control:1.1.18","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the controller-manager.conf file ownership is set to `root:root`.\n\n## Rationale\n\nThe controller-manager.conf file is the kubeconfig file for the Controller Manager. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/controller-manager.conf\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/controller-manager.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `controller-manager.conf` file ownership is set to `root:root`.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-controller-manager/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.18","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.18\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"bud-aya-umc","createdAt":1599605289575,"name":"controller-manager.conf file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","control:3.3","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the docker.socket file ownership and group ownership are correctly set to root.\n\n## Rationale\n\nThe docker.socket file contains sensitive parameters that may alter the behavior of the Docker remote API. For this reason, it should be owned and group owned by root in order to ensure that it is not modified by less privileged users.\n\n## Audit\n\n1. Locate the `docker.socket` file by running: \n    ```\n    systemctl show -p FragmentPath docker.socket\n    ```\n2. If the file does not exist, this recommendation is not applicable. If the file exists, verify that the file is owned and group-owned by root by running the following command with the correct filepath:\n    ```\n    stat -c %U:%G /usr/lib/systemd/system/docker.socket | grep -v root:root \n    ```\n    The command should not return a value.\n\n## Remediation\n\n1. Find out the file location: `systemctl show -p FragmentPath docker.socket`\n2. If the file does not exist, this recommendation is not applicable. If the file exists, execute the command below, including the correct file path to set the ownership and group ownership for the file to root. For example, `chown root:root /usr/lib/systemd/system/docker.socket`\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system. In that case, this recommendation is not applicable. By default, if the file is present, the ownership and group ownership for it should be set to root.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option 2. https://github.com/docker/docker-ce/blob/master/components/packaging/deb/systemd/docker.socket\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.3","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vc0-12t-fpa","createdAt":1599605321060,"name":"docker.socket file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.11","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable kubelet client certificate rotation.\n\n## Rationale\n\nThe `--rotate-certificates` setting causes the kubelet to rotate its client certificates by creating new CSRs as its existing credentials expire. This automated periodic rotation ensures that the there is no downtime due to expired certificates and thus addressing availability in the CIA security triad.\n\n*Note*: This recommendation only applies if you let kubelets get their certificates from the API server. In case your kubelet certificates come from an outside authority/tool (e.g. Vault) then you need to take care of rotation yourself. \n\n*Note*: This feature also requires the `RotateKubeletClientCertificate` feature gate to be enabled (which is the default since Kubernetes v1.7).\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--rotate-certificates` argument is not present, or is set to true. If the `--rotate-certificates` argument is not present, verify that if there is a Kubelet config file specified by `--config`, that file does not contain `rotateCertificates: false`.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to add the line `rotateCertificates: true` or remove it altogether to use the default value. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and remove the `--rotate-certificates=false` argument from the `KUBELET_CERTIFICATE_ARGS` variable. Based on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, kubelet client certificate rotation is enabled.\n\n## References\n\n1. [https://github.com/kubernetes/kubernetes/pull/41912 ][1]\n2. [https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-tls-bootstrapping/#kubelet-configuration ][2]\n3. [https://kubernetes.io/docs/imported/release/notes/ ][3]\n4. [https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/][4]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted - Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted.\n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n\n[1]: https://github.com/kubernetes/kubernetes/pull/41912\n[2]: https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-tls-bootstrapping/#kubelet-configuration\n[3]: https://kubernetes.io/docs/imported/release/notes/\n[4]: https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.11","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"9x3-sy5-pte","createdAt":1599605353070,"name":"--rotate-certificates argument is not set to false"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.13","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `admin.conf` file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe admin.conf is the administrator kubeconfig file defining various settings for the administration of the cluster. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/admin.conf\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/admin.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, admin.conf has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.13","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.13\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"zlc-pqm-t1x","createdAt":1599605384539,"name":"admin.conf file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.9","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that if the kubelet refers to a configuration file with the `--config` argument, that file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe kubelet reads various parameters, including security settings, from a config file specified by the `--config` argument. If this file is specified you should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nLocate the Kubelet config file as follows: `ps -ef | grep kubelet | grep config`. If the `--config` argument is present, this gives the location of the Kubelet config file, for example `/var/lib/kubelet/config.yaml`. Run the following command (using the file location you just identified) to find that file's permissions: `stat -c %a /var/lib/kubelet/config.yaml`. Verify that the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the following command (using the config file location identified in the Audit step:\n\n```\nchmod 644 /var/lib/kubelet/config.yaml\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `/var/lib/kubelet/config.yaml` file as set up by kubeadm has permissions of 644.\n\n## References\n\n1. [https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.9","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tc4-kmy-wlt","createdAt":1599605416397,"name":"Kubelet configuration file has permissions set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.15","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nReject creating objects in a namespace that is undergoing termination.\n\n## Rationale\n\nSetting admission control policy to NamespaceLifecycle ensures that objects cannot be created in non-existent namespaces, and that namespaces undergoing termination are not used for creating the new objects. This is recommended to enforce the integrity of the namespace termination process and also for the availability of the newer objects.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--disable-admission-plugins` argument is set to a value that does not include `NamespaceLifecycle`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --disable-admission-plugins parameter to ensure it does not include NamespaceLifecycle.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, NamespaceLifecycle is set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#namespacelifecycle\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.15","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.15\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"elk-zj3-p6m","createdAt":1599605447784,"name":"Admission control plugin NamespaceLifecycle is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:1.2.2","framework_version:1.5.1","scored:true","security:compliance","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use basic authentication.\n\n## Rationale\n\nBasic authentication uses plaintext credentials for authentication. Currently, the basic authentication credentials last indefinitely, and the password cannot be changed without restarting the API server. The basic authentication is currently supported for convenience. Hence, basic authentication should not be used.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--basic-auth-file` argument does not exist.\n\n## Remediation\n\nFollow the documentation and configure alternate mechanisms for authentication. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and remove the `--basic-auth-file=<filename>` parameter.\n\n## Impact\n\nYou will have to configure and use alternate authentication mechanisms such as tokens and certificates. Username and password for basic authentication could no longer be used.\n\n## Default value\n\nBy default, basic authentication is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n2. https://kubernetes.io/docs/admin/authentication/#static-password-file\n\n## CIS controls\n\nVersion 6\n\n16.14 Encrypt/Hash All Authentication Files And Monitor Their Access - Verify that all authentication files are encrypted or hashed and that these files cannot be accessed without root or administrator privileges. Audit all access to password files in the system.\n\nVersion 7\n\n16.4 Encrypt or Hash all Authentication Credentials - Encrypt or hash with a salt all authentication credentials when stored.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.2","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oug-uvq-sti","createdAt":1599605479472,"name":"--basic-auth-file argument is not set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.9","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nWhen the networking mode on a container is set to `--net=host`, the container is not placed inside a separate network stack. Effectively, applying this option instructs Docker to not containerize the container's networking. The consequence of this is that the container lives \"outside\" in the main Docker host and has full access to its network interfaces.\n\n## Rationale\n\nSelecting this option is potentially dangerous. It allows the container process to open reserved low numbered ports in the way that any other root process can. It also allows the container to access network services such as D-bus on the Docker host. A container process could potentially carry out undesired actions, such as shutting down the Docker host. This option should not be used unless there is a very specific reason for enabling it.\n\n## Audit\n\nUse this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: NetworkMode={{ .HostConfig.NetworkMode }}'` If this returns `NetworkMode=host`, it means that the `--net=host` option was passed when the container was started.\n\n## Remediation\n\nYou should not pass the --net=host option when starting any container.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, containers connect to the Docker bridge when starting and do not run in the context of the host's network stack.\n\n## References\n\n1. https://docs.docker.com/engine/userguide/networking/ 2. https://docs.docker.com/engine/reference/run/#network-settings\n\n## CIS controls\n\nVersion 6 12 Boundary Defense Boundary Defense\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.9","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"1qj-oqa-jau","createdAt":1599605510860,"name":"Host's network namespace is not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.24","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nRetain 10 or an appropriate number of old log files.\n\n## Rationale\n\nKubernetes automatically rotates the log files. Retaining old log files ensures that you would have sufficient log data available for carrying out any investigation or correlation. For example, if you have set file size of 100 MB and the number of old log files to keep as 10, you would approximate have 1 GB of log data that you could potentially use for your analysis.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-log-maxbackup` argument is set to `10` or as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--audit-log-maxbackup` parameter to `10` or to an appropriate value: `--audit-log-maxbackup=10`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, auditing is not enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://kubernetes.io/docs/concepts/cluster-administration/audit/ \n3. https://github.com/kubernetes/features/issues/22\n\n## CIS controls\n\nVersion 6 6.3 Ensure Audit Logging Systems Are Not Subject To Loss (i.e. rotation/archive) Ensure that all systems that store logs have adequate storage space for the logs generated on a regular basis, so that log files will not fill up between log rotation intervals. The logs must be archived and digitally signed on a periodic basis. Version 7 6.4 Ensure adequate storage for logs Ensure that all systems that store logs have adequate storage space for the logs generated.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.24","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.24\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"r0g-aai-2xf","createdAt":1599605542630,"name":"--audit-log-maxbackup argument is set to 10 or as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.15","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker socket file is owned by root and group owned by docker.\n\n## Rationale\n\nThe Docker daemon runs as root. The default Unix socket therefore must be owned by root. If any other user or process owns this socket, it might be possible for that non-privileged user or process to interact with the Docker daemon. Additionally, in this case a non-privileged user or process might be able to interact with containers which is neither a secure nor desired behavior. Additionally, the Docker installer creates a Unix group called docker. You can add users to this group, and in this case, those users would be able to read and write to the default Docker Unix socket. The membership of the docker group is tightly controlled by the system administrator. However, ff any other group owns this socket, then it might be possible for members of that group to interact with the Docker daemon. Such a group might not be as tightly controlled as the docker group. Again, this is not in line with good security practice. For these reason, the default Docker Unix socket file should be owned by root and group owned by docker to maintain the integrity of the socket file.\n\n## Audit\n\nVerify that the Docker socket file is owned by root and group-owned by `docker` by running: \n```\nstat -c %U:%G /var/run/docker.sock | grep -v root:docker\n```\nThe command should return no results.\n\n## Remediation\n\nRun the following command: `chown root:docker /var/run/docker.sock`\n\nThis sets the ownership to root and group ownership to docker for the default Docker socket file.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the ownership and group ownership for the Docker socket file is correctly set to root:docker.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option\n2. https://docs.docker.com/engine/reference/commandline/dockerd/#bind-docker-to-another-hostport-or-a-unix-socket\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.15","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.15\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ysh-lkt-poz","createdAt":1599605574088,"name":"Docker socket file ownership is set to root:docker"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.7","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `/etc/kubernetes/manifests/etcd.yaml` file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` controls various parameters that set the behavior of the etcd service in the master node. etcd is a highly-available key-value store which Kubernetes uses for persistent storage of all of its REST API object. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/manifests/etcd.yaml\n```\n\nVerify the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/manifests/etcd.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `/etc/kubernetes/manifests/etcd.yaml` file has permissions of 640.\n\n## References\n\n1. https://coreos.com/etcd\n2. https://kubernetes.io/docs/admin/etcd/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.7","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vqc-dps-6tp","createdAt":1599605605880,"name":"etcd pod specification file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.11","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/usr/bin/containerd`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `/usr/bin/containerd`, so it should be audited.\n\n## Audit\n\nVerify that there is an audit rule corresponding to the `/usr/bin/containerd` file. To display the rule for the `/usr/bin/containerd` file, run: \n\n```\nauditctl -l | grep /usr/bin/containerd\n```\n\n## Remediation\n\nYou should add a rule for the `/usr/bin/containerd` file. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /usr/bin/containerd -k docker \n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `/usr/bin/containerd` may not be present on the system and in that case, this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n2. [https://github.com/docker/docker/pull/20662][2]\n3. [https://containerd.tools/][3]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html \n[2]: https://github.com/docker/docker/pull/20662 \n[3]: https://containerd.tools/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.11","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tor-6yx-oyz","createdAt":1599605637503,"name":"/usr/bin/containerd auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.32","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\netcd should be configured to make use of TLS encryption for client connections.\n\n## Rationale\n\netcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be protected by client authentication. This requires the API server to identify itself to the etcd server using a SSL Certificate Authority file.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--etcd-cafile` argument exists and it is set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection between the apiserver and etcd. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the etcd certificate authority file parameter: `--etcd-cafile=<path/to/ca-file>`\n\n## Impact\n\nTLS and client certificate authentication must be configured for etcd.\n\n## Default value\n\nBy default, `--etcd-cafile` is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://coreos.com/etcd/docs/latest/op-guide/security.html\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.32","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.32\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"o8k-9hv-rri","createdAt":1599605669411,"name":"--etcd-cafile argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.23","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nRetain the logs for at least 30 days or as appropriate.\n\n## Rationale\n\nRetaining logs for at least 30 days ensures that you can go back in time and investigate or correlate any events. Set your audit log retention period to 30 days or as per your business requirements.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-log-maxage` argument is set to `30` or as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--audit-log-maxage` parameter to `30` or as an appropriate number of days: `--audit-log-maxage=30`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, auditing is not enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://kubernetes.io/docs/concepts/cluster-administration/audit/ \n3. https://github.com/kubernetes/features/issues/22\n\n## CIS controls\n\nVersion 6 6.3 Ensure Audit Logging Systems Are Not Subject To Loss (i.e. rotation/archive) Ensure that all systems that store logs have adequate storage space for the logs generated on a regular basis, so that log files will not fill up between log rotation intervals. The logs must be archived and digitally signed on a periodic basis. Version 7 6.4 Ensure adequate storage for logs Ensure that all systems that store logs have adequate storage space for the logs generated.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.23","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.23\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"jbu-o8v-pku","createdAt":1599605700813,"name":"--audit-log-maxage argument is set to 30 or as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.5","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable certificate based kubelet authentication.\n\n## Rationale\n\nThe apiserver, by default, does not authenticate itself to the kubelet's HTTPS endpoints. The requests from the apiserver are treated anonymously. You should set up certificate-based kubelet authentication to ensure that the apiserver authenticates itself to kubelets when submitting requests.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--kubelet-client-certificate` and `--kubelet-client-key` arguments exist and they are set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection between the apiserver and kubelets. Then, edit API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the kubelet client certificate and key parameters as below. \n\n```\n--kubelet-client-certificate=<path/to/client-certificate-file> \n--kubelet-client-key=<path/to/client-key-file>\n```\n\n## Impact\n\nYou require TLS to be configured on apiserver as well as kubelets.\n\n## Default value\n\nBy default, certificate-based kubelet authentication is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-apiserver/ ][1]\n2. [https://kubernetes.io/docs/admin/kubelet-authentication-authorization/ ][2]\n3. [https://kubernetes.io/docs/concepts/cluster-administration/master-node-communication/#apiserver---kubelet][3]\n\n## CIS controls\n\nVersion 6.3.4 Use Only Secure Channels For Remote System Administration - Perform all remote administration of servers, workstation, network devices, and similar equipment over secure channels. Protocols such as telnet, VNC, RDP, or others that do not actively support strong encryption should only be used if they are performed over a secondary encryption channel, such as SSL, TLS or IPSEC. \n\nVersion 7.4.5 Use Multifactor Authentication For All Administrative Access - Use multi-factor authentication and encrypted channels for all administrative account access. \n\n[1]: https://kubernetes.io/docs/admin/kube-apiserver/ \n[2]: https://kubernetes.io/docs/admin/kubelet-authentication-authorization/ \n[3]: https://kubernetes.io/docs/concepts/cluster-administration/master-node-communication/#apiserver---kubelet\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.5","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ruj-lze-13b","createdAt":1599605732980,"name":"--kubelet-client-certificate and --kubelet-client-key arguments are set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","control:1.2.6","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit the `docker.service` if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `docker.service`. The `docker.service` file might be present if the daemon parameters have been changed by an administrator. If so, it holds various parameters for the Docker daemon and should be audited.\n\n## Audit\n\n1. Locate the `docker.service` file by running: \n    ```\n    systemctl show -p FragmentPath docker.service\n    ```\n\n2. If the file does not exist, this recommendation does not apply. If the file does exist, verify that there is an audit rule corresponding to the `docker.service` file by running: \n\n    ```\n    auditctl -l | grep docker.service\n    ```\n\n## Remediation\n\nIf the file exists, a rule for it should be added. For example, add the following line to the `/etc/audit/audit.rules` file: \n```\n-w /usr/lib/systemd/system/docker.service -k docker \n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `docker.service` may not be present on the system.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.6","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"myy-dsj-omk","createdAt":1599605764788,"name":"docker.service auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","source:compliance-agent","control:1.2.19","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not bind to insecure port.\n\n## Rationale\n\nSetting up the apiserver to serve on an insecure port would allow unauthenticated and unencrypted access to your master node. This would allow attackers who could access this port, to easily take control of the cluster.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--insecure-port` argument is set to `0`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the below parameter. --insecure-port=0\n\n## Impact\n\nAll components that use the API must connect via the secured port, authenticate themselves, and be authorized to use the API. This includes: kube-controller-manager kube-proxy kube-scheduler kubelets\n\n## Default value\n\nBy default, the insecure port is set to 8080.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6 9.1 Limit Open Ports, Protocols, and Services Ensure that only ports, protocols, and services with validated business needs are running on each system. Version 7 9.2 Ensure Only Approved Ports, Protocols and Services Are Running Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.19","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.19\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"2ci-yqv-wv0","createdAt":1599605796539,"name":"--insecure-port argument is set to 0"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.10","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that if the kubelet refers to a configuration file with the `--config` argument, that file is owned by root:root.\n\n## Rationale\n\nThe kubelet reads various parameters, including security settings, from a config file specified by the `--config` argument. If this file is specified you should restrict its file permissions to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nLocate the Kubelet config file as follows: `ps -ef | grep kubelet | grep config`. If the `--config` argument is present, this gives the location of the Kubelet config file, for example `/var/lib/kubelet/config.yaml`. Run the following command (using the file location you just identified) to find that file's permissions: `stat -c %U:%G /var/lib/kubelet/config.yaml`. Verify that the ownership is set to `root:root`.\n\n## Remediation\n\nRun the following command (using the config file location identified in the Audit step): `chown root:root /etc/kubernetes/kubelet.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `/var/lib/kubelet/config.yaml` file as set up by kubeadm is owned by `root:root`.\n\n## References\n\n1. [https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.10","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ptl-pla-t0c","createdAt":1599605828233,"name":"Kubelet configuration file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.10","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy default, all containers on a Docker host share resources equally. By using the resource management capabilities of the Docker host, you can control the amount of memory that a container is able to use.\n\n## Rationale\n\nBy default a container can use all of the memory on the host. You can use memory limit mechanisms to prevent a denial of service occurring where one container consumes all of the hosts resources and other containers on the same host are therefore not able to function. Having no limit on memory usage can lead to issues where one container can easily make the whole system unstable and as a result unusable.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Memory={{ .HostConfig.Memory }}'` \n\nIf this command returns 0, it means that memory limits are not in place; if it returns a non-zero value, it means that they are in place.\n\n## Remediation\n\nYou should run the container with only as much memory as it requires by using the `--memory argument`. For example, you could run a container using the command `docker run --interactive --tty --memory 256m centos /bin/bash`\n\nIn this example, the container is started with a memory limit of 256 MB. Note that the output of the command below returns values in scientific notation if memory limits are in place. `docker inspect --format='{{.Config.Memory}}' 7c5a2d4c7fe0`\n\nFor example, if the memory limit is set to 256 MB for a container instance, the output of the command above would be `2.68435456e+08` and NOT `256m`. You should convert this value using a scientific calculator.\n\n## Impact\n\nIf correct memory limits are not set on each container, one process can expand its usage and cause other containers to run out of resources.\n\n## Default value\n\nBy default, all containers on a Docker host share their resources equally and no memory limits are enforced.\n\n## References\n\n1. https://goldmann.pl/blog/2014/09/11/resource-management-in-docker/\n2. https://docs.docker.com/engine/reference/commandline/run/#options\n3. https://docs.docker.com/engine/admin/runmetrics/\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.10","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ecn-mmt-tqe","createdAt":1599605860081,"name":"Memory usage for containers is limited"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","source:compliance-agent","control:2.2","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable client authentication on etcd service.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should not be available to unauthenticated clients. You should enable the client authentication via valid certificates to secure the access to the etcd service.\n\n## Audit\n\nRun the following command on the etcd server node:\n```\nps -ef | grep etcd\n```\nVerify that the `--client-cert-auth` argument is set to `true`.\n\n## Remediation\n\nEdit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and set the below parameter:\n\n```\n--client-cert-auth=\"true\"\n```\n\n## Impact\n\nAll clients attempting to access the etcd server will require a valid client certificate.\n\n## Default value\n\nBy default, the etcd service can be queried by unauthenticated clients.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][`]\n2. [https://kubernetes.io/docs/admin/etcd/ ][1]\n3. [https://coreos.com/etcd/docs/latest/op-guide/configuration.html#client-cert-auth][2]\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges                \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/ \n[3]: https://coreos.com/etcd/docs/latest/op-guide/configuration.html#client-cert-auth\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.2","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"joa-fjx-1li","createdAt":1599605891818,"name":"--client-cert-auth argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.3","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy default, Docker starts containers with a restricted set of Linux kernel capabilities. This means that any process can be granted the required capabilities instead of giving it root access. Using Linux kernel capabilities, processes in general do not need to run as the root user.\n\n## Rationale\n\nDocker supports the addition and removal of capabilities. Remove all capabilities not required for the correct function of the container. Specifically, in the default capability set provided by Docker, the NET_RAW capability should be removed if not explicitly required, as it can give an attacker with access to a container the ability to create spoofed network traffic.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CapAdd={{ .HostConfig.CapAdd }} CapDrop={{ .HostConfig.CapDrop }}'` \n\nVerify that the added and deleted Linux kernel capabilities are in line with the ones needed by the container process in each container instance. Specifically, ensure that the `NET_RAW` capability is removed if not required.\n\n## Remediation\n\nExecute the command `docker run --cap-add={\"Capability 1\",\"Capability 2\"} <Run arguments> <Container Image Name or ID> <Command>` to add required capabilities.\n\nExecute the command `docker run --cap-drop={\"Capability 1\",\"Capability 2\"} <Run arguments> <Container Image Name or ID> <Command>` to remove unneeded capabilities.\n\nAlternatively, remove all the currently configured capabilities and then restore only the ones you specifically use: `docker run --cap-drop=all --cap-add={\"Capability 1\",\"Capability 2\"} <Run arguments> <Container Image Name or ID> <Command>`\n\n## Impact\n\nRestrictions on processes within a container are based on which Linux capabilities are in force. Removal of the `NET_RAW` capability prevents the container from creating raw sockets which is good security practice under most circumstances, but may affect some networking utilities.\n\n## Default value\n\nBy default, the capabilities below are applied to containers:\n\n* `AUDIT_WRITE`\n* `CHOWN`\n* `DAC_OVERRIDE`\n* `FOWNER`\n* `FSETID`\n* `KILL`\n* `MKNOD`\n* `NET_BIND_SERVICE`\n* `NET_RAW`\n* `SETFCAP`\n* `SETGID`\n* `SETPCAP`\n* `SETUID`\n* `SYS_CHROOT`\n\n## References\n\n1. https://docs.docker.com/engine/security/security/#linux-kernel-capabilities\n2. http://man7.org/linux/man-pages/man7/capabilities.7.html\n3. http://www.oreilly.com/webops-perf/free/files/docker-security.pdf\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.3","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"3j5-bun-deq","createdAt":1599605923399,"name":"Linux kernel capabilities are restricted within containers"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.11","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy default, all containers on a Docker host share resources equally. By using the resource management capabilities of the Docker host you can control the host CPU resources that a container may consume.\n\n## Rationale\n\nBy default, CPU time is divided between containers equally. If you wish to control available CPU resources amongst container instances, you can use the CPU sharing feature. CPU sharing allows you to prioritize one container over others and prevents lower priority containers from absorbing CPU resources which may be required by other processes. This ensures that high priority containers are able to claim the CPU runtime they require.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CpuShares={{ .HostConfig.CpuShares }}'` \n\nIf this command returns 0 or 1024, it means that CPU shares are not in place. If it returns a non-zero value other than 1024, it means that they are in place.\n\n## Remediation\n\nYou should manage the CPU runtime between your containers dependent on their priority within your organization. To do so, start the container using the `--cpu-shares` argument. For example, you could run a container as `docker run --interactive --tty --cpu-shares 512 centos /bin/bash` The container is started with CPU shares of 50% of what other containers use. So if the other container has CPU shares of 80%, this container will have CPU shares of 40%. Every new container will have 1024 shares of CPU by default. However, this value is shown as 0 if you run the command mentioned in the audit section.\n\n\nAlternatively:\n\n1. Navigate to the `/sys/fs/cgroup/cpu/system.slice/` directory.\n2. Check your container instance ID using docker ps.\n3. Inside the above directory (in step 1), call a directory. For example: `docker-<Instance ID>.scope` or `docker-4acae729e8659c6be696ee35b2237cc1fe4edd2672e9186434c5116e1a6fbed6.scope`. Navigate to this directory.\n4. You will find a file named `cpu.shares`. Execute `cat cpu.shares`. This will always give you the CPU share value based on the system. Even if there are no CPU shares configured using the `-c` or `--cpu-shares` argument in the docker run command, this file will have a value of 1024. If you set one containers CPU shares to 512 it will receive half of the CPU time compared to the other containers. So if you take 1024 as 100% you can then derive the number that you should set for respective CPU shares. For example, use 512 if you want to set it to 50% and 256 if you want to set it 25%.\n\n## Impact\n\nIf you do not correctly assign CPU thresholds, the container process may run out of resources and become unresponsive. If CPU resources on the host are not constrained, CPU shares do not place any restrictions on individual resources.\n\n## Default value\n\nBy default, all containers on a Docker host share their resources equally. No CPU shares are enforced.\n\n## References\n\n1. https://goldmann.pl/blog/2014/09/11/resource-management-in-docker/\n2. https://docs.docker.com/engine/reference/commandline/run/#options\n3. https://docs.docker.com/engine/admin/runmetrics/\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.11","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"gfh-gqy-log","createdAt":1599605955638,"name":"CPU priority is set appropriately on containers"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.20","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUTS namespaces provide isolation between two system identifiers: the hostname and the NIS domain name. It is used to set the hostname and the domain which are visible to running processes in that namespace. Processes running within containers do not typically require to know either the hostname or the domain name. The UTS namespace should therefore not be shared with the host.\n\n## Rationale\n\nSharing the UTS namespace with the host provides full permission for each container to change the hostname of the host. This is not in line with good security practice and should not be permitted.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: UTSMode={{ .HostConfig.UTSMode }}'` \n\nIf this command returns `host`, it means the host UTS namespace is shared with the container and this recommendation is non-compliant. If the above command returns nothing, then the host's UTS namespace is not shared. This recommendation is then compliant.\n\n## Remediation\n\nYou should not start a container with the `--uts=host` argument. For example, do not start a container using the command `docker run --rm --interactive --tty --uts=host rhel7.2`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, all containers have the UTS namespace enabled and the host UTS namespace is not shared with any containers.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#uts-settings-uts\n2. http://man7.org/linux/man-pages/man7/namespaces.7.html\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.20","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.20\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"j1n-gsx-mlx","createdAt":1599605987292,"name":"Host's UTS namespace is not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","control:2.3","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use self-signed certificates for TLS.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should not be available to unauthenticated clients. You should enable the client authentication via valid certificates to secure the access to the etcd service.\n\n## Audit\n\nRun the following command on the etcd server node: \n```\nps -ef | grep etcd\n```\nVerify that if the `--auto-tls` argument exists, it is not set to `true`.\n\n## Remediation\n\nEdit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and either remove the `--auto-tls` parameter or set it to false:\n\n```\n--auto-tls=false\n```\n\n## Impact\n\nClients will not be able to use self-signed certificates for TLS.\n\n## Default value\n\nBy default, `--auto-tls` is set to false.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][1]\n2. [https://kubernetes.io/docs/admin/etcd/ ][2]\n3. [https://coreos.com/etcd/docs/latest/op-guide/configuration.html#auto-tls][3]\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. Version 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.                \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/ \n[3]: https://coreos.com/etcd/docs/latest/op-guide/configuration.html#auto-tls\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.3","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qai-h9s-xgt","createdAt":1599606018741,"name":"--auto-tls argument is not set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.1","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable anonymous requests to the Kubelet server.\n\n## Rationale\n\nWhen enabled, requests that are not rejected by other configured authentication methods are treated as anonymous requests. These requests are then served by the Kubelet server. You should rely on authentication to authorize access and disallow anonymous requests.\n\n## Audit\n\nIf using a Kubelet configuration file, check that there is an entry for authentication: anonymous: enabled set to false. Run the following command on each node: `ps -ef | grep kubelet`. Verify that the `--anonymous-auth` argument is set to false. This executable argument may be omitted, provided there is a corresponding entry set to false in the Kubelet config file.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `authentication: anonymous: enabled` to false. If using executable arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_SYSTEM_PODS_ARGS` variable:\n\n```\n--anonymous-auth=false\n```\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nAnonymous requests will be rejected.\n\n## Default value\n\nBy default, anonymous access is enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authentication][2]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.14 Controlled Access Based on the Need to Know\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authentication\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.1","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oun-uxo-viy","createdAt":1599606050277,"name":"Anonymous-auth argument is set to false"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.18","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not bind the insecure API service.\n\n## Rationale\n\nIf you bind the apiserver to an insecure address, basically anyone who could connect to it over the insecure port, would have unauthenticated and unencrypted access to your master node. The apiserver doesn't do any authentication checking for insecure binds and traffic to the Insecure API port is not encrpyted, allowing attackers to potentially read sensitive data in transit.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--insecure-bind-address` argument does not exist.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and remove the --insecure-bind-address parameter.\n\n## Impact\n\nConnections to the API server will require valid authentication credentials.\n\n## Default value\n\nBy default, the insecure bind address is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6 9.1 Limit Open Ports, Protocols, and Services Ensure that only ports, protocols, and services with validated business needs are running on each system. Version 7 9.2 Ensure Only Approved Ports, Protocols and Services Are Running Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.18","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.18\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tzo-x3g-yya","createdAt":1599606081666,"name":"--insecure-bind-address argument is not set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.29","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\netcd should be configured to make use of TLS encryption for client connections.\n\n## Rationale\n\netcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be protected by client authentication. This requires the API server to identify itself to the etcd server using a client certificate and key.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--etcd-certfile` and `--etcd-keyfile` arguments exist and they are set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection between the apiserver and etcd. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the etcd certificate and key file parameters. \n```\n--etcd-certfile=<path/to/client-certificate-file> \n--etcd-keyfile=<path/to/client-key-file>\n```\n\n## Impact\n\nTLS and client certificate authentication must be configured for etcd.\n\n## Default value\n\nBy default, `--etcd-certfile` and `--etcd-keyfile` arguments are not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://coreos.com/etcd/docs/latest/op-guide/security.html\n\n## CIS controls\n\nVersion 6 9 Limitation and Control of Network Ports, Protocols, and Services\nVersion 7 9 Limitation and Control of Network Ports, Protocols, and Services\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.29","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.29\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"2xl-vuo-tud","createdAt":1599606113167,"name":"--etcd-certfile and --etcd-keyfile arguments are set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.9","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the TLS CA certificate file, the file that is passed along with the `--tlscacert parameter`, is individually owned and group owned by root.\n\n## Rationale\n\nThe TLS CA certificate file should be protected from any tampering. It is used to authenticate the Docker server based on a given CA certificate. It must be therefore be individually owned and group owned by root to ensure that it cannot be modified by less privileged users.\n\n## Audit\n\nYou should execute the command below to verify that the TLS CA certificate file is owned and group owned by root: \n\n```\nstat -c %U:%G <path to TLS CA certificate file> | grep -v root:root\n```\n\nThis command does not return any data.\n\n## Remediation\n\nRun the following command: `chown root:root <path to TLS CA certificate file>`\n\nThis sets the individual ownership and group ownership for the TLS CA certificate file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the ownership and group-ownership for TLS CA certificate file is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.9","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"8nb-ex2-pqe","createdAt":1602076303298,"name":"TLS CA certificate file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","source:compliance-agent","control:2.2"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSet Docker daemon log level to `info`.\n\n## Rationale\n\nSetting up an appropriate log level configures the Docker daemon to log events that you would want to review later. A base log level of `info` and above captures all logs except `debug` logs. Unless required, you should not run Docker daemon at `debug` log level.\n\n## Audit\n\nTo confirm that the log level setting is `info`, review both the `dockerd` startup options, and also the log level settings in `/etc/docker/daemon.json`. To review the `dockerd` startup options, run: \n```\nps -ef | grep dockerd \n```\nEnsure that either the `--log-level` parameter is not present or if present, that it is set to `info`. \n\nSimilarly, review the `/etc/docker/daemon.json` for the `log-level` setting.\n\n## Remediation\n\nEnsure that the Docker daemon configuration file has the following configuration included:\n\n```\n\"log-level\": \"info\" \n```\n\nAlternatively, run the Docker daemon with the `log-level` specified:\n\n```\ndockerd --log-level=\"info\"\n```\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, Docker daemon is set to log level of `info`.\n\n## References\n\n1. [https://docs.docker.com/edge/engine/reference/commandline/dockerd/][1]\n\n## CIS controls\n\nVersion 6.6.2 Ensure Audit Log Settings Support Appropriate Log Entry Formatting - Validate audit log settings for each hardware device and the software installed on it, ensuring that logs include a date, timestamp, source addresses, destination addresses, and various other useful elements of each packet and/or transaction. Systems should record logs in a standardized format such as syslog entries or those outlined by the Common Event Expression initiative. If systems cannot generate logs in a standardized format, log normalization tools can be deployed to convert logs into such a format. \n\nVersion 7.6.2 Activate audit logging - Ensure that local logging has been enabled on all systems and networking devices. \n\nVersion 6.3 Enable Detailed Logging - Enable system logging to include detailed information such as an event source, date, user, timestamp, source addresses, destination addresses, and other useful elements.                \n\n[1]: https://docs.docker.com/edge/engine/reference/commandline/dockerd/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.2","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"q6o-wrf-hf4","createdAt":1602076723155,"name":"Logging level is set to 'info'"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.10","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the TLS CA certificate file, the file that is passed along with the `--tlscacert` parameter, has permissions of 444 or is set more restrictively.\n\n## Rationale\n\nThe TLS CA certificate file should be protected from any tampering. It is used to authenticate the Docker server based on a given CA certificate. It must therefore have permissions of 444, or more restrictive permissions to ensure that the file cannot be modified by a less privileged user.\n\n## Audit\n\nVerify that the TLS CA certificate file has permissions of `444` or more restrictive, by running: \n```\nstat -c %a <path to TLS CA certificate file>\n```\n\n## Remediation\n\nRun the following command: `chmod 444 <path to TLS CA certificate file>`\n\nThis sets the file permissions on the TLS CA file to 444.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for the TLS CA certificate file might not be 444. The default file permissions are governed by the operating system or user specific umask values.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.10","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"hyd-ar9-kzl","createdAt":1602076723625,"name":"TLS CA certificate file permissions are set to 444 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.12","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker server certificate file, the file that is passed along with the `--tlscert` parameter, has permissions of 444 or more restrictive permissions.\n\n## Rationale\n\nThe Docker server certificate file should be protected from any tampering. It is used to authenticate the Docker server based on the given server certificate. It should therefore have permissions of 444 to prevent its modification.\n\n## Audit\n\nVerify that the Docker server certificate file has permissions of `444` or more restrictive, by running: \n```\nstat -c %a <path to Docker server certificate file>\n```\n\n## Remediation\n\nRun the command below: `chmod 444 <path to Docker server certificate file>`\n\nThis sets the file permissions of the Docker server certificate file to 444.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for the Docker server certificate file might not be 444. The default file permissions are governed by the operating system or user specific umask values.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.12","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"blu-k6b-re1","createdAt":1602076770300,"name":"Docker server certificate file permissions are set to 444 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.1","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAll Docker containers and their data and metadata are stored in the `/var/lib/docker` directory. By default, `/var/lib/docker` should be mounted under either the `/` or `/var` partitions depending on how the Linux operating system in use is configured.\n\n## Rationale\n\nDocker depends on `/var/lib/docker` as the default directory where all Docker related files, including the images, are stored. This directory could fill up quickly causing both Docker and the host to become unusable. For this reason, you should create a separate partition (logical volume) for storing Docker files.\n\n## Audit\n\nTo see the partition details for the `/var/lib/docker` mount point, at the Docker host run:\n\n```\ngrep '/var/lib/docker\\s' /proc/mounts \n```\n\nAlternatively, to see whether the configured root directory is a mount point, run.\n\n```\nmountpoint -- \"$(docker info -f '{{ .DockerRootDir }}')\" \n```\n\n## Remediation\n\nFor new installations, you should create a separate partition for the `/var/lib/docker` mount point. For systems that have already been installed, you should use the Logical Volume Manager (LVM) within Linux to create a new partition.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, `/var/lib/docker` is mounted under the `/` or `/var` partitions dependent on how the OS is configured.\n\n## References\n\n1. [https://www.projectatomic.io/docs/docker-storage-recommendation/][1]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know                \n\n[1]: https://www.projectatomic.io/docs/docker-storage-recommendation/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.1","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"wcf-c0t-fkz","createdAt":1602076808377,"name":"A separate partition for containers has been created"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:3.14","security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker server certificate key file, the file that is passed along with the `--tlskey` parameter, has permissions of 400.\n\n## Rationale\n\nThe Docker server certificate key file should be protected from any tampering or unneeded reads. It holds the private key for the Docker server certificate. It must therefore have permissions of 400 to ensure that the certificate key file is not modified.\n\n## Audit\n\nVerify that the Docker server certificate key file has permissions of `400` by running: \n```\nstat -c %a <path to Docker server certificate key file>\n```\n\n## Remediation\n\nYou should execute the following command: `chmod 400 <path to Docker server certificate key file>`\n\nThis sets the Docker server certificate key file permissions to 400.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for the Docker server certificate key file might not be 400. The default file permissions are governed by the operating system or user specific umask values.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.14","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.14\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"z0n-cod-mxi","createdAt":1602077570102,"name":"Docker server certificate key file permissions are set to 400"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:2.6","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIt is possible to make the Docker daemon available remotely over a TCP port. If this is required, you should ensure that TLS authentication is configured in order to restrict access to the Docker daemon via IP address and port.\n\n## Rationale\n\nBy default, the Docker daemon binds to a non-networked Unix socket and runs with root privileges. If you change the default Docker daemon binding to a TCP port or any other Unix socket, anyone with access to that port or socket could have full access to the Docker daemon and therefore in turn to the host system. For this reason, you should not bind the Docker daemon to another IP/port or a Unix socket. If you must expose the Docker daemon via a network socket, you should configure TLS authentication for the daemon and for any Docker Swarm APIs (if they are in use). This type of configuration restricts the connections to your Docker daemon over the network to a limited number of clients who have access to the TLS client credentials.\n\n## Audit\n\nTo confirm that the TLS authentication setting is correct, review the `dockerd` startup options and the settings in `/etc/docker/daemon.json`. To review the `dockerd` startup options, run: \n```\nps -ef | grep dockerd \n```\nConfirm that the following parameters are present: `--tlsverify --tlscacert --tlscert --tlskey`.\n\nAlso review the `/etc/docker/daemon.json` file to ensure these settings are in place.\n\n## Remediation\n\nFollow the steps mentioned in the Docker documentation or other references.\n\n## Impact\n\nYou would need to manage and guard certificates and keys for the Docker daemon and Docker clients.\n\n## Default value\n\nBy default, TLS authentication is not configured.\n\n## References\n\n1. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system.\n\nVersion 7\n\n9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.6","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"rh4-jeh-afu","createdAt":1602077571799,"name":"TLS authentication for Docker daemon is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:3.13","security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker server certificate key file, the file that is passed along with the `--tlskey` parameter, is individually owned and group owned by root.\n\n## Rationale\n\nThe Docker server certificate key file should be protected from any tampering or unneeded reads/writes. As it holds the private key for the Docker server certificate, it must be individually owned and group owned by root to ensure that it cannot be accessed by less privileged users.\n\n## Audit\n\nVerify that the Docker server certificate key file is individually owned and group-owned by root, by running: \n```\nstat -c %U:%G <path to Docker server certificate key file> | grep -v root:root \n```\nThe command should return no results.\n\n## Remediation\n\nRun the following command: `chown root:root <path to Docker server certificate key file>`\n\nThis sets the individual ownership and group ownership for the Docker server certificate key file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the individual ownership and group ownership for the Docker server certificate key file is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.13","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.13\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oiu-e3x-yg6","createdAt":1602077710804,"name":"Docker server certificate key file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.11","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker server certificate file, the file that is passed along with the `--tlscert` parameter, is individual owned and group owned by root.\n\n## Rationale\n\nThe Docker server certificate file should be protected from any tampering. It is used to authenticate the Docker server based on the given server certificate. It must therefore be individually owned and group owned by root to prevent modification by less privileged users.\n\n## Audit\n\nVerify that the Docker server certificate file is individually owned and group-owned by root, by running: \n```\nstat -c %U:%G <path to Docker server certificate file> | grep -v root:root\n```\nThe command should return no results.\n\n## Remediation\n\nRun the following command: `chown root:root <path to Docker server certificate file>`\n\nThis sets the individual ownership and the group ownership for the Docker server certificate file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the ownership and group-ownership for Docker server certificate file is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.11","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tkm-izb-xe1","createdAt":1602077837917,"name":"Docker server certificate file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Network-Policies-and-CNI","control:5.3.2","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUse network policies to isolate traffic in your cluster network.\n\n## Rationale\n\nRunning different applications on the same Kubernetes cluster creates a risk of one compromised application attacking a neighboring application. Network segmentation is important to ensure that containers can communicate only with those they are supposed to. A network policy is a specification of how selections of pods are allowed to communicate with each other and other network endpoints. Network Policies are namespace scoped. When a network policy is introduced to a given namespace, all traffic not allowed by the policy is denied. However, if there are no network policies in a namespace, all traffic will be allowed into and out of the pods in that namespace.\n\n## Audit\n\nRun the following command and review the NetworkPolicy objects created in the cluster: `kubectl --all-namespaces get networkpolicy`\n\nEnsure that each namespace defined in the cluster has at least one Network Policy.\n\n## Remediation\n\nFollow the documentation and create network policy objects as you need them.\n\n## Impact\n\nOnce network policies are in use within a given namespace, traffic not explicitly allowed by a network policy will be denied. It is important to ensure that, when introducing network policies, legitimate traffic is not blocked.\n\n## Default value\n\nBy default, network policies are not created.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/services-networking/networkpolicies/ ][1]\n2. [https://octetz.com/posts/k8s-network-policy-apis ][2]\n3. [https://kubernetes.io/docs/tasks/configure-pod-container/declare-network-policy/][3]\n\n## CIS controls\n\nVersion 6.14.1 Implement Network Segmentation Based On Information Class Segment - The network based on the label or classification level of the information stored on the servers. Locate all sensitive information on separated VLANS with firewall filtering to ensure that only authorized individuals are only able to communicate with systems necessary to fulfill their specific responsibilities.\n\nVersion 7.14.1 Segment the Network Based on Sensitivity - Segment the network based on the label or classification level of the information stored on the servers, locate all sensitive information on separated Virtual Local Area Networks (VLANs).\n\nVersion 7.14.2 Enable Firewall Filtering Between VLANs - Enable firewall filtering between VLANs to ensure that only authorized systems are able to communicate with other systems necessary to fulfill their specific responsibilities.\n\n[1]: https://kubernetes.io/docs/concepts/services-networking/networkpolicies/\n[2]: https://octetz.com/posts/k8s-network-policy-apis\n[3]: https://kubernetes.io/docs/tasks/configure-pod-container/declare-network-policy/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.3.2","framework":"cis-kubernetes","requirement":"Network-Policies-and-CNI","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":5,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.3.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mrw-bae-anz","createdAt":1604312181303,"name":"All namespaces have network policies defined"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","requirement:RBAC-and-Service-Accounts","scored:true","security:compliance","control:5.1.5","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe default service account should not be used to ensure that rights granted to applications can be more easily audited and reviewed.\n\n## Rationale\n\nKubernetes provides a default service account which is used by cluster workloads where no specific service account is assigned to the pod. Where access to the Kubernetes API from a pod is required, a specific service account should be created for that pod, and rights granted to that service account. The default service account should be configured such that it does not provide a service account token and does not have any explicit rights assignments.\n\n## Audit\n\nFor each namespace in the cluster, review the rights assigned to the default service account and ensure that it has no roles or cluster roles bound to it apart from the defaults. Additionally ensure that the `automountServiceAccountToken: false` setting is in place for each default service account.\n\n## Remediation\n\nCreate explicit service accounts wherever a Kubernetes workload requires specific access to the Kubernetes API server. Modify the configuration of each default service account to include this value `automountServiceAccountToken: false`.\n\n## Impact\n\nAll workloads which require access to the Kubernetes API will require an explicit service account to be created.\n\n## Default value\n\nBy default the default service account allows for its service account token to be mounted in pods in its namespace.\n\n## References\n\n1. [https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/][1]\n\n## CIS controls\n\nNone\n\n[1]: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.1.5","framework":"cis-kubernetes","requirement":"RBAC-and-Service-Accounts","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.1.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"3yv-aqm-bxc","createdAt":1604312204438,"name":"Default service accounts are not actively used"}]}
    headers:
      Content-Type:
      - application/json
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=2&page%5Bsize%5D=100
    method: GET
  response:
    body: |
      {"meta":{"page":{"total_filtered_count":0,"total_count":152}},"data":[]}
    headers:
      Content-Type:
      - application/json
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=0&page%5Bsize%5D=100
    method: GET
  response:
    body: |
      {"meta":{"page":{"total_filtered_count":100,"total_count":152}},"data":[{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Controller-Manager","control:1.3.5","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAllow pods to verify the API server's serving certificate before establishing connections.\n\n## Rationale\n\nProcesses running within pods that need to contact the API server must verify the API server's serving certificate. Failing to do so could be a subject to man-in-the-middle attacks. Providing the root certificate for the API server's serving certificate to the controller manager with the `--root-ca-file` argument allows the controller manager to inject the trusted bundle into pods so that they can verify TLS connections to the API server.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--root-ca-file` argument exists and is set to a certificate bundle file containing the root certificate for the API server's serving certificate.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and set the `--root-ca-file` parameter to the certificate bundle file: `--root-ca-file=<path/to/file>`\n\n## Impact\n\nYou need to setup and maintain root certificate authority file.\n\n## Default value\n\nBy default, `--root-ca-file` is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-controller-manager/ ][1]\n2. [https://github.com/kubernetes/kubernetes/issues/11000][2]\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.                \n\n[1]: https://kubernetes.io/docs/admin/kube-controller-manager/ \n[2]: https://github.com/kubernetes/kubernetes/issues/11000\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.5","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"k7t-yxp-axc","createdAt":1599598174692,"name":"--root-ca-file argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:1.2.2","security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe Docker daemon requires access to the Docker socket which is, by default, owned by the user `root` and the group `docker`.\n\n## Rationale\n\nDocker allows you to share a directory between the Docker host and a guest container without limiting the access rights of the container. This means that you can start a container and map the `/` directory on your host to the container. The container is able to modify your host file system without any restrictions. This means that you could gain elevated privileges simply by being a member of the `docker` group and subsequently start a container which maps the root `/` directory on the host.\n\n\n## Audit\n\nRun the following command on the Docker host to see the members of the `docker` group, and ensure that only trusted users are members:\n\n```\ngetent group docker\n```\n\n## Remediation\n\nYou should remove any untrusted users from the `docker` group. Additionally, you should not create a mapping of sensitive directories from the host to container volumes.\n\n## Impact\n\nProvided the proceeding instructions are implemented, rights to build and execute containers as normal user would be restricted.\n\n## Default value\n\nNot Applicable\n\n## References\n\n1. [https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface]\n2. [https://www.andreas-jung.com/contents/on-docker-security-docker-group-considered-harmful]\n3. [http://www.projectatomic.io/blog/2015/08/why-we-dont-let-non-root-users-run-docker-in-centos-fedora-or-rhel/]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.                \n\n[1]: https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface \n[2]: https://www.andreas-jung.com/contents/on-docker-security-docker-group-considered-harmful \n[3]: http://www.projectatomic.io/blog/2015/08/why-we-dont-let-non-root-users-run-docker-in-centos-fedora-or-rhel/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.2","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"dev-mh8-u1i","createdAt":1599598174666,"name":"Only trusted users are allowed to control Docker daemon"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","control:2.6","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use automatically generated self-signed certificates for TLS connections between peers.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be accessible only by authenticated etcd peers in the etcd cluster. Hence, do not use self-signed certificates for authentication.\n\n## Audit\n\nThis recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable.\n\nRun the following command on the etcd server node: \n```\nps -ef | grep etcd\n```\nVerify that if the `--peer-auto-tls` argument exists, it is not set to `true`.\n\n## Remediation\n\nEdit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and either remove the `--peer-auto-tls` parameter or set it to false. \n\n```\n--peer-auto-tls=false\n```\n\n## Impact\n\nAll peers attempting to communicate with the etcd server will require a valid client certificate for authentication.\n\n## Default value\n\n*Note*: This recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable. By default, `--peer-auto-tls` argument is set to false.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][1]\n2. [https://kubernetes.io/docs/admin/etcd/ ][2]\n3. [https://coreos.com/etcd/docs/latest/op-guide/configuration.html#peer-auto-tls][3]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.4 Controlled Use of Administrative Privileges             \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/ \n[3]: https://coreos.com/etcd/docs/latest/op-guide/configuration.html#peer-auto-tls\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.6","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"l0y-lyz-foj","createdAt":1599598174666,"name":"--peer-auto-tls argument is not set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.14","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy using the `--restart` flag in the docker run command you can specify a restart policy for how a container should or should not be restarted on exit. You should choose the on-failure restart policy and limit the restart attempts to 5.\n\n## Rationale\n\nIf you indefinitely keep trying to start the container, it could possibly lead to a denial of service on the host. It could be an easy way to do a distributed denial of service attack especially if you have many containers on the same host. Additionally, ignoring the exit status of the container and always attempting to restart the container, leads to non-investigation of the root cause behind containers getting terminated. If a container gets terminated, you should investigate on the reason behind it instead of just attempting to restart it indefinitely. You should use the on-failure restart policy to limit the number of container restarts to a maximum of 5 attempts.\n\n## Audit\n\nExecute this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: RestartPolicyName={{ .HostConfig.RestartPolicy.Name }} MaximumRetryCount={{ .HostConfig.RestartPolicy.MaximumRetryCount }}'` \n\nIf this command returns `RestartPolicyName=always`, then the system is not configured optimally. If this command returns `RestartPolicyName=no` or just `RestartPolicyName=`, then restart policies are not being used and the container would never be restarted automatically. This may be a secure option, but it is not the best option from a usability standpoint. If this command returns `RestartPolicyName=on-failure`, then verify that the number of restart attempts is set to 5 or less by looking at `MaximumRetryCount`.\n\n## Remediation\n\nIf you wish a container to be automatically restarted, use `docker run --detach --restart=on-failure:5 nginx`\n\n## Impact\n\nIf this option is set, a container will only attempt to restart itself 5 times.\n\n## Default value\n\nBy default, containers are not configured with restart policies.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/run/#restart-policies-restart\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.14","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.14\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ycq-buv-pf8","createdAt":1599598174688,"name":"'on-failure' container restart policy is set to '5'"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","control:1.1.4","security:compliance","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the controller manager pod specification file ownership is set to root:root.\n\n## Rationale\n\nThe controller manager pod specification file controls various parameters that set the behavior of various components of the master node. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/manifests/kube-controller-manager.yaml\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/manifests/kube-controller-manager.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kube-controller-manager.yaml` file ownership is set to root:root.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-controller-manager\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.4","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"jwf-xdm-mi9","createdAt":1599599105053,"name":"Controller manager pod specification file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.31","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSetup TLS connection on the API server.\n\n## Rationale\n\nAPI server communication contains sensitive parameters that should remain encrypted in transit. Configure the API server to serve only HTTPS traffic. If `--client-ca-file` argument is set, any request presenting a client certificate signed by one of the authorities in the `client-ca-file` is authenticated with an identity corresponding to the CommonName of the client certificate.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--client-ca-file` argument exists and it is set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection on the apiserver. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the client certificate authority file: `--client-ca-file=<path/to/client-ca-file>`\n\n## Impact\n\nTLS and client certificate authentication must be configured for your Kubernetes cluster deployment.\n\n## Default value\n\nBy default, `--client-ca-file` argument is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. http://rootsquash.com/2016/05/10/securing-the-kubernetes-api/ \n3. https://github.com/kelseyhightower/docker-kubernetes-tls-guide\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.31","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.31\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"nad-eon-2rv","createdAt":1599599105054,"name":"--client-ca-file argument is set as appropriate (API server)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.27","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nValidate service account before validating token.\n\n## Rationale\n\nIf --service-account-lookup is not enabled, the apiserver only verifies that the authentication token is valid, and does not validate that the service account token mentioned in the request is actually present in etcd. This allows using a service account token even after the corresponding service account is deleted. This is an example of time of check to time of use security issue.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that if the `--service-account-lookup` argument exists it is set to `true`.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the below parameter. `--service-account-lookup=true` Alternatively, you can delete the `--service-account-lookup` parameter from this file so that the default takes effect.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `--service-account-lookup` argument is set to true.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://github.com/kubernetes/kubernetes/issues/24167 \n3. https://en.wikipedia.org/wiki/Time_of_check_to_time_of_use\n\n## CIS controls\n\nVersion 6 16 Account Monitoring and Control Account Monitoring and Control Version 7 16 Account Monitoring and Control Account Monitoring and Control\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.27","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.27\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ycp-ppm-trb","createdAt":1599599105043,"name":"--service-account-lookup argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.12","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable kubelet server certificate rotation.\n\n## Rationale\n\n`RotateKubeletServerCertificate` causes the kubelet to both request a serving certificate after bootstrapping its client credentials and rotate the certificate as its existing credentials expire. This automated periodic rotation ensures that the there are no downtimes due to expired certificates and thus addressing availability in the CIA security triad.\n\n*Note*: This recommendation only applies if you let kubelets get their certificates from the API server. In case your kubelet certificates come from an outside authority/tool (e.g. Vault) then you need to take care of rotation yourself.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that `RotateKubeletServerCertificate` argument exists and is set to `true`.\n\n## Remediation\n\nOn the master edit `/var/lib/kubelet/kubeadm-flags.env` and set the parameter `KUBELET_CERTIFICATE_ARGS --feature-gates=RotateKubeletServerCertificate=true` or as an alternative, and suggested as a last resort, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_CERTIFICATE_ARGS` variable:\n\n```\n--feature-gates=RotateKubeletServerCertificate=true\n```\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, kubelet server certificate rotation is disabled.\n\n## References\n\n1. https://github.com/kubernetes/kubernetes/pull/45059\n2. https://kubernetes.io/docs/admin/kubelet-tls-bootstrapping/#kubelet-configuration\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted.\n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n\n[1]: https://github.com/kubernetes/kubernetes/pull/45059\n[2]: https://kubernetes.io/docs/admin/kubelet-tls-bootstrapping/#kubelet-configuration\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.12","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"afr-qkp-94a","createdAt":1599599105048,"name":"RotateKubeletServerCertificate argument is set to true (Kubelet)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Docker-Daemon-Configuration","control:2.3","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe `iptables` firewall is used to set up, maintain, and inspect the tables of IP packet filter rules within the Linux kernel. The Docker daemon should be allowed to make changes to the `iptables` ruleset.\n\n## Rationale\n\nDocker will not make changes to your system `iptables` rules unless you allow it to do so. If you do allow this, Docker server will automatically make any required changes. You should let Docker make changes to `iptables` automatically in order to avoid networking misconfigurations that could affect the communication between containers and with the outside world. Additionally, this reduces the administrative overhead of updating `iptables` every time you add containers or modify networking options.\n\n## Audit\n\nTo confirm that the Docker daemon is allowed to change the `iptables` ruleset, review the `dockerd` startup options and the settings in `/etc/docker/daemon.json`. To review the `dockerd` startup options, run: \n```\nps -ef | grep dockerd \n```\nEnsure that the `--iptables` parameter is either not present or not set to `false`. Also review the `/etc/docker/daemon.json` file to check that the `iptables` setting is not set to `false`.\n\n## Remediation\n\nDo not run the Docker daemon with `--iptables=false` parameter. \n\n## Impact\n\nThe Docker daemon service requires `iptables` rules to be enabled before it starts. Any restarts of `iptables` during Docker daemon operation may result in losing Docker-created rules. Adding `iptables-persistent` to your `iptables` install can mitigate.\n\n## Default value\n\nBy default, `iptables` is set to true.\n\n## References\n\n1. [https://docs.docker.com/engine/userguide/networking/default_network/container-communication/][1]\n2. [https://fralef.me/docker-and-iptables.html][2]\n\n## CIS controls\n\nVersion 6.5 Controlled Use of Administration Privileges                \n\n[1]: https://docs.docker.com/engine/userguide/networking/default_network/container-communication/\n[2]: https://fralef.me/docker-and-iptables.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.3","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"3fv-xgy-7fb","createdAt":1599599453907,"name":"Docker is allowed to make changes to iptables"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.7","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that all the registry certificate files, usually found under the `/etc/docker/certs.d/<registry-name>` directory, are individually owned and group owned by root.\n\n## Rationale\n\nThe `/etc/docker/certs.d/<registry-name>` directory contains Docker registry certificates. These certificate files must be individually owned and group owned by root to ensure that less privileged users are unable to modify the contents of the directory.\n\n## Audit\n\nYou should execute the command below to verify that the registry certificate files are individually owned and group owned by root: \n\n```\nstat -c %U:%G /etc/docker/certs.d/* | grep -v root:root \n```\n\nThis command does not return any data.\n\n## Remediation\n\nExecute the following command: `chown root:root /etc/docker/certs.d/<registry-name>/*`\n\nThis sets the individual ownership and group ownership for the registry certificate files to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the individual ownership and group ownership for registry certificate files is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.7","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"fbv-qsy-urc","createdAt":1599599454050,"name":"Registry certificate file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.17","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `controller-manager.conf` file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe `controller-manager.conf` file is the kubeconfig file for the Controller Manager. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/controller-manager.conf\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/controller-manager.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `controller-manager.conf` has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-controller-manager/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.17","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.17\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"iss-afi-xfp","createdAt":1599599454121,"name":"controller-manager.conf file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.11","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not allow all requests.\n\n## Rationale\n\nSetting admission control plugin AlwaysAdmit allows all requests and do not filter any requests. The AlwaysAdmit admission controller was deprecated in Kubernetes v1.13. Its behavior was equivalent to turning off all admission controllers.\n\n## Audit\n\nRun the following command on the master node:\n\n```bash\nps -ef | grep kube-apiserver\n```\n\nVerify the `--enable-admission-plugins` argument's value (if set) does not include `AlwaysAdmit`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and either remove the --enable-admission-plugins parameter, or set it to a value that does not include AlwaysAdmit.\n\n## Impact\n\nOnly requests explicitly allowed by the admissions control plugins would be served.\n\n## Default value\n\nAlwaysAdmit is not in the list of default admission plugins.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#alwaysadmit\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.11","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ysr-4gg-vu5","createdAt":1599599454382,"name":"Admission control plugin AlwaysAdmit is not set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.6","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `kubelet.conf` file ownership is set to `root:root`.\n\n## Rationale\n\nThe `kubelet.conf` file is the kubeconfig file for the node, and controls various parameters that set the behavior and identity of the worker node. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %U:%G /etc/kubernetes/kubelet.conf`. Verify that the ownership is set to `root:root`.\n\n## Remediation\n\nRun this command (based on the file location on your system) on the each worker node. For example, `chown root:root /etc/kubernetes/kubelet.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kubelet.conf` file ownership is set to `root:root`.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.6","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mrc-waf-mbs","createdAt":1599599696342,"name":"kubelet.conf file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.16","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `scheduler.conf` file ownership is set to `root:root`.\n\n## Rationale\n\nThe `scheduler.conf` file is the kubeconfig file for the Scheduler. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/scheduler.conf\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/scheduler.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `scheduler.conf` file ownership is set to root:root.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kubeadm/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.16","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.16\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"pbp-y4b-dhf","createdAt":1599600185878,"name":"scheduler.conf file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.2","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not allow all requests. Enable explicit authorization.\n\n## Rationale\n\nKubelets, by default, allow all authenticated requests (even anonymous ones) without needing explicit authorization checks from the API server. You should restrict this behavior and only allow explicitly authorized requests.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. If the `--authorization-mode` argument is present check that it is not set to AlwaysAllow. If it is not present check that there is a Kubelet config file specified by `--config`, and that file sets authorization: mode to something other than AlwaysAllow. It is also possible to review the running configuration of a Kubelet via the /configs endpoint on the Kubelet API port (typically `10250/TCP`). Accessing these with appropriate credentials will provide details of the Kubelet's configuration.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set authorization: mode to Webhook. If using executable arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_AUTHZ_ARGS` variable.\n\n`--authorization-mode=Webhook`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nUnauthorized requests will be denied.\n\n## Default value\n\nBy default, `--authorization-mode` argument is set to `AlwaysAllow`.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authentication][2]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\nVersion 7.14 Controlled Access Based on the Need to Know\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authentication\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.2","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"un4-gin-3dq","createdAt":1599600248005,"name":"--authorization-mode argument is not set to AlwaysAllow (Kubelet)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.8","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `/etc/kubernetes/manifests/etcd.yaml` file ownership is set to `root:root`.\n\n## Rationale\n\nThe etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` controls various parameters that set the behavior of the etcd service in the master node. etcd is a highly-available key-value store which Kubernetes uses for persistent storage of all of its REST API object. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/manifests/etcd.yaml\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/manifests/etcd.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `/etc/kubernetes/manifests/etcd.yaml` file ownership is set to root:root.\n\n## References\n\n1. https://coreos.com/etcd\n2. https://kubernetes.io/docs/admin/etcd/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.8","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oac-lbl-npz","createdAt":1599600311388,"name":"etcd pod specification file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.3","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable Kubelet authentication using certificates.\n\n## Rationale\n\nThe connections from the API server to the kubelet are used for fetching logs for pods, attaching (through kubectl) to running pods, and using the kubelet's port-forwarding functionality. These connections terminate at the kubelet's HTTPS endpoint. By default, the API server does not verify the kubelet's serving certificate, which makes the connection subject to man-in-the-middle attacks, and unsafe to run over untrusted and/or public networks. Enabling Kubelet certificate authentication ensures that the API server could authenticate the Kubelet before submitting any requests.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--client-ca-file` argument exists and is set to the location of the client certificate authority file. If the `--client-ca-file` argument is not present, check that there is a Kubelet config file specified by `--config`, and that the file sets authentication: x509: clientCAFile to the location of the client certificate authority file.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `authentication: x509: clientCAFile` to the location of the client CA file. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_AUTHZ_ARGS` variable.\n\n`--client-ca-file=<path/to/client-ca-file>`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nYou require TLS to be configured on API server as well as kubelets.\n\n## Default value\n\nBy default, `--client-ca-file argument` is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-authentication-authorization/][2]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted.\n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-authentication-authorization/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.3","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"x6l-4d1-dwh","createdAt":1599600373842,"name":"--client-ca-file argument is set as appropriate (Kubelet)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Pod-Security-Policies","control:5.2.3","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not generally permit containers to be run with the hostIPC flag set to true.\n\n## Rationale\n\nA container running in the host's IPC namespace can use IPC to interact with processes outside the container. There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to share the host IPC namespace. If you have a requirement to containers that require hostIPC, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n## Audit\n\nGet the set of PSPs with the following command: `kubectl get psp`\n\nFor each PSP, check whether privileged is enabled: `kubectl get psp <name> -o=jsonpath='{.spec.hostIPC}'`\n\nVerify that there is at least one PSP which does not return true.\n\n## Remediation\n\nCreate a PSP as described in the Kubernetes documentation, ensuring that the .spec.hostIPC field is omitted or set to false.\n\n## Impact\n\nPods defined with spec.hostIPC: true will not be permitted unless they are run under a specific PSP.\n\n## Default value\n\nBy default, PodSecurityPolicies are not defined.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/policy/pod-security-policy][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://kubernetes.io/docs/concepts/policy/pod-security-policy\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.2.3","framework":"cis-kubernetes","requirement":"Pod-Security-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vs4-ja0-gkh","createdAt":1599600435891,"name":"Minimize the admission of containers wishing to share the host IPC namespace"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","control:5.1","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAppArmor is an effective and easy-to-use Linux application security system. It is available on some Linux distributions by default, for example, on Debian and Ubuntu.\n\n## Rationale\n\nAppArmor protects the Linux OS and applications from various threats by enforcing a security policy which is also known as an AppArmor profile. You can create your own AppArmor profile for containers or use Docker's default profile. Enabling this feature enforces security policies on containers as defined in the profile.\n\n## Audit\n\nYou should run this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: AppArmorProfile={{ .AppArmorProfile }}'` \n\nThis command returns a valid AppArmor Profile for each container instance.\n\n## Remediation\n\nIf AppArmor is applicable for your Linux OS, enable it.\n\n1. Verify AppArmor is installed.\n2. Create or import a AppArmor profile for Docker containers.\n3. Enable enforcement of the policy.\n4. Start your Docker container using the customized AppArmor profile. For example: `docker run --interactive --tty --security-opt=\"apparmor:PROFILENAME\" ubuntu /bin/bash` Alternatively, Docker's default AppArmor policy can be used.\n\n## Impact\n\nThe container will have the security controls defined in the AppArmor profile. It should be noted that if the AppArmor profile is misconfigured, this may cause issues with the operation of the container.\n\n## Default value\n\nBy default, the docker-default AppArmor profile is applied to running containers. This profile can be found at `/etc/apparmor.d/docker`\n\n## References\n\n1. https://docs.docker.com/engine/security/apparmor/\n2. https://docs.docker.com/engine/reference/run/#security-configuration\n3. https://docs.docker.com/engine/security/security/#other-kernel-security-features\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.1","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"s4z-dsj-llz","createdAt":1599600498264,"name":"An AppArmor Profile is enabled"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Pod-Security-Policies","control:5.2.2","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not generally permit containers to be run with the hostPID flag set to true.\n\n## Rationale\n\nA container running in the host's PID namespace can inspect processes running outside the container. If the container also has access to ptrace capabilities this can be used to escalate privileges outside of the container. There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to share the host PID namespace. If you need to run containers which require hostPID, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n## Audit\n\nGet the set of PSPs with the following command: `kubectl get psp`\n\nFor each PSP, check whether privileged is enabled: `kubectl get psp <name> -o=jsonpath='{.spec.hostPID}'`\n\nVerify that there is at least one PSP which does not return true.\n\n## Remediation\n\nCreate a PSP as described in the Kubernetes documentation, ensuring that the `.spec.hostPID` field is omitted or set to false.\n\n## Impact\n\nPods defined with spec.hostPID: true will not be permitted unless they are run under a specific PSP.\n\n## Default value\n\nBy default, PodSecurityPolicies are not defined.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/policy/pod-security-policy][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://kubernetes.io/docs/concepts/policy/pod-security-policy\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.2.2","framework":"cis-kubernetes","requirement":"Pod-Security-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"flc-1s1-okw","createdAt":1599600559953,"name":"Minimize the admission of containers wishing to share the host process ID namespace"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.7","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the certificate authorities file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe certificate authorities file controls the authorities used to validate API requests. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command: `ps -ef | grep kubelet`. Find the file specified by the `--client-ca-file` argument. Run the following command: `stat -c %a <filename>`. Verify that the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the following command to modify the file permissions of the `--client-ca-file`:\n\n```\nchmod 644 <filename>\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default no `--client-ca-file` is specified.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/authentication/#x509-client-certs][1]\n\n## CIS controls\n\nVersion 6 5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7 14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\n[1]: https://kubernetes.io/docs/admin/authentication/#x509-client-certs\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.7","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qtd-deo-dgb","createdAt":1599600622129,"name":"Certificate authorities file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.3.4","requirement:Controller-Manager","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nExplicitly set a service account private key file for service accounts on the controller manager.\n\n## Rationale\n\nTo ensure that keys for service account tokens can be rotated as needed, a separate public/private key pair should be used for signing service account tokens. The private key should be specified to the controller manager with `--service-account-private-key-file` as appropriate.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--service-account-private-key-file` argument is set as appropriate.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and set the `--service-account-private-key-file parameter` to the private key file for service accounts:\n\n```\n--service-account-private-key-file=<filename>\n```\n\n## Impact\n\nYou would need to securely maintain the key file and rotate the keys based on your organization's key rotation policy.\n\n## Default value\n\nBy default, `--service-account-private-key-file` it not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-controller-manager/][1]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.4 Controlled Use of Administrative Privileges          \n\n[1]: https://kubernetes.io/docs/admin/kube-controller-manager/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.4","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mj1-ode-sln","createdAt":1599600796213,"name":"--service-account-private-key-file argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","control:1.2.7","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `docker.socket`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges, it is very important to audit its activities and usage. Its behavior depends on some key files and directories, including the `docker.socket` file, which holds various parameters for the Docker daemon, it should be audited.\n\n## Audit\n\n1. Locate the `docker.socket` file by running: \n    ```\n    systemctl show -p FragmentPath docker.socket \n    ```\n2. If the file does not exist, this recommendation is not applicable. If the `docker.socket` file exists, verify that there is an audit rule corresponding to the `docker.socket` file by running: \n    ```\n    auditctl -l | grep docker.socket \n    ```\n\n## Remediation\n\nIf the file exists, you should add a rule for it. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /usr/lib/systemd/system/docker.socket -k docker \n```\n\nThen restart the audit daemon: \n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `docker.socket` may not be present, but if it is, it should be audited.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.7","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"afg-qbt-7uw","createdAt":1599600857858,"name":"docker.socket auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.15","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe Process ID (PID) namespace isolates the process ID space, meaning that processes in different PID namespaces can have the same PID. This creates process level isolation between the containers and the host.\n\n## Rationale\n\nPID namespace provides separation between processes. It prevents system processes from being visible, and allows process ids to be reused including PID 1. If the host's PID namespace is shared with containers, it would basically allow these to see all of the processes on the host system. This reduces the benefit of process level isolation between the host and the containers. Under these circumstances a malicious user who has access to a container could get access to processes on the host itself, manipulate them, and even be able to kill them. This could allow for the host itself being shut down, which could be extremely serious, particularly in a multi-tenanted environment. You should not share the host's process namespace with the containers running on it.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: PidMode={{ .HostConfig.PidMode }}'` \n\nIf the command returns `host`, it means that the host PID namespace is shared with its containers; any other result means that the system is configured in line with good security practice.\n\n## Remediation\n\nYou should not start a container with the `--pid=host` argument. For example, do not start a container with the command: `docker run --interactive --tty --pid=host centos /bin/bash`\n\n## Impact\n\nContainer processes cannot see processes on the host system. In certain circumstances, you may want your container to share the host's process namespace. For example, you could build a container containing debugging tools such as strace or gdb, and want to use these tools when debugging processes on the host. If this is desired, then share specific host processes using the `-p` switch. For example: `docker run --pid=host rhel7 strace -p 1234`\n\n## Default value\n\nBy default, all containers have the PID namespace enabled and the therefore the host's process namespace is not shared with its containers.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#pid-settings-pid 2. http://man7.org/linux/man-pages/man7/pid_namespaces.7.html\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.15","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.15\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mk8-jwd-4ag","createdAt":1599600919537,"name":"Host's process namespace is not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.4","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUse https for kubelet connections.\n\n## Rationale\n\nConnections from apiserver to kubelets could potentially carry sensitive data such as secrets and keys. It is thus important to use in-transit encryption for any communication between the apiserver and kubelets.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--kubelet-https` argument either does not exist or is set to `true`.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and remove the `--kubelet-https` parameter.\n\n## Impact\n\nYou require TLS to be configured on apiserver as well as kubelets.\n\n## Default value\n\nBy default, kubelet connections are over https.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-apiserver/ ][1]\n2. [https://kubernetes.io/docs/admin/kubelet-authentication-authorization/][2]\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.                \n\n[1]: https://kubernetes.io/docs/admin/kube-apiserver/ \n[2]: https://kubernetes.io/docs/admin/kubelet-authentication-authorization/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.4","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"critical","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ftg-h4g-hqj","createdAt":1599600981186,"name":"--kubelet-https argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:2.5","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use `aufs` as the storage driver for your Docker instance.\n\n## Rationale\n\nThe `aufs` storage driver is the oldest storage driver used on Linux systems. It is based on a Linux kernel patch-set that is unlikely in future to be merged into the main OS kernel. The `aufs` driver is also known to cause some serious kernel crashes. `aufs` has only legacy support within systems using Docker. Most importantly, `aufs` is not a supported driver in many Linux distributions using latest Linux kernels.\n\n## Audit\n\nVerify that `aufs` is not used as storage driver by running this command and ensuring `aufs` is not listed: \n```\ndocker info --format 'Storage Driver: {{ .Driver }}' \n```\n\n## Remediation\n\nDo not explicitly use `aufs` as storage driver. For example, do not start Docker daemon with the `--storage-driver aufs` flag.\n\n## Impact\n\n`aufs` is the only storage driver that allows containers to share executable and shared library memory. It might be useful if you are running thousands of containers with the same program or libraries. However, you should review its use with respect to your organization's security policy.\n\n## Default value\n\nBy default, Docker uses `devicemapper` as the storage driver on most of the platforms. The default storage driver can vary based on your OS vendor. You should use the storage driver that is recommended by your preferred vendor and which is in line with policy around the applications which are being deployed.\n\n## References\n\n1. [https://docs.docker.com/engine/userguide/storagedriver/selectadriver/#supported-backing-filesystems][1]\n2. [http://muehe.org/posts/switching-docker-from-aufs-to-devicemapper/][2]\n3. [http://jpetazzo.github.io/assets/2015-03-05-deep-dive-into-docker-storage-drivers.html#1][3]\n4. [https://docs.docker.com/engine/userguide/storagedriver/][4]\n\n## CIS controls\n\nVersion 6.18 Application Software Security                \n\n[1]: https://docs.docker.com/engine/userguide/storagedriver/selectadriver/#supported-backing-filesystems \n[2]: http://muehe.org/posts/switching-docker-from-aufs-to-devicemapper/ \n[3]: http://jpetazzo.github.io/assets/2015-03-05-deep-dive-into-docker-storage-drivers.html#1 \n[4]: https://docs.docker.com/engine/userguide/storagedriver/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.5","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"n0x-jqo-rof","createdAt":1599601042737,"name":"aufs storage driver is not used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.22","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable auditing on the Kubernetes API Server and set the desired audit log path.\n\n## Rationale\n\nAuditing the Kubernetes API Server provides a security-relevant chronological set of records documenting the sequence of activities that have affected system by individual users, administrators or other components of the system. Even though currently, Kubernetes provides only basic audit capabilities, it should be enabled. You can enable it by setting an appropriate audit log path.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-log-path` argument is set as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --audit-log-path parameter to a suitable path and file where you would like audit logs to be written, for example: --audit-log-path=/var/log/apiserver/audit.log\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, auditing is not enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/concepts/cluster-administration/audit/ 3. https://github.com/kubernetes/features/issues/22\n\n## CIS controls\n\nVersion 6 6.2 Ensure Audit Log Settings Support Appropriate Log Entry Formatting Validate audit log settings for each hardware device and the software installed on it, ensuring that logs include a date, timestamp, source addresses, destination addresses, and various other useful elements of each packet and/or transaction. Systems should record logs in a standardized format such as syslog entries or those outlined by the Common Event Expression initiative. If systems cannot generate logs in a standardized format, log normalization tools can be deployed to convert logs into such a format. Version 7 6.2 Activate audit logging Ensure that local logging has been enabled on all systems and networking devices. 6.3 Enable Detailed Logging Enable system logging to include detailed information such as an event source, date, user, timestamp, source addresses, destination addresses, and other useful elements.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.22","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.22\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"fny-sti-0dk","createdAt":1599601104396,"name":"--audit-log-path argument is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.17","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nLimit the Node and Pod objects that a kubelet could modify.\n\n## Rationale\n\nUsing the NodeRestriction plug-in ensures that the kubelet is restricted to the Node and Pod objects that it could modify as defined. Such kubelets will only be allowed to modify their own Node API object, and only modify Pod API objects that are bound to their node.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--enable-admission-plugins` argument is set to a value that includes `NodeRestriction`.\n\n## Remediation\n\nFollow the Kubernetes documentation and configure NodeRestriction plug-in on kubelets. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --enable-admission-plugins parameter to a value that includes NodeRestriction. --enable-admission-plugins=...,NodeRestriction,...\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, NodeRestriction is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#noderestriction 3. https://kubernetes.io/docs/admin/authorization/node/ 4. https://acotten.com/post/kube17-security\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.17","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.17\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"jre-tn7-yma","createdAt":1599601166101,"name":"Admission control plugin NodeRestriction is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.1","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the API server pod specification file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe API server pod specification file controls various parameters that set the behavior of the API server. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node:\n\n```bash\nstat -c %a /etc/kubernetes/manifests/kube-apiserver.yaml\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/manifests/kube-apiserver.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `kube-apiserver.yaml` file has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.1","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"8tj-q6g-eyj","createdAt":1599601227733,"name":"API server pod specification file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.21","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/sysconfig/docker` file permissions are correctly set to 644 or more restrictively.\n\n## Rationale\n\nThe `/etc/sysconfig/docker` file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be writeable only by root in order to ensure that it is not modified by less privileged users.\n\n## Audit\n\nVerify that the `/etc/sysconfig/docker` file permissions are set to `644` or more restrictive, by running: \n```\nstat -c %a /etc/sysconfig/docker\n```\n\n## Remediation\n\nRun the following command: `chmod 644 /etc/sysconfig/docker`\n\nThis sets the file permissions for this file to 644.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system and in this case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/admin/configuring/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.21","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.21\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"au3-ayl-tdm","createdAt":1599601289420,"name":"/etc/sysconfig/docker file permissions are set to 644 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.4.2","requirement:Scheduler","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not bind the scheduler service to non-loopback insecure addresses.\n\n## Rationale\n\nThe Scheduler API service which runs on port 10251/TCP by default is used for health and metrics information and is available without authentication or encryption. As such it should only be bound to a localhost interface, to minimize the cluster's attack surface\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-scheduler\n```\nVerify that the `--bind-address` argument is set to `127.0.0.1`.\n\n## Remediation\n\nEdit the Scheduler pod specification file `/etc/kubernetes/manifests/kube-scheduler.yaml` on the master node and ensure the correct value for the `--bind-address` parameter.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `--bind-address` parameter is set to `0.0.0.0`.\n\n## References\n\n1. [https://kubernetes.io/docs/reference/command-line-tools-reference/kube-scheduler/][1]\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.                \n\n[1]: https://kubernetes.io/docs/reference/command-line-tools-reference/kube-scheduler/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.4.2","framework":"cis-kubernetes","requirement":"Scheduler","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.4.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"g1h-91b-y2x","createdAt":1599601351149,"name":"--bind-address argument is set to 127.0.0.1 (Scheduler)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.11","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the etcd data directory has permissions of 700 or more restrictive.\n\n## Rationale\n\netcd is a highly-available key-value store used by Kubernetes deployments for persistent storage of all of its REST API objects. This data directory should be protected from any unauthorized reads or writes. It should not be readable or writable by any group members or the world.\n\n## Audit\n\nOn the etcd server node, get the etcd data directory passed as an argument `--data-dir`, from the command:\n\n```bash\nps -ef | grep etcd\n```\n\n Based on the etcd data directory found above, run the command:\n \n ```bash\n stat -c %a /var/lib/etcd\n ```\n \n Verify the permissions are `700` or more restrictive.\n\n## Remediation\n\nOn the etcd server node, get the etcd data directory, passed as an argument `--data-dir`, from the below command: `ps -ef | grep etcd`\n\nRun the command (based on the etcd data directory found above): `chmod 700 /var/lib/etcd`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, etcd data directory has permissions of 755.\n\n## References\n\n1. https://coreos.com/etcd/docs/latest/op-guide/configuration.html#data-dir\n2. https://kubernetes.io/docs/admin/etcd/\n\n## CIS controls\n\nVersion 6\n\n14 Controlled Access Based on the Need to Know\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.11","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qgj-hf0-an1","createdAt":1599601412710,"name":"etcd data directory permissions are set to 700 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.10","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/etc/docker/daemon.json`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `/etc/docker/daemon.json`. This holds various parameters for the Docker daemon, and so it should be audited.\n\n## Audit\n\nVerify that there is an audit rule associated with the `/etc/docker/daemon.json` file. To display the rule for the `/etc/docker/daemon.json` file, run: \n\n```\nauditctl -l | grep /etc/docker/daemon.json\n```\n\n## Remediation\n\nYou should add a rule for the `/etc/docker/daemon.json` file. For example, add the following line to the `/etc/audit/audit.rules` file: \n\n```\n-w /etc/docker/daemon.json -k docker \n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `/etc/docker/daemon.json` may not exist on the system and in that case, this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n2. [https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file][2]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html \n[2]: https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.10","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"v2o-aio-i0e","createdAt":1599601474412,"name":"/etc/docker/daemon.json auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent","control:3.1"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the docker.service file ownership and group ownership are correctly set to root.\n\n## Rationale\n\nThe docker.service file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be individually and group owned by the root user in order to ensure that it is not modified or corrupted by a less privileged user.\n\n## Audit\n\n1. Locate the `docker.service` file by running: \n    ```\n    systemctl show -p FragmentPath docker.service \n    ```\n2. If the file does not exist, this recommendation is not applicable. If the file exists, verify that it is owned and group-owned by root, by running the following command with the correct filepath:\n    ```\n    stat -c %U:%G /usr/lib/systemd/system/docker.service | grep -v root:root \n    ```\n    The command should not return anything.\n\n## Remediation\n\n1. Find out the file location: `systemctl show -p FragmentPath docker.service`\n2. If the file does not exist, this recommendation is not applicable. If the file does exist, you should execute the command below, including the correct file path, in order to set the ownership and group ownership for the file to root.\n\nFor example, `chown root:root /usr/lib/systemd/system/docker.service`\n\n## Impact\n\nNone.\n\n## Default value\n\nThis file may not be present on the system and if it is not, this recommendation is not applicable. By default, if the file is present, the correct permissions are for the ownership and group ownership to be set to \"root\".\n\n## References\n\n1. https://docs.docker.com/engine/admin/systemd/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.1","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mhz-jes-n2m","createdAt":1599601536215,"name":"docker.service file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.14","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAutomate service accounts management.\n\n## Rationale\n\nWhen you create a pod, if you do not specify a service account, it is automatically assigned the default service account in the same namespace. You should create your own service account and let the API server manage its security tokens.\n\n## Audit\n\nRun the following command on the master node:\n\n```bash\nps -ef | grep kube-apiserver\n```\n\nVerify the `--disable-admission-plugins` argument is set to a value that does not include `ServiceAccount`.\n\n## Remediation\n\nFollow the documentation and create ServiceAccount objects as per your environment. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and ensure that the --disable-admission-plugins parameter is set to a value that does not include ServiceAccount.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, ServiceAccount is set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#serviceaccount 3. https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n\n## CIS controls\n\nVersion 6 16 Account Monitoring and Control Account Monitoring and Control Version 7 16 Account Monitoring and Control Account Monitoring and Control\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.14","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.14\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"wrk-jrm-u8h","createdAt":1599601597784,"name":"Admission control plugin ServiceAccount is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent","control:1.2.8"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/etc/default/docker`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `/etc/default/docker`. It holds various parameters related to the Docker daemon and should therefore be audited.\n\n## Audit\n\nVerify that there is an audit rule associated with the `/etc/default/docker` file. To see the rule for the `/etc/default/docker` file, run: \n```\nauditctl -l | grep /etc/default/docker \n```\n\n## Remediation\n\nYou should add a rule for the `/etc/default/docker` file. For example, add the following line to the `/etc/audit/audit.rules` file: \n\n```\n-w /etc/default/docker -k docker \n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited so these defaults should be changed in line with organizational security policy. The file `/etc/default/docker` may not be present, and if so, this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7 14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.8","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qfi-cgy-a6e","createdAt":1599601659531,"name":"/etc/default/docker auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.2","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the docker.service file permissions are either set to 644 or to a more restrictive value.\n\n## Rationale\n\nThe docker.service file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore not be writable by any other user other than root in order to ensure that it can not be modified by less privileged users.\n\n## Audit\n\n1. Locate the `docker.service` file by running: \n    ```\n    systemctl show -p FragmentPath docker.service\n    ```\n2. If the file does not exist, this recommendation is not applicable. If the file exists, verify that the file permissions are set to `644` or a more restrictive value by running the following command with the correct filepath:\n    ```\n    stat -c %a /usr/lib/systemd/system/docker.service\n    ```\n\n## Remediation\n\n1. Find out the file location: `systemctl show -p FragmentPath docker.service`\n2. If the file does not exist, this recommendation is not applicable. If the file exists, execute the command below including the correct file path to set the file permissions to 644. For example, `chmod 644 /usr/lib/systemd/system/docker.service`\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system. In that case, this recommendation is not applicable. By default, if the file is present, the file permissions are correctly set to 644.\n\n## References\n\n1. https://docs.docker.com/articles/systemd/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.2","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"zyv-o6s-69z","createdAt":1599601721176,"name":"docker.service file permissions are appropriately set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Pod-Security-Policies","control:5.2.5","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not generally permit containers to be run with the allowPrivilegeEscalation flag set to true.\n\n## Rationale\n\nA container running with the `allowPrivilegeEscalation` flag set to true may have processes that can gain more privileges than their parent. There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to allow privilege escalation. The option exists (and is defaulted to true) to permit setuid binaries to run. If you have need to run containers that use setuid binaries or require privilege escalation, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n## Audit\n\nGet the set of PSPs with the following command: `kubectl get psp`\n\nFor each PSP, check whether privileged is enabled: `kubectl get psp <name> -o=jsonpath='{.spec.allowPrivilegeEscalation}'`\n\nVerify that there is at least one PSP which does not return true.\n\n## Remediation\n\nCreate a PSP as described in the Kubernetes documentation, ensuring that the `.spec.allowPrivilegeEscalation` field is omitted or set to false.\n\n## Impact\n\nPods defined with `spec.allowPrivilegeEscalation: true` will not be permitted unless they are run under a specific PSP.\n\n## Default value\n\nBy default, PodSecurityPolicies are not defined.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/policy/pod-security-policy][1]\n\n## CIS controls\n\nVersion 6 5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://kubernetes.io/docs/concepts/policy/pod-security-policy\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.2.5","framework":"cis-kubernetes","requirement":"Pod-Security-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"frf-hog-dra","createdAt":1599601783271,"name":"Minimize the admission of containers with allowPrivilegeEscalation"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.22","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/default/docker` file permissions are correctly set to 644 or more restrictively.\n\n## Rationale\n\nThe `/etc/default/docker` file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be writeable only by root in order to ensure that it is not modified by less privileged users.\n\n## Audit\n\nVerify that the `/etc/default/docker` file permissions are set to `644` or more restrictively, by running: \n```\nstat -c %a /etc/default/docker\n```\n\n## Remediation\n\nRun the following command: `chmod 644 /etc/default/docker`\n\nThis sets the file permissions for this file to 644.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system and in this case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/admin/configuring/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.22","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.22\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"pqb-2cq-piw","createdAt":1599601845070,"name":"/etc/default/docker file permissions are set to 644 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.24","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIt is possible to attach to a particular `cgroup` when a container is instantiated. Confirming `cgroup` usage would ensure that containers are running in defined `cgroup`s.\n\n## Rationale\n\nSystem administrators typically define `cgroup`s in which containers are supposed to run. If `cgroup`s are not explicitly defined by the system administrator, containers run in the docker `cgroup` by default. At run time, it is possible to attach a container to a different `cgroup` other than the one originally defined. This usage should be monitored and confirmed, as by attaching to a different `cgroup`, excess permissions and resources might be granted to the container and this can therefore prove to be a security risk.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CgroupParent={{ .HostConfig.CgroupParent }}'` \n\nThis command returns the cgroup where the containers are running. If it is blank, it means that containers are running under the default docker cgroup. Any other return value indicates that the system is not configured in line with good security practice.\n\n## Remediation\n\nYou should not use the `--cgroup-parent` option within the docker run command unless strictly required.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, containers run under docker `cgroup`.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#specify-custom-cgroups\n2. https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Resource_Management_Guide/ch01.html\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n\n## Audit\n\nYou should run the following command: docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CgroupParent={{ .HostConfig.CgroupParent }}' The above command returns the cgroup where the containers are running. If it is blank, it means that containers are running under the default docker cgroup. Any other return value indicates that the system is not configured in line with good security practice.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.24","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.24\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"maa-bf8-zan","createdAt":1599601906764,"name":"cgroup usage is confirmed"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.12","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the etcd data directory ownership is set to `etcd:etcd`.\n\n## Rationale\n\n`etcd` is a highly-available key-value store used by Kubernetes deployments for persistent storage of all of its REST API objects. This data directory should be protected from any unauthorized reads or writes. It should be owned by `etcd:etcd`.\n\n## Audit\n\nOn the etcd server node, get the etcd data directory passed as an argument `--data-dir` from the command:\n\n```bash\nps -ef | grep etcd\n```\n\nBased on the etcd data directory found above, run the command:\n\n```bash\nstat -c %U:%G /var/lib/etcd\n```\n\nVerify the ownership is set to `etcd:etcd`.\n\n## Remediation\n\nOn the etcd server node, get the etcd data directory, passed as an argument `--data-dir`, from the below command: `ps -ef | grep etcd`\n\nRun the command (based on the etcd data directory found above): `chown etcd:etcd /var/lib/etcd`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, etcd data directory ownership is set to `etcd:etcd`.\n\n## References\n\n1. https://coreos.com/etcd/docs/latest/op-guide/configuration.html#data-dir\n2. https://kubernetes.io/docs/admin/etcd/\n\n## CIS controls\n\nVersion 6\n\n14 Controlled Access Based on the Need to Know\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.12","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"25d-zal-sfr","createdAt":1599601968321,"name":"etcd data directory ownership is set to etcd:etcd"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.5","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not disable timeouts on streaming connections.\n\n## Rationale\n\nSetting idle timeouts ensures that you are protected against denial-of-service attacks, inactive connections, and running out of ephemeral ports.\n\n*Note*: By default, `--streaming-connection-idle-timeout` is set to four hours, which might be too high for your environment. Setting this as appropriate would additionally ensure that such streaming connections are timed out after serving legitimate use cases.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--streaming-connection-idle-timeout` argument is not set to 0. If the argument is not present, and there is a Kubelet config file specified by `--config`, check that it does not set `streamingConnectionIdleTimeout` to 0.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `streamingConnectionIdleTimeout` to a value other than 0. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_SYSTEM_PODS_ARGS` variable.\n\n`--streaming-connection-idle-timeout=5m`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nLong-lived connections could be interrupted.\n\n## Default value\n\nBy default, `--streaming-connection-idle-timeout` is set to four hours.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://github.com/kubernetes/kubernetes/pull/18552][2]\n\n## CIS controls\n\nVersion 6.9 Limitation and Control of Network Ports, Protocols, and Services\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://github.com/kubernetes/kubernetes/pull/18552\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.5","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"xmg-h3a-wj4","createdAt":1599602030157,"name":"--streaming-connection-idle-timeout argument is not set to 0"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.3","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIf kube-proxy is running, and if it is using a file-based kubeconfig file, ensure that the proxy kubeconfig file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe kube-proxy kubeconfig file controls various parameters of the kube-proxy service in the worker node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system. It is possible to run kube-proxy with the kubeconfig parameters configured as a Kubernetes ConfigMap instead of a file. In this case, there is no proxy kubeconfig file.\n\n## Audit\n\nFind the kubeconfig file being used by `kube-proxy` by running the following command: `ps -ef | grep kube-proxy`. If `kube-proxy` is running, get the kubeconfig file location from the `--kubeconfig` parameter.\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %a <proxy kubeconfig file>`. Verify that if a file is specified and it exists, the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the each worker node:\n\n```\nchmod 644 <proxy kubeconfig file>\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, proxy file has permissions of 640.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-proxy/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior. \n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.        \n\n[1]: https://kubernetes.io/docs/admin/kube-proxy/\n\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.3","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"alc-y7j-j9q","createdAt":1599602091672,"name":"Proxy kubeconfig file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.7","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe TCP/IP port numbers below 1024are considered privileged ports. Normal users and processes are not allowed to use them for various security reasons. Docker does, however allow a container port to be mapped to a privileged port.\n\n## Rationale\n\nBy default, if the user does not specifically declare a container port to host port mapping, Docker automatically and correctly maps the container port to one available in the `49153`-`65535` range on the host. Docker does, however, allow a container port to be mapped to a privileged port on the host if the user explicitly declares it. This is because containers are executed with `NET_BIND_SERVICE` Linux kernel capability which does not restrict privileged port mapping. The privileged ports receive and transmit various pieces of data which are security sensitive and allowing containers to use them is not in line with good security practice.\n\n## Audit\n\nList all running containers instances and their port mappings by executing this command: `docker ps --quiet | xargs docker inspect --format '{{ .Id }}: Ports={{ .NetworkSettings.Ports }}'` You should then review the list and ensure that container ports are not mapped to host port numbers below `102.4`.\n\n## Remediation\n\nDo not map container ports to privileged host ports when starting a container. You should also ensure that there is no such container to host privileged port mapping declarations in the Dockerfile.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, mapping a container port to a privileged port on the host is allowed.\n\n**Note**: There might be certain cases where you want to map privileged ports, because if you forbid it, then the corresponding application has to run outside of a container.\n\nFor example: HTTP and HTTPS load balancers have to bind `80/tcp` and `443/tcp` respectively. Forbidding to map privileged ports effectively forbids from running those in a container, and mandates using an external load balancer. In such cases, those containers instances should be marked as exceptions for this recommendation.\n\n## References\n\n1. https://docs.docker.com/engine/userguide/networking/\n\n## CIS controls\n\nVersion 6\n\n9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system.\n\nVersion 7\n\n9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.7","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ua5-ygj-jad","createdAt":1599602153218,"name":"Privileged ports are not mapped within containers"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:Logging","security:compliance","control:3.2.1","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nKubernetes can audit the details of requests made to the API server. The `--audit-policy-file` flag must be set for this logging to be enabled.\n\n## Rationale\n\nLogging is an important detective control for all systems, to detect potential unauthorised access.\n\n## Audit\n\nRun the following command on one of the cluster master nodes: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-policy-file` is set. Review the contents of the file specified and ensure that it contains a valid audit policy.\n\n## Remediation\n\nCreate an audit policy file for your cluster.\n\n## Impact\n\nAudit logs will be created on the master nodes, which will consume disk space. Care should be taken to avoid generating too large volumes of log information as this could impact the available of the cluster nodes.\n\n## Default value\n\nUnless the `--audit-policy-file` flag is specified, no auditing will be carried out.\n\n## References\n\n1. [https://kubernetes.io/docs/tasks/debug-application-cluster/audit/][1]\n\n## CIS controls\n\nVersion 7.6.2 Activate audit logging - Ensure that local logging has been enabled on all systems and networking devices.\n\n[1]: https://kubernetes.io/docs/tasks/debug-application-cluster/audit/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"3.2.1","framework":"cis-kubernetes","requirement":"Logging","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-3.2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ehp-xpm-xi3","createdAt":1599602215207,"name":"Minimal audit policy is created"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.12","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe container's root filesystem should be treated as a 'golden image' by using Docker run's `--read-only` option. This prevents any writes to the container's root filesystem at container runtime and enforces the principle of immutable infrastructure.\n\n## Rationale\n\nEnabling this option forces containers at runtime to explicitly define their data writing strategy to persist or not persist their data. This also reduces security attack vectors since the container instance's filesystem cannot be tampered with or written to unless it has explicit read-write permissions on its filesystem folder and directories.\n\n## Audit\n\nRun this command on the docker host: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: ReadonlyRootfs={{ .HostConfig.ReadonlyRootfs }}'` \n\nIf this command returns `true`, it means the container's root filesystem is mounted read-only. If the above command returns `false`, it means the container's root filesystem is writeable.\n\n## Remediation\n\nAdd a `--read-only` flag at a container's runtime to enforce the container's root filesystem being mounted as read only. For example, `docker run <Run arguments> --read-only <Container Image Name or ID> <Command>`\n\nEnabling the `--read-only` option at a container's runtime should be used by administrators to force a container's executable processes to only write container data to explicit storage locations during its lifetime. \n\nExamples of explicit storage locations during a container's runtime include, but are not limited to:\n\n1. Using the `--tmpfs` option to mount a temporary file system for non-persistent data writes. `docker run --interactive --tty --read-only --tmpfs \"/run\" --tmpfs \"/tmp\" centos /bin/bash`\n2. Enabling Docker rw mounts at a container's runtime to persist container data directly on the Docker host filesystem. For example, `docker run --interactive --tty --read-only -v /opt/app/data:/run/app/data:rw centos /bin/bash`\n\n3. Utilizing the Docker shared-storage volume plugin for Docker data volume to persist container data. For example, `docker volume create -d convoy --opt o=size=20GB my-named-volume docker run --interactive --tty --read-only -v my-named-volume:/run/app/data centos /bin/bash`\n\n3. Transmitting container data outside of the Docker controlled area during the container's runtime for container data in order to ensure that it is persistent. Examples include hosted databases, network file shares and APIs.\n\n## Impact\n\nEnabling `--read-only` at container runtime may break some container OS packages if a data writing strategy is not defined. You should define what the container's data should and should not persist at runtime in order to decide which strategy to use. Example: Enable use `--tmpfs` for temporary file writes to /tmp Use Docker shared data volumes for persistent data writes\n\n## Default value\n\nBy default, a container has its root filesystem writeable, allowing all container processes to write files owned by the container's actual runtime user.\n\n## References\n\n1. http://docs.docker.com/reference/commandline/cli/#run\n2. https://docs.docker.com/engine/tutorials/dockervolumes/\n3. http://www.projectatomic.io/blog/2015/12/making-docker-images-write-only-in-production/\n4. https://docs.docker.com/engine/reference/commandline/run/#mount-tmpfs-tmpfs\n5. https://docs.docker.com/engine/tutorials/dockervolumes/#creating-and-mounting-a-data-volume-container\n\n## CIS controls\n\nVersion 6\n\n14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.12","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"635-mc8-3mr","createdAt":1599602276896,"name":"Container's root filesystem is mounted as read only"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","source:compliance-agent","control:1.2.8","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nRestrict kubelet nodes to reading only objects associated with them.\n\n## Rationale\n\nThe Node authorization mode only allows kubelets to read Secret, ConfigMap, PersistentVolume, and PersistentVolumeClaim objects associated with their nodes.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--authorization-mode` argument exists and is set to a value to include Node.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--authorization-mode` parameter to a value that includes Node. `--authorization-mode=Node,RBAC`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, Node authorization is not enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-apiserver/ ][1]\n2. [https://kubernetes.io/docs/admin/authorization/node/ ][2]\n3. [https://github.com/kubernetes/kubernetes/pull/46076 ][3]\n4. [https://acotten.com/post/kube17-security][4]\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.              \n\n[1]: https://kubernetes.io/docs/admin/kube-apiserver/ \n[2]: https://kubernetes.io/docs/admin/authorization/node/ \n[3]: https://github.com/kubernetes/kubernetes/pull/46076 \n[4]: https://acotten.com/post/kube17-security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.8","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vgg-kwx-7dh","createdAt":1599602338742,"name":"--authorization-mode argument includes Node"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.3.3","requirement:Controller-Manager","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUse individual service account credentials for each controller.\n\n## Rationale\n\nThe controller manager creates a service account per controller in the kube-system namespace, generates a credential for it, and builds a dedicated API client with that service account credential for each controller loop to use. Setting the `--use-service-account-credentials` to true runs each control loop within the controller manager using a separate service account credential. When used in combination with RBAC, this ensures that the control loops run with the minimum permissions required to perform their intended tasks.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--use-service-account-credentials` argument is set to true.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node to set the below parameter:\n\n```\n--use-service-account-credentials=true\n```\n\n## Impact\n\nWhatever authorizer is configured for the cluster, it must grant sufficient permissions to the service accounts to perform their intended tasks. When using the RBAC authorizer, those roles are created and bound to the appropriate service accounts in the kube-system namespace automatically with default roles and rolebindings that are auto-reconciled on startup. If using other authorization methods (ABAC, Webhook, etc.), the cluster deployer is responsible for granting appropriate permissions to the service accounts (the required permissions can be seen by inspecting the `controller-roles.yaml` and `controller-role-bindings.yaml` files for the RBAC roles.\n\n## Default value\n\nBy default, `--use-service-account-credentials` is set to false.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-controller-manager/ ][1]\n2. [https://kubernetes.io/docs/admin/service-accounts-admin/ ][2]\n3. [https://github.com/kubernetes/kubernetes/blob/release-1.6/plugin/pkg/auth/authorizer/rbac/bootstrappolicy/testdata/controller-roles.yaml ][3]\n4. [https://github.com/kubernetes/kubernetes/blob/release-1.6/plugin/pkg/auth/authorizer/rbac/bootstrappolicy/testdata/controller-role-bindings.yaml ][4]\n5. [https://kubernetes.io/docs/admin/authorization/rbac/#controller-roles][5]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.4 Controlled Use of Administrative Privileges \n\n[1]: https://kubernetes.io/docs/admin/kube-controller-manager/ \n[2]: https://kubernetes.io/docs/admin/service-accounts-admin/ \n[3]: https://github.com/kubernetes/kubernetes/blob/release-1.6/plugin/pkg/auth/authorizer/rbac/bootstrappolicy/testdata/controller-roles.yaml \n[4]: https://github.com/kubernetes/kubernetes/blob/release-1.6/plugin/pkg/auth/authorizer/rbac/bootstrappolicy/testdata/controller-role-bindings.yaml \n[5]: https://kubernetes.io/docs/admin/authorization/rbac/#controller-roles\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.3","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"b7m-bho-nat","createdAt":1599602400314,"name":"--use-service-account-credentials argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.6","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nProtect tuned kernel parameters from overriding kubelet default kernel parameter values.\n\n## Rationale\n\nKernel parameters are usually tuned and hardened by the system administrators before putting the systems into production. These parameters protect the kernel and the system. Your kubelet kernel defaults that rely on such parameters should be appropriately set to match the desired secured system state. Ignoring this could potentially lead to running pods with undesired kernel behavior.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--protect-kernel-defaults` argument is set to true. If the `--protect-kernel-defaults` argument is not present, check that there is a Kubelet config file specified by `--config`, and that the file sets `protectKernelDefaults` to `true`.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `protectKernelDefaults: true`. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_SYSTEM_PODS_ARGS` variable.\n\n`--protect-kernel-defaults=true`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nYou would have to re-tune kernel parameters to match kubelet parameters.\n\n## Default value\n\nBy default, `--protect-kernel-defaults` is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.3 Secure Configurations for Hardware and Software on Mobile Devices, Laptops, Workstations, and Servers\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.6","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"uiw-kms-wwu","createdAt":1599602462044,"name":"--protect-kernel-defaults argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.4","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/var/lib/docker`.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories. For example, audit `/var/lib/docker`, which holds all the information about containers it should be audited.\n\n## Audit\n\nVerify that there is an audit rule applied to the `/var/lib/docker` directory. To see the rule for the `/var/lib/docker` directory, run: \n\n```\nauditctl -l | grep /var/lib/docker\n```\n\n## Remediation\n\nYou should add a rule for the `/var/lib/docker` directory. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /var/lib/docker -k docker \n```\n\nThen restart the audit daemon:\n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.4","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tfa-927-tto","createdAt":1599602523672,"name":"/var/lib/docker auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.31","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe Docker socket docker.sock should not be mounted inside a container.\n\n## Rationale\n\nIf the Docker socket is mounted inside a container it could allow processes running within the container to execute Docker commands which would effectively allow for full control of the host.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Volumes={{ .Mounts }}' | grep docker.sock` This returns any instances where `docker.sock` has been mapped to a container as a volume.\n\n## Remediation\n\nYou should ensure that no containers mount docker.sock as a volume.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, docker.sock is not mounted inside containers.\n\n## References\n\n1. https://raesene.github.io/blog/2016/03/06/The-Dangers-Of-Docker.sock/\n2. https://forums.docker.com/t/docker-in-docker-vs-mounting-var-run-docker-sock/9450/2\n3. https://github.com/docker/docker/issues/21109\n\n## CIS controls\n\nVersion 6\n\n9 Limitation and Control of Network Ports, Protocols, and Services\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.31","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.31\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"3iw-zus-yz3","createdAt":1599602585460,"name":"Docker socket is not mounted inside any containers"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.7","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not always authorize all requests.\n\n## Rationale\n\nThe API Server, can be configured to allow all requests. This mode should not be used on any production cluster.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--authorization-mode` argument exists and is not set to `AlwaysAllow`.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--authorization-mode` parameter to values other than `AlwaysAllow`. One such example could be as below:\n\n```\n--authorization-mode=RBAC\n```\n\n## Impact\n\nOnly authorized requests will be served.\n\n## Default value\n\nBy default, `AlwaysAllow` is not enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-apiserver/ ][1]\n2. [https://kubernetes.io/docs/admin/authorization/node/ ][2]\n\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.              \n\n[1]: https://kubernetes.io/docs/admin/kube-apiserver/ \n[2]: https://kubernetes.io/docs/admin/authorization/node/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.7","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"kli-btm-jbr","createdAt":1599602646953,"name":"--authorization-mode argument is not set to AlwaysAllow (API server)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.4","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUsing the `--privileged` flag provides all Linux kernel capabilities to the container to which it is applied and therefore overwrites the `--cap-add` and `--cap-drop` flags. For this reason, ensure that it is not used.\n\n## Rationale\n\nThe `--privileged` flag provides all capabilities to the container to which it is applied, and also lifts all the limitations enforced by the device cgroup controller. As a consequence this the container has most of the rights of the underlying host. This flag only exists to allow for specific use cases (for example running Docker within Docker) and should not generally be used.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Privileged={{ .HostConfig.Privileged }}'` This command returns `Privileged=false` for each container instance.\n\n## Remediation\n\nDo not run containers with the `--privileged` flag. For example, do not start a container using the command `docker run --interactive --tty --privileged centos /bin/bash`\n\n## Impact\n\nIf you start a container without the `--privileged` flag, it will not have excessive default capabilities.\n\n## Default value\n\nFalse\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.4","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"rbd-urm-klo","createdAt":1599602708557,"name":"Privileged containers are not used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.21","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable profiling, if not needed.\n\n## Rationale\n\nProfiling allows for the identification of specific performance bottlenecks. It generates a significant amount of program data that could potentially be exploited to uncover system and program details. If you are not experiencing any bottlenecks and do not need the profiler for troubleshooting purposes, it is recommended to turn it off to reduce the potential attack surface.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--profiling` argument is set to `false`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the below parameter. --profiling=false\n\n## Impact\n\nProfiling information would not be available.\n\n## Default value\n\nBy default, profiling is enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.21","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.21\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"wk0-7yo-dw9","createdAt":1599602770265,"name":"--profiling argument is set to false (API server)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.18","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the daemon.json file permissions are correctly set to 644 or more restrictively.\n\n## Rationale\n\nThe daemon.json file contains sensitive parameters that may alter the behavior of the docker daemon. Therefore it should be writeable only by root to ensure it is not modified by less privileged users.\n\n## Audit\n\nVerify that the `daemon.json` file permissions are set to `644` or more restrictive, by running: \n```\nstat -c %a /etc/docker/daemon.json\n```\n\n## Remediation\n\nRun `chmod 644 /etc/docker/daemon.json`\n\nThis sets the file permissions for this file to 644.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system, and in that case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.18","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.18\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"7df-4w8-g7l","createdAt":1599602831833,"name":"daemon.json file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.2","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the API server pod specification file ownership is set to root:root.\n\n## Rationale\n\nThe API server pod specification file controls various parameters that set the behavior of the API server. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/manifests/kube-apiserver.yaml\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, chown root:root /etc/kubernetes/manifests/kube-apiserver.yaml\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the kube-apiserver.yaml file ownership is set to root:root.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6 5.1 Minimize And Sparingly Use Administrative Privileges Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior. Version 7 5.2 Maintain Secure Images Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.2","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vbb-t30-k0f","createdAt":1599602893246,"name":"API server pod specification file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","security:compliance","scored:false","control:1.2.33","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEncrypt etcd key-value store.\n\n## Rationale\n\netcd is a highly available key-value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be encrypted at rest to avoid any disclosures.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--encryption-provider-config` argument is set to a EncryptionConfig file. Additionally, ensure that the EncryptionConfig file has all the desired resources covered especially any secrets.\n\n## Remediation\n\nFollow the Kubernetes documentation and configure a EncryptionConfig file. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--encryption-provider-config` parameter to the path of that file: `--encryption-provider-config=</path/to/EncryptionConfig/File>`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `--encryption-provider-config` is not set.\n\n## References\n\n1. https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/ \n2. https://acotten.com/post/kube17-security \n3. https://kubernetes.io/docs/admin/kube-apiserver/ \n4. https://github.com/kubernetes/features/issues/92\n\n## CIS controls\n\nVersion 6 14.5 Encrypt At Rest Sensitive Information Sensitive information stored on systems shall be encrypted at rest and require a secondary authentication mechanism, not integrated into the operating system, in order to access the information. \n\nVersion 7 14.8 Encrypt Sensitive Information at Rest Encrypt all sensitive information at rest using a tool that requires a secondary authentication mechanism not integrated into the operating system, in order to access the information.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.33","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.33\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"7rg-crl-fs0","createdAt":1599602954959,"name":"--encryption-provider-config argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:5.28","security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should use the `--pids-limit` flag at container runtime.\n\n## Rationale\n\nAttackers could launch a fork bomb with a single command inside the container. This fork bomb could crash the entire system and would require a restart of the host to make the system functional again. Using the PIDs cgroup parameter --pids-limit would prevent this kind of attack by restricting the number of forks that can happen inside a container within a specified time frame.\n\n## Audit\n\nRun this command and ensure that `PidsLimit` is not set to 0 or -\n1.  A PidsLimit of 0 or -1 means that any number of processes can be forked concurrently inside the container. \n\n```\ndocker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: PidsLimit={{ .HostConfig.PidsLimit }}'\n```\n\n## Remediation\n\nUse `--pids-limit` flag with an appropriate value when launching the container. For example, `docker run -it --pids-limit 100 <Image_ID>`\n\nIn the above example, the number of processes allowed to run at any given time is set to 100. After a limit of 100 concurrently running processes is reached, Docker would restrict any new process creation.\n\n## Impact\n\nSet the PIDs limit value as appropriate. Incorrect values might leave containers unusable.\n\n## Default value\n\nThe Default value for `--pids-limit` is 0 which means there is no restriction on the number of forks. Note that the PIDs cgroup limit works only for kernel versions 4.3 and higher.\n\n## References\n\n1. https://github.com/docker/docker/pull/18697\n2. https://docs.docker.com/engine/reference/commandline/run/#options\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.28","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.28\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tmp-lms-u8p","createdAt":1599603016485,"name":"PIDs cgroup limit is used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.6","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the scheduler pod specification file ownership is set to root:root.\n\n## Rationale\n\nThe scheduler pod specification file controls various parameters that set the behavior of the kube-scheduler service in the master node. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/manifests/kube-scheduler.yaml\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/manifests/kube-scheduler.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kube-scheduler.yaml` file ownership is set to root:root.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-scheduler/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.6","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"y79-4ts-a0k","createdAt":1599603078027,"name":"Scheduler pod specification file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","control:1.4.1","security:compliance","requirement:Scheduler","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable profiling, if not needed.\n\n## Rationale\n\nProfiling allows for the identification of specific performance bottlenecks. It generates a significant amount of program data that could potentially be exploited to uncover system and program details. If you are not experiencing any bottlenecks and do not need the profiler for troubleshooting purposes, it is recommended to turn it off to reduce the potential attack surface.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-scheduler\n```\nVerify that the `--profiling` argument is set to `false`.\n\n## Remediation\n\nEdit the Scheduler pod specification file `/etc/kubernetes/manifests/kube-scheduler.yaml` file on the master node and set the below parameter:\n\n```\n--profiling=false\n```\n\n## Impact\n\nProfiling information would not be available.\n\n## Default value\n\nBy default, profiling is enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-scheduler/ ][1]\n2. [https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md][2]\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges                \n\n[1]: https://kubernetes.io/docs/admin/kube-scheduler/ \n[2]: https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.4.1","framework":"cis-kubernetes","requirement":"Scheduler","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.4.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"hya-urf-09b","createdAt":1599603139661,"name":"--profiling argument is set to false (Scheduler)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.25","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nRotate log files on reaching 100 MB or as appropriate.\n\n## Rationale\n\nKubernetes automatically rotates the log files. Retaining old log files ensures that you would have sufficient log data available for carrying out any investigation or correlation. If you have set file size of 100 MB and the number of old log files to keep as 10, you would approximate have 1 GB of log data that you could potentially use for your analysis.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-log-maxsize` argument is set to `100` or as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--audit-log-maxsize` parameter to an appropriate size in MB. For example, to set it as 100 MB: `--audit-log-maxsize=100`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, auditing is not enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/concepts/cluster-administration/audit/ 3. https://github.com/kubernetes/features/issues/22\n\n## CIS controls\n\nVersion 6 6.3 Ensure Audit Logging Systems Are Not Subject To Loss (i.e. rotation/archive) Ensure that all systems that store logs have adequate storage space for the logs generated on a regular basis, so that log files will not fill up between log rotation intervals. The logs must be archived and digitally signed on a periodic basis. Version 7 6.4 Ensure adequate storage for logs Ensure that all systems that store logs have adequate storage space for the logs generated.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.25","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.25\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qhy-gng-bh4","createdAt":1599603202907,"name":"--audit-log-maxsize argument is set to 100 or as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.17","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the daemon.json file individual ownership and group ownership is correctly set to root.\n\n## Rationale\n\nThe daemon.json file contains sensitive parameters that could alter the behavior of the docker daemon. It should therefore be owned and group owned by root to ensure it can not be modified by less privileged users.\n\n## Audit\n\nVerify that the `daemon.json` file is owned and group-owned by root by running: \n```\nstat -c %U:%G /etc/docker/daemon.json | grep -v root:root \n```\nThe command should return no results.\n\n## Remediation\n\nRun `chown root:root /etc/docker/daemon.json`\n\nThis sets the ownership and group ownership for the file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system, and in that case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.17","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.17\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"hlb-qzw-opk","createdAt":1599603264485,"name":"daemon.json file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.8","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the certificate authorities file ownership is set to `root:root`.\n\n## Rationale\n\nThe certificate authorities file controls the authorities used to validate API requests. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the following command: `ps -ef | grep kubelet`. Find the file specified by the `--client-ca-file` argument. Run the following command: `stat -c %U:%G <filename>`. Verify that the ownership is set to `root:root`.\n\n## Remediation\n\nRun the following command to modify the ownership of the `--client-ca-file`:\n\n```\nchown root:root <filename>\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default no `--client-ca-file` is specified.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/authentication/#x509-client-certs][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/authentication/#x509-client-certs\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.8","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ifc-9ej-k7k","createdAt":1599603326156,"name":"Client certificate authorities file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.16","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker socket file has permissions of 660 or are configured more restrictively.\n\n## Rationale\n\nOnly root and the members of the docker group should be allowed to read and write to the default Docker Unix socket. The Docker socket file should therefore have permissions of 660 or more restrictive permissions.\n\n## Audit\n\nVerify that the Docker socket file has permissions of `660` or more restrictive, by running: \n```\nstat -c %a /var/run/docker.sock\n```\n\n## Remediation\n\nRun the command `chmod 660 /var/run/docker.sock`\n\nThis sets the file permissions of the Docker socket file to 660.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for the Docker socket file is correctly set to 660.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option\n2. https://docs.docker.com/engine/reference/commandline/dockerd/#bind-docker-to-another-hostport-or-a-unix-socket\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.16","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.16\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"jxv-zrr-1c1","createdAt":1599603387716,"name":"Docker socket file permissions are set to 660 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","control:1.2.3","security:compliance","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use token based authentication.\n\n## Rationale\n\nThe token-based authentication utilizes static tokens to authenticate requests to the apiserver. The tokens are stored in clear-text in a file on the apiserver, and cannot be revoked or rotated without restarting the apiserver. Hence, do not use static token-based authentication.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver \n```\nVerify that the `--token-auth-file` argument does not exist.\n\n## Remediation\n\nFollow the documentation and configure alternate mechanisms for authentication. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and remove the `--token-auth-file=<filename>` parameter.\n\n## Impact\n\nYou will have to configure and use alternate authentication mechanisms such as certificates. Static token based authentication could not be used.\n\n## Default value\n\nBy default, `--token-auth-file` argument is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/authentication/#static-token-file\n2. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n16.14 Encrypt/Hash All Authentication Files And Monitor Their Access - Verify that all authentication files are encrypted or hashed and that these files cannot be accessed without root or administrator privileges. Audit all access to password files in the system.\n\nVersion 7\n\n16.4 Encrypt or Hash all Authentication Credentials - Encrypt or hash with a salt all authentication credentials when stored.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.3","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mvv-hb7-ucv","createdAt":1599603449449,"name":"--token-auth-file parameter is not set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.12","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/usr/sbin/runc`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `/usr/sbin/runc`, and so it should be audited.\n\n## Audit\n\nVerify that there is an audit rule corresponding to the `/usr/sbin/runc` file. To display the rule for the `/usr/sbin/runc` file, run:\n\n```\nauditctl -l | grep /usr/sbin/runc\n```\n\n## Remediation\n\nYou should add a rule for `/usr/sbin/runc` file. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /usr/sbin/runc -k docker\n```\n\nThen restart the audit daemon:\n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The `file/usr/sbin/runc` may not be present on the system, and in that case this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n2. [https://github.com/docker/docker/pull/20662][2]\n3. [https://containerd.tools/][3]\n4. [https://github.com/opencontainers/runc][4]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html \n[2]: https://github.com/docker/docker/pull/20662 \n[3]: https://containerd.tools/ \n[4]: https://github.com/opencontainers/runc\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.12","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ksp-ylk-dub","createdAt":1599603510904,"name":"/usr/sbin/runc auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.10","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSetup TLS connection on the Kubelets.\n\n## Rationale\n\nKubelet communication contains sensitive parameters that should remain encrypted in transit. Configure the Kubelets to serve only HTTPS traffic.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--tls-cert-file` and `--tls-private-key-file` arguments exist and they are set as appropriate. If these arguments are not present, check that there is a Kubelet config specified by `--config` and that it contains appropriate settings for `tlsCertFile` and `tlsPrivateKeyFile`.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `tlsCertFile` to the location of the certificate file to use to identify this Kubelet, and `tlsPrivateKeyFile` to the location of the corresponding private key file. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameters in K`UBELET_CERTIFICATE_ARGS` variable.\n\n```\n--tls-cert-file=<path/to/tls-certificate-file>\n--tls-private-key-file=<path/to/tls-key-file>\n```\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nTLS and client certificate authentication must be configured for your Kubernetes cluster deployment.\n\n## Default value\n\nBy default, `--tls-cert-file` and `--tls-private-key-file` arguments are not set. If `--tls-cert-file` and `--tls-private-key-file` are not provided, a self-signed certificate and key are generated for the public address and saved to the directory passed to `--cert-dir`.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [http://rootsquash.com/2016/05/10/securing-the-kubernetes-api/ ][2]\n3. [https://github.com/kelseyhightower/docker-kubernetes-tls-guide ][3]\n4. [https://jvns.ca/blog/2017/08/05/how-kubernetes-certificates-work/][4]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted.\n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: http://rootsquash.com/2016/05/10/securing-the-kubernetes-api/\n[3]: https://github.com/kelseyhightower/docker-kubernetes-tls-guide\n[4]: https://jvns.ca/blog/2017/08/05/how-kubernetes-certificates-work/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.10","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"gqg-7cf-6bu","createdAt":1599603572402,"name":"--tls-cert-file and --tls-private-key-file arguments are set as appropriate (Kubelet)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:1.1.3","framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the controller manager pod specification file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe controller manager pod specification file controls various parameters that set the behavior of the Controller Manager on the master node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/manifests/kube-controller-manager.yaml\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/manifests/kube-controller-manager.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `kube-controller-manager.yaml` file has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.3","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"pr0-hcf-xkw","createdAt":1599603633988,"name":"Controller manager pod specification file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","source:compliance-agent","control:1.1.19","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the Kubernetes PKI directory and file ownership is set to root:root.\n\n## Rationale\n\nKubernetes makes use of a number of certificates as part of its operation. You should set the ownership of the directory containing the PKI information and all files in that directory to maintain their integrity. The directory and files should be owned by root:root.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nls -laR /etc/kubernetes/pki/\n```\n\nVerify the ownership of all files and directories in this hierarchy is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown -R root:root /etc/kubernetes/pki/`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `/etc/kubernetes/pki/` directory and all of the files and directories contained within it, are set to be owned by the root user.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.19","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.19\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tgm-6a5-ttf","createdAt":1599603695482,"name":"Kubernetes PKI directory and file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.20","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not disable the secure port.\n\n## Rationale\n\nThe secure port is used to serve https with authentication and authorization. If you disable it, no https traffic is served and all traffic is served unencrypted.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--secure-port` argument is either not set or is set to an integer value between `1` and `65535`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and either remove the --secure-port parameter or set it to a different (non-zero) desired port.\n\n## Impact\n\nYou need to set the API Server up with the right TLS certificates.\n\n## Default value\n\nBy default, port 6443 is used as the secure port.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. Version 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.20","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.20\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"5w3-iw4-y16","createdAt":1599603757033,"name":"--secure-port argument is not set to 0"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Controller-Manager","source:compliance-agent","control:1.3.7","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not bind the Controller Manager service to non-loopback insecure addresses.\n\n## Rationale\n\nThe Controller Manager API service which runs on port 10252/TCP by default is used for health and metrics information and is available without authentication or encryption. As such it should only be bound to a localhost interface, to minimize the cluster's attack surface\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--bind-address` argument is set to `127.0.0.1`.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and ensure the correct value for the `--bind-address` parameter.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `--bind-address` parameter is set to `0.0.0.0`.\n\n## References\n\n1. https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager/ \n\n*Notes*: Although the current Kubernetes documentation site says that `--address` is deprecated in favour of `--bind-address`. Kubeadm 1.11 still makes use of `--address`.\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.7","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"pvo-5un-k18","createdAt":1599603818624,"name":"--bind-address argument is set to 127.0.0.1 (Controller Manager)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.6","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nVerify kubelet's certificate before establishing connection.\n\n## Rationale\n\nThe connections from the apiserver to the kubelet are used for fetching logs for pods, attaching (through kubectl) to running pods, and using the kubelets port-forwarding functionality. These connections terminate at the kubelets HTTPS endpoint. By default, the apiserver does not verify the kubelets serving certificate, which makes the connection subject to man-in-the-middle attacks, and unsafe to run over untrusted and/or public networks.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--kubelet-certificate-authority` argument exists and is set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and setup the TLS connection between the apiserver and kubelets. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--kubelet-certificate-authority` parameter to the path to the cert file for the certificate authority. \n\n```\n--kubelet-certificate-authority=<ca-string>\n```\n\n## Impact\n\nYou require TLS to be configured on apiserver as well as kubelets.\n\n## Default value\n\nBy default, `--kubelet-certificate-authority` argument is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://kubernetes.io/docs/admin/kubelet-authentication-authorization/ \n3. https://kubernetes.io/docs/concepts/cluster-administration/master-node-communication/#apiserver---kubelet\n\n## CIS controls\n\nVersion 6.3.4 Use Only Secure Channels For Remote System Administration - Perform all remote administration of servers, workstation, network devices, and similar equipment over secure channels. Protocols such as telnet, VNC, RDP, or others that do not actively support strong encryption should only be used if they are performed over a secondary encryption channel, such as SSL, TLS or IPSEC. \n\nVersion 7.4.5 Use Multifactor Authentication For All Administrative Access - Use multi-factor authentication and encrypted channels for all administrative account access.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.6","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"sbm-nxt-qv3","createdAt":1599603880124,"name":"--kubelet-certificate-authority argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","control:2.4","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEtcd should be configured to make use of TLS encryption for peer connections.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be encrypted in transit and also amongst peers in the etcd clusters.\n\n## Audit\n\nThis recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable.\n\nRun the following command on the etcd server node: \n```\nps -ef | grep etcd\n```\nVerify that the `--peer-cert-file` and `--peer-key-file` arguments are set as appropriate. \n\n## Remediation\n\nFollow the etcd service documentation and configure peer TLS encryption as appropriate for your etcd cluster. Then, edit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and set the below parameters:\n\n```\n--peer-cert-file=</path/to/peer-cert-file> \n--peer-key-file=</path/to/peer-key-file>\n```\n\n## Impact\n\nEtcd cluster peers would need to set up TLS for their communication.\n\n## Default value\n\n*Note*: This recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable. By default, peer communication over TLS is not configured.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][1]\n2. [https://kubernetes.io/docs/admin/etcd/][2]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.  \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.4","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"lzq-1mk-xc7","createdAt":1599603941695,"name":"--peer-cert-file and --peer-key-file arguments are set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.5","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/etc/docker`.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privilege and its behavior depends on some key files and directories, including `/etc/docker`. This holds various certificates and keys used for TLS communication between Docker daemon and Docker client and so it should be audited.\n\n## Audit\n\nVerify that there is an audit rule applied to the `/etc/docker` directory. To see the rule for the `/etc/docker` directory, run: \n\n```\nauditctl -l | grep /etc/docker\n```\n\n## Remediation\n\nYou should add a rule for the `/etc/docker` directory. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /etc/docker -k docker \n```\n\nThen restart the audit daemon:\n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.5","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"5ns-uab-zcf","createdAt":1599604003342,"name":"/etc/docker auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.16","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIPC (POSIX/SysV IPC) namespace provides separation of named shared memory segments, semaphores and message queues. The IPC namespace on the host should therefore not be shared with containers and should remain isolated.\n\n## Rationale\n\nThe IPC namespace provides separation of IPC between the host and containers. If the host's IPC namespace is shared with the container, it would allow processes within the container to see all of IPC communications on the host system. This would remove the benefit of IPC level isolation between host and containers. An attacker with access to a container could get access to the host at this level with major consequences. The IPC namespace should therefore not be shared between the host and its containers.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: IpcMode={{ .HostConfig.IpcMode }}'` \n\nIf the command returns `host`, it means that the host IPC namespace is shared with the container. Any other result means that it is not shared, and that the system is configured in line with good security practice.\n\n## Remediation\n\nDo not start a container with the `--ipc=host` argument. For example, do not start a container with the command `docker run --interactive --tty --ipc=host centos /bin/bash`\n\n## Impact\n\nShared memory segments are used in order to accelerate interprocess communications, commonly in high-performance applications. If this type of application is containerized into multiple containers, you might need to share the IPC namespace of the containers in order to achieve high performance. Under these circumstances, you should still only share container specific IPC namespaces and not the host IPC namespace. A container's IPC namespace can be shared with another container. For example, `docker run --interactive --tty --ipc=container:e3a7a1a97c58 centos /bin/bash`\n\n## Default value\n\nBy default, all containers have their IPC namespace enabled and host IPC namespace is not shared with any container.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#ipc-settings-ipc\n2. http://man7.org/linux/man-pages/man7/namespaces.7.html\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.16","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.16\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qpe-nj2-sl8","createdAt":1599604030036,"name":"Host's IPC namespace is not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","control:1.3.2","security:compliance","requirement:Controller-Manager","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable profiling, if not needed.\n\n## Rationale\n\nProfiling allows for the identification of specific performance bottlenecks. It generates a significant amount of program data that could potentially be exploited to uncover system and program details. If you are not experiencing any bottlenecks and do not need the profiler for troubleshooting purposes, it is recommended to turn it off to reduce the potential attack surface.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--profiling` argument is set to `false`.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and set the below parameter:\n\n```\n--profiling=false\n```\n\n## Impact\n\nProfiling information would not be available.\n\n## Default value\n\nBy default, profiling is enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-controller-manager/ ][1]\n2. [https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md][2]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.4 Controlled Use of Administrative Privileges \n\n[1]: https://kubernetes.io/docs/admin/kube-controller-manager/ \n[2]: https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.2","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"1ie-ddf-7wm","createdAt":1599604031896,"name":"--profiling argument is set to false (Controller Manager)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.6","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/docker` directory permissions are correctly set to 755 or more restrictively.\n\n## Rationale\n\nThe `/etc/docker` directory contains certificates and keys in addition to various sensitive files. It should therefore only be writeable by root to ensure that it can not be modified by a less privileged user.\n\n## Audit\n\nYou should execute the command below to verify that the directory has permissions of 755+: \n\n```\nstat -c %a /etc/docker\n```\n\n## Remediation\n\nRun the following command: `chmod 755 /etc/docker`\n\nThis sets the permissions for the directory to 755.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for this directory are set to 755.\n\n## References\n\n1. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.6","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"een-7do-u18","createdAt":1599604083943,"name":"/etc/docker directory permissions are set to 755 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.30","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSetup TLS connection on the API server.\n\n## Rationale\n\nAPI server communication contains sensitive parameters that should remain encrypted in transit. Configure the API server to serve only HTTPS traffic.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--tls-cert-file` and `--tls-private-key-file` arguments exist and they are set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection on the apiserver. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the TLS certificate and private key file parameters. \n```\n--tls-cert-file=<path/to/tls-certificate-file> \n--tls-private-key-file=<path/to/tls-key-file>\n```\n\n## Impact\n\nTLS and client certificate authentication must be configured for your Kubernetes cluster deployment.\n\n## Default value\n\nBy default, `--tls-cert-file` and `--tls-private-key-file` arguments are not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. http://rootsquash.com/2016/05/10/securing-the-kubernetes-api/ \n3. https://github.com/kelseyhightower/docker-kubernetes-tls-guide\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \nVersion 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.30","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.30\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"m9r-8ka-arc","createdAt":1599604115727,"name":"--tls-cert-file and --tls-private-key-file arguments are set as appropriate (API server)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","security:compliance","scored:false","control:1.1.20","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that Kubernetes PKI certificate files have permissions of 644 or more restrictive.\n\n## Rationale\n\nKubernetes makes use of a number of certificate files as part of the operation of its components. The permissions on these files should be set to 644 or more restrictive to protect their integrity.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nfind /etc/kubernetes/pki -name \"*.crt\" | xargs stat -c '%n %a'\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod -R 644 /etc/kubernetes/pki/*.crt`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the certificates used by Kubernetes are set to have permissions of 644\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.20","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.20\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ion-6fc-xd4","createdAt":1599604147464,"name":"Kubernetes PKI certificate file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.5","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the scheduler pod specification file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe scheduler pod specification file controls various parameters that set the behavior of the Scheduler service in the master node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/manifests/kube-scheduler.yaml\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/manifests/kube-scheduler.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kube-scheduler.yaml` file has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-scheduler/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.5","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qxe-hc6-qlm","createdAt":1599604179189,"name":"Scheduler pod specification file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","source:compliance-agent","control:2.1","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nConfigure TLS encryption for the etcd service.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be encrypted in transit.\n\n## Audit\n\nRun the following command on the etcd server node:\n```\nps -ef | grep etcd\n```\nVerify that the `--cert-file` and the `--key-file` arguments are set as appropriate.\n\n## Remediation\n\nFollow the etcd service documentation and configure TLS encryption. Then, edit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and set the below parameters:\n\n```\n--cert-file=</path/to/ca-file> \n--key-file=</path/to/key-file>\n```\n\n## Impact\n\nClient connections only over TLS would be served.\n\n## Default value\n\nBy default, TLS encryption is not set.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][1]\n2. [https://kubernetes.io/docs/admin/etcd/][2]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.                \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.1","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ezf-1mn-luf","createdAt":1599604210918,"name":"--cert-file and --key-file arguments are set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.26","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSet global request timeout for API server requests as appropriate.\n\n## Rationale\n\nSetting global request timeout allows extending the API server request timeout limit to a duration appropriate to the user's connection speed. By default, it is set to 60 seconds which might be problematic on slower connections making cluster resources inaccessible once the data volume for requests exceeds what can be transmitted in 60 seconds. But, setting this timeout limit to be too large can exhaust the API server resources making it prone to Denial-of-Service attack. Hence, it is recommended to set this limit as appropriate and change the default limit of 60 seconds only if needed.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--request-timeout` argument is either not set or set to an appropriate value.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml and set the below parameter as appropriate and if needed. For example, --request-timeout=300s\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, --request-timeout is set to 60 seconds.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://github.com/kubernetes/kubernetes/pull/51415\n\n## CIS controls\n\nVersion 6 14.6 Enforce Detailed Audit Logging For Sensitive Information Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. Version 7 14.9 Enforce Detail Logging for Access or Changes to Sensitive Data Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.26","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.26\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"1kt-cbt-hvl","createdAt":1599604242564,"name":"--request-timeout argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Pod-Security-Policies","control:5.2.4","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not generally permit containers to be run with the hostNetwork flag set to true.\n\n## Rationale\n\nA container running in the host's network namespace could access the local loopback device, and could access network traffic to and from other pods. There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to share the host network namespace. If you have need to run containers which require hostNetwork, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n## Audit\n\nGet the set of PSPs with the following command: `kubectl get psp`\n\nFor each PSP, check whether privileged is enabled: `kubectl get psp <name> -o=jsonpath='{.spec.hostNetwork}'`\n\nVerify that there is at least one PSP which does not return true.\n\n## Remediation\n\nCreate a PSP as described in the Kubernetes documentation, ensuring that the `.spec.hostNetwork` field is omitted or set to false.\n\n## Impact\n\nPods defined with spec.hostNetwork: true will not be permitted unless they are run under a specific PSP.\n\n## Default value\n\nBy default, PodSecurityPolicies are not defined.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/policy/pod-security-policy][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://kubernetes.io/docs/concepts/policy/pod-security-policy\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.2.4","framework":"cis-kubernetes","requirement":"Pod-Security-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mlb-fwt-s80","createdAt":1599604274257,"name":"Minimize the admission of containers wishing to share the host network namespace"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:1.2.3","security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit all Docker daemon activities.\n\n## Rationale\n\nAs well as auditing the normal Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges. It is very important to audit its activities and usage.\n\n## Audit\n\nVerify that there are audit rules for the Docker daemon. To see the rules associated with the Docker daemon, run: \n\n```\nauditctl -l | grep /usr/bin/dockerd\n```\n\n## Remediation\n\nYou should add rules for the Docker daemon. For example, add the following line to the `/etc/audit/audit.rules` file: \n\n```\n-w /usr/bin/dockerd -k docker \n```\n\nThen restart the audit daemon using the following command:\n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, the Docker daemon is not audited.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.6.2 Ensure Audit Log Settings Support Appropriate Log Entry Formatting - Validate audit log settings for each hardware device and the software installed on it, ensuring that logs include a date, timestamp, source addresses, destination addresses, and various other useful elements of each packet and/or transaction. Systems should record logs in a standardized format such as syslog entries or those outlined by the Common Event Expression initiative. If systems cannot generate logs in a standardized format, log normalization tools can be deployed to convert logs into such a format. \n\nVersion 7.6.2 Activate audit logging - Ensure that local logging has been enabled on all systems and networking devices. \n\nVersion 6.3 Enable Detailed Logging - Enable system logging to include detailed information such as an event source, date, user, timestamp, source addresses, destination addresses, and other useful elements.                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.3","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"fpu-oe5-feu","createdAt":1599604305682,"name":"Auditing is configured for the Docker daemon"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.25","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should restrict the container from acquiring additional privileges via SUID or SGID bits.\n\n## Rationale\n\nA process can set the `no_new_priv` bit in the kernel and this persists across forks, clones and execve. The `no_new_priv` bit ensures that the process and its child processes do not gain any additional privileges via SUID or SGID bits. This reduces the danger associated with many operations because the possibility of subverting privileged binaries is lessened.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: SecurityOpt={{ .HostConfig.SecurityOpt }}'` \n\nThis command returns all of the security options currently configured for containers. The option `no-new-privileges` should be one of them.\n\n## Remediation\n\nStart your container with the options `docker run --rm -it --security-opt=no-new-privileges ubuntu bash`\n\n## Impact\n\nThe `no_new_priv` option prevents LSMs like SELinux from allowing processes to acquire new privileges.\n\n## Default value\n\nBy default, new privileges are not restricted.\n\n## References\n\n1. https://github.com/projectatomic/atomic-site/issues/269\n2. https://github.com/docker/docker/pull/20727\n3. https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt\n4. https://lwn.net/Articles/475678/\n5. https://lwn.net/Articles/475362/\n\n## CIS controls\n\nVersion 6\n\n5 Controlled Use of Administration Privileges Controlled Use of Administration Privileges\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.25","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.25\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"cft-3kh-z3l","createdAt":1599604337425,"name":"Container is restricted from acquiring additional privileges"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.4","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable the read-only port.\n\n## Rationale\n\nThe Kubelet process provides a read-only API in addition to the main Kubelet API. Unauthenticated access is provided to this read-only API which could possibly retrieve potentially sensitive information about the cluster.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--read-only-port` argument exists and is set to 0. If the `--read-only-port` argument is not present, check that there is a Kubelet config file specified by `--config`. Check that if there is a readOnlyPort entry in the file, it is set to 0.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `readOnlyPort` to 0. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_SYSTEM_PODS_ARGS` variable.\n\n`--read-only-port=0`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nRemoval of the read-only port will require that any service which made use of it will need to be re-configured to use the main Kubelet API.\n\n## Default value\n\nBy default, `--read-only-port` is set to 10255/TCP. However, if a config file is specified by `--config` the default value for `readOnlyPort` is 0.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system.\n\nVersion 7 9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.4","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"dgo-kog-lle","createdAt":1599604369044,"name":"--read-only-port argument is set to 0"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.4","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIf kube-proxy is running, ensure that the file ownership of its kubeconfig file is set to root:root.\n\n## Rationale\n\nThe kubeconfig file for kube-proxy controls various parameters for the kube-proxy service in the worker node. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nFind the kubeconfig file being used by `kube-proxy` by running the following command: `ps -ef | grep kube-proxy`. If `kube-proxy` is running, get the kubeconfig file location from the `--kubeconfig` parameter.\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %U:%G <proxy kubeconfig file>`. Verify that the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the each worker node:\n\n`chown root:root <proxy kubeconfig file>`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, proxy file ownership is set to root:root.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-proxy/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kube-proxy/\n\n## Audit\n\nFind the kubeconfig file being used by kube-proxy by running the following command: ps -ef | grep kube-proxy If kube-proxy is running, get the kubeconfig file location from the --kubeconfig parameter. Run the below command (based on the file location on your system) on the each worker node. For example, stat -c %U:%G <proxy kubeconfig file> Verify that the ownership is set to root:root.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.4","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oat-dei-klo","createdAt":1599604401268,"name":"Proxy kubeconfig file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.1","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the kubelet service file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe kubelet service file controls various parameters that set the behavior of the kubelet service in the worker node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %a /etc/systemd/system/kubelet.service.d/10-kubeadm.conf`. Verify that the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the each worker node.\n\nFor example, `chmod 644 /etc/systemd/system/kubelet.service.d/10-kubeadm.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the kubelet service file has permissions of 640.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#44-joining-your-nodes ][2]\n3. [https://kubernetes.io/docs/admin/kubeadm/#kubelet-drop-in][3]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#44-joining-your-nodes\n[3]: https://kubernetes.io/docs/admin/kubeadm/#kubelet-drop-in\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.1","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"j8k-7ii-fwo","createdAt":1599604432646,"name":"Kubelet service file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.5","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/docker` directory ownership and group ownership is correctly set to root.\n\n## Rationale\n\nThe `/etc/docker` directory contains certificates and keys in addition to various other sensitive files. It should therefore be individual owned and group owned by root in order to ensure that it can not be modified by less privileged users.\n\n## Audit\n\nYou should execute the command below to verify that the directory is owned and group owned by root: \n\n```\nstat -c %U:%G /etc/docker | grep -v root:root\n``` \n\nThis command does not return any data.\n\n## Remediation\n\nTo resolve this issue, run the following command: `chown root:root /etc/docker`\n\nThis sets the ownership and group ownership for the directory to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the ownership and group ownership for this directory is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.`\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.5","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"heb-axz-wdc","createdAt":1599604466531,"name":"/etc/docker directory ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","control:3.20","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/sysconfig/docker` file individual ownership and group ownership is correctly set to root.\n\n## Rationale\n\nThe `/etc/sysconfig/docker` file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be individually owned and group owned by root to ensure that it is not modified by less privileged users.\n\n## Audit\n\nVerify that the `/etc/sysconfig/docker` file is individually owned and group-owned by root by running: \n```\nstat -c %U:%G /etc/sysconfig/docker | grep -v root:root\n```\nThe command should return no results.\n\n## Remediation\n\nRun the following command: `chown root:root /etc/sysconfig/docker`\n\nThis sets the ownership and group ownership for the file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system, and in this case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/admin/configuring/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.20","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.20\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"xrt-uiz-s7o","createdAt":1599604498138,"name":"/etc/sysconfig/docker file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.15","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `scheduler.conf` file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe `scheduler.conf` file is the kubeconfig file for the Scheduler. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/scheduler.conf\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/scheduler.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `scheduler.conf` has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.15","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.15\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"fmc-m0d-pe5","createdAt":1599604530000,"name":"scheduler.conf file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent","control:1.2.9"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/etc/sysconfig/docker`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges, it is very important to audit its activities and usage. Its behavior depends on some key files and directories, including `/etc/sysconfig/docker`. It contains various parameters related to the Docker daemon when run on CentOS and RHEL based distributions. If present, it is important that it is audited.\n\n## Audit\n\nVerify that there is an audit rule associated with the `/etc/sysconfig/docker` file. To see the rule for the `/etc/sysconfig/docker` file, run: \n```\nauditctl -l | grep /etc/sysconfig/docker\n```\n\n## Remediation\n\nYou should add a rule for `/etc/sysconfig/docker` file. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /etc/sysconfig/docker -k docker\n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `/etc/sysconfig/docker` may not be present on the system and in that case, this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.9","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ps6-vb4-bim","createdAt":1599604561498,"name":"/etc/sysconfig/docker auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","source:compliance-agent","control:2.1"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy default, all network traffic is allowed between containers on the same host on the default network bridge. You can restrict all inter-container communication and link specific containers together that require communication. Or, you can create a custom network and only join containers that need to communicate to that custom network.\n\n## Rationale\n\nBy default, unrestricted network traffic is enabled between all containers on the same host on the default network bridge. Each container has the potential of reading all packets across the container network on the same host. This might lead to an unintended and unwanted disclosure of information to other containers. Hence, restrict inter-container communication on the default network bridge.\n\n## Audit\n\nVerify that the default network bridge has been configured to restrict inter-container communication by running:\n```\ndocker network ls --quiet | xargs docker network inspect --format '{{ .Name }}: {{ .Options }}' \n```\nCheck that it returns `com.docker.network.bridge.enable_icc:false` for the default network bridge.\n\n## Remediation\n\nEdit the Docker daemon configuration file to ensure that inter-container communication is disabled:\n\n```\n\"icc\": false\n```\n\nAlternatively, run the Docker daemon directly and pass `--icc=false` as an argument:\n\n```\ndockerd --icc=false \n```\n\nFollow the Docker documentation and create a custom network, and only join containers that need to communicate to that custom network. The `--icc` parameter only applies to the default docker bridge. If you use a custom network, adopt the segmenting networks approach instead.\n\n## Impact\n\nInter-container communication is disabled on the default network bridge. If any communication between containers on the same host is desired, it needs to be explicitly defined using container linking or custom networks.\n\n## Default value\n\nBy default, all inter-container communication is allowed on the default network bridge.\n\n## References\n\n1. [https://docs.docker.com/engine/userguide/networking/][1]\n2. [https://docs.docker.com/engine/userguide/networking/default_network/container-communication/#communication-between-containers][2]\n\n## CIS controls\n\nNone                \n\n[1]: https://docs.docker.com/engine/userguide/networking/ \n[2]: https://docs.docker.com/engine/userguide/networking/default_network/container-communication/#communication-between-containers\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_network","complianceFrameworks":[{"control":"2.1","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"dmd-zy3-5un","createdAt":1599604593277,"name":"Network traffic is restricted between containers on the default bridge"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.16","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nReject creating pods that do not match Pod Security Policies.\n\n## Rationale\n\nA Pod Security Policy is a cluster-level resource that controls the actions that a pod can perform and what it has the ability to access. The PodSecurityPolicy objects define a set of conditions that a pod must run with in order to be accepted into the system. Pod Security Policies are comprised of settings and strategies that control the security features a pod has access to and hence this must be used to control pod access permissions. Note: When the PodSecurityPolicy admission plugin is in use, there needs to be at least one PodSecurityPolicy in place for ANY pods to be admitted. See section 1.7 for recommendations on PodSecurityPolicy settings.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--enable-admission-plugins` argument is set to a value that includes `PodSecurityPolicy`.\n\n## Remediation\n\nFollow the documentation and create Pod Security Policy objects as per your environment. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --enable-admission-plugins parameter to a value that includes PodSecurityPolicy: --enable-admission-plugins=...,PodSecurityPolicy,... Then restart the API Server.\n\n## Impact\n\nThe policy objects must be created and granted before pod creation would be allowed.\n\n## Default value\n\nBy default, PodSecurityPolicy is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#podsecuritypolicy 3. https://kubernetes.io/docs/concepts/policy/pod-security-policy/#enabling-pod-security-policies\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.16","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.16\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vwz-aw9-c09","createdAt":1599604624793,"name":"Admission control plugin PodSecurityPolicy is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.4","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the file permissions on the docker.socket file are correctly set to 644 or more restrictively.\n\n## Rationale\n\nThe docker.socket file contains sensitive parameters that may alter the behavior of the Docker remote API. It should therefore be writeable only by root in order to ensure that it is not modified by less privileged users.\n\n## Audit\n\n1. Locate the `docker.socket` file by running: \n    ```\n    systemctl show -p FragmentPath docker.socket \n    ```\n2. If the file does not exist, this recommendation is not applicable. If the file exists, verify that the file permissions are set to `644` or more restrictively, by running the following command with the correct filepath:\n    ```\n    stat -c %a /usr/lib/systemd/system/docker.socket\n    ```\n\n## Remediation\n\n1. Find out the file location: `systemctl show -p FragmentPath docker.socket`\n2. If the file does not exist, this recommendation is not applicable. If the file does exist, you should execute the command below, including the correct file path to set the file permissions to 644. For example, `chmod 644 /usr/lib/systemd/system/docker.socket`\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system and in that case, this recommendation is not applicable. By default, if the file is present, the permissions should be set to 644 or more restrictively.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#bind-docker-to-another-hostport-or-a-unix-socket\n2. https://github.com/YungSang/fedora-atomic-packer/blob/master/oem/docker.socket\n3. http://daviddaeschler.com/2014/12/14/centos-7rhel-7-and-docker-containers-on-boot/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.4","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"myf-zyh-89p","createdAt":1599604656679,"name":"docker.socket file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","control:2.4","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDocker considers a private registry either secure or insecure. By default, registries are considered secure.\n\n## Rationale\n\nA secure registry uses TLS. A copy of the registry's CA certificate is placed on the Docker host in the `/etc/docker/certs.d/<registry-name>/` directory. An insecure registry is one which does not have a valid registry certificate, or one not not using TLS. You should not use insecure registries because they present a risk of traffic interception and modification. Additionally, once a registry has been marked as insecure, commands such as `docker pull`, `docker push`, and `docker search` will not result in an error message, and users may indefinitely be working with this type of insecure registry without ever being notified of the risk of potential compromise.\n\n## Audit\n\nFind out if any insecure registries are in use by running: \n```\ndocker info --format 'Insecure Registries: {{.RegistryConfig.InsecureRegistryCIDRs}}'\n```\n\n## Remediation\n\nYou should ensure that no insecure registries are in use.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, Docker assumes all registries except local ones are secure.\n\n## References\n\n1. [https://docs.docker.com/registry/insecure/][1]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.                \n\n[1]: https://docs.docker.com/registry/insecure/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.4","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"wki-o8r-1ha","createdAt":1599604688564,"name":"Insecure registries are not used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.14","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `admin.conf` file ownership is set to root:root.\n\n## Rationale\n\nThe `admin.conf` file contains the admin credentials for the cluster. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/admin.conf\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/admin.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `admin.conf` file ownership is set to `root:root`.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kubeadm/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.14","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.14\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"kcn-wwa-os0","createdAt":1599604720378,"name":"admin.conf file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.19","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/default/docker` file ownership and group-ownership is correctly set to root.\n\n## Rationale\n\nThe `/etc/default/docker` file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be individually owned and group owned by root to ensure that it cannot be modified by less privileged users.\n\n## Audit\n\nVerify that the `/etc/default/docker` file is individually owned and group-owned by root by running: \n```\nstat -c %U:%G /etc/default/docker | grep -v root:root \n```\nThe command should return no results.\n\n## Remediation\n\nExecute the following command: `chown root:root /etc/default/docker`\n\nThis sets the ownership and group ownership of the file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system, and in this case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/admin/configuring/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.19","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.19\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"o5w-d8y-ka1","createdAt":1599604751728,"name":"/etc/default/docker file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.5","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the kubelet.conf file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe `kubelet.conf` file is the kubeconfig file for the node, and controls various parameters that set the behavior and identity of the worker node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %a /etc/kubernetes/kubelet.conf`. Verify that the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun this command (based on the file location on your system) on the each worker node. For example, `chmod 644 /etc/kubernetes/kubelet.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kubelet.conf` file has permissions of 640.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior. \n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.5","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"x88-8vs-ygw","createdAt":1599604783481,"name":"kubelet.conf file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.5","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should not allow sensitive host system directories such as those listed below to be mounted as container volumes, especially in read-write mode. `/` `/boot` `/dev` `/etc` `/lib` `/proc` `/sys` `/usr`\n\n## Rationale\n\nIf sensitive directories are mounted in read-write mode, it is possible to make changes to files within them. This has obvious security implications and should be avoided.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Volumes={{ .Mounts }}'` This command returns a list of currently mapped directories and indicates whether they are mounted in read-write mode for each container instance.\n\n## Remediation\n\nDo not mount directories which are security sensitive on the host within containers, especially in read-write mode.\n\n## Impact\n\nNone\n\n## Default value\n\nDocker defaults to using a read-write volume but you can also mount a directory read-only. By default, no sensitive host directories are mounted within containers.\n\n## References\n\n1. https://docs.docker.com/engine/tutorials/dockervolumes/\n\n## CIS controls\n\nVersion 6\n\n14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.5","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"dmq-wqu-2im","createdAt":1599604814929,"name":"Sensitive host system directories are not mounted on containers"}]}
    headers:
      Content-Type:
      - application/json
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=1&page%5Bsize%5D=100
    method: GET
  response:
    body: |
      {"meta":{"page":{"total_filtered_count":52,"total_count":152}},"data":[{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.28","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nExplicitly set a service account public key file for service accounts on the apiserver.\n\n## Rationale\n\nBy default, if no --service-account-key-file is specified to the apiserver, it uses the private key from the TLS serving certificate to verify service account tokens. To ensure that the keys for service account tokens could be rotated as needed, a separate public/private key pair should be used for signing service account tokens. Hence, the public key should be specified to the apiserver with --service-account-key-file.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--service-account-key-file` argument exists and is set as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--service-account-key-file` parameter to the public key file for service accounts: `--service-account-key-file=<filename>`\n\n## Impact\n\nThe corresponding private key must be provided to the controller manager. You would need to securely maintain the key file and rotate the keys based on your organization's key rotation policy.\n\n## Default value\n\nBy default, `--service-account-key-file` argument is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://github.com/kubernetes/kubernetes/issues/24167\n\n## CIS controls\n\nVersion 6 3 Secure Configurations for Hardware and Software on Mobile Devices, Laptops, Workstations, and Servers \nVersion 7 5 Secure Configuration for Hardware and Software on Mobile Devices, Laptops, Workstations and Servers \n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.28","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.28\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"xtg-mzn-vft","createdAt":1599604846892,"name":"--service-account-key-file argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent","control:5.30"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should not share the host's user namespaces with containers running on it.\n\n## Rationale\n\nUser namespaces ensure that a root process inside the container will be mapped to a non-root process outside the container. Sharing the user namespaces of the host with the container does not therefore isolate users on the host from users in the containers.\n\n## Audit\n\nRun this command and ensure that it does not return any value for `UsernsMode`. If it returns a value of `host`, it means that the host user namespace is shared with its containers: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: UsernsMode={{ .HostConfig.UsernsMode }}'`\n\n## Remediation\n\nDo not share user namespaces between host and containers. For example, do not run the command `docker run --rm -it --userns=host ubuntu bash`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the host user namespace is shared with containers unless user namespace support is enabled.\n\n## References\n\n1. https://docs.docker.com/engine/security/userns-remap/\n2. https://docs.docker.com/engine/reference/commandline/run/#options\n3. https://github.com/docker/docker/pull/12648\n4. https://events.linuxfoundation.org/sites/events/files/slides/User%20Namespaces%20-%20ContainerCon%202015%20-%2016-9-final_0.pdf\n\n## CIS controls\n\nVersion 6\n\n12 Boundary Defense Boundary Defense\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.30","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.30\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"e7c-uzf-jwy","createdAt":1599604878282,"name":"Host's user namespaces are not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","requirement:Container-Images-and-Build-File-Configuration","framework:cis-docker","control:4.6","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should add the `HEALTHCHECK` instruction to your Docker container images in order to ensure that health checks are executed against running containers.\n\n## Rationale\n\nAn important security control is that of availability. Adding the `HEALTHCHECK` instruction to your container image ensures that the Docker engine periodically checks the running container instances against that instruction to ensure that containers are still operational. Based on the results of the health check, the Docker engine could terminate containers which are not responding correctly, and instantiate new ones.\n\n## Audit\n\nRun this command to ensure that Docker images have the appropriate `HEALTHCHECK` instruction configured: `docker inspect --format='{{ .Config.Healthcheck }}' <IMAGE>`\n\n## Remediation\n\nYou should follow the Docker documentation and rebuild your container images to include the `HEALTHCHECK` instruction.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `HEALTHCHECK` is not set.\n\n## References\n\n1. https://docs.docker.com/engine/reference/builder/#healthcheck\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_image","complianceFrameworks":[{"control":"4.6","framework":"cis-docker","requirement":"Container-Images-and-Build-File-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-4.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"5xs-afd-sfx","createdAt":1599604909942,"name":"HEALTHCHECK instructions have been added to container images"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:5.7.4","source:compliance-agent","requirement:General-Policies","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nKubernetes provides a default namespace, where objects are placed if no namespace is specified for them. Placing objects in this namespace makes application of RBAC and other controls more difficult.\n\n## Rationale\n\nResources in a Kubernetes cluster should be segregated by namespace, to allow for security controls to be applied at that level and to make it easier to manage resources.\n\n## Audit\n\nRun this command to list objects in default namespace: `kubectl get all`\n\nThe only entries there should be system managed resources such as the Kubernetes service.\n\n## Remediation\n\nEnsure that namespaces are created to allow for appropriate segregation of Kubernetes resources and that all new resources are created in a specific namespace.\n\n## Impact\n\nNone\n\n## Default value\n\nUnless a namespace is specific on object creation, the default namespace will be used.\n\n## References\n\nNone\n\n## CIS controls\n\nNone\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.7.4","framework":"cis-kubernetes","requirement":"General-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.7.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"gly-1rp-obv","createdAt":1599604941259,"name":"The default namespace should not be used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.21","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSeccomp filtering provides a means for a process to specify a filter for incoming system calls. The default Docker seccomp profile works on a whitelist basis and allows for a large number of common system calls, whilst blocking all others. This filtering should not be disabled unless it causes a problem with your container application usage.\n\n## Rationale\n\nA large number of system calls are exposed to every userland process with many of them going unused for the entire lifetime of the process. Most of applications do not need all these system calls and would therefore benefit from having a reduced set of available system calls. Having a reduced set of system calls reduces the total kernel surface exposed to the application and thus improvises application security.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: SecurityOpt={{ .HostConfig.SecurityOpt }}'` \n\nThis returns either `<no value>` or your modified seccomp profile. If it returns `[seccomp:unconfined]`, the container is running without any seccomp profiles and is therefore not configured in line with good security practices.\n\n## Remediation\n\nBy default, seccomp profiles are enabled. You do not need to do anything unless you want to modify and use a modified seccomp profile.\n\n## Impact\n\nWith Docker 1.10 and greater, the default seccomp profile blocks syscalls, regardless of `--cap-add passed` to the container. You should create your own custom seccomp profile in such cases. You can also disable the default seccomp profile by passing `--security-opt=seccomp:unconfined` on docker run.\n\n## Default value\n\nWhen you run a container, it uses the default profile unless you override it with the `--security-opt` option.\n\n## References\n\n1. http://blog.scalock.com/new-docker-security-features-and-what-they-mean-seccomp-profiles\n2. https://docs.docker.com/engine/reference/run/#security-configuration\n3. https://github.com/docker/docker/blob/master/profiles/seccomp/default.json\n4. https://docs.docker.com/engine/security/seccomp/\n5. https://www.kernel.org/doc/Documentation/prctl/seccomp_filter.txt\n6. https://github.com/docker/docker/issues/22870\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.21","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.21\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"hub-v5u-cw0","createdAt":1599604972925,"name":"Default seccomp profile is not Disabled"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.7","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAllow Kubelet to manage `iptables`.\n\n## Rationale\n\nKubelets can automatically manage the required changes to `iptables` based on how you choose your networking options for the pods. It is recommended to let kubelets manage the changes to `iptables`. This ensures that the `iptables` configuration remains in sync with pods networking configuration. Manually configuring `iptables` with dynamic pod network configuration changes might hamper the communication between pods/containers and to the outside world. You might have `iptables` rules too restrictive or too open.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that if the `--make-iptables-util-chains` argument exists then it is set to true. If the `--make-iptables-util-chains` argument does not exist, and there is a Kubelet config file specified by `--config`, verify that the file does not set `makeIPTablesUtilChains` to `false`.\n\n## Remediation\n\nIf using a kubelet config file, edit the file to set `makeIPTablesUtilChains: true`. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and remove the `--make-iptables-util-chains` argument from the `KUBELET_SYSTEM_PODS_ARGS` variable. Based on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nKubelet would manage the `iptables` on the system and keep it in sync. If you are using any other `iptables` management solution, then there might be some conflicts.\n\n## Default value\n\nBy default, `--make-iptables-util-chains argument` is set to true.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.9 Limitation and Control of Network Ports, Protocols, and Services\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.7","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"f3g-zcg-jm0","createdAt":1599605004390,"name":"--make-iptables-util-chains argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.2","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSELinux is an effective and easy-to-use Linux application security system. It is available by default on some distributions such as Red Hat and Fedora.\n\n## Rationale\n\nSELinux provides a Mandatory Access Control (MAC) system that greatly augments the default Discretionary Access Control (DAC) model. You can therefore add an extra layer of safety to your containers by enabling SELinux on your Linux host.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: SecurityOpt={{ .HostConfig.SecurityOpt }}'` \n\nThis command returns all the security options currently configured on the containers listed.\n\n## Remediation\n\nIf SELinux is applicable for your Linux OS, you should use it.\n\n1. Set the SELinux State.\n2. Set the SELinux Policy.\n3. Create or import a SELinux policy template for Docker containers.\n4. Start Docker in daemon mode with SELinux enabled. For example: `docker daemon --selinux-enabled`\n5. Start your Docker container using the security options. For example, `docker run --interactive --tty --security-opt label=level:TopSecret centos /bin/bash`\n\n## Impact\n\nAny restrictions defined in the SELinux policy will be applied to your containers. It should be noted that if your SELinux policy is misconfigured, this may have an impact on the correct operation of the affected containers.\n\n## Default value\n\nBy default, no SELinux security options are applied on containers.\n\n## References\n\n1. https://docs.docker.com/engine/security/security/#other-kernel-security-features\n2. https://docs.docker.com/engine/reference/run/#security-configuration\n3. http://docs.fedoraproject.org/en-US/Fedora/13/html/Security-Enhanced_Linux/\n4. https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux_atomic_host/7/html/container_security_guide/docker_selinux_security_policy\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.2","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"eww-c9f-0hf","createdAt":1599605036108,"name":"SELinux security options are set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.26","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIf the container image does not have an HEALTHCHECK instruction defined, you should use the `--health-cmd` parameter at container runtime to check container health.\n\n## Rationale\n\nIf the container image you are using does not have a pre-defined HEALTHCHECK instruction, use the `--health-cmd` parameter to check container health at runtime. Based on the reported health status, remedial actions can be taken if necessary.\n\n## Audit\n\nRun this command and ensure that all containers are reporting their health status: `docker ps --quiet | xargs docker inspect --format '{{ .Id }}: Health={{ .State.Health.Status }}'`\n\n## Remediation\n\nYou should run the container using the `--health-cmd` parameter. For example, `docker run -d --health-cmd='stat /etc/passwd || exit 1' nginx`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, health checks are not carried out at container runtime.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#healthcheck\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.26","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.26\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ojg-sb1-nso","createdAt":1599605067593,"name":"Container health is checked at runtime"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","control:2.5","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEtcd should be configured for peer authentication.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be accessible only by authenticated etcd peers in the etcd cluster.\n\n## Audit\n\nThis recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable.\n\nRun the following command on the etcd server node: \n```\nps -ef | grep etcd\n```\nVerify that the `--peer-client-cert-auth` argument is set to `true`.  \n\n## Remediation\n\nEdit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and set the below parameter:\n\n```\n--peer-client-cert-auth=true\n```\n\n## Impact\n\nAll peers attempting to communicate with the etcd server will require a valid client certificate for authentication.\n\n## Default value\n\n*Note*: This recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable. By default, `--peer-client-cert-auth` argument is set to false.\n\n## References\n\n1. https://coreos.com/etcd/docs/latest/op-guide/security.html \n2. https://kubernetes.io/docs/admin/etcd/ \n3. https://coreos.com/etcd/docs/latest/op-guide/configuration.html#peer-client-cert-auth\n\n## CIS controls\n\nVersion 6.14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities. \n\nVersion 7.14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.                \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/ \n[3]: https://coreos.com/etcd/docs/latest/op-guide/configuration.html#peer-client-cert-auth\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.5","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"l01-5y2-miz","createdAt":1599605099307,"name":"--peer-client-cert-auth argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","requirement:Container-Images-and-Build-File-Configuration","framework:cis-docker","control:4.1","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nContainers should run as a non-root user.\n\n## Rationale\n\nIt is good practice to run the container as a non-root user, where possible. This can be done either via the USER directive in the Dockerfile or through [gosu][1] or similar where used as part of the CMD or ENTRYPOINT directives.\n\n## Remediation\n\nEnsure that the Dockerfile for each container image contains `USER <username or ID>`\n\nIn this case, the user name or ID refers to the user that was found in the container base image. If there is no specific user created in the container base image, then make use of the `useradd` command to add a specific user before the USER instruction in the Dockerfile. \n\nFor example, add the below lines in the Dockerfile to create a user in the container:\n`RUN useradd -d /home/username -m -s /bin/bash username USER username`\n\n**Note**: If there are users in the image that are not needed, you should consider deleting them. After deleting those users, commit the image and then generate new instances of the containers. Alternatively, if it is not possible to set the USER directive in the Dockerfile, a script running as part of the CMD or ENTRYPOINT sections of the Dockerfile should be used to ensure that the container process switches to a non-root user.\n\n## Impact\n\nRunning as a non-root user can present challenges when binding mount volumes from the underlying host. In this case, ensure that the user running the contained process can read and write to the bound directory, according to their requirements.\n\n## Default value\n\nBy default, containers are run with root privileges and also run as the root user inside the container.\n\n## References\n\n1. https://github.com/docker/docker/issues/2918\n2. https://github.com/docker/docker/pull/4572\n3. https://github.com/docker/docker/issues/7906\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://github.com/tianon/gosu\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"4.1","framework":"cis-docker","requirement":"Container-Images-and-Build-File-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-4.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"iml-sbn-bao","createdAt":1599605130883,"name":"A user for the container has been created"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Controller-Manager","control:1.3.6","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable kubelet server certificate rotation on controller-manager.\n\n## Rationale\n\n`RotateKubeletServerCertificate` causes the kubelet to both request a serving certificate after bootstrapping its client credentials and rotate the certificate as its existing credentials expire. This automated periodic rotation ensures that the there are no downtimes due to expired certificates and thus addressing availability in the CIA security triad. \n\n*Note*: This recommendation only applies if you let kubelets get their certificates from the API server. In case your kubelet certificates come from an outside authority/tool (e.g. Vault) then you need to take care of rotation yourself.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-controller-manager\n```\nVerify that `RotateKubeletServerCertificate` argument exists and is set to `true`.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and set the `--feature-gates` parameter to include `RotateKubeletServerCertificate=true`. \n\n```\n--feature-gates=RotateKubeletServerCe`rtificate=true\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `RotateKubeletServerCertificate` is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet-tls-bootstrapping/#approval-controller ][1]\n2. [https://github.com/kubernetes/features/issues/267 ][2]\n3. [https://github.com/kubernetes/kubernetes/pull/45059 ][3]\n4. [https://kubernetes.io/docs/admin/kube-controller-manager/][4]\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.               \n\n[1]: https://kubernetes.io/docs/admin/kubelet-tls-bootstrapping/#approval-controller \n[2]: https://github.com/kubernetes/features/issues/267 \n[3]: https://github.com/kubernetes/kubernetes/pull/45059 \n[4]: https://kubernetes.io/docs/admin/kube-controller-manager/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.6","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"asw-6hh-yc2","createdAt":1599605162809,"name":"RotateKubeletServerCertificate argument is set to true (Controller Manager)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.2","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the kubelet service file ownership is set to root:root.\n\n## Rationale\n\nThe kubelet service file controls various parameters that set the behavior of the kubelet service in the worker node. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %U:%G /etc/systemd/system/kubelet.service.d/10-kubeadm.conf`. Verify that the ownership is set to root:root.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the each worker node.\n\nFor example, `chown root:root /etc/systemd/system/kubelet.service.d/10-kubeadm.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, kubelet service file ownership is set to root:root.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#44-joining-your-nodes ][2]\n3. [https://kubernetes.io/docs/admin/kubeadm/#kubelet-drop-in][3]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#44-joining-your-nodes\n[3]: https://kubernetes.io/docs/admin/kubeadm/#kubelet-drop-in\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.2","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"sy4-z1k-udc","createdAt":1599605194356,"name":"Kubelet service file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.8","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that all the registry certificate files, usually found under `/etc/docker/certs.d/<registry-name> directory`, have permissions of 444 or are set more restrictively.\n\n## Rationale\n\nThe `/etc/docker/certs.d/<registry-name>` directory contains Docker registry certificates. These certificate files must have permissions of 444or more restrictive permissions in order to ensure that unprivileged users do not have full access to them..\n\n## Audit\n\nYou should execute the command below to verify that registry certificate files have permissions of 444+.\n\n```\nstat -c %a /etc/docker/certs.d/<registry-name>/*\n```\n\n## Remediation\n\nRun the following command: `chmod 444 /etc/docker/certs.d/<registry-name>/*`\n\nThis sets the permissions for the registry certificate files to 444.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for registry certificate files might not be 444. The default file permissions are governed by the system or user specific umask values which are defined within the operating system itself.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.8","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"sjq-1m3-njp","createdAt":1599605226177,"name":"Registry certificate file permissions are set to 444 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","source:compliance-agent","control:1.2.9","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nTurn on Role Based Access Control.\n\n## Rationale\n\nRole Based Access Control (RBAC) allows fine-grained control over the operations that different entities can perform on different objects in the cluster. It is recommended to use the RBAC authorization mode.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--authorization-mode` argument exists and is set to a value to include RBAC.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--authorization-mode` parameter to a value that includes RBAC, for example: `--authorization-mode=Node,RBAC`\n\n## Impact\n\nWhen RBAC is enabled you will need to ensure that appropriate RBAC settings (including Roles, RoleBindings and ClusterRoleBindings) are configured to allow appropriate access.\n\n## Default value\n\nBy default, RBAC authorization is not enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/reference/access-authn-authz/rbac/][1]\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.                \n\n[1]: https://kubernetes.io/docs/reference/access-authn-authz/rbac/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.9","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"bn4-mzo-nyg","createdAt":1599605257601,"name":"--authorization-mode argument includes RBAC"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","source:compliance-agent","control:1.1.18","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the controller-manager.conf file ownership is set to `root:root`.\n\n## Rationale\n\nThe controller-manager.conf file is the kubeconfig file for the Controller Manager. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/controller-manager.conf\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/controller-manager.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `controller-manager.conf` file ownership is set to `root:root`.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-controller-manager/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.18","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.18\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"bud-aya-umc","createdAt":1599605289575,"name":"controller-manager.conf file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","control:3.3","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the docker.socket file ownership and group ownership are correctly set to root.\n\n## Rationale\n\nThe docker.socket file contains sensitive parameters that may alter the behavior of the Docker remote API. For this reason, it should be owned and group owned by root in order to ensure that it is not modified by less privileged users.\n\n## Audit\n\n1. Locate the `docker.socket` file by running: \n    ```\n    systemctl show -p FragmentPath docker.socket\n    ```\n2. If the file does not exist, this recommendation is not applicable. If the file exists, verify that the file is owned and group-owned by root by running the following command with the correct filepath:\n    ```\n    stat -c %U:%G /usr/lib/systemd/system/docker.socket | grep -v root:root \n    ```\n    The command should not return a value.\n\n## Remediation\n\n1. Find out the file location: `systemctl show -p FragmentPath docker.socket`\n2. If the file does not exist, this recommendation is not applicable. If the file exists, execute the command below, including the correct file path to set the ownership and group ownership for the file to root. For example, `chown root:root /usr/lib/systemd/system/docker.socket`\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system. In that case, this recommendation is not applicable. By default, if the file is present, the ownership and group ownership for it should be set to root.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option 2. https://github.com/docker/docker-ce/blob/master/components/packaging/deb/systemd/docker.socket\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.3","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vc0-12t-fpa","createdAt":1599605321060,"name":"docker.socket file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.11","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable kubelet client certificate rotation.\n\n## Rationale\n\nThe `--rotate-certificates` setting causes the kubelet to rotate its client certificates by creating new CSRs as its existing credentials expire. This automated periodic rotation ensures that the there is no downtime due to expired certificates and thus addressing availability in the CIA security triad.\n\n*Note*: This recommendation only applies if you let kubelets get their certificates from the API server. In case your kubelet certificates come from an outside authority/tool (e.g. Vault) then you need to take care of rotation yourself. \n\n*Note*: This feature also requires the `RotateKubeletClientCertificate` feature gate to be enabled (which is the default since Kubernetes v1.7).\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--rotate-certificates` argument is not present, or is set to true. If the `--rotate-certificates` argument is not present, verify that if there is a Kubelet config file specified by `--config`, that file does not contain `rotateCertificates: false`.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to add the line `rotateCertificates: true` or remove it altogether to use the default value. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and remove the `--rotate-certificates=false` argument from the `KUBELET_CERTIFICATE_ARGS` variable. Based on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, kubelet client certificate rotation is enabled.\n\n## References\n\n1. [https://github.com/kubernetes/kubernetes/pull/41912 ][1]\n2. [https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-tls-bootstrapping/#kubelet-configuration ][2]\n3. [https://kubernetes.io/docs/imported/release/notes/ ][3]\n4. [https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/][4]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted - Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted.\n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n\n[1]: https://github.com/kubernetes/kubernetes/pull/41912\n[2]: https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-tls-bootstrapping/#kubelet-configuration\n[3]: https://kubernetes.io/docs/imported/release/notes/\n[4]: https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.11","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"9x3-sy5-pte","createdAt":1599605353070,"name":"--rotate-certificates argument is not set to false"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.13","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `admin.conf` file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe admin.conf is the administrator kubeconfig file defining various settings for the administration of the cluster. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/admin.conf\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/admin.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, admin.conf has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.13","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.13\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"zlc-pqm-t1x","createdAt":1599605384539,"name":"admin.conf file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.9","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that if the kubelet refers to a configuration file with the `--config` argument, that file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe kubelet reads various parameters, including security settings, from a config file specified by the `--config` argument. If this file is specified you should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nLocate the Kubelet config file as follows: `ps -ef | grep kubelet | grep config`. If the `--config` argument is present, this gives the location of the Kubelet config file, for example `/var/lib/kubelet/config.yaml`. Run the following command (using the file location you just identified) to find that file's permissions: `stat -c %a /var/lib/kubelet/config.yaml`. Verify that the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the following command (using the config file location identified in the Audit step:\n\n```\nchmod 644 /var/lib/kubelet/config.yaml\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `/var/lib/kubelet/config.yaml` file as set up by kubeadm has permissions of 644.\n\n## References\n\n1. [https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.9","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tc4-kmy-wlt","createdAt":1599605416397,"name":"Kubelet configuration file has permissions set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.15","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nReject creating objects in a namespace that is undergoing termination.\n\n## Rationale\n\nSetting admission control policy to NamespaceLifecycle ensures that objects cannot be created in non-existent namespaces, and that namespaces undergoing termination are not used for creating the new objects. This is recommended to enforce the integrity of the namespace termination process and also for the availability of the newer objects.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--disable-admission-plugins` argument is set to a value that does not include `NamespaceLifecycle`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --disable-admission-plugins parameter to ensure it does not include NamespaceLifecycle.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, NamespaceLifecycle is set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#namespacelifecycle\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.15","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.15\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"elk-zj3-p6m","createdAt":1599605447784,"name":"Admission control plugin NamespaceLifecycle is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:1.2.2","framework_version:1.5.1","scored:true","security:compliance","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use basic authentication.\n\n## Rationale\n\nBasic authentication uses plaintext credentials for authentication. Currently, the basic authentication credentials last indefinitely, and the password cannot be changed without restarting the API server. The basic authentication is currently supported for convenience. Hence, basic authentication should not be used.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--basic-auth-file` argument does not exist.\n\n## Remediation\n\nFollow the documentation and configure alternate mechanisms for authentication. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and remove the `--basic-auth-file=<filename>` parameter.\n\n## Impact\n\nYou will have to configure and use alternate authentication mechanisms such as tokens and certificates. Username and password for basic authentication could no longer be used.\n\n## Default value\n\nBy default, basic authentication is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n2. https://kubernetes.io/docs/admin/authentication/#static-password-file\n\n## CIS controls\n\nVersion 6\n\n16.14 Encrypt/Hash All Authentication Files And Monitor Their Access - Verify that all authentication files are encrypted or hashed and that these files cannot be accessed without root or administrator privileges. Audit all access to password files in the system.\n\nVersion 7\n\n16.4 Encrypt or Hash all Authentication Credentials - Encrypt or hash with a salt all authentication credentials when stored.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.2","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oug-uvq-sti","createdAt":1599605479472,"name":"--basic-auth-file argument is not set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.9","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nWhen the networking mode on a container is set to `--net=host`, the container is not placed inside a separate network stack. Effectively, applying this option instructs Docker to not containerize the container's networking. The consequence of this is that the container lives \"outside\" in the main Docker host and has full access to its network interfaces.\n\n## Rationale\n\nSelecting this option is potentially dangerous. It allows the container process to open reserved low numbered ports in the way that any other root process can. It also allows the container to access network services such as D-bus on the Docker host. A container process could potentially carry out undesired actions, such as shutting down the Docker host. This option should not be used unless there is a very specific reason for enabling it.\n\n## Audit\n\nUse this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: NetworkMode={{ .HostConfig.NetworkMode }}'` If this returns `NetworkMode=host`, it means that the `--net=host` option was passed when the container was started.\n\n## Remediation\n\nYou should not pass the --net=host option when starting any container.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, containers connect to the Docker bridge when starting and do not run in the context of the host's network stack.\n\n## References\n\n1. https://docs.docker.com/engine/userguide/networking/ 2. https://docs.docker.com/engine/reference/run/#network-settings\n\n## CIS controls\n\nVersion 6 12 Boundary Defense Boundary Defense\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.9","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"1qj-oqa-jau","createdAt":1599605510860,"name":"Host's network namespace is not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.24","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nRetain 10 or an appropriate number of old log files.\n\n## Rationale\n\nKubernetes automatically rotates the log files. Retaining old log files ensures that you would have sufficient log data available for carrying out any investigation or correlation. For example, if you have set file size of 100 MB and the number of old log files to keep as 10, you would approximate have 1 GB of log data that you could potentially use for your analysis.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-log-maxbackup` argument is set to `10` or as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--audit-log-maxbackup` parameter to `10` or to an appropriate value: `--audit-log-maxbackup=10`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, auditing is not enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://kubernetes.io/docs/concepts/cluster-administration/audit/ \n3. https://github.com/kubernetes/features/issues/22\n\n## CIS controls\n\nVersion 6 6.3 Ensure Audit Logging Systems Are Not Subject To Loss (i.e. rotation/archive) Ensure that all systems that store logs have adequate storage space for the logs generated on a regular basis, so that log files will not fill up between log rotation intervals. The logs must be archived and digitally signed on a periodic basis. Version 7 6.4 Ensure adequate storage for logs Ensure that all systems that store logs have adequate storage space for the logs generated.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.24","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.24\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"r0g-aai-2xf","createdAt":1599605542630,"name":"--audit-log-maxbackup argument is set to 10 or as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.15","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker socket file is owned by root and group owned by docker.\n\n## Rationale\n\nThe Docker daemon runs as root. The default Unix socket therefore must be owned by root. If any other user or process owns this socket, it might be possible for that non-privileged user or process to interact with the Docker daemon. Additionally, in this case a non-privileged user or process might be able to interact with containers which is neither a secure nor desired behavior. Additionally, the Docker installer creates a Unix group called docker. You can add users to this group, and in this case, those users would be able to read and write to the default Docker Unix socket. The membership of the docker group is tightly controlled by the system administrator. However, ff any other group owns this socket, then it might be possible for members of that group to interact with the Docker daemon. Such a group might not be as tightly controlled as the docker group. Again, this is not in line with good security practice. For these reason, the default Docker Unix socket file should be owned by root and group owned by docker to maintain the integrity of the socket file.\n\n## Audit\n\nVerify that the Docker socket file is owned by root and group-owned by `docker` by running: \n```\nstat -c %U:%G /var/run/docker.sock | grep -v root:docker\n```\nThe command should return no results.\n\n## Remediation\n\nRun the following command: `chown root:docker /var/run/docker.sock`\n\nThis sets the ownership to root and group ownership to docker for the default Docker socket file.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the ownership and group ownership for the Docker socket file is correctly set to root:docker.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option\n2. https://docs.docker.com/engine/reference/commandline/dockerd/#bind-docker-to-another-hostport-or-a-unix-socket\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.15","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.15\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ysh-lkt-poz","createdAt":1599605574088,"name":"Docker socket file ownership is set to root:docker"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.7","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `/etc/kubernetes/manifests/etcd.yaml` file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` controls various parameters that set the behavior of the etcd service in the master node. etcd is a highly-available key-value store which Kubernetes uses for persistent storage of all of its REST API object. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/manifests/etcd.yaml\n```\n\nVerify the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/manifests/etcd.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `/etc/kubernetes/manifests/etcd.yaml` file has permissions of 640.\n\n## References\n\n1. https://coreos.com/etcd\n2. https://kubernetes.io/docs/admin/etcd/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.7","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vqc-dps-6tp","createdAt":1599605605880,"name":"etcd pod specification file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.11","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/usr/bin/containerd`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `/usr/bin/containerd`, so it should be audited.\n\n## Audit\n\nVerify that there is an audit rule corresponding to the `/usr/bin/containerd` file. To display the rule for the `/usr/bin/containerd` file, run: \n\n```\nauditctl -l | grep /usr/bin/containerd\n```\n\n## Remediation\n\nYou should add a rule for the `/usr/bin/containerd` file. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /usr/bin/containerd -k docker \n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `/usr/bin/containerd` may not be present on the system and in that case, this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n2. [https://github.com/docker/docker/pull/20662][2]\n3. [https://containerd.tools/][3]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html \n[2]: https://github.com/docker/docker/pull/20662 \n[3]: https://containerd.tools/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.11","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tor-6yx-oyz","createdAt":1599605637503,"name":"/usr/bin/containerd auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.32","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\netcd should be configured to make use of TLS encryption for client connections.\n\n## Rationale\n\netcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be protected by client authentication. This requires the API server to identify itself to the etcd server using a SSL Certificate Authority file.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--etcd-cafile` argument exists and it is set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection between the apiserver and etcd. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the etcd certificate authority file parameter: `--etcd-cafile=<path/to/ca-file>`\n\n## Impact\n\nTLS and client certificate authentication must be configured for etcd.\n\n## Default value\n\nBy default, `--etcd-cafile` is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://coreos.com/etcd/docs/latest/op-guide/security.html\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.32","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.32\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"o8k-9hv-rri","createdAt":1599605669411,"name":"--etcd-cafile argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.23","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nRetain the logs for at least 30 days or as appropriate.\n\n## Rationale\n\nRetaining logs for at least 30 days ensures that you can go back in time and investigate or correlate any events. Set your audit log retention period to 30 days or as per your business requirements.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-log-maxage` argument is set to `30` or as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--audit-log-maxage` parameter to `30` or as an appropriate number of days: `--audit-log-maxage=30`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, auditing is not enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://kubernetes.io/docs/concepts/cluster-administration/audit/ \n3. https://github.com/kubernetes/features/issues/22\n\n## CIS controls\n\nVersion 6 6.3 Ensure Audit Logging Systems Are Not Subject To Loss (i.e. rotation/archive) Ensure that all systems that store logs have adequate storage space for the logs generated on a regular basis, so that log files will not fill up between log rotation intervals. The logs must be archived and digitally signed on a periodic basis. Version 7 6.4 Ensure adequate storage for logs Ensure that all systems that store logs have adequate storage space for the logs generated.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.23","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.23\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"jbu-o8v-pku","createdAt":1599605700813,"name":"--audit-log-maxage argument is set to 30 or as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.5","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable certificate based kubelet authentication.\n\n## Rationale\n\nThe apiserver, by default, does not authenticate itself to the kubelet's HTTPS endpoints. The requests from the apiserver are treated anonymously. You should set up certificate-based kubelet authentication to ensure that the apiserver authenticates itself to kubelets when submitting requests.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--kubelet-client-certificate` and `--kubelet-client-key` arguments exist and they are set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection between the apiserver and kubelets. Then, edit API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the kubelet client certificate and key parameters as below. \n\n```\n--kubelet-client-certificate=<path/to/client-certificate-file> \n--kubelet-client-key=<path/to/client-key-file>\n```\n\n## Impact\n\nYou require TLS to be configured on apiserver as well as kubelets.\n\n## Default value\n\nBy default, certificate-based kubelet authentication is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-apiserver/ ][1]\n2. [https://kubernetes.io/docs/admin/kubelet-authentication-authorization/ ][2]\n3. [https://kubernetes.io/docs/concepts/cluster-administration/master-node-communication/#apiserver---kubelet][3]\n\n## CIS controls\n\nVersion 6.3.4 Use Only Secure Channels For Remote System Administration - Perform all remote administration of servers, workstation, network devices, and similar equipment over secure channels. Protocols such as telnet, VNC, RDP, or others that do not actively support strong encryption should only be used if they are performed over a secondary encryption channel, such as SSL, TLS or IPSEC. \n\nVersion 7.4.5 Use Multifactor Authentication For All Administrative Access - Use multi-factor authentication and encrypted channels for all administrative account access. \n\n[1]: https://kubernetes.io/docs/admin/kube-apiserver/ \n[2]: https://kubernetes.io/docs/admin/kubelet-authentication-authorization/ \n[3]: https://kubernetes.io/docs/concepts/cluster-administration/master-node-communication/#apiserver---kubelet\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.5","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ruj-lze-13b","createdAt":1599605732980,"name":"--kubelet-client-certificate and --kubelet-client-key arguments are set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","control:1.2.6","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit the `docker.service` if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `docker.service`. The `docker.service` file might be present if the daemon parameters have been changed by an administrator. If so, it holds various parameters for the Docker daemon and should be audited.\n\n## Audit\n\n1. Locate the `docker.service` file by running: \n    ```\n    systemctl show -p FragmentPath docker.service\n    ```\n\n2. If the file does not exist, this recommendation does not apply. If the file does exist, verify that there is an audit rule corresponding to the `docker.service` file by running: \n\n    ```\n    auditctl -l | grep docker.service\n    ```\n\n## Remediation\n\nIf the file exists, a rule for it should be added. For example, add the following line to the `/etc/audit/audit.rules` file: \n```\n-w /usr/lib/systemd/system/docker.service -k docker \n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `docker.service` may not be present on the system.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.6","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"myy-dsj-omk","createdAt":1599605764788,"name":"docker.service auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","source:compliance-agent","control:1.2.19","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not bind to insecure port.\n\n## Rationale\n\nSetting up the apiserver to serve on an insecure port would allow unauthenticated and unencrypted access to your master node. This would allow attackers who could access this port, to easily take control of the cluster.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--insecure-port` argument is set to `0`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the below parameter. --insecure-port=0\n\n## Impact\n\nAll components that use the API must connect via the secured port, authenticate themselves, and be authorized to use the API. This includes: kube-controller-manager kube-proxy kube-scheduler kubelets\n\n## Default value\n\nBy default, the insecure port is set to 8080.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6 9.1 Limit Open Ports, Protocols, and Services Ensure that only ports, protocols, and services with validated business needs are running on each system. Version 7 9.2 Ensure Only Approved Ports, Protocols and Services Are Running Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.19","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.19\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"2ci-yqv-wv0","createdAt":1599605796539,"name":"--insecure-port argument is set to 0"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.10","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that if the kubelet refers to a configuration file with the `--config` argument, that file is owned by root:root.\n\n## Rationale\n\nThe kubelet reads various parameters, including security settings, from a config file specified by the `--config` argument. If this file is specified you should restrict its file permissions to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nLocate the Kubelet config file as follows: `ps -ef | grep kubelet | grep config`. If the `--config` argument is present, this gives the location of the Kubelet config file, for example `/var/lib/kubelet/config.yaml`. Run the following command (using the file location you just identified) to find that file's permissions: `stat -c %U:%G /var/lib/kubelet/config.yaml`. Verify that the ownership is set to `root:root`.\n\n## Remediation\n\nRun the following command (using the config file location identified in the Audit step): `chown root:root /etc/kubernetes/kubelet.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `/var/lib/kubelet/config.yaml` file as set up by kubeadm is owned by `root:root`.\n\n## References\n\n1. [https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.10","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ptl-pla-t0c","createdAt":1599605828233,"name":"Kubelet configuration file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.10","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy default, all containers on a Docker host share resources equally. By using the resource management capabilities of the Docker host, you can control the amount of memory that a container is able to use.\n\n## Rationale\n\nBy default a container can use all of the memory on the host. You can use memory limit mechanisms to prevent a denial of service occurring where one container consumes all of the hosts resources and other containers on the same host are therefore not able to function. Having no limit on memory usage can lead to issues where one container can easily make the whole system unstable and as a result unusable.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Memory={{ .HostConfig.Memory }}'` \n\nIf this command returns 0, it means that memory limits are not in place; if it returns a non-zero value, it means that they are in place.\n\n## Remediation\n\nYou should run the container with only as much memory as it requires by using the `--memory argument`. For example, you could run a container using the command `docker run --interactive --tty --memory 256m centos /bin/bash`\n\nIn this example, the container is started with a memory limit of 256 MB. Note that the output of the command below returns values in scientific notation if memory limits are in place. `docker inspect --format='{{.Config.Memory}}' 7c5a2d4c7fe0`\n\nFor example, if the memory limit is set to 256 MB for a container instance, the output of the command above would be `2.68435456e+08` and NOT `256m`. You should convert this value using a scientific calculator.\n\n## Impact\n\nIf correct memory limits are not set on each container, one process can expand its usage and cause other containers to run out of resources.\n\n## Default value\n\nBy default, all containers on a Docker host share their resources equally and no memory limits are enforced.\n\n## References\n\n1. https://goldmann.pl/blog/2014/09/11/resource-management-in-docker/\n2. https://docs.docker.com/engine/reference/commandline/run/#options\n3. https://docs.docker.com/engine/admin/runmetrics/\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.10","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ecn-mmt-tqe","createdAt":1599605860081,"name":"Memory usage for containers is limited"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","source:compliance-agent","control:2.2","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable client authentication on etcd service.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should not be available to unauthenticated clients. You should enable the client authentication via valid certificates to secure the access to the etcd service.\n\n## Audit\n\nRun the following command on the etcd server node:\n```\nps -ef | grep etcd\n```\nVerify that the `--client-cert-auth` argument is set to `true`.\n\n## Remediation\n\nEdit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and set the below parameter:\n\n```\n--client-cert-auth=\"true\"\n```\n\n## Impact\n\nAll clients attempting to access the etcd server will require a valid client certificate.\n\n## Default value\n\nBy default, the etcd service can be queried by unauthenticated clients.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][`]\n2. [https://kubernetes.io/docs/admin/etcd/ ][1]\n3. [https://coreos.com/etcd/docs/latest/op-guide/configuration.html#client-cert-auth][2]\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges                \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/ \n[3]: https://coreos.com/etcd/docs/latest/op-guide/configuration.html#client-cert-auth\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.2","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"joa-fjx-1li","createdAt":1599605891818,"name":"--client-cert-auth argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.3","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy default, Docker starts containers with a restricted set of Linux kernel capabilities. This means that any process can be granted the required capabilities instead of giving it root access. Using Linux kernel capabilities, processes in general do not need to run as the root user.\n\n## Rationale\n\nDocker supports the addition and removal of capabilities. Remove all capabilities not required for the correct function of the container. Specifically, in the default capability set provided by Docker, the NET_RAW capability should be removed if not explicitly required, as it can give an attacker with access to a container the ability to create spoofed network traffic.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CapAdd={{ .HostConfig.CapAdd }} CapDrop={{ .HostConfig.CapDrop }}'` \n\nVerify that the added and deleted Linux kernel capabilities are in line with the ones needed by the container process in each container instance. Specifically, ensure that the `NET_RAW` capability is removed if not required.\n\n## Remediation\n\nExecute the command `docker run --cap-add={\"Capability 1\",\"Capability 2\"} <Run arguments> <Container Image Name or ID> <Command>` to add required capabilities.\n\nExecute the command `docker run --cap-drop={\"Capability 1\",\"Capability 2\"} <Run arguments> <Container Image Name or ID> <Command>` to remove unneeded capabilities.\n\nAlternatively, remove all the currently configured capabilities and then restore only the ones you specifically use: `docker run --cap-drop=all --cap-add={\"Capability 1\",\"Capability 2\"} <Run arguments> <Container Image Name or ID> <Command>`\n\n## Impact\n\nRestrictions on processes within a container are based on which Linux capabilities are in force. Removal of the `NET_RAW` capability prevents the container from creating raw sockets which is good security practice under most circumstances, but may affect some networking utilities.\n\n## Default value\n\nBy default, the capabilities below are applied to containers:\n\n* `AUDIT_WRITE`\n* `CHOWN`\n* `DAC_OVERRIDE`\n* `FOWNER`\n* `FSETID`\n* `KILL`\n* `MKNOD`\n* `NET_BIND_SERVICE`\n* `NET_RAW`\n* `SETFCAP`\n* `SETGID`\n* `SETPCAP`\n* `SETUID`\n* `SYS_CHROOT`\n\n## References\n\n1. https://docs.docker.com/engine/security/security/#linux-kernel-capabilities\n2. http://man7.org/linux/man-pages/man7/capabilities.7.html\n3. http://www.oreilly.com/webops-perf/free/files/docker-security.pdf\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.3","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"3j5-bun-deq","createdAt":1599605923399,"name":"Linux kernel capabilities are restricted within containers"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.11","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy default, all containers on a Docker host share resources equally. By using the resource management capabilities of the Docker host you can control the host CPU resources that a container may consume.\n\n## Rationale\n\nBy default, CPU time is divided between containers equally. If you wish to control available CPU resources amongst container instances, you can use the CPU sharing feature. CPU sharing allows you to prioritize one container over others and prevents lower priority containers from absorbing CPU resources which may be required by other processes. This ensures that high priority containers are able to claim the CPU runtime they require.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CpuShares={{ .HostConfig.CpuShares }}'` \n\nIf this command returns 0 or 1024, it means that CPU shares are not in place. If it returns a non-zero value other than 1024, it means that they are in place.\n\n## Remediation\n\nYou should manage the CPU runtime between your containers dependent on their priority within your organization. To do so, start the container using the `--cpu-shares` argument. For example, you could run a container as `docker run --interactive --tty --cpu-shares 512 centos /bin/bash` The container is started with CPU shares of 50% of what other containers use. So if the other container has CPU shares of 80%, this container will have CPU shares of 40%. Every new container will have 1024 shares of CPU by default. However, this value is shown as 0 if you run the command mentioned in the audit section.\n\n\nAlternatively:\n\n1. Navigate to the `/sys/fs/cgroup/cpu/system.slice/` directory.\n2. Check your container instance ID using docker ps.\n3. Inside the above directory (in step 1), call a directory. For example: `docker-<Instance ID>.scope` or `docker-4acae729e8659c6be696ee35b2237cc1fe4edd2672e9186434c5116e1a6fbed6.scope`. Navigate to this directory.\n4. You will find a file named `cpu.shares`. Execute `cat cpu.shares`. This will always give you the CPU share value based on the system. Even if there are no CPU shares configured using the `-c` or `--cpu-shares` argument in the docker run command, this file will have a value of 1024. If you set one containers CPU shares to 512 it will receive half of the CPU time compared to the other containers. So if you take 1024 as 100% you can then derive the number that you should set for respective CPU shares. For example, use 512 if you want to set it to 50% and 256 if you want to set it 25%.\n\n## Impact\n\nIf you do not correctly assign CPU thresholds, the container process may run out of resources and become unresponsive. If CPU resources on the host are not constrained, CPU shares do not place any restrictions on individual resources.\n\n## Default value\n\nBy default, all containers on a Docker host share their resources equally. No CPU shares are enforced.\n\n## References\n\n1. https://goldmann.pl/blog/2014/09/11/resource-management-in-docker/\n2. https://docs.docker.com/engine/reference/commandline/run/#options\n3. https://docs.docker.com/engine/admin/runmetrics/\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.11","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"gfh-gqy-log","createdAt":1599605955638,"name":"CPU priority is set appropriately on containers"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.20","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUTS namespaces provide isolation between two system identifiers: the hostname and the NIS domain name. It is used to set the hostname and the domain which are visible to running processes in that namespace. Processes running within containers do not typically require to know either the hostname or the domain name. The UTS namespace should therefore not be shared with the host.\n\n## Rationale\n\nSharing the UTS namespace with the host provides full permission for each container to change the hostname of the host. This is not in line with good security practice and should not be permitted.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: UTSMode={{ .HostConfig.UTSMode }}'` \n\nIf this command returns `host`, it means the host UTS namespace is shared with the container and this recommendation is non-compliant. If the above command returns nothing, then the host's UTS namespace is not shared. This recommendation is then compliant.\n\n## Remediation\n\nYou should not start a container with the `--uts=host` argument. For example, do not start a container using the command `docker run --rm --interactive --tty --uts=host rhel7.2`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, all containers have the UTS namespace enabled and the host UTS namespace is not shared with any containers.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#uts-settings-uts\n2. http://man7.org/linux/man-pages/man7/namespaces.7.html\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.20","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.20\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"j1n-gsx-mlx","createdAt":1599605987292,"name":"Host's UTS namespace is not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","control:2.3","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use self-signed certificates for TLS.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should not be available to unauthenticated clients. You should enable the client authentication via valid certificates to secure the access to the etcd service.\n\n## Audit\n\nRun the following command on the etcd server node: \n```\nps -ef | grep etcd\n```\nVerify that if the `--auto-tls` argument exists, it is not set to `true`.\n\n## Remediation\n\nEdit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and either remove the `--auto-tls` parameter or set it to false:\n\n```\n--auto-tls=false\n```\n\n## Impact\n\nClients will not be able to use self-signed certificates for TLS.\n\n## Default value\n\nBy default, `--auto-tls` is set to false.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][1]\n2. [https://kubernetes.io/docs/admin/etcd/ ][2]\n3. [https://coreos.com/etcd/docs/latest/op-guide/configuration.html#auto-tls][3]\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. Version 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.                \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/ \n[3]: https://coreos.com/etcd/docs/latest/op-guide/configuration.html#auto-tls\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.3","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qai-h9s-xgt","createdAt":1599606018741,"name":"--auto-tls argument is not set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.1","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable anonymous requests to the Kubelet server.\n\n## Rationale\n\nWhen enabled, requests that are not rejected by other configured authentication methods are treated as anonymous requests. These requests are then served by the Kubelet server. You should rely on authentication to authorize access and disallow anonymous requests.\n\n## Audit\n\nIf using a Kubelet configuration file, check that there is an entry for authentication: anonymous: enabled set to false. Run the following command on each node: `ps -ef | grep kubelet`. Verify that the `--anonymous-auth` argument is set to false. This executable argument may be omitted, provided there is a corresponding entry set to false in the Kubelet config file.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `authentication: anonymous: enabled` to false. If using executable arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_SYSTEM_PODS_ARGS` variable:\n\n```\n--anonymous-auth=false\n```\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nAnonymous requests will be rejected.\n\n## Default value\n\nBy default, anonymous access is enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authentication][2]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.14 Controlled Access Based on the Need to Know\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authentication\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.1","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oun-uxo-viy","createdAt":1599606050277,"name":"Anonymous-auth argument is set to false"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.18","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not bind the insecure API service.\n\n## Rationale\n\nIf you bind the apiserver to an insecure address, basically anyone who could connect to it over the insecure port, would have unauthenticated and unencrypted access to your master node. The apiserver doesn't do any authentication checking for insecure binds and traffic to the Insecure API port is not encrpyted, allowing attackers to potentially read sensitive data in transit.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--insecure-bind-address` argument does not exist.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and remove the --insecure-bind-address parameter.\n\n## Impact\n\nConnections to the API server will require valid authentication credentials.\n\n## Default value\n\nBy default, the insecure bind address is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6 9.1 Limit Open Ports, Protocols, and Services Ensure that only ports, protocols, and services with validated business needs are running on each system. Version 7 9.2 Ensure Only Approved Ports, Protocols and Services Are Running Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.18","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.18\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tzo-x3g-yya","createdAt":1599606081666,"name":"--insecure-bind-address argument is not set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.29","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\netcd should be configured to make use of TLS encryption for client connections.\n\n## Rationale\n\netcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be protected by client authentication. This requires the API server to identify itself to the etcd server using a client certificate and key.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--etcd-certfile` and `--etcd-keyfile` arguments exist and they are set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection between the apiserver and etcd. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the etcd certificate and key file parameters. \n```\n--etcd-certfile=<path/to/client-certificate-file> \n--etcd-keyfile=<path/to/client-key-file>\n```\n\n## Impact\n\nTLS and client certificate authentication must be configured for etcd.\n\n## Default value\n\nBy default, `--etcd-certfile` and `--etcd-keyfile` arguments are not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://coreos.com/etcd/docs/latest/op-guide/security.html\n\n## CIS controls\n\nVersion 6 9 Limitation and Control of Network Ports, Protocols, and Services\nVersion 7 9 Limitation and Control of Network Ports, Protocols, and Services\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.29","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.29\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"2xl-vuo-tud","createdAt":1599606113167,"name":"--etcd-certfile and --etcd-keyfile arguments are set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.9","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the TLS CA certificate file, the file that is passed along with the `--tlscacert parameter`, is individually owned and group owned by root.\n\n## Rationale\n\nThe TLS CA certificate file should be protected from any tampering. It is used to authenticate the Docker server based on a given CA certificate. It must be therefore be individually owned and group owned by root to ensure that it cannot be modified by less privileged users.\n\n## Audit\n\nYou should execute the command below to verify that the TLS CA certificate file is owned and group owned by root: \n\n```\nstat -c %U:%G <path to TLS CA certificate file> | grep -v root:root\n```\n\nThis command does not return any data.\n\n## Remediation\n\nRun the following command: `chown root:root <path to TLS CA certificate file>`\n\nThis sets the individual ownership and group ownership for the TLS CA certificate file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the ownership and group-ownership for TLS CA certificate file is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.9","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"8nb-ex2-pqe","createdAt":1602076303298,"name":"TLS CA certificate file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","source:compliance-agent","control:2.2"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSet Docker daemon log level to `info`.\n\n## Rationale\n\nSetting up an appropriate log level configures the Docker daemon to log events that you would want to review later. A base log level of `info` and above captures all logs except `debug` logs. Unless required, you should not run Docker daemon at `debug` log level.\n\n## Audit\n\nTo confirm that the log level setting is `info`, review both the `dockerd` startup options, and also the log level settings in `/etc/docker/daemon.json`. To review the `dockerd` startup options, run: \n```\nps -ef | grep dockerd \n```\nEnsure that either the `--log-level` parameter is not present or if present, that it is set to `info`. \n\nSimilarly, review the `/etc/docker/daemon.json` for the `log-level` setting.\n\n## Remediation\n\nEnsure that the Docker daemon configuration file has the following configuration included:\n\n```\n\"log-level\": \"info\" \n```\n\nAlternatively, run the Docker daemon with the `log-level` specified:\n\n```\ndockerd --log-level=\"info\"\n```\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, Docker daemon is set to log level of `info`.\n\n## References\n\n1. [https://docs.docker.com/edge/engine/reference/commandline/dockerd/][1]\n\n## CIS controls\n\nVersion 6.6.2 Ensure Audit Log Settings Support Appropriate Log Entry Formatting - Validate audit log settings for each hardware device and the software installed on it, ensuring that logs include a date, timestamp, source addresses, destination addresses, and various other useful elements of each packet and/or transaction. Systems should record logs in a standardized format such as syslog entries or those outlined by the Common Event Expression initiative. If systems cannot generate logs in a standardized format, log normalization tools can be deployed to convert logs into such a format. \n\nVersion 7.6.2 Activate audit logging - Ensure that local logging has been enabled on all systems and networking devices. \n\nVersion 6.3 Enable Detailed Logging - Enable system logging to include detailed information such as an event source, date, user, timestamp, source addresses, destination addresses, and other useful elements.                \n\n[1]: https://docs.docker.com/edge/engine/reference/commandline/dockerd/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.2","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"q6o-wrf-hf4","createdAt":1602076723155,"name":"Logging level is set to 'info'"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.10","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the TLS CA certificate file, the file that is passed along with the `--tlscacert` parameter, has permissions of 444 or is set more restrictively.\n\n## Rationale\n\nThe TLS CA certificate file should be protected from any tampering. It is used to authenticate the Docker server based on a given CA certificate. It must therefore have permissions of 444, or more restrictive permissions to ensure that the file cannot be modified by a less privileged user.\n\n## Audit\n\nVerify that the TLS CA certificate file has permissions of `444` or more restrictive, by running: \n```\nstat -c %a <path to TLS CA certificate file>\n```\n\n## Remediation\n\nRun the following command: `chmod 444 <path to TLS CA certificate file>`\n\nThis sets the file permissions on the TLS CA file to 444.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for the TLS CA certificate file might not be 444. The default file permissions are governed by the operating system or user specific umask values.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.10","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"hyd-ar9-kzl","createdAt":1602076723625,"name":"TLS CA certificate file permissions are set to 444 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.12","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker server certificate file, the file that is passed along with the `--tlscert` parameter, has permissions of 444 or more restrictive permissions.\n\n## Rationale\n\nThe Docker server certificate file should be protected from any tampering. It is used to authenticate the Docker server based on the given server certificate. It should therefore have permissions of 444 to prevent its modification.\n\n## Audit\n\nVerify that the Docker server certificate file has permissions of `444` or more restrictive, by running: \n```\nstat -c %a <path to Docker server certificate file>\n```\n\n## Remediation\n\nRun the command below: `chmod 444 <path to Docker server certificate file>`\n\nThis sets the file permissions of the Docker server certificate file to 444.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for the Docker server certificate file might not be 444. The default file permissions are governed by the operating system or user specific umask values.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.12","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"blu-k6b-re1","createdAt":1602076770300,"name":"Docker server certificate file permissions are set to 444 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.1","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAll Docker containers and their data and metadata are stored in the `/var/lib/docker` directory. By default, `/var/lib/docker` should be mounted under either the `/` or `/var` partitions depending on how the Linux operating system in use is configured.\n\n## Rationale\n\nDocker depends on `/var/lib/docker` as the default directory where all Docker related files, including the images, are stored. This directory could fill up quickly causing both Docker and the host to become unusable. For this reason, you should create a separate partition (logical volume) for storing Docker files.\n\n## Audit\n\nTo see the partition details for the `/var/lib/docker` mount point, at the Docker host run:\n\n```\ngrep '/var/lib/docker\\s' /proc/mounts \n```\n\nAlternatively, to see whether the configured root directory is a mount point, run.\n\n```\nmountpoint -- \"$(docker info -f '{{ .DockerRootDir }}')\" \n```\n\n## Remediation\n\nFor new installations, you should create a separate partition for the `/var/lib/docker` mount point. For systems that have already been installed, you should use the Logical Volume Manager (LVM) within Linux to create a new partition.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, `/var/lib/docker` is mounted under the `/` or `/var` partitions dependent on how the OS is configured.\n\n## References\n\n1. [https://www.projectatomic.io/docs/docker-storage-recommendation/][1]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know                \n\n[1]: https://www.projectatomic.io/docs/docker-storage-recommendation/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.1","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"wcf-c0t-fkz","createdAt":1602076808377,"name":"A separate partition for containers has been created"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:3.14","security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker server certificate key file, the file that is passed along with the `--tlskey` parameter, has permissions of 400.\n\n## Rationale\n\nThe Docker server certificate key file should be protected from any tampering or unneeded reads. It holds the private key for the Docker server certificate. It must therefore have permissions of 400 to ensure that the certificate key file is not modified.\n\n## Audit\n\nVerify that the Docker server certificate key file has permissions of `400` by running: \n```\nstat -c %a <path to Docker server certificate key file>\n```\n\n## Remediation\n\nYou should execute the following command: `chmod 400 <path to Docker server certificate key file>`\n\nThis sets the Docker server certificate key file permissions to 400.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for the Docker server certificate key file might not be 400. The default file permissions are governed by the operating system or user specific umask values.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.14","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.14\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"z0n-cod-mxi","createdAt":1602077570102,"name":"Docker server certificate key file permissions are set to 400"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:2.6","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIt is possible to make the Docker daemon available remotely over a TCP port. If this is required, you should ensure that TLS authentication is configured in order to restrict access to the Docker daemon via IP address and port.\n\n## Rationale\n\nBy default, the Docker daemon binds to a non-networked Unix socket and runs with root privileges. If you change the default Docker daemon binding to a TCP port or any other Unix socket, anyone with access to that port or socket could have full access to the Docker daemon and therefore in turn to the host system. For this reason, you should not bind the Docker daemon to another IP/port or a Unix socket. If you must expose the Docker daemon via a network socket, you should configure TLS authentication for the daemon and for any Docker Swarm APIs (if they are in use). This type of configuration restricts the connections to your Docker daemon over the network to a limited number of clients who have access to the TLS client credentials.\n\n## Audit\n\nTo confirm that the TLS authentication setting is correct, review the `dockerd` startup options and the settings in `/etc/docker/daemon.json`. To review the `dockerd` startup options, run: \n```\nps -ef | grep dockerd \n```\nConfirm that the following parameters are present: `--tlsverify --tlscacert --tlscert --tlskey`.\n\nAlso review the `/etc/docker/daemon.json` file to ensure these settings are in place.\n\n## Remediation\n\nFollow the steps mentioned in the Docker documentation or other references.\n\n## Impact\n\nYou would need to manage and guard certificates and keys for the Docker daemon and Docker clients.\n\n## Default value\n\nBy default, TLS authentication is not configured.\n\n## References\n\n1. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system.\n\nVersion 7\n\n9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.6","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"rh4-jeh-afu","createdAt":1602077571799,"name":"TLS authentication for Docker daemon is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:3.13","security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker server certificate key file, the file that is passed along with the `--tlskey` parameter, is individually owned and group owned by root.\n\n## Rationale\n\nThe Docker server certificate key file should be protected from any tampering or unneeded reads/writes. As it holds the private key for the Docker server certificate, it must be individually owned and group owned by root to ensure that it cannot be accessed by less privileged users.\n\n## Audit\n\nVerify that the Docker server certificate key file is individually owned and group-owned by root, by running: \n```\nstat -c %U:%G <path to Docker server certificate key file> | grep -v root:root \n```\nThe command should return no results.\n\n## Remediation\n\nRun the following command: `chown root:root <path to Docker server certificate key file>`\n\nThis sets the individual ownership and group ownership for the Docker server certificate key file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the individual ownership and group ownership for the Docker server certificate key file is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.13","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.13\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oiu-e3x-yg6","createdAt":1602077710804,"name":"Docker server certificate key file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.11","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker server certificate file, the file that is passed along with the `--tlscert` parameter, is individual owned and group owned by root.\n\n## Rationale\n\nThe Docker server certificate file should be protected from any tampering. It is used to authenticate the Docker server based on the given server certificate. It must therefore be individually owned and group owned by root to prevent modification by less privileged users.\n\n## Audit\n\nVerify that the Docker server certificate file is individually owned and group-owned by root, by running: \n```\nstat -c %U:%G <path to Docker server certificate file> | grep -v root:root\n```\nThe command should return no results.\n\n## Remediation\n\nRun the following command: `chown root:root <path to Docker server certificate file>`\n\nThis sets the individual ownership and the group ownership for the Docker server certificate file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the ownership and group-ownership for Docker server certificate file is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.11","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tkm-izb-xe1","createdAt":1602077837917,"name":"Docker server certificate file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Network-Policies-and-CNI","control:5.3.2","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUse network policies to isolate traffic in your cluster network.\n\n## Rationale\n\nRunning different applications on the same Kubernetes cluster creates a risk of one compromised application attacking a neighboring application. Network segmentation is important to ensure that containers can communicate only with those they are supposed to. A network policy is a specification of how selections of pods are allowed to communicate with each other and other network endpoints. Network Policies are namespace scoped. When a network policy is introduced to a given namespace, all traffic not allowed by the policy is denied. However, if there are no network policies in a namespace, all traffic will be allowed into and out of the pods in that namespace.\n\n## Audit\n\nRun the following command and review the NetworkPolicy objects created in the cluster: `kubectl --all-namespaces get networkpolicy`\n\nEnsure that each namespace defined in the cluster has at least one Network Policy.\n\n## Remediation\n\nFollow the documentation and create network policy objects as you need them.\n\n## Impact\n\nOnce network policies are in use within a given namespace, traffic not explicitly allowed by a network policy will be denied. It is important to ensure that, when introducing network policies, legitimate traffic is not blocked.\n\n## Default value\n\nBy default, network policies are not created.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/services-networking/networkpolicies/ ][1]\n2. [https://octetz.com/posts/k8s-network-policy-apis ][2]\n3. [https://kubernetes.io/docs/tasks/configure-pod-container/declare-network-policy/][3]\n\n## CIS controls\n\nVersion 6.14.1 Implement Network Segmentation Based On Information Class Segment - The network based on the label or classification level of the information stored on the servers. Locate all sensitive information on separated VLANS with firewall filtering to ensure that only authorized individuals are only able to communicate with systems necessary to fulfill their specific responsibilities.\n\nVersion 7.14.1 Segment the Network Based on Sensitivity - Segment the network based on the label or classification level of the information stored on the servers, locate all sensitive information on separated Virtual Local Area Networks (VLANs).\n\nVersion 7.14.2 Enable Firewall Filtering Between VLANs - Enable firewall filtering between VLANs to ensure that only authorized systems are able to communicate with other systems necessary to fulfill their specific responsibilities.\n\n[1]: https://kubernetes.io/docs/concepts/services-networking/networkpolicies/\n[2]: https://octetz.com/posts/k8s-network-policy-apis\n[3]: https://kubernetes.io/docs/tasks/configure-pod-container/declare-network-policy/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.3.2","framework":"cis-kubernetes","requirement":"Network-Policies-and-CNI","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":5,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.3.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mrw-bae-anz","createdAt":1604312181303,"name":"All namespaces have network policies defined"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","requirement:RBAC-and-Service-Accounts","scored:true","security:compliance","control:5.1.5","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe default service account should not be used to ensure that rights granted to applications can be more easily audited and reviewed.\n\n## Rationale\n\nKubernetes provides a default service account which is used by cluster workloads where no specific service account is assigned to the pod. Where access to the Kubernetes API from a pod is required, a specific service account should be created for that pod, and rights granted to that service account. The default service account should be configured such that it does not provide a service account token and does not have any explicit rights assignments.\n\n## Audit\n\nFor each namespace in the cluster, review the rights assigned to the default service account and ensure that it has no roles or cluster roles bound to it apart from the defaults. Additionally ensure that the `automountServiceAccountToken: false` setting is in place for each default service account.\n\n## Remediation\n\nCreate explicit service accounts wherever a Kubernetes workload requires specific access to the Kubernetes API server. Modify the configuration of each default service account to include this value `automountServiceAccountToken: false`.\n\n## Impact\n\nAll workloads which require access to the Kubernetes API will require an explicit service account to be created.\n\n## Default value\n\nBy default the default service account allows for its service account token to be mounted in pods in its namespace.\n\n## References\n\n1. [https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/][1]\n\n## CIS controls\n\nNone\n\n[1]: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.1.5","framework":"cis-kubernetes","requirement":"RBAC-and-Service-Accounts","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.1.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"3yv-aqm-bxc","createdAt":1604312204438,"name":"Default service accounts are not actively used"}]}
    headers:
      Content-Type:
      - application/json
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=2&page%5Bsize%5D=100
    method: GET
  response:
    body: |
      {"meta":{"page":{"total_filtered_count":0,"total_count":152}},"data":[]}
    headers:
      Content-Type:
      - application/json
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=0&page%5Bsize%5D=100
    method: GET
  response:
    body: |
      {"meta":{"page":{"total_filtered_count":100,"total_count":152}},"data":[{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Controller-Manager","control:1.3.5","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAllow pods to verify the API server's serving certificate before establishing connections.\n\n## Rationale\n\nProcesses running within pods that need to contact the API server must verify the API server's serving certificate. Failing to do so could be a subject to man-in-the-middle attacks. Providing the root certificate for the API server's serving certificate to the controller manager with the `--root-ca-file` argument allows the controller manager to inject the trusted bundle into pods so that they can verify TLS connections to the API server.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--root-ca-file` argument exists and is set to a certificate bundle file containing the root certificate for the API server's serving certificate.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and set the `--root-ca-file` parameter to the certificate bundle file: `--root-ca-file=<path/to/file>`\n\n## Impact\n\nYou need to setup and maintain root certificate authority file.\n\n## Default value\n\nBy default, `--root-ca-file` is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-controller-manager/ ][1]\n2. [https://github.com/kubernetes/kubernetes/issues/11000][2]\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.                \n\n[1]: https://kubernetes.io/docs/admin/kube-controller-manager/ \n[2]: https://github.com/kubernetes/kubernetes/issues/11000\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.5","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"k7t-yxp-axc","createdAt":1599598174692,"name":"--root-ca-file argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:1.2.2","security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe Docker daemon requires access to the Docker socket which is, by default, owned by the user `root` and the group `docker`.\n\n## Rationale\n\nDocker allows you to share a directory between the Docker host and a guest container without limiting the access rights of the container. This means that you can start a container and map the `/` directory on your host to the container. The container is able to modify your host file system without any restrictions. This means that you could gain elevated privileges simply by being a member of the `docker` group and subsequently start a container which maps the root `/` directory on the host.\n\n\n## Audit\n\nRun the following command on the Docker host to see the members of the `docker` group, and ensure that only trusted users are members:\n\n```\ngetent group docker\n```\n\n## Remediation\n\nYou should remove any untrusted users from the `docker` group. Additionally, you should not create a mapping of sensitive directories from the host to container volumes.\n\n## Impact\n\nProvided the proceeding instructions are implemented, rights to build and execute containers as normal user would be restricted.\n\n## Default value\n\nNot Applicable\n\n## References\n\n1. [https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface]\n2. [https://www.andreas-jung.com/contents/on-docker-security-docker-group-considered-harmful]\n3. [http://www.projectatomic.io/blog/2015/08/why-we-dont-let-non-root-users-run-docker-in-centos-fedora-or-rhel/]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.                \n\n[1]: https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface \n[2]: https://www.andreas-jung.com/contents/on-docker-security-docker-group-considered-harmful \n[3]: http://www.projectatomic.io/blog/2015/08/why-we-dont-let-non-root-users-run-docker-in-centos-fedora-or-rhel/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.2","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"dev-mh8-u1i","createdAt":1599598174666,"name":"Only trusted users are allowed to control Docker daemon"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","control:2.6","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use automatically generated self-signed certificates for TLS connections between peers.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be accessible only by authenticated etcd peers in the etcd cluster. Hence, do not use self-signed certificates for authentication.\n\n## Audit\n\nThis recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable.\n\nRun the following command on the etcd server node: \n```\nps -ef | grep etcd\n```\nVerify that if the `--peer-auto-tls` argument exists, it is not set to `true`.\n\n## Remediation\n\nEdit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and either remove the `--peer-auto-tls` parameter or set it to false. \n\n```\n--peer-auto-tls=false\n```\n\n## Impact\n\nAll peers attempting to communicate with the etcd server will require a valid client certificate for authentication.\n\n## Default value\n\n*Note*: This recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable. By default, `--peer-auto-tls` argument is set to false.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][1]\n2. [https://kubernetes.io/docs/admin/etcd/ ][2]\n3. [https://coreos.com/etcd/docs/latest/op-guide/configuration.html#peer-auto-tls][3]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.4 Controlled Use of Administrative Privileges             \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/ \n[3]: https://coreos.com/etcd/docs/latest/op-guide/configuration.html#peer-auto-tls\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.6","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"l0y-lyz-foj","createdAt":1599598174666,"name":"--peer-auto-tls argument is not set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.14","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy using the `--restart` flag in the docker run command you can specify a restart policy for how a container should or should not be restarted on exit. You should choose the on-failure restart policy and limit the restart attempts to 5.\n\n## Rationale\n\nIf you indefinitely keep trying to start the container, it could possibly lead to a denial of service on the host. It could be an easy way to do a distributed denial of service attack especially if you have many containers on the same host. Additionally, ignoring the exit status of the container and always attempting to restart the container, leads to non-investigation of the root cause behind containers getting terminated. If a container gets terminated, you should investigate on the reason behind it instead of just attempting to restart it indefinitely. You should use the on-failure restart policy to limit the number of container restarts to a maximum of 5 attempts.\n\n## Audit\n\nExecute this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: RestartPolicyName={{ .HostConfig.RestartPolicy.Name }} MaximumRetryCount={{ .HostConfig.RestartPolicy.MaximumRetryCount }}'` \n\nIf this command returns `RestartPolicyName=always`, then the system is not configured optimally. If this command returns `RestartPolicyName=no` or just `RestartPolicyName=`, then restart policies are not being used and the container would never be restarted automatically. This may be a secure option, but it is not the best option from a usability standpoint. If this command returns `RestartPolicyName=on-failure`, then verify that the number of restart attempts is set to 5 or less by looking at `MaximumRetryCount`.\n\n## Remediation\n\nIf you wish a container to be automatically restarted, use `docker run --detach --restart=on-failure:5 nginx`\n\n## Impact\n\nIf this option is set, a container will only attempt to restart itself 5 times.\n\n## Default value\n\nBy default, containers are not configured with restart policies.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/run/#restart-policies-restart\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.14","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.14\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ycq-buv-pf8","createdAt":1599598174688,"name":"'on-failure' container restart policy is set to '5'"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","control:1.1.4","security:compliance","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the controller manager pod specification file ownership is set to root:root.\n\n## Rationale\n\nThe controller manager pod specification file controls various parameters that set the behavior of various components of the master node. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/manifests/kube-controller-manager.yaml\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/manifests/kube-controller-manager.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kube-controller-manager.yaml` file ownership is set to root:root.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-controller-manager\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.4","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"jwf-xdm-mi9","createdAt":1599599105053,"name":"Controller manager pod specification file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.31","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSetup TLS connection on the API server.\n\n## Rationale\n\nAPI server communication contains sensitive parameters that should remain encrypted in transit. Configure the API server to serve only HTTPS traffic. If `--client-ca-file` argument is set, any request presenting a client certificate signed by one of the authorities in the `client-ca-file` is authenticated with an identity corresponding to the CommonName of the client certificate.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--client-ca-file` argument exists and it is set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection on the apiserver. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the client certificate authority file: `--client-ca-file=<path/to/client-ca-file>`\n\n## Impact\n\nTLS and client certificate authentication must be configured for your Kubernetes cluster deployment.\n\n## Default value\n\nBy default, `--client-ca-file` argument is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. http://rootsquash.com/2016/05/10/securing-the-kubernetes-api/ \n3. https://github.com/kelseyhightower/docker-kubernetes-tls-guide\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.31","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.31\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"nad-eon-2rv","createdAt":1599599105054,"name":"--client-ca-file argument is set as appropriate (API server)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.27","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nValidate service account before validating token.\n\n## Rationale\n\nIf --service-account-lookup is not enabled, the apiserver only verifies that the authentication token is valid, and does not validate that the service account token mentioned in the request is actually present in etcd. This allows using a service account token even after the corresponding service account is deleted. This is an example of time of check to time of use security issue.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that if the `--service-account-lookup` argument exists it is set to `true`.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the below parameter. `--service-account-lookup=true` Alternatively, you can delete the `--service-account-lookup` parameter from this file so that the default takes effect.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `--service-account-lookup` argument is set to true.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://github.com/kubernetes/kubernetes/issues/24167 \n3. https://en.wikipedia.org/wiki/Time_of_check_to_time_of_use\n\n## CIS controls\n\nVersion 6 16 Account Monitoring and Control Account Monitoring and Control Version 7 16 Account Monitoring and Control Account Monitoring and Control\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.27","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.27\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ycp-ppm-trb","createdAt":1599599105043,"name":"--service-account-lookup argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.12","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable kubelet server certificate rotation.\n\n## Rationale\n\n`RotateKubeletServerCertificate` causes the kubelet to both request a serving certificate after bootstrapping its client credentials and rotate the certificate as its existing credentials expire. This automated periodic rotation ensures that the there are no downtimes due to expired certificates and thus addressing availability in the CIA security triad.\n\n*Note*: This recommendation only applies if you let kubelets get their certificates from the API server. In case your kubelet certificates come from an outside authority/tool (e.g. Vault) then you need to take care of rotation yourself.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that `RotateKubeletServerCertificate` argument exists and is set to `true`.\n\n## Remediation\n\nOn the master edit `/var/lib/kubelet/kubeadm-flags.env` and set the parameter `KUBELET_CERTIFICATE_ARGS --feature-gates=RotateKubeletServerCertificate=true` or as an alternative, and suggested as a last resort, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_CERTIFICATE_ARGS` variable:\n\n```\n--feature-gates=RotateKubeletServerCertificate=true\n```\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, kubelet server certificate rotation is disabled.\n\n## References\n\n1. https://github.com/kubernetes/kubernetes/pull/45059\n2. https://kubernetes.io/docs/admin/kubelet-tls-bootstrapping/#kubelet-configuration\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted.\n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n\n[1]: https://github.com/kubernetes/kubernetes/pull/45059\n[2]: https://kubernetes.io/docs/admin/kubelet-tls-bootstrapping/#kubelet-configuration\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.12","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"afr-qkp-94a","createdAt":1599599105048,"name":"RotateKubeletServerCertificate argument is set to true (Kubelet)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Docker-Daemon-Configuration","control:2.3","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe `iptables` firewall is used to set up, maintain, and inspect the tables of IP packet filter rules within the Linux kernel. The Docker daemon should be allowed to make changes to the `iptables` ruleset.\n\n## Rationale\n\nDocker will not make changes to your system `iptables` rules unless you allow it to do so. If you do allow this, Docker server will automatically make any required changes. You should let Docker make changes to `iptables` automatically in order to avoid networking misconfigurations that could affect the communication between containers and with the outside world. Additionally, this reduces the administrative overhead of updating `iptables` every time you add containers or modify networking options.\n\n## Audit\n\nTo confirm that the Docker daemon is allowed to change the `iptables` ruleset, review the `dockerd` startup options and the settings in `/etc/docker/daemon.json`. To review the `dockerd` startup options, run: \n```\nps -ef | grep dockerd \n```\nEnsure that the `--iptables` parameter is either not present or not set to `false`. Also review the `/etc/docker/daemon.json` file to check that the `iptables` setting is not set to `false`.\n\n## Remediation\n\nDo not run the Docker daemon with `--iptables=false` parameter. \n\n## Impact\n\nThe Docker daemon service requires `iptables` rules to be enabled before it starts. Any restarts of `iptables` during Docker daemon operation may result in losing Docker-created rules. Adding `iptables-persistent` to your `iptables` install can mitigate.\n\n## Default value\n\nBy default, `iptables` is set to true.\n\n## References\n\n1. [https://docs.docker.com/engine/userguide/networking/default_network/container-communication/][1]\n2. [https://fralef.me/docker-and-iptables.html][2]\n\n## CIS controls\n\nVersion 6.5 Controlled Use of Administration Privileges                \n\n[1]: https://docs.docker.com/engine/userguide/networking/default_network/container-communication/\n[2]: https://fralef.me/docker-and-iptables.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.3","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"3fv-xgy-7fb","createdAt":1599599453907,"name":"Docker is allowed to make changes to iptables"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.7","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that all the registry certificate files, usually found under the `/etc/docker/certs.d/<registry-name>` directory, are individually owned and group owned by root.\n\n## Rationale\n\nThe `/etc/docker/certs.d/<registry-name>` directory contains Docker registry certificates. These certificate files must be individually owned and group owned by root to ensure that less privileged users are unable to modify the contents of the directory.\n\n## Audit\n\nYou should execute the command below to verify that the registry certificate files are individually owned and group owned by root: \n\n```\nstat -c %U:%G /etc/docker/certs.d/* | grep -v root:root \n```\n\nThis command does not return any data.\n\n## Remediation\n\nExecute the following command: `chown root:root /etc/docker/certs.d/<registry-name>/*`\n\nThis sets the individual ownership and group ownership for the registry certificate files to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the individual ownership and group ownership for registry certificate files is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.7","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"fbv-qsy-urc","createdAt":1599599454050,"name":"Registry certificate file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.17","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `controller-manager.conf` file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe `controller-manager.conf` file is the kubeconfig file for the Controller Manager. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/controller-manager.conf\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/controller-manager.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `controller-manager.conf` has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-controller-manager/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.17","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.17\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"iss-afi-xfp","createdAt":1599599454121,"name":"controller-manager.conf file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.11","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not allow all requests.\n\n## Rationale\n\nSetting admission control plugin AlwaysAdmit allows all requests and do not filter any requests. The AlwaysAdmit admission controller was deprecated in Kubernetes v1.13. Its behavior was equivalent to turning off all admission controllers.\n\n## Audit\n\nRun the following command on the master node:\n\n```bash\nps -ef | grep kube-apiserver\n```\n\nVerify the `--enable-admission-plugins` argument's value (if set) does not include `AlwaysAdmit`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and either remove the --enable-admission-plugins parameter, or set it to a value that does not include AlwaysAdmit.\n\n## Impact\n\nOnly requests explicitly allowed by the admissions control plugins would be served.\n\n## Default value\n\nAlwaysAdmit is not in the list of default admission plugins.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#alwaysadmit\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.11","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ysr-4gg-vu5","createdAt":1599599454382,"name":"Admission control plugin AlwaysAdmit is not set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.6","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `kubelet.conf` file ownership is set to `root:root`.\n\n## Rationale\n\nThe `kubelet.conf` file is the kubeconfig file for the node, and controls various parameters that set the behavior and identity of the worker node. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %U:%G /etc/kubernetes/kubelet.conf`. Verify that the ownership is set to `root:root`.\n\n## Remediation\n\nRun this command (based on the file location on your system) on the each worker node. For example, `chown root:root /etc/kubernetes/kubelet.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kubelet.conf` file ownership is set to `root:root`.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.6","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mrc-waf-mbs","createdAt":1599599696342,"name":"kubelet.conf file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.16","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `scheduler.conf` file ownership is set to `root:root`.\n\n## Rationale\n\nThe `scheduler.conf` file is the kubeconfig file for the Scheduler. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/scheduler.conf\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/scheduler.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `scheduler.conf` file ownership is set to root:root.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kubeadm/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.16","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.16\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"pbp-y4b-dhf","createdAt":1599600185878,"name":"scheduler.conf file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.2","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not allow all requests. Enable explicit authorization.\n\n## Rationale\n\nKubelets, by default, allow all authenticated requests (even anonymous ones) without needing explicit authorization checks from the API server. You should restrict this behavior and only allow explicitly authorized requests.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. If the `--authorization-mode` argument is present check that it is not set to AlwaysAllow. If it is not present check that there is a Kubelet config file specified by `--config`, and that file sets authorization: mode to something other than AlwaysAllow. It is also possible to review the running configuration of a Kubelet via the /configs endpoint on the Kubelet API port (typically `10250/TCP`). Accessing these with appropriate credentials will provide details of the Kubelet's configuration.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set authorization: mode to Webhook. If using executable arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_AUTHZ_ARGS` variable.\n\n`--authorization-mode=Webhook`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nUnauthorized requests will be denied.\n\n## Default value\n\nBy default, `--authorization-mode` argument is set to `AlwaysAllow`.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authentication][2]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\nVersion 7.14 Controlled Access Based on the Need to Know\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authentication\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.2","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"un4-gin-3dq","createdAt":1599600248005,"name":"--authorization-mode argument is not set to AlwaysAllow (Kubelet)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.8","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `/etc/kubernetes/manifests/etcd.yaml` file ownership is set to `root:root`.\n\n## Rationale\n\nThe etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` controls various parameters that set the behavior of the etcd service in the master node. etcd is a highly-available key-value store which Kubernetes uses for persistent storage of all of its REST API object. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/manifests/etcd.yaml\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/manifests/etcd.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `/etc/kubernetes/manifests/etcd.yaml` file ownership is set to root:root.\n\n## References\n\n1. https://coreos.com/etcd\n2. https://kubernetes.io/docs/admin/etcd/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.8","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oac-lbl-npz","createdAt":1599600311388,"name":"etcd pod specification file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.3","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable Kubelet authentication using certificates.\n\n## Rationale\n\nThe connections from the API server to the kubelet are used for fetching logs for pods, attaching (through kubectl) to running pods, and using the kubelet's port-forwarding functionality. These connections terminate at the kubelet's HTTPS endpoint. By default, the API server does not verify the kubelet's serving certificate, which makes the connection subject to man-in-the-middle attacks, and unsafe to run over untrusted and/or public networks. Enabling Kubelet certificate authentication ensures that the API server could authenticate the Kubelet before submitting any requests.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--client-ca-file` argument exists and is set to the location of the client certificate authority file. If the `--client-ca-file` argument is not present, check that there is a Kubelet config file specified by `--config`, and that the file sets authentication: x509: clientCAFile to the location of the client certificate authority file.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `authentication: x509: clientCAFile` to the location of the client CA file. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_AUTHZ_ARGS` variable.\n\n`--client-ca-file=<path/to/client-ca-file>`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nYou require TLS to be configured on API server as well as kubelets.\n\n## Default value\n\nBy default, `--client-ca-file argument` is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-authentication-authorization/][2]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted.\n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-authentication-authorization/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.3","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"x6l-4d1-dwh","createdAt":1599600373842,"name":"--client-ca-file argument is set as appropriate (Kubelet)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Pod-Security-Policies","control:5.2.3","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not generally permit containers to be run with the hostIPC flag set to true.\n\n## Rationale\n\nA container running in the host's IPC namespace can use IPC to interact with processes outside the container. There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to share the host IPC namespace. If you have a requirement to containers that require hostIPC, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n## Audit\n\nGet the set of PSPs with the following command: `kubectl get psp`\n\nFor each PSP, check whether privileged is enabled: `kubectl get psp <name> -o=jsonpath='{.spec.hostIPC}'`\n\nVerify that there is at least one PSP which does not return true.\n\n## Remediation\n\nCreate a PSP as described in the Kubernetes documentation, ensuring that the .spec.hostIPC field is omitted or set to false.\n\n## Impact\n\nPods defined with spec.hostIPC: true will not be permitted unless they are run under a specific PSP.\n\n## Default value\n\nBy default, PodSecurityPolicies are not defined.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/policy/pod-security-policy][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://kubernetes.io/docs/concepts/policy/pod-security-policy\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.2.3","framework":"cis-kubernetes","requirement":"Pod-Security-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vs4-ja0-gkh","createdAt":1599600435891,"name":"Minimize the admission of containers wishing to share the host IPC namespace"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","control:5.1","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAppArmor is an effective and easy-to-use Linux application security system. It is available on some Linux distributions by default, for example, on Debian and Ubuntu.\n\n## Rationale\n\nAppArmor protects the Linux OS and applications from various threats by enforcing a security policy which is also known as an AppArmor profile. You can create your own AppArmor profile for containers or use Docker's default profile. Enabling this feature enforces security policies on containers as defined in the profile.\n\n## Audit\n\nYou should run this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: AppArmorProfile={{ .AppArmorProfile }}'` \n\nThis command returns a valid AppArmor Profile for each container instance.\n\n## Remediation\n\nIf AppArmor is applicable for your Linux OS, enable it.\n\n1. Verify AppArmor is installed.\n2. Create or import a AppArmor profile for Docker containers.\n3. Enable enforcement of the policy.\n4. Start your Docker container using the customized AppArmor profile. For example: `docker run --interactive --tty --security-opt=\"apparmor:PROFILENAME\" ubuntu /bin/bash` Alternatively, Docker's default AppArmor policy can be used.\n\n## Impact\n\nThe container will have the security controls defined in the AppArmor profile. It should be noted that if the AppArmor profile is misconfigured, this may cause issues with the operation of the container.\n\n## Default value\n\nBy default, the docker-default AppArmor profile is applied to running containers. This profile can be found at `/etc/apparmor.d/docker`\n\n## References\n\n1. https://docs.docker.com/engine/security/apparmor/\n2. https://docs.docker.com/engine/reference/run/#security-configuration\n3. https://docs.docker.com/engine/security/security/#other-kernel-security-features\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.1","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"s4z-dsj-llz","createdAt":1599600498264,"name":"An AppArmor Profile is enabled"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Pod-Security-Policies","control:5.2.2","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not generally permit containers to be run with the hostPID flag set to true.\n\n## Rationale\n\nA container running in the host's PID namespace can inspect processes running outside the container. If the container also has access to ptrace capabilities this can be used to escalate privileges outside of the container. There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to share the host PID namespace. If you need to run containers which require hostPID, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n## Audit\n\nGet the set of PSPs with the following command: `kubectl get psp`\n\nFor each PSP, check whether privileged is enabled: `kubectl get psp <name> -o=jsonpath='{.spec.hostPID}'`\n\nVerify that there is at least one PSP which does not return true.\n\n## Remediation\n\nCreate a PSP as described in the Kubernetes documentation, ensuring that the `.spec.hostPID` field is omitted or set to false.\n\n## Impact\n\nPods defined with spec.hostPID: true will not be permitted unless they are run under a specific PSP.\n\n## Default value\n\nBy default, PodSecurityPolicies are not defined.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/policy/pod-security-policy][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://kubernetes.io/docs/concepts/policy/pod-security-policy\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.2.2","framework":"cis-kubernetes","requirement":"Pod-Security-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"flc-1s1-okw","createdAt":1599600559953,"name":"Minimize the admission of containers wishing to share the host process ID namespace"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.7","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the certificate authorities file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe certificate authorities file controls the authorities used to validate API requests. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command: `ps -ef | grep kubelet`. Find the file specified by the `--client-ca-file` argument. Run the following command: `stat -c %a <filename>`. Verify that the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the following command to modify the file permissions of the `--client-ca-file`:\n\n```\nchmod 644 <filename>\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default no `--client-ca-file` is specified.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/authentication/#x509-client-certs][1]\n\n## CIS controls\n\nVersion 6 5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7 14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\n[1]: https://kubernetes.io/docs/admin/authentication/#x509-client-certs\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.7","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qtd-deo-dgb","createdAt":1599600622129,"name":"Certificate authorities file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.3.4","requirement:Controller-Manager","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nExplicitly set a service account private key file for service accounts on the controller manager.\n\n## Rationale\n\nTo ensure that keys for service account tokens can be rotated as needed, a separate public/private key pair should be used for signing service account tokens. The private key should be specified to the controller manager with `--service-account-private-key-file` as appropriate.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--service-account-private-key-file` argument is set as appropriate.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and set the `--service-account-private-key-file parameter` to the private key file for service accounts:\n\n```\n--service-account-private-key-file=<filename>\n```\n\n## Impact\n\nYou would need to securely maintain the key file and rotate the keys based on your organization's key rotation policy.\n\n## Default value\n\nBy default, `--service-account-private-key-file` it not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-controller-manager/][1]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.4 Controlled Use of Administrative Privileges          \n\n[1]: https://kubernetes.io/docs/admin/kube-controller-manager/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.4","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mj1-ode-sln","createdAt":1599600796213,"name":"--service-account-private-key-file argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","control:1.2.7","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `docker.socket`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges, it is very important to audit its activities and usage. Its behavior depends on some key files and directories, including the `docker.socket` file, which holds various parameters for the Docker daemon, it should be audited.\n\n## Audit\n\n1. Locate the `docker.socket` file by running: \n    ```\n    systemctl show -p FragmentPath docker.socket \n    ```\n2. If the file does not exist, this recommendation is not applicable. If the `docker.socket` file exists, verify that there is an audit rule corresponding to the `docker.socket` file by running: \n    ```\n    auditctl -l | grep docker.socket \n    ```\n\n## Remediation\n\nIf the file exists, you should add a rule for it. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /usr/lib/systemd/system/docker.socket -k docker \n```\n\nThen restart the audit daemon: \n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `docker.socket` may not be present, but if it is, it should be audited.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.7","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"afg-qbt-7uw","createdAt":1599600857858,"name":"docker.socket auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.15","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe Process ID (PID) namespace isolates the process ID space, meaning that processes in different PID namespaces can have the same PID. This creates process level isolation between the containers and the host.\n\n## Rationale\n\nPID namespace provides separation between processes. It prevents system processes from being visible, and allows process ids to be reused including PID 1. If the host's PID namespace is shared with containers, it would basically allow these to see all of the processes on the host system. This reduces the benefit of process level isolation between the host and the containers. Under these circumstances a malicious user who has access to a container could get access to processes on the host itself, manipulate them, and even be able to kill them. This could allow for the host itself being shut down, which could be extremely serious, particularly in a multi-tenanted environment. You should not share the host's process namespace with the containers running on it.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: PidMode={{ .HostConfig.PidMode }}'` \n\nIf the command returns `host`, it means that the host PID namespace is shared with its containers; any other result means that the system is configured in line with good security practice.\n\n## Remediation\n\nYou should not start a container with the `--pid=host` argument. For example, do not start a container with the command: `docker run --interactive --tty --pid=host centos /bin/bash`\n\n## Impact\n\nContainer processes cannot see processes on the host system. In certain circumstances, you may want your container to share the host's process namespace. For example, you could build a container containing debugging tools such as strace or gdb, and want to use these tools when debugging processes on the host. If this is desired, then share specific host processes using the `-p` switch. For example: `docker run --pid=host rhel7 strace -p 1234`\n\n## Default value\n\nBy default, all containers have the PID namespace enabled and the therefore the host's process namespace is not shared with its containers.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#pid-settings-pid 2. http://man7.org/linux/man-pages/man7/pid_namespaces.7.html\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.15","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.15\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mk8-jwd-4ag","createdAt":1599600919537,"name":"Host's process namespace is not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.4","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUse https for kubelet connections.\n\n## Rationale\n\nConnections from apiserver to kubelets could potentially carry sensitive data such as secrets and keys. It is thus important to use in-transit encryption for any communication between the apiserver and kubelets.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--kubelet-https` argument either does not exist or is set to `true`.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and remove the `--kubelet-https` parameter.\n\n## Impact\n\nYou require TLS to be configured on apiserver as well as kubelets.\n\n## Default value\n\nBy default, kubelet connections are over https.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-apiserver/ ][1]\n2. [https://kubernetes.io/docs/admin/kubelet-authentication-authorization/][2]\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.                \n\n[1]: https://kubernetes.io/docs/admin/kube-apiserver/ \n[2]: https://kubernetes.io/docs/admin/kubelet-authentication-authorization/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.4","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"critical","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ftg-h4g-hqj","createdAt":1599600981186,"name":"--kubelet-https argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:2.5","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use `aufs` as the storage driver for your Docker instance.\n\n## Rationale\n\nThe `aufs` storage driver is the oldest storage driver used on Linux systems. It is based on a Linux kernel patch-set that is unlikely in future to be merged into the main OS kernel. The `aufs` driver is also known to cause some serious kernel crashes. `aufs` has only legacy support within systems using Docker. Most importantly, `aufs` is not a supported driver in many Linux distributions using latest Linux kernels.\n\n## Audit\n\nVerify that `aufs` is not used as storage driver by running this command and ensuring `aufs` is not listed: \n```\ndocker info --format 'Storage Driver: {{ .Driver }}' \n```\n\n## Remediation\n\nDo not explicitly use `aufs` as storage driver. For example, do not start Docker daemon with the `--storage-driver aufs` flag.\n\n## Impact\n\n`aufs` is the only storage driver that allows containers to share executable and shared library memory. It might be useful if you are running thousands of containers with the same program or libraries. However, you should review its use with respect to your organization's security policy.\n\n## Default value\n\nBy default, Docker uses `devicemapper` as the storage driver on most of the platforms. The default storage driver can vary based on your OS vendor. You should use the storage driver that is recommended by your preferred vendor and which is in line with policy around the applications which are being deployed.\n\n## References\n\n1. [https://docs.docker.com/engine/userguide/storagedriver/selectadriver/#supported-backing-filesystems][1]\n2. [http://muehe.org/posts/switching-docker-from-aufs-to-devicemapper/][2]\n3. [http://jpetazzo.github.io/assets/2015-03-05-deep-dive-into-docker-storage-drivers.html#1][3]\n4. [https://docs.docker.com/engine/userguide/storagedriver/][4]\n\n## CIS controls\n\nVersion 6.18 Application Software Security                \n\n[1]: https://docs.docker.com/engine/userguide/storagedriver/selectadriver/#supported-backing-filesystems \n[2]: http://muehe.org/posts/switching-docker-from-aufs-to-devicemapper/ \n[3]: http://jpetazzo.github.io/assets/2015-03-05-deep-dive-into-docker-storage-drivers.html#1 \n[4]: https://docs.docker.com/engine/userguide/storagedriver/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.5","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"n0x-jqo-rof","createdAt":1599601042737,"name":"aufs storage driver is not used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.22","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable auditing on the Kubernetes API Server and set the desired audit log path.\n\n## Rationale\n\nAuditing the Kubernetes API Server provides a security-relevant chronological set of records documenting the sequence of activities that have affected system by individual users, administrators or other components of the system. Even though currently, Kubernetes provides only basic audit capabilities, it should be enabled. You can enable it by setting an appropriate audit log path.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-log-path` argument is set as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --audit-log-path parameter to a suitable path and file where you would like audit logs to be written, for example: --audit-log-path=/var/log/apiserver/audit.log\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, auditing is not enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/concepts/cluster-administration/audit/ 3. https://github.com/kubernetes/features/issues/22\n\n## CIS controls\n\nVersion 6 6.2 Ensure Audit Log Settings Support Appropriate Log Entry Formatting Validate audit log settings for each hardware device and the software installed on it, ensuring that logs include a date, timestamp, source addresses, destination addresses, and various other useful elements of each packet and/or transaction. Systems should record logs in a standardized format such as syslog entries or those outlined by the Common Event Expression initiative. If systems cannot generate logs in a standardized format, log normalization tools can be deployed to convert logs into such a format. Version 7 6.2 Activate audit logging Ensure that local logging has been enabled on all systems and networking devices. 6.3 Enable Detailed Logging Enable system logging to include detailed information such as an event source, date, user, timestamp, source addresses, destination addresses, and other useful elements.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.22","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.22\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"fny-sti-0dk","createdAt":1599601104396,"name":"--audit-log-path argument is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.17","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nLimit the Node and Pod objects that a kubelet could modify.\n\n## Rationale\n\nUsing the NodeRestriction plug-in ensures that the kubelet is restricted to the Node and Pod objects that it could modify as defined. Such kubelets will only be allowed to modify their own Node API object, and only modify Pod API objects that are bound to their node.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--enable-admission-plugins` argument is set to a value that includes `NodeRestriction`.\n\n## Remediation\n\nFollow the Kubernetes documentation and configure NodeRestriction plug-in on kubelets. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --enable-admission-plugins parameter to a value that includes NodeRestriction. --enable-admission-plugins=...,NodeRestriction,...\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, NodeRestriction is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#noderestriction 3. https://kubernetes.io/docs/admin/authorization/node/ 4. https://acotten.com/post/kube17-security\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.17","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.17\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"jre-tn7-yma","createdAt":1599601166101,"name":"Admission control plugin NodeRestriction is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.1","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the API server pod specification file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe API server pod specification file controls various parameters that set the behavior of the API server. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node:\n\n```bash\nstat -c %a /etc/kubernetes/manifests/kube-apiserver.yaml\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/manifests/kube-apiserver.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `kube-apiserver.yaml` file has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.1","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"8tj-q6g-eyj","createdAt":1599601227733,"name":"API server pod specification file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.21","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/sysconfig/docker` file permissions are correctly set to 644 or more restrictively.\n\n## Rationale\n\nThe `/etc/sysconfig/docker` file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be writeable only by root in order to ensure that it is not modified by less privileged users.\n\n## Audit\n\nVerify that the `/etc/sysconfig/docker` file permissions are set to `644` or more restrictive, by running: \n```\nstat -c %a /etc/sysconfig/docker\n```\n\n## Remediation\n\nRun the following command: `chmod 644 /etc/sysconfig/docker`\n\nThis sets the file permissions for this file to 644.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system and in this case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/admin/configuring/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.21","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.21\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"au3-ayl-tdm","createdAt":1599601289420,"name":"/etc/sysconfig/docker file permissions are set to 644 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.4.2","requirement:Scheduler","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not bind the scheduler service to non-loopback insecure addresses.\n\n## Rationale\n\nThe Scheduler API service which runs on port 10251/TCP by default is used for health and metrics information and is available without authentication or encryption. As such it should only be bound to a localhost interface, to minimize the cluster's attack surface\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-scheduler\n```\nVerify that the `--bind-address` argument is set to `127.0.0.1`.\n\n## Remediation\n\nEdit the Scheduler pod specification file `/etc/kubernetes/manifests/kube-scheduler.yaml` on the master node and ensure the correct value for the `--bind-address` parameter.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `--bind-address` parameter is set to `0.0.0.0`.\n\n## References\n\n1. [https://kubernetes.io/docs/reference/command-line-tools-reference/kube-scheduler/][1]\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.                \n\n[1]: https://kubernetes.io/docs/reference/command-line-tools-reference/kube-scheduler/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.4.2","framework":"cis-kubernetes","requirement":"Scheduler","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.4.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"g1h-91b-y2x","createdAt":1599601351149,"name":"--bind-address argument is set to 127.0.0.1 (Scheduler)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.11","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the etcd data directory has permissions of 700 or more restrictive.\n\n## Rationale\n\netcd is a highly-available key-value store used by Kubernetes deployments for persistent storage of all of its REST API objects. This data directory should be protected from any unauthorized reads or writes. It should not be readable or writable by any group members or the world.\n\n## Audit\n\nOn the etcd server node, get the etcd data directory passed as an argument `--data-dir`, from the command:\n\n```bash\nps -ef | grep etcd\n```\n\n Based on the etcd data directory found above, run the command:\n \n ```bash\n stat -c %a /var/lib/etcd\n ```\n \n Verify the permissions are `700` or more restrictive.\n\n## Remediation\n\nOn the etcd server node, get the etcd data directory, passed as an argument `--data-dir`, from the below command: `ps -ef | grep etcd`\n\nRun the command (based on the etcd data directory found above): `chmod 700 /var/lib/etcd`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, etcd data directory has permissions of 755.\n\n## References\n\n1. https://coreos.com/etcd/docs/latest/op-guide/configuration.html#data-dir\n2. https://kubernetes.io/docs/admin/etcd/\n\n## CIS controls\n\nVersion 6\n\n14 Controlled Access Based on the Need to Know\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.11","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qgj-hf0-an1","createdAt":1599601412710,"name":"etcd data directory permissions are set to 700 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.10","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/etc/docker/daemon.json`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `/etc/docker/daemon.json`. This holds various parameters for the Docker daemon, and so it should be audited.\n\n## Audit\n\nVerify that there is an audit rule associated with the `/etc/docker/daemon.json` file. To display the rule for the `/etc/docker/daemon.json` file, run: \n\n```\nauditctl -l | grep /etc/docker/daemon.json\n```\n\n## Remediation\n\nYou should add a rule for the `/etc/docker/daemon.json` file. For example, add the following line to the `/etc/audit/audit.rules` file: \n\n```\n-w /etc/docker/daemon.json -k docker \n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `/etc/docker/daemon.json` may not exist on the system and in that case, this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n2. [https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file][2]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html \n[2]: https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.10","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"v2o-aio-i0e","createdAt":1599601474412,"name":"/etc/docker/daemon.json auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent","control:3.1"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the docker.service file ownership and group ownership are correctly set to root.\n\n## Rationale\n\nThe docker.service file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be individually and group owned by the root user in order to ensure that it is not modified or corrupted by a less privileged user.\n\n## Audit\n\n1. Locate the `docker.service` file by running: \n    ```\n    systemctl show -p FragmentPath docker.service \n    ```\n2. If the file does not exist, this recommendation is not applicable. If the file exists, verify that it is owned and group-owned by root, by running the following command with the correct filepath:\n    ```\n    stat -c %U:%G /usr/lib/systemd/system/docker.service | grep -v root:root \n    ```\n    The command should not return anything.\n\n## Remediation\n\n1. Find out the file location: `systemctl show -p FragmentPath docker.service`\n2. If the file does not exist, this recommendation is not applicable. If the file does exist, you should execute the command below, including the correct file path, in order to set the ownership and group ownership for the file to root.\n\nFor example, `chown root:root /usr/lib/systemd/system/docker.service`\n\n## Impact\n\nNone.\n\n## Default value\n\nThis file may not be present on the system and if it is not, this recommendation is not applicable. By default, if the file is present, the correct permissions are for the ownership and group ownership to be set to \"root\".\n\n## References\n\n1. https://docs.docker.com/engine/admin/systemd/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.1","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mhz-jes-n2m","createdAt":1599601536215,"name":"docker.service file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.14","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAutomate service accounts management.\n\n## Rationale\n\nWhen you create a pod, if you do not specify a service account, it is automatically assigned the default service account in the same namespace. You should create your own service account and let the API server manage its security tokens.\n\n## Audit\n\nRun the following command on the master node:\n\n```bash\nps -ef | grep kube-apiserver\n```\n\nVerify the `--disable-admission-plugins` argument is set to a value that does not include `ServiceAccount`.\n\n## Remediation\n\nFollow the documentation and create ServiceAccount objects as per your environment. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and ensure that the --disable-admission-plugins parameter is set to a value that does not include ServiceAccount.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, ServiceAccount is set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#serviceaccount 3. https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n\n## CIS controls\n\nVersion 6 16 Account Monitoring and Control Account Monitoring and Control Version 7 16 Account Monitoring and Control Account Monitoring and Control\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.14","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.14\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"wrk-jrm-u8h","createdAt":1599601597784,"name":"Admission control plugin ServiceAccount is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent","control:1.2.8"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/etc/default/docker`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `/etc/default/docker`. It holds various parameters related to the Docker daemon and should therefore be audited.\n\n## Audit\n\nVerify that there is an audit rule associated with the `/etc/default/docker` file. To see the rule for the `/etc/default/docker` file, run: \n```\nauditctl -l | grep /etc/default/docker \n```\n\n## Remediation\n\nYou should add a rule for the `/etc/default/docker` file. For example, add the following line to the `/etc/audit/audit.rules` file: \n\n```\n-w /etc/default/docker -k docker \n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited so these defaults should be changed in line with organizational security policy. The file `/etc/default/docker` may not be present, and if so, this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7 14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.8","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qfi-cgy-a6e","createdAt":1599601659531,"name":"/etc/default/docker auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.2","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the docker.service file permissions are either set to 644 or to a more restrictive value.\n\n## Rationale\n\nThe docker.service file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore not be writable by any other user other than root in order to ensure that it can not be modified by less privileged users.\n\n## Audit\n\n1. Locate the `docker.service` file by running: \n    ```\n    systemctl show -p FragmentPath docker.service\n    ```\n2. If the file does not exist, this recommendation is not applicable. If the file exists, verify that the file permissions are set to `644` or a more restrictive value by running the following command with the correct filepath:\n    ```\n    stat -c %a /usr/lib/systemd/system/docker.service\n    ```\n\n## Remediation\n\n1. Find out the file location: `systemctl show -p FragmentPath docker.service`\n2. If the file does not exist, this recommendation is not applicable. If the file exists, execute the command below including the correct file path to set the file permissions to 644. For example, `chmod 644 /usr/lib/systemd/system/docker.service`\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system. In that case, this recommendation is not applicable. By default, if the file is present, the file permissions are correctly set to 644.\n\n## References\n\n1. https://docs.docker.com/articles/systemd/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.2","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"zyv-o6s-69z","createdAt":1599601721176,"name":"docker.service file permissions are appropriately set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Pod-Security-Policies","control:5.2.5","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not generally permit containers to be run with the allowPrivilegeEscalation flag set to true.\n\n## Rationale\n\nA container running with the `allowPrivilegeEscalation` flag set to true may have processes that can gain more privileges than their parent. There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to allow privilege escalation. The option exists (and is defaulted to true) to permit setuid binaries to run. If you have need to run containers that use setuid binaries or require privilege escalation, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n## Audit\n\nGet the set of PSPs with the following command: `kubectl get psp`\n\nFor each PSP, check whether privileged is enabled: `kubectl get psp <name> -o=jsonpath='{.spec.allowPrivilegeEscalation}'`\n\nVerify that there is at least one PSP which does not return true.\n\n## Remediation\n\nCreate a PSP as described in the Kubernetes documentation, ensuring that the `.spec.allowPrivilegeEscalation` field is omitted or set to false.\n\n## Impact\n\nPods defined with `spec.allowPrivilegeEscalation: true` will not be permitted unless they are run under a specific PSP.\n\n## Default value\n\nBy default, PodSecurityPolicies are not defined.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/policy/pod-security-policy][1]\n\n## CIS controls\n\nVersion 6 5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://kubernetes.io/docs/concepts/policy/pod-security-policy\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.2.5","framework":"cis-kubernetes","requirement":"Pod-Security-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"frf-hog-dra","createdAt":1599601783271,"name":"Minimize the admission of containers with allowPrivilegeEscalation"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.22","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/default/docker` file permissions are correctly set to 644 or more restrictively.\n\n## Rationale\n\nThe `/etc/default/docker` file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be writeable only by root in order to ensure that it is not modified by less privileged users.\n\n## Audit\n\nVerify that the `/etc/default/docker` file permissions are set to `644` or more restrictively, by running: \n```\nstat -c %a /etc/default/docker\n```\n\n## Remediation\n\nRun the following command: `chmod 644 /etc/default/docker`\n\nThis sets the file permissions for this file to 644.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system and in this case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/admin/configuring/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.22","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.22\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"pqb-2cq-piw","createdAt":1599601845070,"name":"/etc/default/docker file permissions are set to 644 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.24","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIt is possible to attach to a particular `cgroup` when a container is instantiated. Confirming `cgroup` usage would ensure that containers are running in defined `cgroup`s.\n\n## Rationale\n\nSystem administrators typically define `cgroup`s in which containers are supposed to run. If `cgroup`s are not explicitly defined by the system administrator, containers run in the docker `cgroup` by default. At run time, it is possible to attach a container to a different `cgroup` other than the one originally defined. This usage should be monitored and confirmed, as by attaching to a different `cgroup`, excess permissions and resources might be granted to the container and this can therefore prove to be a security risk.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CgroupParent={{ .HostConfig.CgroupParent }}'` \n\nThis command returns the cgroup where the containers are running. If it is blank, it means that containers are running under the default docker cgroup. Any other return value indicates that the system is not configured in line with good security practice.\n\n## Remediation\n\nYou should not use the `--cgroup-parent` option within the docker run command unless strictly required.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, containers run under docker `cgroup`.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#specify-custom-cgroups\n2. https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Resource_Management_Guide/ch01.html\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n\n## Audit\n\nYou should run the following command: docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CgroupParent={{ .HostConfig.CgroupParent }}' The above command returns the cgroup where the containers are running. If it is blank, it means that containers are running under the default docker cgroup. Any other return value indicates that the system is not configured in line with good security practice.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.24","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.24\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"maa-bf8-zan","createdAt":1599601906764,"name":"cgroup usage is confirmed"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.12","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the etcd data directory ownership is set to `etcd:etcd`.\n\n## Rationale\n\n`etcd` is a highly-available key-value store used by Kubernetes deployments for persistent storage of all of its REST API objects. This data directory should be protected from any unauthorized reads or writes. It should be owned by `etcd:etcd`.\n\n## Audit\n\nOn the etcd server node, get the etcd data directory passed as an argument `--data-dir` from the command:\n\n```bash\nps -ef | grep etcd\n```\n\nBased on the etcd data directory found above, run the command:\n\n```bash\nstat -c %U:%G /var/lib/etcd\n```\n\nVerify the ownership is set to `etcd:etcd`.\n\n## Remediation\n\nOn the etcd server node, get the etcd data directory, passed as an argument `--data-dir`, from the below command: `ps -ef | grep etcd`\n\nRun the command (based on the etcd data directory found above): `chown etcd:etcd /var/lib/etcd`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, etcd data directory ownership is set to `etcd:etcd`.\n\n## References\n\n1. https://coreos.com/etcd/docs/latest/op-guide/configuration.html#data-dir\n2. https://kubernetes.io/docs/admin/etcd/\n\n## CIS controls\n\nVersion 6\n\n14 Controlled Access Based on the Need to Know\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.12","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"25d-zal-sfr","createdAt":1599601968321,"name":"etcd data directory ownership is set to etcd:etcd"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.5","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not disable timeouts on streaming connections.\n\n## Rationale\n\nSetting idle timeouts ensures that you are protected against denial-of-service attacks, inactive connections, and running out of ephemeral ports.\n\n*Note*: By default, `--streaming-connection-idle-timeout` is set to four hours, which might be too high for your environment. Setting this as appropriate would additionally ensure that such streaming connections are timed out after serving legitimate use cases.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--streaming-connection-idle-timeout` argument is not set to 0. If the argument is not present, and there is a Kubelet config file specified by `--config`, check that it does not set `streamingConnectionIdleTimeout` to 0.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `streamingConnectionIdleTimeout` to a value other than 0. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_SYSTEM_PODS_ARGS` variable.\n\n`--streaming-connection-idle-timeout=5m`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nLong-lived connections could be interrupted.\n\n## Default value\n\nBy default, `--streaming-connection-idle-timeout` is set to four hours.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://github.com/kubernetes/kubernetes/pull/18552][2]\n\n## CIS controls\n\nVersion 6.9 Limitation and Control of Network Ports, Protocols, and Services\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://github.com/kubernetes/kubernetes/pull/18552\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.5","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"xmg-h3a-wj4","createdAt":1599602030157,"name":"--streaming-connection-idle-timeout argument is not set to 0"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.3","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIf kube-proxy is running, and if it is using a file-based kubeconfig file, ensure that the proxy kubeconfig file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe kube-proxy kubeconfig file controls various parameters of the kube-proxy service in the worker node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system. It is possible to run kube-proxy with the kubeconfig parameters configured as a Kubernetes ConfigMap instead of a file. In this case, there is no proxy kubeconfig file.\n\n## Audit\n\nFind the kubeconfig file being used by `kube-proxy` by running the following command: `ps -ef | grep kube-proxy`. If `kube-proxy` is running, get the kubeconfig file location from the `--kubeconfig` parameter.\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %a <proxy kubeconfig file>`. Verify that if a file is specified and it exists, the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the each worker node:\n\n```\nchmod 644 <proxy kubeconfig file>\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, proxy file has permissions of 640.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-proxy/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior. \n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.        \n\n[1]: https://kubernetes.io/docs/admin/kube-proxy/\n\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.3","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"alc-y7j-j9q","createdAt":1599602091672,"name":"Proxy kubeconfig file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.7","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe TCP/IP port numbers below 1024are considered privileged ports. Normal users and processes are not allowed to use them for various security reasons. Docker does, however allow a container port to be mapped to a privileged port.\n\n## Rationale\n\nBy default, if the user does not specifically declare a container port to host port mapping, Docker automatically and correctly maps the container port to one available in the `49153`-`65535` range on the host. Docker does, however, allow a container port to be mapped to a privileged port on the host if the user explicitly declares it. This is because containers are executed with `NET_BIND_SERVICE` Linux kernel capability which does not restrict privileged port mapping. The privileged ports receive and transmit various pieces of data which are security sensitive and allowing containers to use them is not in line with good security practice.\n\n## Audit\n\nList all running containers instances and their port mappings by executing this command: `docker ps --quiet | xargs docker inspect --format '{{ .Id }}: Ports={{ .NetworkSettings.Ports }}'` You should then review the list and ensure that container ports are not mapped to host port numbers below `102.4`.\n\n## Remediation\n\nDo not map container ports to privileged host ports when starting a container. You should also ensure that there is no such container to host privileged port mapping declarations in the Dockerfile.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, mapping a container port to a privileged port on the host is allowed.\n\n**Note**: There might be certain cases where you want to map privileged ports, because if you forbid it, then the corresponding application has to run outside of a container.\n\nFor example: HTTP and HTTPS load balancers have to bind `80/tcp` and `443/tcp` respectively. Forbidding to map privileged ports effectively forbids from running those in a container, and mandates using an external load balancer. In such cases, those containers instances should be marked as exceptions for this recommendation.\n\n## References\n\n1. https://docs.docker.com/engine/userguide/networking/\n\n## CIS controls\n\nVersion 6\n\n9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system.\n\nVersion 7\n\n9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.7","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ua5-ygj-jad","createdAt":1599602153218,"name":"Privileged ports are not mapped within containers"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:Logging","security:compliance","control:3.2.1","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nKubernetes can audit the details of requests made to the API server. The `--audit-policy-file` flag must be set for this logging to be enabled.\n\n## Rationale\n\nLogging is an important detective control for all systems, to detect potential unauthorised access.\n\n## Audit\n\nRun the following command on one of the cluster master nodes: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-policy-file` is set. Review the contents of the file specified and ensure that it contains a valid audit policy.\n\n## Remediation\n\nCreate an audit policy file for your cluster.\n\n## Impact\n\nAudit logs will be created on the master nodes, which will consume disk space. Care should be taken to avoid generating too large volumes of log information as this could impact the available of the cluster nodes.\n\n## Default value\n\nUnless the `--audit-policy-file` flag is specified, no auditing will be carried out.\n\n## References\n\n1. [https://kubernetes.io/docs/tasks/debug-application-cluster/audit/][1]\n\n## CIS controls\n\nVersion 7.6.2 Activate audit logging - Ensure that local logging has been enabled on all systems and networking devices.\n\n[1]: https://kubernetes.io/docs/tasks/debug-application-cluster/audit/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"3.2.1","framework":"cis-kubernetes","requirement":"Logging","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-3.2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ehp-xpm-xi3","createdAt":1599602215207,"name":"Minimal audit policy is created"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.12","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe container's root filesystem should be treated as a 'golden image' by using Docker run's `--read-only` option. This prevents any writes to the container's root filesystem at container runtime and enforces the principle of immutable infrastructure.\n\n## Rationale\n\nEnabling this option forces containers at runtime to explicitly define their data writing strategy to persist or not persist their data. This also reduces security attack vectors since the container instance's filesystem cannot be tampered with or written to unless it has explicit read-write permissions on its filesystem folder and directories.\n\n## Audit\n\nRun this command on the docker host: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: ReadonlyRootfs={{ .HostConfig.ReadonlyRootfs }}'` \n\nIf this command returns `true`, it means the container's root filesystem is mounted read-only. If the above command returns `false`, it means the container's root filesystem is writeable.\n\n## Remediation\n\nAdd a `--read-only` flag at a container's runtime to enforce the container's root filesystem being mounted as read only. For example, `docker run <Run arguments> --read-only <Container Image Name or ID> <Command>`\n\nEnabling the `--read-only` option at a container's runtime should be used by administrators to force a container's executable processes to only write container data to explicit storage locations during its lifetime. \n\nExamples of explicit storage locations during a container's runtime include, but are not limited to:\n\n1. Using the `--tmpfs` option to mount a temporary file system for non-persistent data writes. `docker run --interactive --tty --read-only --tmpfs \"/run\" --tmpfs \"/tmp\" centos /bin/bash`\n2. Enabling Docker rw mounts at a container's runtime to persist container data directly on the Docker host filesystem. For example, `docker run --interactive --tty --read-only -v /opt/app/data:/run/app/data:rw centos /bin/bash`\n\n3. Utilizing the Docker shared-storage volume plugin for Docker data volume to persist container data. For example, `docker volume create -d convoy --opt o=size=20GB my-named-volume docker run --interactive --tty --read-only -v my-named-volume:/run/app/data centos /bin/bash`\n\n3. Transmitting container data outside of the Docker controlled area during the container's runtime for container data in order to ensure that it is persistent. Examples include hosted databases, network file shares and APIs.\n\n## Impact\n\nEnabling `--read-only` at container runtime may break some container OS packages if a data writing strategy is not defined. You should define what the container's data should and should not persist at runtime in order to decide which strategy to use. Example: Enable use `--tmpfs` for temporary file writes to /tmp Use Docker shared data volumes for persistent data writes\n\n## Default value\n\nBy default, a container has its root filesystem writeable, allowing all container processes to write files owned by the container's actual runtime user.\n\n## References\n\n1. http://docs.docker.com/reference/commandline/cli/#run\n2. https://docs.docker.com/engine/tutorials/dockervolumes/\n3. http://www.projectatomic.io/blog/2015/12/making-docker-images-write-only-in-production/\n4. https://docs.docker.com/engine/reference/commandline/run/#mount-tmpfs-tmpfs\n5. https://docs.docker.com/engine/tutorials/dockervolumes/#creating-and-mounting-a-data-volume-container\n\n## CIS controls\n\nVersion 6\n\n14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.12","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"635-mc8-3mr","createdAt":1599602276896,"name":"Container's root filesystem is mounted as read only"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","source:compliance-agent","control:1.2.8","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nRestrict kubelet nodes to reading only objects associated with them.\n\n## Rationale\n\nThe Node authorization mode only allows kubelets to read Secret, ConfigMap, PersistentVolume, and PersistentVolumeClaim objects associated with their nodes.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--authorization-mode` argument exists and is set to a value to include Node.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--authorization-mode` parameter to a value that includes Node. `--authorization-mode=Node,RBAC`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, Node authorization is not enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-apiserver/ ][1]\n2. [https://kubernetes.io/docs/admin/authorization/node/ ][2]\n3. [https://github.com/kubernetes/kubernetes/pull/46076 ][3]\n4. [https://acotten.com/post/kube17-security][4]\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.              \n\n[1]: https://kubernetes.io/docs/admin/kube-apiserver/ \n[2]: https://kubernetes.io/docs/admin/authorization/node/ \n[3]: https://github.com/kubernetes/kubernetes/pull/46076 \n[4]: https://acotten.com/post/kube17-security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.8","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vgg-kwx-7dh","createdAt":1599602338742,"name":"--authorization-mode argument includes Node"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.3.3","requirement:Controller-Manager","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUse individual service account credentials for each controller.\n\n## Rationale\n\nThe controller manager creates a service account per controller in the kube-system namespace, generates a credential for it, and builds a dedicated API client with that service account credential for each controller loop to use. Setting the `--use-service-account-credentials` to true runs each control loop within the controller manager using a separate service account credential. When used in combination with RBAC, this ensures that the control loops run with the minimum permissions required to perform their intended tasks.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--use-service-account-credentials` argument is set to true.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node to set the below parameter:\n\n```\n--use-service-account-credentials=true\n```\n\n## Impact\n\nWhatever authorizer is configured for the cluster, it must grant sufficient permissions to the service accounts to perform their intended tasks. When using the RBAC authorizer, those roles are created and bound to the appropriate service accounts in the kube-system namespace automatically with default roles and rolebindings that are auto-reconciled on startup. If using other authorization methods (ABAC, Webhook, etc.), the cluster deployer is responsible for granting appropriate permissions to the service accounts (the required permissions can be seen by inspecting the `controller-roles.yaml` and `controller-role-bindings.yaml` files for the RBAC roles.\n\n## Default value\n\nBy default, `--use-service-account-credentials` is set to false.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-controller-manager/ ][1]\n2. [https://kubernetes.io/docs/admin/service-accounts-admin/ ][2]\n3. [https://github.com/kubernetes/kubernetes/blob/release-1.6/plugin/pkg/auth/authorizer/rbac/bootstrappolicy/testdata/controller-roles.yaml ][3]\n4. [https://github.com/kubernetes/kubernetes/blob/release-1.6/plugin/pkg/auth/authorizer/rbac/bootstrappolicy/testdata/controller-role-bindings.yaml ][4]\n5. [https://kubernetes.io/docs/admin/authorization/rbac/#controller-roles][5]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.4 Controlled Use of Administrative Privileges \n\n[1]: https://kubernetes.io/docs/admin/kube-controller-manager/ \n[2]: https://kubernetes.io/docs/admin/service-accounts-admin/ \n[3]: https://github.com/kubernetes/kubernetes/blob/release-1.6/plugin/pkg/auth/authorizer/rbac/bootstrappolicy/testdata/controller-roles.yaml \n[4]: https://github.com/kubernetes/kubernetes/blob/release-1.6/plugin/pkg/auth/authorizer/rbac/bootstrappolicy/testdata/controller-role-bindings.yaml \n[5]: https://kubernetes.io/docs/admin/authorization/rbac/#controller-roles\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.3","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"b7m-bho-nat","createdAt":1599602400314,"name":"--use-service-account-credentials argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.6","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nProtect tuned kernel parameters from overriding kubelet default kernel parameter values.\n\n## Rationale\n\nKernel parameters are usually tuned and hardened by the system administrators before putting the systems into production. These parameters protect the kernel and the system. Your kubelet kernel defaults that rely on such parameters should be appropriately set to match the desired secured system state. Ignoring this could potentially lead to running pods with undesired kernel behavior.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--protect-kernel-defaults` argument is set to true. If the `--protect-kernel-defaults` argument is not present, check that there is a Kubelet config file specified by `--config`, and that the file sets `protectKernelDefaults` to `true`.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `protectKernelDefaults: true`. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_SYSTEM_PODS_ARGS` variable.\n\n`--protect-kernel-defaults=true`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nYou would have to re-tune kernel parameters to match kubelet parameters.\n\n## Default value\n\nBy default, `--protect-kernel-defaults` is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.3 Secure Configurations for Hardware and Software on Mobile Devices, Laptops, Workstations, and Servers\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.6","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"uiw-kms-wwu","createdAt":1599602462044,"name":"--protect-kernel-defaults argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.4","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/var/lib/docker`.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories. For example, audit `/var/lib/docker`, which holds all the information about containers it should be audited.\n\n## Audit\n\nVerify that there is an audit rule applied to the `/var/lib/docker` directory. To see the rule for the `/var/lib/docker` directory, run: \n\n```\nauditctl -l | grep /var/lib/docker\n```\n\n## Remediation\n\nYou should add a rule for the `/var/lib/docker` directory. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /var/lib/docker -k docker \n```\n\nThen restart the audit daemon:\n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.4","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tfa-927-tto","createdAt":1599602523672,"name":"/var/lib/docker auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.31","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe Docker socket docker.sock should not be mounted inside a container.\n\n## Rationale\n\nIf the Docker socket is mounted inside a container it could allow processes running within the container to execute Docker commands which would effectively allow for full control of the host.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Volumes={{ .Mounts }}' | grep docker.sock` This returns any instances where `docker.sock` has been mapped to a container as a volume.\n\n## Remediation\n\nYou should ensure that no containers mount docker.sock as a volume.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, docker.sock is not mounted inside containers.\n\n## References\n\n1. https://raesene.github.io/blog/2016/03/06/The-Dangers-Of-Docker.sock/\n2. https://forums.docker.com/t/docker-in-docker-vs-mounting-var-run-docker-sock/9450/2\n3. https://github.com/docker/docker/issues/21109\n\n## CIS controls\n\nVersion 6\n\n9 Limitation and Control of Network Ports, Protocols, and Services\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.31","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.31\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"3iw-zus-yz3","createdAt":1599602585460,"name":"Docker socket is not mounted inside any containers"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.7","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not always authorize all requests.\n\n## Rationale\n\nThe API Server, can be configured to allow all requests. This mode should not be used on any production cluster.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--authorization-mode` argument exists and is not set to `AlwaysAllow`.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--authorization-mode` parameter to values other than `AlwaysAllow`. One such example could be as below:\n\n```\n--authorization-mode=RBAC\n```\n\n## Impact\n\nOnly authorized requests will be served.\n\n## Default value\n\nBy default, `AlwaysAllow` is not enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-apiserver/ ][1]\n2. [https://kubernetes.io/docs/admin/authorization/node/ ][2]\n\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.              \n\n[1]: https://kubernetes.io/docs/admin/kube-apiserver/ \n[2]: https://kubernetes.io/docs/admin/authorization/node/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.7","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"kli-btm-jbr","createdAt":1599602646953,"name":"--authorization-mode argument is not set to AlwaysAllow (API server)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.4","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUsing the `--privileged` flag provides all Linux kernel capabilities to the container to which it is applied and therefore overwrites the `--cap-add` and `--cap-drop` flags. For this reason, ensure that it is not used.\n\n## Rationale\n\nThe `--privileged` flag provides all capabilities to the container to which it is applied, and also lifts all the limitations enforced by the device cgroup controller. As a consequence this the container has most of the rights of the underlying host. This flag only exists to allow for specific use cases (for example running Docker within Docker) and should not generally be used.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Privileged={{ .HostConfig.Privileged }}'` This command returns `Privileged=false` for each container instance.\n\n## Remediation\n\nDo not run containers with the `--privileged` flag. For example, do not start a container using the command `docker run --interactive --tty --privileged centos /bin/bash`\n\n## Impact\n\nIf you start a container without the `--privileged` flag, it will not have excessive default capabilities.\n\n## Default value\n\nFalse\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.4","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"rbd-urm-klo","createdAt":1599602708557,"name":"Privileged containers are not used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.21","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable profiling, if not needed.\n\n## Rationale\n\nProfiling allows for the identification of specific performance bottlenecks. It generates a significant amount of program data that could potentially be exploited to uncover system and program details. If you are not experiencing any bottlenecks and do not need the profiler for troubleshooting purposes, it is recommended to turn it off to reduce the potential attack surface.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--profiling` argument is set to `false`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the below parameter. --profiling=false\n\n## Impact\n\nProfiling information would not be available.\n\n## Default value\n\nBy default, profiling is enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.21","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.21\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"wk0-7yo-dw9","createdAt":1599602770265,"name":"--profiling argument is set to false (API server)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.18","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the daemon.json file permissions are correctly set to 644 or more restrictively.\n\n## Rationale\n\nThe daemon.json file contains sensitive parameters that may alter the behavior of the docker daemon. Therefore it should be writeable only by root to ensure it is not modified by less privileged users.\n\n## Audit\n\nVerify that the `daemon.json` file permissions are set to `644` or more restrictive, by running: \n```\nstat -c %a /etc/docker/daemon.json\n```\n\n## Remediation\n\nRun `chmod 644 /etc/docker/daemon.json`\n\nThis sets the file permissions for this file to 644.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system, and in that case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.18","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.18\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"7df-4w8-g7l","createdAt":1599602831833,"name":"daemon.json file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.2","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the API server pod specification file ownership is set to root:root.\n\n## Rationale\n\nThe API server pod specification file controls various parameters that set the behavior of the API server. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/manifests/kube-apiserver.yaml\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, chown root:root /etc/kubernetes/manifests/kube-apiserver.yaml\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the kube-apiserver.yaml file ownership is set to root:root.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6 5.1 Minimize And Sparingly Use Administrative Privileges Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior. Version 7 5.2 Maintain Secure Images Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.2","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vbb-t30-k0f","createdAt":1599602893246,"name":"API server pod specification file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","security:compliance","scored:false","control:1.2.33","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEncrypt etcd key-value store.\n\n## Rationale\n\netcd is a highly available key-value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be encrypted at rest to avoid any disclosures.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--encryption-provider-config` argument is set to a EncryptionConfig file. Additionally, ensure that the EncryptionConfig file has all the desired resources covered especially any secrets.\n\n## Remediation\n\nFollow the Kubernetes documentation and configure a EncryptionConfig file. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--encryption-provider-config` parameter to the path of that file: `--encryption-provider-config=</path/to/EncryptionConfig/File>`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `--encryption-provider-config` is not set.\n\n## References\n\n1. https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/ \n2. https://acotten.com/post/kube17-security \n3. https://kubernetes.io/docs/admin/kube-apiserver/ \n4. https://github.com/kubernetes/features/issues/92\n\n## CIS controls\n\nVersion 6 14.5 Encrypt At Rest Sensitive Information Sensitive information stored on systems shall be encrypted at rest and require a secondary authentication mechanism, not integrated into the operating system, in order to access the information. \n\nVersion 7 14.8 Encrypt Sensitive Information at Rest Encrypt all sensitive information at rest using a tool that requires a secondary authentication mechanism not integrated into the operating system, in order to access the information.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.33","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.33\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"7rg-crl-fs0","createdAt":1599602954959,"name":"--encryption-provider-config argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:5.28","security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should use the `--pids-limit` flag at container runtime.\n\n## Rationale\n\nAttackers could launch a fork bomb with a single command inside the container. This fork bomb could crash the entire system and would require a restart of the host to make the system functional again. Using the PIDs cgroup parameter --pids-limit would prevent this kind of attack by restricting the number of forks that can happen inside a container within a specified time frame.\n\n## Audit\n\nRun this command and ensure that `PidsLimit` is not set to 0 or -\n1.  A PidsLimit of 0 or -1 means that any number of processes can be forked concurrently inside the container. \n\n```\ndocker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: PidsLimit={{ .HostConfig.PidsLimit }}'\n```\n\n## Remediation\n\nUse `--pids-limit` flag with an appropriate value when launching the container. For example, `docker run -it --pids-limit 100 <Image_ID>`\n\nIn the above example, the number of processes allowed to run at any given time is set to 100. After a limit of 100 concurrently running processes is reached, Docker would restrict any new process creation.\n\n## Impact\n\nSet the PIDs limit value as appropriate. Incorrect values might leave containers unusable.\n\n## Default value\n\nThe Default value for `--pids-limit` is 0 which means there is no restriction on the number of forks. Note that the PIDs cgroup limit works only for kernel versions 4.3 and higher.\n\n## References\n\n1. https://github.com/docker/docker/pull/18697\n2. https://docs.docker.com/engine/reference/commandline/run/#options\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.28","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.28\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tmp-lms-u8p","createdAt":1599603016485,"name":"PIDs cgroup limit is used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.6","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the scheduler pod specification file ownership is set to root:root.\n\n## Rationale\n\nThe scheduler pod specification file controls various parameters that set the behavior of the kube-scheduler service in the master node. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/manifests/kube-scheduler.yaml\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/manifests/kube-scheduler.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kube-scheduler.yaml` file ownership is set to root:root.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-scheduler/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.6","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"y79-4ts-a0k","createdAt":1599603078027,"name":"Scheduler pod specification file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","control:1.4.1","security:compliance","requirement:Scheduler","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable profiling, if not needed.\n\n## Rationale\n\nProfiling allows for the identification of specific performance bottlenecks. It generates a significant amount of program data that could potentially be exploited to uncover system and program details. If you are not experiencing any bottlenecks and do not need the profiler for troubleshooting purposes, it is recommended to turn it off to reduce the potential attack surface.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-scheduler\n```\nVerify that the `--profiling` argument is set to `false`.\n\n## Remediation\n\nEdit the Scheduler pod specification file `/etc/kubernetes/manifests/kube-scheduler.yaml` file on the master node and set the below parameter:\n\n```\n--profiling=false\n```\n\n## Impact\n\nProfiling information would not be available.\n\n## Default value\n\nBy default, profiling is enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-scheduler/ ][1]\n2. [https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md][2]\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges                \n\n[1]: https://kubernetes.io/docs/admin/kube-scheduler/ \n[2]: https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.4.1","framework":"cis-kubernetes","requirement":"Scheduler","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.4.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"hya-urf-09b","createdAt":1599603139661,"name":"--profiling argument is set to false (Scheduler)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.25","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nRotate log files on reaching 100 MB or as appropriate.\n\n## Rationale\n\nKubernetes automatically rotates the log files. Retaining old log files ensures that you would have sufficient log data available for carrying out any investigation or correlation. If you have set file size of 100 MB and the number of old log files to keep as 10, you would approximate have 1 GB of log data that you could potentially use for your analysis.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-log-maxsize` argument is set to `100` or as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--audit-log-maxsize` parameter to an appropriate size in MB. For example, to set it as 100 MB: `--audit-log-maxsize=100`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, auditing is not enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/concepts/cluster-administration/audit/ 3. https://github.com/kubernetes/features/issues/22\n\n## CIS controls\n\nVersion 6 6.3 Ensure Audit Logging Systems Are Not Subject To Loss (i.e. rotation/archive) Ensure that all systems that store logs have adequate storage space for the logs generated on a regular basis, so that log files will not fill up between log rotation intervals. The logs must be archived and digitally signed on a periodic basis. Version 7 6.4 Ensure adequate storage for logs Ensure that all systems that store logs have adequate storage space for the logs generated.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.25","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.25\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qhy-gng-bh4","createdAt":1599603202907,"name":"--audit-log-maxsize argument is set to 100 or as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.17","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the daemon.json file individual ownership and group ownership is correctly set to root.\n\n## Rationale\n\nThe daemon.json file contains sensitive parameters that could alter the behavior of the docker daemon. It should therefore be owned and group owned by root to ensure it can not be modified by less privileged users.\n\n## Audit\n\nVerify that the `daemon.json` file is owned and group-owned by root by running: \n```\nstat -c %U:%G /etc/docker/daemon.json | grep -v root:root \n```\nThe command should return no results.\n\n## Remediation\n\nRun `chown root:root /etc/docker/daemon.json`\n\nThis sets the ownership and group ownership for the file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system, and in that case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.17","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.17\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"hlb-qzw-opk","createdAt":1599603264485,"name":"daemon.json file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.8","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the certificate authorities file ownership is set to `root:root`.\n\n## Rationale\n\nThe certificate authorities file controls the authorities used to validate API requests. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the following command: `ps -ef | grep kubelet`. Find the file specified by the `--client-ca-file` argument. Run the following command: `stat -c %U:%G <filename>`. Verify that the ownership is set to `root:root`.\n\n## Remediation\n\nRun the following command to modify the ownership of the `--client-ca-file`:\n\n```\nchown root:root <filename>\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default no `--client-ca-file` is specified.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/authentication/#x509-client-certs][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/authentication/#x509-client-certs\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.8","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ifc-9ej-k7k","createdAt":1599603326156,"name":"Client certificate authorities file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.16","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker socket file has permissions of 660 or are configured more restrictively.\n\n## Rationale\n\nOnly root and the members of the docker group should be allowed to read and write to the default Docker Unix socket. The Docker socket file should therefore have permissions of 660 or more restrictive permissions.\n\n## Audit\n\nVerify that the Docker socket file has permissions of `660` or more restrictive, by running: \n```\nstat -c %a /var/run/docker.sock\n```\n\n## Remediation\n\nRun the command `chmod 660 /var/run/docker.sock`\n\nThis sets the file permissions of the Docker socket file to 660.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for the Docker socket file is correctly set to 660.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option\n2. https://docs.docker.com/engine/reference/commandline/dockerd/#bind-docker-to-another-hostport-or-a-unix-socket\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.16","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.16\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"jxv-zrr-1c1","createdAt":1599603387716,"name":"Docker socket file permissions are set to 660 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","control:1.2.3","security:compliance","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use token based authentication.\n\n## Rationale\n\nThe token-based authentication utilizes static tokens to authenticate requests to the apiserver. The tokens are stored in clear-text in a file on the apiserver, and cannot be revoked or rotated without restarting the apiserver. Hence, do not use static token-based authentication.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver \n```\nVerify that the `--token-auth-file` argument does not exist.\n\n## Remediation\n\nFollow the documentation and configure alternate mechanisms for authentication. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and remove the `--token-auth-file=<filename>` parameter.\n\n## Impact\n\nYou will have to configure and use alternate authentication mechanisms such as certificates. Static token based authentication could not be used.\n\n## Default value\n\nBy default, `--token-auth-file` argument is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/authentication/#static-token-file\n2. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n16.14 Encrypt/Hash All Authentication Files And Monitor Their Access - Verify that all authentication files are encrypted or hashed and that these files cannot be accessed without root or administrator privileges. Audit all access to password files in the system.\n\nVersion 7\n\n16.4 Encrypt or Hash all Authentication Credentials - Encrypt or hash with a salt all authentication credentials when stored.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.3","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mvv-hb7-ucv","createdAt":1599603449449,"name":"--token-auth-file parameter is not set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.12","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/usr/sbin/runc`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `/usr/sbin/runc`, and so it should be audited.\n\n## Audit\n\nVerify that there is an audit rule corresponding to the `/usr/sbin/runc` file. To display the rule for the `/usr/sbin/runc` file, run:\n\n```\nauditctl -l | grep /usr/sbin/runc\n```\n\n## Remediation\n\nYou should add a rule for `/usr/sbin/runc` file. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /usr/sbin/runc -k docker\n```\n\nThen restart the audit daemon:\n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The `file/usr/sbin/runc` may not be present on the system, and in that case this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n2. [https://github.com/docker/docker/pull/20662][2]\n3. [https://containerd.tools/][3]\n4. [https://github.com/opencontainers/runc][4]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html \n[2]: https://github.com/docker/docker/pull/20662 \n[3]: https://containerd.tools/ \n[4]: https://github.com/opencontainers/runc\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.12","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ksp-ylk-dub","createdAt":1599603510904,"name":"/usr/sbin/runc auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.10","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSetup TLS connection on the Kubelets.\n\n## Rationale\n\nKubelet communication contains sensitive parameters that should remain encrypted in transit. Configure the Kubelets to serve only HTTPS traffic.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--tls-cert-file` and `--tls-private-key-file` arguments exist and they are set as appropriate. If these arguments are not present, check that there is a Kubelet config specified by `--config` and that it contains appropriate settings for `tlsCertFile` and `tlsPrivateKeyFile`.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `tlsCertFile` to the location of the certificate file to use to identify this Kubelet, and `tlsPrivateKeyFile` to the location of the corresponding private key file. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameters in K`UBELET_CERTIFICATE_ARGS` variable.\n\n```\n--tls-cert-file=<path/to/tls-certificate-file>\n--tls-private-key-file=<path/to/tls-key-file>\n```\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nTLS and client certificate authentication must be configured for your Kubernetes cluster deployment.\n\n## Default value\n\nBy default, `--tls-cert-file` and `--tls-private-key-file` arguments are not set. If `--tls-cert-file` and `--tls-private-key-file` are not provided, a self-signed certificate and key are generated for the public address and saved to the directory passed to `--cert-dir`.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [http://rootsquash.com/2016/05/10/securing-the-kubernetes-api/ ][2]\n3. [https://github.com/kelseyhightower/docker-kubernetes-tls-guide ][3]\n4. [https://jvns.ca/blog/2017/08/05/how-kubernetes-certificates-work/][4]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted.\n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: http://rootsquash.com/2016/05/10/securing-the-kubernetes-api/\n[3]: https://github.com/kelseyhightower/docker-kubernetes-tls-guide\n[4]: https://jvns.ca/blog/2017/08/05/how-kubernetes-certificates-work/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.10","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"gqg-7cf-6bu","createdAt":1599603572402,"name":"--tls-cert-file and --tls-private-key-file arguments are set as appropriate (Kubelet)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:1.1.3","framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the controller manager pod specification file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe controller manager pod specification file controls various parameters that set the behavior of the Controller Manager on the master node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/manifests/kube-controller-manager.yaml\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/manifests/kube-controller-manager.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `kube-controller-manager.yaml` file has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.3","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"pr0-hcf-xkw","createdAt":1599603633988,"name":"Controller manager pod specification file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","source:compliance-agent","control:1.1.19","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the Kubernetes PKI directory and file ownership is set to root:root.\n\n## Rationale\n\nKubernetes makes use of a number of certificates as part of its operation. You should set the ownership of the directory containing the PKI information and all files in that directory to maintain their integrity. The directory and files should be owned by root:root.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nls -laR /etc/kubernetes/pki/\n```\n\nVerify the ownership of all files and directories in this hierarchy is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown -R root:root /etc/kubernetes/pki/`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `/etc/kubernetes/pki/` directory and all of the files and directories contained within it, are set to be owned by the root user.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.19","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.19\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tgm-6a5-ttf","createdAt":1599603695482,"name":"Kubernetes PKI directory and file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.20","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not disable the secure port.\n\n## Rationale\n\nThe secure port is used to serve https with authentication and authorization. If you disable it, no https traffic is served and all traffic is served unencrypted.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--secure-port` argument is either not set or is set to an integer value between `1` and `65535`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and either remove the --secure-port parameter or set it to a different (non-zero) desired port.\n\n## Impact\n\nYou need to set the API Server up with the right TLS certificates.\n\n## Default value\n\nBy default, port 6443 is used as the secure port.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. Version 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.20","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.20\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"5w3-iw4-y16","createdAt":1599603757033,"name":"--secure-port argument is not set to 0"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Controller-Manager","source:compliance-agent","control:1.3.7","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not bind the Controller Manager service to non-loopback insecure addresses.\n\n## Rationale\n\nThe Controller Manager API service which runs on port 10252/TCP by default is used for health and metrics information and is available without authentication or encryption. As such it should only be bound to a localhost interface, to minimize the cluster's attack surface\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--bind-address` argument is set to `127.0.0.1`.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and ensure the correct value for the `--bind-address` parameter.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `--bind-address` parameter is set to `0.0.0.0`.\n\n## References\n\n1. https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager/ \n\n*Notes*: Although the current Kubernetes documentation site says that `--address` is deprecated in favour of `--bind-address`. Kubeadm 1.11 still makes use of `--address`.\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.7","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"pvo-5un-k18","createdAt":1599603818624,"name":"--bind-address argument is set to 127.0.0.1 (Controller Manager)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.6","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nVerify kubelet's certificate before establishing connection.\n\n## Rationale\n\nThe connections from the apiserver to the kubelet are used for fetching logs for pods, attaching (through kubectl) to running pods, and using the kubelets port-forwarding functionality. These connections terminate at the kubelets HTTPS endpoint. By default, the apiserver does not verify the kubelets serving certificate, which makes the connection subject to man-in-the-middle attacks, and unsafe to run over untrusted and/or public networks.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--kubelet-certificate-authority` argument exists and is set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and setup the TLS connection between the apiserver and kubelets. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--kubelet-certificate-authority` parameter to the path to the cert file for the certificate authority. \n\n```\n--kubelet-certificate-authority=<ca-string>\n```\n\n## Impact\n\nYou require TLS to be configured on apiserver as well as kubelets.\n\n## Default value\n\nBy default, `--kubelet-certificate-authority` argument is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://kubernetes.io/docs/admin/kubelet-authentication-authorization/ \n3. https://kubernetes.io/docs/concepts/cluster-administration/master-node-communication/#apiserver---kubelet\n\n## CIS controls\n\nVersion 6.3.4 Use Only Secure Channels For Remote System Administration - Perform all remote administration of servers, workstation, network devices, and similar equipment over secure channels. Protocols such as telnet, VNC, RDP, or others that do not actively support strong encryption should only be used if they are performed over a secondary encryption channel, such as SSL, TLS or IPSEC. \n\nVersion 7.4.5 Use Multifactor Authentication For All Administrative Access - Use multi-factor authentication and encrypted channels for all administrative account access.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.6","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"sbm-nxt-qv3","createdAt":1599603880124,"name":"--kubelet-certificate-authority argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","control:2.4","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEtcd should be configured to make use of TLS encryption for peer connections.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be encrypted in transit and also amongst peers in the etcd clusters.\n\n## Audit\n\nThis recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable.\n\nRun the following command on the etcd server node: \n```\nps -ef | grep etcd\n```\nVerify that the `--peer-cert-file` and `--peer-key-file` arguments are set as appropriate. \n\n## Remediation\n\nFollow the etcd service documentation and configure peer TLS encryption as appropriate for your etcd cluster. Then, edit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and set the below parameters:\n\n```\n--peer-cert-file=</path/to/peer-cert-file> \n--peer-key-file=</path/to/peer-key-file>\n```\n\n## Impact\n\nEtcd cluster peers would need to set up TLS for their communication.\n\n## Default value\n\n*Note*: This recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable. By default, peer communication over TLS is not configured.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][1]\n2. [https://kubernetes.io/docs/admin/etcd/][2]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.  \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.4","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"lzq-1mk-xc7","createdAt":1599603941695,"name":"--peer-cert-file and --peer-key-file arguments are set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.5","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/etc/docker`.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privilege and its behavior depends on some key files and directories, including `/etc/docker`. This holds various certificates and keys used for TLS communication between Docker daemon and Docker client and so it should be audited.\n\n## Audit\n\nVerify that there is an audit rule applied to the `/etc/docker` directory. To see the rule for the `/etc/docker` directory, run: \n\n```\nauditctl -l | grep /etc/docker\n```\n\n## Remediation\n\nYou should add a rule for the `/etc/docker` directory. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /etc/docker -k docker \n```\n\nThen restart the audit daemon:\n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.5","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"5ns-uab-zcf","createdAt":1599604003342,"name":"/etc/docker auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.16","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIPC (POSIX/SysV IPC) namespace provides separation of named shared memory segments, semaphores and message queues. The IPC namespace on the host should therefore not be shared with containers and should remain isolated.\n\n## Rationale\n\nThe IPC namespace provides separation of IPC between the host and containers. If the host's IPC namespace is shared with the container, it would allow processes within the container to see all of IPC communications on the host system. This would remove the benefit of IPC level isolation between host and containers. An attacker with access to a container could get access to the host at this level with major consequences. The IPC namespace should therefore not be shared between the host and its containers.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: IpcMode={{ .HostConfig.IpcMode }}'` \n\nIf the command returns `host`, it means that the host IPC namespace is shared with the container. Any other result means that it is not shared, and that the system is configured in line with good security practice.\n\n## Remediation\n\nDo not start a container with the `--ipc=host` argument. For example, do not start a container with the command `docker run --interactive --tty --ipc=host centos /bin/bash`\n\n## Impact\n\nShared memory segments are used in order to accelerate interprocess communications, commonly in high-performance applications. If this type of application is containerized into multiple containers, you might need to share the IPC namespace of the containers in order to achieve high performance. Under these circumstances, you should still only share container specific IPC namespaces and not the host IPC namespace. A container's IPC namespace can be shared with another container. For example, `docker run --interactive --tty --ipc=container:e3a7a1a97c58 centos /bin/bash`\n\n## Default value\n\nBy default, all containers have their IPC namespace enabled and host IPC namespace is not shared with any container.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#ipc-settings-ipc\n2. http://man7.org/linux/man-pages/man7/namespaces.7.html\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.16","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.16\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qpe-nj2-sl8","createdAt":1599604030036,"name":"Host's IPC namespace is not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","control:1.3.2","security:compliance","requirement:Controller-Manager","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable profiling, if not needed.\n\n## Rationale\n\nProfiling allows for the identification of specific performance bottlenecks. It generates a significant amount of program data that could potentially be exploited to uncover system and program details. If you are not experiencing any bottlenecks and do not need the profiler for troubleshooting purposes, it is recommended to turn it off to reduce the potential attack surface.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--profiling` argument is set to `false`.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and set the below parameter:\n\n```\n--profiling=false\n```\n\n## Impact\n\nProfiling information would not be available.\n\n## Default value\n\nBy default, profiling is enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-controller-manager/ ][1]\n2. [https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md][2]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.4 Controlled Use of Administrative Privileges \n\n[1]: https://kubernetes.io/docs/admin/kube-controller-manager/ \n[2]: https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.2","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"1ie-ddf-7wm","createdAt":1599604031896,"name":"--profiling argument is set to false (Controller Manager)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.6","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/docker` directory permissions are correctly set to 755 or more restrictively.\n\n## Rationale\n\nThe `/etc/docker` directory contains certificates and keys in addition to various sensitive files. It should therefore only be writeable by root to ensure that it can not be modified by a less privileged user.\n\n## Audit\n\nYou should execute the command below to verify that the directory has permissions of 755+: \n\n```\nstat -c %a /etc/docker\n```\n\n## Remediation\n\nRun the following command: `chmod 755 /etc/docker`\n\nThis sets the permissions for the directory to 755.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for this directory are set to 755.\n\n## References\n\n1. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.6","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"een-7do-u18","createdAt":1599604083943,"name":"/etc/docker directory permissions are set to 755 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.30","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSetup TLS connection on the API server.\n\n## Rationale\n\nAPI server communication contains sensitive parameters that should remain encrypted in transit. Configure the API server to serve only HTTPS traffic.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--tls-cert-file` and `--tls-private-key-file` arguments exist and they are set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection on the apiserver. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the TLS certificate and private key file parameters. \n```\n--tls-cert-file=<path/to/tls-certificate-file> \n--tls-private-key-file=<path/to/tls-key-file>\n```\n\n## Impact\n\nTLS and client certificate authentication must be configured for your Kubernetes cluster deployment.\n\n## Default value\n\nBy default, `--tls-cert-file` and `--tls-private-key-file` arguments are not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. http://rootsquash.com/2016/05/10/securing-the-kubernetes-api/ \n3. https://github.com/kelseyhightower/docker-kubernetes-tls-guide\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \nVersion 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.30","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.30\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"m9r-8ka-arc","createdAt":1599604115727,"name":"--tls-cert-file and --tls-private-key-file arguments are set as appropriate (API server)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","security:compliance","scored:false","control:1.1.20","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that Kubernetes PKI certificate files have permissions of 644 or more restrictive.\n\n## Rationale\n\nKubernetes makes use of a number of certificate files as part of the operation of its components. The permissions on these files should be set to 644 or more restrictive to protect their integrity.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nfind /etc/kubernetes/pki -name \"*.crt\" | xargs stat -c '%n %a'\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod -R 644 /etc/kubernetes/pki/*.crt`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the certificates used by Kubernetes are set to have permissions of 644\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.20","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.20\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ion-6fc-xd4","createdAt":1599604147464,"name":"Kubernetes PKI certificate file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.5","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the scheduler pod specification file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe scheduler pod specification file controls various parameters that set the behavior of the Scheduler service in the master node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/manifests/kube-scheduler.yaml\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/manifests/kube-scheduler.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kube-scheduler.yaml` file has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-scheduler/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.5","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qxe-hc6-qlm","createdAt":1599604179189,"name":"Scheduler pod specification file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","source:compliance-agent","control:2.1","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nConfigure TLS encryption for the etcd service.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be encrypted in transit.\n\n## Audit\n\nRun the following command on the etcd server node:\n```\nps -ef | grep etcd\n```\nVerify that the `--cert-file` and the `--key-file` arguments are set as appropriate.\n\n## Remediation\n\nFollow the etcd service documentation and configure TLS encryption. Then, edit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and set the below parameters:\n\n```\n--cert-file=</path/to/ca-file> \n--key-file=</path/to/key-file>\n```\n\n## Impact\n\nClient connections only over TLS would be served.\n\n## Default value\n\nBy default, TLS encryption is not set.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][1]\n2. [https://kubernetes.io/docs/admin/etcd/][2]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.                \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.1","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ezf-1mn-luf","createdAt":1599604210918,"name":"--cert-file and --key-file arguments are set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.26","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSet global request timeout for API server requests as appropriate.\n\n## Rationale\n\nSetting global request timeout allows extending the API server request timeout limit to a duration appropriate to the user's connection speed. By default, it is set to 60 seconds which might be problematic on slower connections making cluster resources inaccessible once the data volume for requests exceeds what can be transmitted in 60 seconds. But, setting this timeout limit to be too large can exhaust the API server resources making it prone to Denial-of-Service attack. Hence, it is recommended to set this limit as appropriate and change the default limit of 60 seconds only if needed.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--request-timeout` argument is either not set or set to an appropriate value.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml and set the below parameter as appropriate and if needed. For example, --request-timeout=300s\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, --request-timeout is set to 60 seconds.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://github.com/kubernetes/kubernetes/pull/51415\n\n## CIS controls\n\nVersion 6 14.6 Enforce Detailed Audit Logging For Sensitive Information Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. Version 7 14.9 Enforce Detail Logging for Access or Changes to Sensitive Data Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.26","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.26\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"1kt-cbt-hvl","createdAt":1599604242564,"name":"--request-timeout argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Pod-Security-Policies","control:5.2.4","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not generally permit containers to be run with the hostNetwork flag set to true.\n\n## Rationale\n\nA container running in the host's network namespace could access the local loopback device, and could access network traffic to and from other pods. There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to share the host network namespace. If you have need to run containers which require hostNetwork, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n## Audit\n\nGet the set of PSPs with the following command: `kubectl get psp`\n\nFor each PSP, check whether privileged is enabled: `kubectl get psp <name> -o=jsonpath='{.spec.hostNetwork}'`\n\nVerify that there is at least one PSP which does not return true.\n\n## Remediation\n\nCreate a PSP as described in the Kubernetes documentation, ensuring that the `.spec.hostNetwork` field is omitted or set to false.\n\n## Impact\n\nPods defined with spec.hostNetwork: true will not be permitted unless they are run under a specific PSP.\n\n## Default value\n\nBy default, PodSecurityPolicies are not defined.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/policy/pod-security-policy][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://kubernetes.io/docs/concepts/policy/pod-security-policy\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.2.4","framework":"cis-kubernetes","requirement":"Pod-Security-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mlb-fwt-s80","createdAt":1599604274257,"name":"Minimize the admission of containers wishing to share the host network namespace"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:1.2.3","security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit all Docker daemon activities.\n\n## Rationale\n\nAs well as auditing the normal Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges. It is very important to audit its activities and usage.\n\n## Audit\n\nVerify that there are audit rules for the Docker daemon. To see the rules associated with the Docker daemon, run: \n\n```\nauditctl -l | grep /usr/bin/dockerd\n```\n\n## Remediation\n\nYou should add rules for the Docker daemon. For example, add the following line to the `/etc/audit/audit.rules` file: \n\n```\n-w /usr/bin/dockerd -k docker \n```\n\nThen restart the audit daemon using the following command:\n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, the Docker daemon is not audited.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.6.2 Ensure Audit Log Settings Support Appropriate Log Entry Formatting - Validate audit log settings for each hardware device and the software installed on it, ensuring that logs include a date, timestamp, source addresses, destination addresses, and various other useful elements of each packet and/or transaction. Systems should record logs in a standardized format such as syslog entries or those outlined by the Common Event Expression initiative. If systems cannot generate logs in a standardized format, log normalization tools can be deployed to convert logs into such a format. \n\nVersion 7.6.2 Activate audit logging - Ensure that local logging has been enabled on all systems and networking devices. \n\nVersion 6.3 Enable Detailed Logging - Enable system logging to include detailed information such as an event source, date, user, timestamp, source addresses, destination addresses, and other useful elements.                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.3","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"fpu-oe5-feu","createdAt":1599604305682,"name":"Auditing is configured for the Docker daemon"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.25","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should restrict the container from acquiring additional privileges via SUID or SGID bits.\n\n## Rationale\n\nA process can set the `no_new_priv` bit in the kernel and this persists across forks, clones and execve. The `no_new_priv` bit ensures that the process and its child processes do not gain any additional privileges via SUID or SGID bits. This reduces the danger associated with many operations because the possibility of subverting privileged binaries is lessened.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: SecurityOpt={{ .HostConfig.SecurityOpt }}'` \n\nThis command returns all of the security options currently configured for containers. The option `no-new-privileges` should be one of them.\n\n## Remediation\n\nStart your container with the options `docker run --rm -it --security-opt=no-new-privileges ubuntu bash`\n\n## Impact\n\nThe `no_new_priv` option prevents LSMs like SELinux from allowing processes to acquire new privileges.\n\n## Default value\n\nBy default, new privileges are not restricted.\n\n## References\n\n1. https://github.com/projectatomic/atomic-site/issues/269\n2. https://github.com/docker/docker/pull/20727\n3. https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt\n4. https://lwn.net/Articles/475678/\n5. https://lwn.net/Articles/475362/\n\n## CIS controls\n\nVersion 6\n\n5 Controlled Use of Administration Privileges Controlled Use of Administration Privileges\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.25","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.25\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"cft-3kh-z3l","createdAt":1599604337425,"name":"Container is restricted from acquiring additional privileges"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.4","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable the read-only port.\n\n## Rationale\n\nThe Kubelet process provides a read-only API in addition to the main Kubelet API. Unauthenticated access is provided to this read-only API which could possibly retrieve potentially sensitive information about the cluster.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--read-only-port` argument exists and is set to 0. If the `--read-only-port` argument is not present, check that there is a Kubelet config file specified by `--config`. Check that if there is a readOnlyPort entry in the file, it is set to 0.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `readOnlyPort` to 0. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_SYSTEM_PODS_ARGS` variable.\n\n`--read-only-port=0`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nRemoval of the read-only port will require that any service which made use of it will need to be re-configured to use the main Kubelet API.\n\n## Default value\n\nBy default, `--read-only-port` is set to 10255/TCP. However, if a config file is specified by `--config` the default value for `readOnlyPort` is 0.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system.\n\nVersion 7 9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.4","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"dgo-kog-lle","createdAt":1599604369044,"name":"--read-only-port argument is set to 0"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.4","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIf kube-proxy is running, ensure that the file ownership of its kubeconfig file is set to root:root.\n\n## Rationale\n\nThe kubeconfig file for kube-proxy controls various parameters for the kube-proxy service in the worker node. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nFind the kubeconfig file being used by `kube-proxy` by running the following command: `ps -ef | grep kube-proxy`. If `kube-proxy` is running, get the kubeconfig file location from the `--kubeconfig` parameter.\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %U:%G <proxy kubeconfig file>`. Verify that the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the each worker node:\n\n`chown root:root <proxy kubeconfig file>`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, proxy file ownership is set to root:root.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-proxy/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kube-proxy/\n\n## Audit\n\nFind the kubeconfig file being used by kube-proxy by running the following command: ps -ef | grep kube-proxy If kube-proxy is running, get the kubeconfig file location from the --kubeconfig parameter. Run the below command (based on the file location on your system) on the each worker node. For example, stat -c %U:%G <proxy kubeconfig file> Verify that the ownership is set to root:root.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.4","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oat-dei-klo","createdAt":1599604401268,"name":"Proxy kubeconfig file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.1","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the kubelet service file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe kubelet service file controls various parameters that set the behavior of the kubelet service in the worker node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %a /etc/systemd/system/kubelet.service.d/10-kubeadm.conf`. Verify that the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the each worker node.\n\nFor example, `chmod 644 /etc/systemd/system/kubelet.service.d/10-kubeadm.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the kubelet service file has permissions of 640.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#44-joining-your-nodes ][2]\n3. [https://kubernetes.io/docs/admin/kubeadm/#kubelet-drop-in][3]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#44-joining-your-nodes\n[3]: https://kubernetes.io/docs/admin/kubeadm/#kubelet-drop-in\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.1","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"j8k-7ii-fwo","createdAt":1599604432646,"name":"Kubelet service file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.5","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/docker` directory ownership and group ownership is correctly set to root.\n\n## Rationale\n\nThe `/etc/docker` directory contains certificates and keys in addition to various other sensitive files. It should therefore be individual owned and group owned by root in order to ensure that it can not be modified by less privileged users.\n\n## Audit\n\nYou should execute the command below to verify that the directory is owned and group owned by root: \n\n```\nstat -c %U:%G /etc/docker | grep -v root:root\n``` \n\nThis command does not return any data.\n\n## Remediation\n\nTo resolve this issue, run the following command: `chown root:root /etc/docker`\n\nThis sets the ownership and group ownership for the directory to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the ownership and group ownership for this directory is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.`\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.5","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"heb-axz-wdc","createdAt":1599604466531,"name":"/etc/docker directory ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","control:3.20","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/sysconfig/docker` file individual ownership and group ownership is correctly set to root.\n\n## Rationale\n\nThe `/etc/sysconfig/docker` file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be individually owned and group owned by root to ensure that it is not modified by less privileged users.\n\n## Audit\n\nVerify that the `/etc/sysconfig/docker` file is individually owned and group-owned by root by running: \n```\nstat -c %U:%G /etc/sysconfig/docker | grep -v root:root\n```\nThe command should return no results.\n\n## Remediation\n\nRun the following command: `chown root:root /etc/sysconfig/docker`\n\nThis sets the ownership and group ownership for the file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system, and in this case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/admin/configuring/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.20","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.20\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"xrt-uiz-s7o","createdAt":1599604498138,"name":"/etc/sysconfig/docker file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.15","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `scheduler.conf` file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe `scheduler.conf` file is the kubeconfig file for the Scheduler. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/scheduler.conf\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/scheduler.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `scheduler.conf` has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.15","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.15\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"fmc-m0d-pe5","createdAt":1599604530000,"name":"scheduler.conf file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent","control:1.2.9"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/etc/sysconfig/docker`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges, it is very important to audit its activities and usage. Its behavior depends on some key files and directories, including `/etc/sysconfig/docker`. It contains various parameters related to the Docker daemon when run on CentOS and RHEL based distributions. If present, it is important that it is audited.\n\n## Audit\n\nVerify that there is an audit rule associated with the `/etc/sysconfig/docker` file. To see the rule for the `/etc/sysconfig/docker` file, run: \n```\nauditctl -l | grep /etc/sysconfig/docker\n```\n\n## Remediation\n\nYou should add a rule for `/etc/sysconfig/docker` file. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /etc/sysconfig/docker -k docker\n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `/etc/sysconfig/docker` may not be present on the system and in that case, this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.9","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ps6-vb4-bim","createdAt":1599604561498,"name":"/etc/sysconfig/docker auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","source:compliance-agent","control:2.1"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy default, all network traffic is allowed between containers on the same host on the default network bridge. You can restrict all inter-container communication and link specific containers together that require communication. Or, you can create a custom network and only join containers that need to communicate to that custom network.\n\n## Rationale\n\nBy default, unrestricted network traffic is enabled between all containers on the same host on the default network bridge. Each container has the potential of reading all packets across the container network on the same host. This might lead to an unintended and unwanted disclosure of information to other containers. Hence, restrict inter-container communication on the default network bridge.\n\n## Audit\n\nVerify that the default network bridge has been configured to restrict inter-container communication by running:\n```\ndocker network ls --quiet | xargs docker network inspect --format '{{ .Name }}: {{ .Options }}' \n```\nCheck that it returns `com.docker.network.bridge.enable_icc:false` for the default network bridge.\n\n## Remediation\n\nEdit the Docker daemon configuration file to ensure that inter-container communication is disabled:\n\n```\n\"icc\": false\n```\n\nAlternatively, run the Docker daemon directly and pass `--icc=false` as an argument:\n\n```\ndockerd --icc=false \n```\n\nFollow the Docker documentation and create a custom network, and only join containers that need to communicate to that custom network. The `--icc` parameter only applies to the default docker bridge. If you use a custom network, adopt the segmenting networks approach instead.\n\n## Impact\n\nInter-container communication is disabled on the default network bridge. If any communication between containers on the same host is desired, it needs to be explicitly defined using container linking or custom networks.\n\n## Default value\n\nBy default, all inter-container communication is allowed on the default network bridge.\n\n## References\n\n1. [https://docs.docker.com/engine/userguide/networking/][1]\n2. [https://docs.docker.com/engine/userguide/networking/default_network/container-communication/#communication-between-containers][2]\n\n## CIS controls\n\nNone                \n\n[1]: https://docs.docker.com/engine/userguide/networking/ \n[2]: https://docs.docker.com/engine/userguide/networking/default_network/container-communication/#communication-between-containers\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_network","complianceFrameworks":[{"control":"2.1","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"dmd-zy3-5un","createdAt":1599604593277,"name":"Network traffic is restricted between containers on the default bridge"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.16","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nReject creating pods that do not match Pod Security Policies.\n\n## Rationale\n\nA Pod Security Policy is a cluster-level resource that controls the actions that a pod can perform and what it has the ability to access. The PodSecurityPolicy objects define a set of conditions that a pod must run with in order to be accepted into the system. Pod Security Policies are comprised of settings and strategies that control the security features a pod has access to and hence this must be used to control pod access permissions. Note: When the PodSecurityPolicy admission plugin is in use, there needs to be at least one PodSecurityPolicy in place for ANY pods to be admitted. See section 1.7 for recommendations on PodSecurityPolicy settings.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--enable-admission-plugins` argument is set to a value that includes `PodSecurityPolicy`.\n\n## Remediation\n\nFollow the documentation and create Pod Security Policy objects as per your environment. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --enable-admission-plugins parameter to a value that includes PodSecurityPolicy: --enable-admission-plugins=...,PodSecurityPolicy,... Then restart the API Server.\n\n## Impact\n\nThe policy objects must be created and granted before pod creation would be allowed.\n\n## Default value\n\nBy default, PodSecurityPolicy is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#podsecuritypolicy 3. https://kubernetes.io/docs/concepts/policy/pod-security-policy/#enabling-pod-security-policies\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.16","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.16\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vwz-aw9-c09","createdAt":1599604624793,"name":"Admission control plugin PodSecurityPolicy is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.4","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the file permissions on the docker.socket file are correctly set to 644 or more restrictively.\n\n## Rationale\n\nThe docker.socket file contains sensitive parameters that may alter the behavior of the Docker remote API. It should therefore be writeable only by root in order to ensure that it is not modified by less privileged users.\n\n## Audit\n\n1. Locate the `docker.socket` file by running: \n    ```\n    systemctl show -p FragmentPath docker.socket \n    ```\n2. If the file does not exist, this recommendation is not applicable. If the file exists, verify that the file permissions are set to `644` or more restrictively, by running the following command with the correct filepath:\n    ```\n    stat -c %a /usr/lib/systemd/system/docker.socket\n    ```\n\n## Remediation\n\n1. Find out the file location: `systemctl show -p FragmentPath docker.socket`\n2. If the file does not exist, this recommendation is not applicable. If the file does exist, you should execute the command below, including the correct file path to set the file permissions to 644. For example, `chmod 644 /usr/lib/systemd/system/docker.socket`\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system and in that case, this recommendation is not applicable. By default, if the file is present, the permissions should be set to 644 or more restrictively.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#bind-docker-to-another-hostport-or-a-unix-socket\n2. https://github.com/YungSang/fedora-atomic-packer/blob/master/oem/docker.socket\n3. http://daviddaeschler.com/2014/12/14/centos-7rhel-7-and-docker-containers-on-boot/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.4","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"myf-zyh-89p","createdAt":1599604656679,"name":"docker.socket file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","control:2.4","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDocker considers a private registry either secure or insecure. By default, registries are considered secure.\n\n## Rationale\n\nA secure registry uses TLS. A copy of the registry's CA certificate is placed on the Docker host in the `/etc/docker/certs.d/<registry-name>/` directory. An insecure registry is one which does not have a valid registry certificate, or one not not using TLS. You should not use insecure registries because they present a risk of traffic interception and modification. Additionally, once a registry has been marked as insecure, commands such as `docker pull`, `docker push`, and `docker search` will not result in an error message, and users may indefinitely be working with this type of insecure registry without ever being notified of the risk of potential compromise.\n\n## Audit\n\nFind out if any insecure registries are in use by running: \n```\ndocker info --format 'Insecure Registries: {{.RegistryConfig.InsecureRegistryCIDRs}}'\n```\n\n## Remediation\n\nYou should ensure that no insecure registries are in use.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, Docker assumes all registries except local ones are secure.\n\n## References\n\n1. [https://docs.docker.com/registry/insecure/][1]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.                \n\n[1]: https://docs.docker.com/registry/insecure/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.4","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"wki-o8r-1ha","createdAt":1599604688564,"name":"Insecure registries are not used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.14","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `admin.conf` file ownership is set to root:root.\n\n## Rationale\n\nThe `admin.conf` file contains the admin credentials for the cluster. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/admin.conf\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/admin.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `admin.conf` file ownership is set to `root:root`.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kubeadm/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.14","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.14\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"kcn-wwa-os0","createdAt":1599604720378,"name":"admin.conf file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.19","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/default/docker` file ownership and group-ownership is correctly set to root.\n\n## Rationale\n\nThe `/etc/default/docker` file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be individually owned and group owned by root to ensure that it cannot be modified by less privileged users.\n\n## Audit\n\nVerify that the `/etc/default/docker` file is individually owned and group-owned by root by running: \n```\nstat -c %U:%G /etc/default/docker | grep -v root:root \n```\nThe command should return no results.\n\n## Remediation\n\nExecute the following command: `chown root:root /etc/default/docker`\n\nThis sets the ownership and group ownership of the file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system, and in this case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/admin/configuring/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.19","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.19\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"o5w-d8y-ka1","createdAt":1599604751728,"name":"/etc/default/docker file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.5","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the kubelet.conf file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe `kubelet.conf` file is the kubeconfig file for the node, and controls various parameters that set the behavior and identity of the worker node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %a /etc/kubernetes/kubelet.conf`. Verify that the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun this command (based on the file location on your system) on the each worker node. For example, `chmod 644 /etc/kubernetes/kubelet.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kubelet.conf` file has permissions of 640.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior. \n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.5","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"x88-8vs-ygw","createdAt":1599604783481,"name":"kubelet.conf file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.5","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should not allow sensitive host system directories such as those listed below to be mounted as container volumes, especially in read-write mode. `/` `/boot` `/dev` `/etc` `/lib` `/proc` `/sys` `/usr`\n\n## Rationale\n\nIf sensitive directories are mounted in read-write mode, it is possible to make changes to files within them. This has obvious security implications and should be avoided.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Volumes={{ .Mounts }}'` This command returns a list of currently mapped directories and indicates whether they are mounted in read-write mode for each container instance.\n\n## Remediation\n\nDo not mount directories which are security sensitive on the host within containers, especially in read-write mode.\n\n## Impact\n\nNone\n\n## Default value\n\nDocker defaults to using a read-write volume but you can also mount a directory read-only. By default, no sensitive host directories are mounted within containers.\n\n## References\n\n1. https://docs.docker.com/engine/tutorials/dockervolumes/\n\n## CIS controls\n\nVersion 6\n\n14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.5","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"dmq-wqu-2im","createdAt":1599604814929,"name":"Sensitive host system directories are not mounted on containers"}]}
    headers:
      Content-Type:
      - application/json
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=1&page%5Bsize%5D=100
    method: GET
  response:
    body: |
      {"meta":{"page":{"total_filtered_count":52,"total_count":152}},"data":[{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.28","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nExplicitly set a service account public key file for service accounts on the apiserver.\n\n## Rationale\n\nBy default, if no --service-account-key-file is specified to the apiserver, it uses the private key from the TLS serving certificate to verify service account tokens. To ensure that the keys for service account tokens could be rotated as needed, a separate public/private key pair should be used for signing service account tokens. Hence, the public key should be specified to the apiserver with --service-account-key-file.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--service-account-key-file` argument exists and is set as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--service-account-key-file` parameter to the public key file for service accounts: `--service-account-key-file=<filename>`\n\n## Impact\n\nThe corresponding private key must be provided to the controller manager. You would need to securely maintain the key file and rotate the keys based on your organization's key rotation policy.\n\n## Default value\n\nBy default, `--service-account-key-file` argument is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://github.com/kubernetes/kubernetes/issues/24167\n\n## CIS controls\n\nVersion 6 3 Secure Configurations for Hardware and Software on Mobile Devices, Laptops, Workstations, and Servers \nVersion 7 5 Secure Configuration for Hardware and Software on Mobile Devices, Laptops, Workstations and Servers \n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.28","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.28\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"xtg-mzn-vft","createdAt":1599604846892,"name":"--service-account-key-file argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent","control:5.30"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should not share the host's user namespaces with containers running on it.\n\n## Rationale\n\nUser namespaces ensure that a root process inside the container will be mapped to a non-root process outside the container. Sharing the user namespaces of the host with the container does not therefore isolate users on the host from users in the containers.\n\n## Audit\n\nRun this command and ensure that it does not return any value for `UsernsMode`. If it returns a value of `host`, it means that the host user namespace is shared with its containers: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: UsernsMode={{ .HostConfig.UsernsMode }}'`\n\n## Remediation\n\nDo not share user namespaces between host and containers. For example, do not run the command `docker run --rm -it --userns=host ubuntu bash`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the host user namespace is shared with containers unless user namespace support is enabled.\n\n## References\n\n1. https://docs.docker.com/engine/security/userns-remap/\n2. https://docs.docker.com/engine/reference/commandline/run/#options\n3. https://github.com/docker/docker/pull/12648\n4. https://events.linuxfoundation.org/sites/events/files/slides/User%20Namespaces%20-%20ContainerCon%202015%20-%2016-9-final_0.pdf\n\n## CIS controls\n\nVersion 6\n\n12 Boundary Defense Boundary Defense\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.30","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.30\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"e7c-uzf-jwy","createdAt":1599604878282,"name":"Host's user namespaces are not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","requirement:Container-Images-and-Build-File-Configuration","framework:cis-docker","control:4.6","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should add the `HEALTHCHECK` instruction to your Docker container images in order to ensure that health checks are executed against running containers.\n\n## Rationale\n\nAn important security control is that of availability. Adding the `HEALTHCHECK` instruction to your container image ensures that the Docker engine periodically checks the running container instances against that instruction to ensure that containers are still operational. Based on the results of the health check, the Docker engine could terminate containers which are not responding correctly, and instantiate new ones.\n\n## Audit\n\nRun this command to ensure that Docker images have the appropriate `HEALTHCHECK` instruction configured: `docker inspect --format='{{ .Config.Healthcheck }}' <IMAGE>`\n\n## Remediation\n\nYou should follow the Docker documentation and rebuild your container images to include the `HEALTHCHECK` instruction.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `HEALTHCHECK` is not set.\n\n## References\n\n1. https://docs.docker.com/engine/reference/builder/#healthcheck\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_image","complianceFrameworks":[{"control":"4.6","framework":"cis-docker","requirement":"Container-Images-and-Build-File-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-4.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"5xs-afd-sfx","createdAt":1599604909942,"name":"HEALTHCHECK instructions have been added to container images"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:5.7.4","source:compliance-agent","requirement:General-Policies","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nKubernetes provides a default namespace, where objects are placed if no namespace is specified for them. Placing objects in this namespace makes application of RBAC and other controls more difficult.\n\n## Rationale\n\nResources in a Kubernetes cluster should be segregated by namespace, to allow for security controls to be applied at that level and to make it easier to manage resources.\n\n## Audit\n\nRun this command to list objects in default namespace: `kubectl get all`\n\nThe only entries there should be system managed resources such as the Kubernetes service.\n\n## Remediation\n\nEnsure that namespaces are created to allow for appropriate segregation of Kubernetes resources and that all new resources are created in a specific namespace.\n\n## Impact\n\nNone\n\n## Default value\n\nUnless a namespace is specific on object creation, the default namespace will be used.\n\n## References\n\nNone\n\n## CIS controls\n\nNone\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.7.4","framework":"cis-kubernetes","requirement":"General-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.7.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"gly-1rp-obv","createdAt":1599604941259,"name":"The default namespace should not be used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.21","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSeccomp filtering provides a means for a process to specify a filter for incoming system calls. The default Docker seccomp profile works on a whitelist basis and allows for a large number of common system calls, whilst blocking all others. This filtering should not be disabled unless it causes a problem with your container application usage.\n\n## Rationale\n\nA large number of system calls are exposed to every userland process with many of them going unused for the entire lifetime of the process. Most of applications do not need all these system calls and would therefore benefit from having a reduced set of available system calls. Having a reduced set of system calls reduces the total kernel surface exposed to the application and thus improvises application security.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: SecurityOpt={{ .HostConfig.SecurityOpt }}'` \n\nThis returns either `<no value>` or your modified seccomp profile. If it returns `[seccomp:unconfined]`, the container is running without any seccomp profiles and is therefore not configured in line with good security practices.\n\n## Remediation\n\nBy default, seccomp profiles are enabled. You do not need to do anything unless you want to modify and use a modified seccomp profile.\n\n## Impact\n\nWith Docker 1.10 and greater, the default seccomp profile blocks syscalls, regardless of `--cap-add passed` to the container. You should create your own custom seccomp profile in such cases. You can also disable the default seccomp profile by passing `--security-opt=seccomp:unconfined` on docker run.\n\n## Default value\n\nWhen you run a container, it uses the default profile unless you override it with the `--security-opt` option.\n\n## References\n\n1. http://blog.scalock.com/new-docker-security-features-and-what-they-mean-seccomp-profiles\n2. https://docs.docker.com/engine/reference/run/#security-configuration\n3. https://github.com/docker/docker/blob/master/profiles/seccomp/default.json\n4. https://docs.docker.com/engine/security/seccomp/\n5. https://www.kernel.org/doc/Documentation/prctl/seccomp_filter.txt\n6. https://github.com/docker/docker/issues/22870\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.21","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.21\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"hub-v5u-cw0","createdAt":1599604972925,"name":"Default seccomp profile is not Disabled"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.7","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAllow Kubelet to manage `iptables`.\n\n## Rationale\n\nKubelets can automatically manage the required changes to `iptables` based on how you choose your networking options for the pods. It is recommended to let kubelets manage the changes to `iptables`. This ensures that the `iptables` configuration remains in sync with pods networking configuration. Manually configuring `iptables` with dynamic pod network configuration changes might hamper the communication between pods/containers and to the outside world. You might have `iptables` rules too restrictive or too open.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that if the `--make-iptables-util-chains` argument exists then it is set to true. If the `--make-iptables-util-chains` argument does not exist, and there is a Kubelet config file specified by `--config`, verify that the file does not set `makeIPTablesUtilChains` to `false`.\n\n## Remediation\n\nIf using a kubelet config file, edit the file to set `makeIPTablesUtilChains: true`. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and remove the `--make-iptables-util-chains` argument from the `KUBELET_SYSTEM_PODS_ARGS` variable. Based on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nKubelet would manage the `iptables` on the system and keep it in sync. If you are using any other `iptables` management solution, then there might be some conflicts.\n\n## Default value\n\nBy default, `--make-iptables-util-chains argument` is set to true.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.9 Limitation and Control of Network Ports, Protocols, and Services\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.7","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"f3g-zcg-jm0","createdAt":1599605004390,"name":"--make-iptables-util-chains argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.2","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSELinux is an effective and easy-to-use Linux application security system. It is available by default on some distributions such as Red Hat and Fedora.\n\n## Rationale\n\nSELinux provides a Mandatory Access Control (MAC) system that greatly augments the default Discretionary Access Control (DAC) model. You can therefore add an extra layer of safety to your containers by enabling SELinux on your Linux host.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: SecurityOpt={{ .HostConfig.SecurityOpt }}'` \n\nThis command returns all the security options currently configured on the containers listed.\n\n## Remediation\n\nIf SELinux is applicable for your Linux OS, you should use it.\n\n1. Set the SELinux State.\n2. Set the SELinux Policy.\n3. Create or import a SELinux policy template for Docker containers.\n4. Start Docker in daemon mode with SELinux enabled. For example: `docker daemon --selinux-enabled`\n5. Start your Docker container using the security options. For example, `docker run --interactive --tty --security-opt label=level:TopSecret centos /bin/bash`\n\n## Impact\n\nAny restrictions defined in the SELinux policy will be applied to your containers. It should be noted that if your SELinux policy is misconfigured, this may have an impact on the correct operation of the affected containers.\n\n## Default value\n\nBy default, no SELinux security options are applied on containers.\n\n## References\n\n1. https://docs.docker.com/engine/security/security/#other-kernel-security-features\n2. https://docs.docker.com/engine/reference/run/#security-configuration\n3. http://docs.fedoraproject.org/en-US/Fedora/13/html/Security-Enhanced_Linux/\n4. https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux_atomic_host/7/html/container_security_guide/docker_selinux_security_policy\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.2","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"eww-c9f-0hf","createdAt":1599605036108,"name":"SELinux security options are set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.26","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIf the container image does not have an HEALTHCHECK instruction defined, you should use the `--health-cmd` parameter at container runtime to check container health.\n\n## Rationale\n\nIf the container image you are using does not have a pre-defined HEALTHCHECK instruction, use the `--health-cmd` parameter to check container health at runtime. Based on the reported health status, remedial actions can be taken if necessary.\n\n## Audit\n\nRun this command and ensure that all containers are reporting their health status: `docker ps --quiet | xargs docker inspect --format '{{ .Id }}: Health={{ .State.Health.Status }}'`\n\n## Remediation\n\nYou should run the container using the `--health-cmd` parameter. For example, `docker run -d --health-cmd='stat /etc/passwd || exit 1' nginx`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, health checks are not carried out at container runtime.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#healthcheck\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.26","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.26\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ojg-sb1-nso","createdAt":1599605067593,"name":"Container health is checked at runtime"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","control:2.5","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEtcd should be configured for peer authentication.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be accessible only by authenticated etcd peers in the etcd cluster.\n\n## Audit\n\nThis recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable.\n\nRun the following command on the etcd server node: \n```\nps -ef | grep etcd\n```\nVerify that the `--peer-client-cert-auth` argument is set to `true`.  \n\n## Remediation\n\nEdit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and set the below parameter:\n\n```\n--peer-client-cert-auth=true\n```\n\n## Impact\n\nAll peers attempting to communicate with the etcd server will require a valid client certificate for authentication.\n\n## Default value\n\n*Note*: This recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable. By default, `--peer-client-cert-auth` argument is set to false.\n\n## References\n\n1. https://coreos.com/etcd/docs/latest/op-guide/security.html \n2. https://kubernetes.io/docs/admin/etcd/ \n3. https://coreos.com/etcd/docs/latest/op-guide/configuration.html#peer-client-cert-auth\n\n## CIS controls\n\nVersion 6.14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities. \n\nVersion 7.14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.                \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/ \n[3]: https://coreos.com/etcd/docs/latest/op-guide/configuration.html#peer-client-cert-auth\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.5","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"l01-5y2-miz","createdAt":1599605099307,"name":"--peer-client-cert-auth argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","requirement:Container-Images-and-Build-File-Configuration","framework:cis-docker","control:4.1","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nContainers should run as a non-root user.\n\n## Rationale\n\nIt is good practice to run the container as a non-root user, where possible. This can be done either via the USER directive in the Dockerfile or through [gosu][1] or similar where used as part of the CMD or ENTRYPOINT directives.\n\n## Remediation\n\nEnsure that the Dockerfile for each container image contains `USER <username or ID>`\n\nIn this case, the user name or ID refers to the user that was found in the container base image. If there is no specific user created in the container base image, then make use of the `useradd` command to add a specific user before the USER instruction in the Dockerfile. \n\nFor example, add the below lines in the Dockerfile to create a user in the container:\n`RUN useradd -d /home/username -m -s /bin/bash username USER username`\n\n**Note**: If there are users in the image that are not needed, you should consider deleting them. After deleting those users, commit the image and then generate new instances of the containers. Alternatively, if it is not possible to set the USER directive in the Dockerfile, a script running as part of the CMD or ENTRYPOINT sections of the Dockerfile should be used to ensure that the container process switches to a non-root user.\n\n## Impact\n\nRunning as a non-root user can present challenges when binding mount volumes from the underlying host. In this case, ensure that the user running the contained process can read and write to the bound directory, according to their requirements.\n\n## Default value\n\nBy default, containers are run with root privileges and also run as the root user inside the container.\n\n## References\n\n1. https://github.com/docker/docker/issues/2918\n2. https://github.com/docker/docker/pull/4572\n3. https://github.com/docker/docker/issues/7906\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://github.com/tianon/gosu\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"4.1","framework":"cis-docker","requirement":"Container-Images-and-Build-File-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-4.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"iml-sbn-bao","createdAt":1599605130883,"name":"A user for the container has been created"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Controller-Manager","control:1.3.6","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable kubelet server certificate rotation on controller-manager.\n\n## Rationale\n\n`RotateKubeletServerCertificate` causes the kubelet to both request a serving certificate after bootstrapping its client credentials and rotate the certificate as its existing credentials expire. This automated periodic rotation ensures that the there are no downtimes due to expired certificates and thus addressing availability in the CIA security triad. \n\n*Note*: This recommendation only applies if you let kubelets get their certificates from the API server. In case your kubelet certificates come from an outside authority/tool (e.g. Vault) then you need to take care of rotation yourself.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-controller-manager\n```\nVerify that `RotateKubeletServerCertificate` argument exists and is set to `true`.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and set the `--feature-gates` parameter to include `RotateKubeletServerCertificate=true`. \n\n```\n--feature-gates=RotateKubeletServerCe`rtificate=true\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `RotateKubeletServerCertificate` is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet-tls-bootstrapping/#approval-controller ][1]\n2. [https://github.com/kubernetes/features/issues/267 ][2]\n3. [https://github.com/kubernetes/kubernetes/pull/45059 ][3]\n4. [https://kubernetes.io/docs/admin/kube-controller-manager/][4]\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.               \n\n[1]: https://kubernetes.io/docs/admin/kubelet-tls-bootstrapping/#approval-controller \n[2]: https://github.com/kubernetes/features/issues/267 \n[3]: https://github.com/kubernetes/kubernetes/pull/45059 \n[4]: https://kubernetes.io/docs/admin/kube-controller-manager/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.6","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"asw-6hh-yc2","createdAt":1599605162809,"name":"RotateKubeletServerCertificate argument is set to true (Controller Manager)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.2","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the kubelet service file ownership is set to root:root.\n\n## Rationale\n\nThe kubelet service file controls various parameters that set the behavior of the kubelet service in the worker node. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %U:%G /etc/systemd/system/kubelet.service.d/10-kubeadm.conf`. Verify that the ownership is set to root:root.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the each worker node.\n\nFor example, `chown root:root /etc/systemd/system/kubelet.service.d/10-kubeadm.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, kubelet service file ownership is set to root:root.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#44-joining-your-nodes ][2]\n3. [https://kubernetes.io/docs/admin/kubeadm/#kubelet-drop-in][3]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#44-joining-your-nodes\n[3]: https://kubernetes.io/docs/admin/kubeadm/#kubelet-drop-in\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.2","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"sy4-z1k-udc","createdAt":1599605194356,"name":"Kubelet service file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.8","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that all the registry certificate files, usually found under `/etc/docker/certs.d/<registry-name> directory`, have permissions of 444 or are set more restrictively.\n\n## Rationale\n\nThe `/etc/docker/certs.d/<registry-name>` directory contains Docker registry certificates. These certificate files must have permissions of 444or more restrictive permissions in order to ensure that unprivileged users do not have full access to them..\n\n## Audit\n\nYou should execute the command below to verify that registry certificate files have permissions of 444+.\n\n```\nstat -c %a /etc/docker/certs.d/<registry-name>/*\n```\n\n## Remediation\n\nRun the following command: `chmod 444 /etc/docker/certs.d/<registry-name>/*`\n\nThis sets the permissions for the registry certificate files to 444.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for registry certificate files might not be 444. The default file permissions are governed by the system or user specific umask values which are defined within the operating system itself.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.8","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"sjq-1m3-njp","createdAt":1599605226177,"name":"Registry certificate file permissions are set to 444 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","source:compliance-agent","control:1.2.9","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nTurn on Role Based Access Control.\n\n## Rationale\n\nRole Based Access Control (RBAC) allows fine-grained control over the operations that different entities can perform on different objects in the cluster. It is recommended to use the RBAC authorization mode.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--authorization-mode` argument exists and is set to a value to include RBAC.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--authorization-mode` parameter to a value that includes RBAC, for example: `--authorization-mode=Node,RBAC`\n\n## Impact\n\nWhen RBAC is enabled you will need to ensure that appropriate RBAC settings (including Roles, RoleBindings and ClusterRoleBindings) are configured to allow appropriate access.\n\n## Default value\n\nBy default, RBAC authorization is not enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/reference/access-authn-authz/rbac/][1]\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.                \n\n[1]: https://kubernetes.io/docs/reference/access-authn-authz/rbac/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.9","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"bn4-mzo-nyg","createdAt":1599605257601,"name":"--authorization-mode argument includes RBAC"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","source:compliance-agent","control:1.1.18","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the controller-manager.conf file ownership is set to `root:root`.\n\n## Rationale\n\nThe controller-manager.conf file is the kubeconfig file for the Controller Manager. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/controller-manager.conf\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/controller-manager.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `controller-manager.conf` file ownership is set to `root:root`.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-controller-manager/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.18","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.18\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"bud-aya-umc","createdAt":1599605289575,"name":"controller-manager.conf file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","control:3.3","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the docker.socket file ownership and group ownership are correctly set to root.\n\n## Rationale\n\nThe docker.socket file contains sensitive parameters that may alter the behavior of the Docker remote API. For this reason, it should be owned and group owned by root in order to ensure that it is not modified by less privileged users.\n\n## Audit\n\n1. Locate the `docker.socket` file by running: \n    ```\n    systemctl show -p FragmentPath docker.socket\n    ```\n2. If the file does not exist, this recommendation is not applicable. If the file exists, verify that the file is owned and group-owned by root by running the following command with the correct filepath:\n    ```\n    stat -c %U:%G /usr/lib/systemd/system/docker.socket | grep -v root:root \n    ```\n    The command should not return a value.\n\n## Remediation\n\n1. Find out the file location: `systemctl show -p FragmentPath docker.socket`\n2. If the file does not exist, this recommendation is not applicable. If the file exists, execute the command below, including the correct file path to set the ownership and group ownership for the file to root. For example, `chown root:root /usr/lib/systemd/system/docker.socket`\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system. In that case, this recommendation is not applicable. By default, if the file is present, the ownership and group ownership for it should be set to root.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option 2. https://github.com/docker/docker-ce/blob/master/components/packaging/deb/systemd/docker.socket\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.3","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vc0-12t-fpa","createdAt":1599605321060,"name":"docker.socket file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.11","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable kubelet client certificate rotation.\n\n## Rationale\n\nThe `--rotate-certificates` setting causes the kubelet to rotate its client certificates by creating new CSRs as its existing credentials expire. This automated periodic rotation ensures that the there is no downtime due to expired certificates and thus addressing availability in the CIA security triad.\n\n*Note*: This recommendation only applies if you let kubelets get their certificates from the API server. In case your kubelet certificates come from an outside authority/tool (e.g. Vault) then you need to take care of rotation yourself. \n\n*Note*: This feature also requires the `RotateKubeletClientCertificate` feature gate to be enabled (which is the default since Kubernetes v1.7).\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--rotate-certificates` argument is not present, or is set to true. If the `--rotate-certificates` argument is not present, verify that if there is a Kubelet config file specified by `--config`, that file does not contain `rotateCertificates: false`.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to add the line `rotateCertificates: true` or remove it altogether to use the default value. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and remove the `--rotate-certificates=false` argument from the `KUBELET_CERTIFICATE_ARGS` variable. Based on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, kubelet client certificate rotation is enabled.\n\n## References\n\n1. [https://github.com/kubernetes/kubernetes/pull/41912 ][1]\n2. [https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-tls-bootstrapping/#kubelet-configuration ][2]\n3. [https://kubernetes.io/docs/imported/release/notes/ ][3]\n4. [https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/][4]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted - Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted.\n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n\n[1]: https://github.com/kubernetes/kubernetes/pull/41912\n[2]: https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-tls-bootstrapping/#kubelet-configuration\n[3]: https://kubernetes.io/docs/imported/release/notes/\n[4]: https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.11","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"9x3-sy5-pte","createdAt":1599605353070,"name":"--rotate-certificates argument is not set to false"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.13","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `admin.conf` file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe admin.conf is the administrator kubeconfig file defining various settings for the administration of the cluster. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/admin.conf\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/admin.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, admin.conf has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.13","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.13\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"zlc-pqm-t1x","createdAt":1599605384539,"name":"admin.conf file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.9","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that if the kubelet refers to a configuration file with the `--config` argument, that file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe kubelet reads various parameters, including security settings, from a config file specified by the `--config` argument. If this file is specified you should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nLocate the Kubelet config file as follows: `ps -ef | grep kubelet | grep config`. If the `--config` argument is present, this gives the location of the Kubelet config file, for example `/var/lib/kubelet/config.yaml`. Run the following command (using the file location you just identified) to find that file's permissions: `stat -c %a /var/lib/kubelet/config.yaml`. Verify that the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the following command (using the config file location identified in the Audit step:\n\n```\nchmod 644 /var/lib/kubelet/config.yaml\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `/var/lib/kubelet/config.yaml` file as set up by kubeadm has permissions of 644.\n\n## References\n\n1. [https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.9","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tc4-kmy-wlt","createdAt":1599605416397,"name":"Kubelet configuration file has permissions set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.15","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nReject creating objects in a namespace that is undergoing termination.\n\n## Rationale\n\nSetting admission control policy to NamespaceLifecycle ensures that objects cannot be created in non-existent namespaces, and that namespaces undergoing termination are not used for creating the new objects. This is recommended to enforce the integrity of the namespace termination process and also for the availability of the newer objects.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--disable-admission-plugins` argument is set to a value that does not include `NamespaceLifecycle`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --disable-admission-plugins parameter to ensure it does not include NamespaceLifecycle.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, NamespaceLifecycle is set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#namespacelifecycle\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.15","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.15\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"elk-zj3-p6m","createdAt":1599605447784,"name":"Admission control plugin NamespaceLifecycle is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:1.2.2","framework_version:1.5.1","scored:true","security:compliance","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use basic authentication.\n\n## Rationale\n\nBasic authentication uses plaintext credentials for authentication. Currently, the basic authentication credentials last indefinitely, and the password cannot be changed without restarting the API server. The basic authentication is currently supported for convenience. Hence, basic authentication should not be used.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--basic-auth-file` argument does not exist.\n\n## Remediation\n\nFollow the documentation and configure alternate mechanisms for authentication. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and remove the `--basic-auth-file=<filename>` parameter.\n\n## Impact\n\nYou will have to configure and use alternate authentication mechanisms such as tokens and certificates. Username and password for basic authentication could no longer be used.\n\n## Default value\n\nBy default, basic authentication is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n2. https://kubernetes.io/docs/admin/authentication/#static-password-file\n\n## CIS controls\n\nVersion 6\n\n16.14 Encrypt/Hash All Authentication Files And Monitor Their Access - Verify that all authentication files are encrypted or hashed and that these files cannot be accessed without root or administrator privileges. Audit all access to password files in the system.\n\nVersion 7\n\n16.4 Encrypt or Hash all Authentication Credentials - Encrypt or hash with a salt all authentication credentials when stored.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.2","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oug-uvq-sti","createdAt":1599605479472,"name":"--basic-auth-file argument is not set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.9","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nWhen the networking mode on a container is set to `--net=host`, the container is not placed inside a separate network stack. Effectively, applying this option instructs Docker to not containerize the container's networking. The consequence of this is that the container lives \"outside\" in the main Docker host and has full access to its network interfaces.\n\n## Rationale\n\nSelecting this option is potentially dangerous. It allows the container process to open reserved low numbered ports in the way that any other root process can. It also allows the container to access network services such as D-bus on the Docker host. A container process could potentially carry out undesired actions, such as shutting down the Docker host. This option should not be used unless there is a very specific reason for enabling it.\n\n## Audit\n\nUse this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: NetworkMode={{ .HostConfig.NetworkMode }}'` If this returns `NetworkMode=host`, it means that the `--net=host` option was passed when the container was started.\n\n## Remediation\n\nYou should not pass the --net=host option when starting any container.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, containers connect to the Docker bridge when starting and do not run in the context of the host's network stack.\n\n## References\n\n1. https://docs.docker.com/engine/userguide/networking/ 2. https://docs.docker.com/engine/reference/run/#network-settings\n\n## CIS controls\n\nVersion 6 12 Boundary Defense Boundary Defense\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.9","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"1qj-oqa-jau","createdAt":1599605510860,"name":"Host's network namespace is not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.24","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nRetain 10 or an appropriate number of old log files.\n\n## Rationale\n\nKubernetes automatically rotates the log files. Retaining old log files ensures that you would have sufficient log data available for carrying out any investigation or correlation. For example, if you have set file size of 100 MB and the number of old log files to keep as 10, you would approximate have 1 GB of log data that you could potentially use for your analysis.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-log-maxbackup` argument is set to `10` or as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--audit-log-maxbackup` parameter to `10` or to an appropriate value: `--audit-log-maxbackup=10`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, auditing is not enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://kubernetes.io/docs/concepts/cluster-administration/audit/ \n3. https://github.com/kubernetes/features/issues/22\n\n## CIS controls\n\nVersion 6 6.3 Ensure Audit Logging Systems Are Not Subject To Loss (i.e. rotation/archive) Ensure that all systems that store logs have adequate storage space for the logs generated on a regular basis, so that log files will not fill up between log rotation intervals. The logs must be archived and digitally signed on a periodic basis. Version 7 6.4 Ensure adequate storage for logs Ensure that all systems that store logs have adequate storage space for the logs generated.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.24","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.24\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"r0g-aai-2xf","createdAt":1599605542630,"name":"--audit-log-maxbackup argument is set to 10 or as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.15","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker socket file is owned by root and group owned by docker.\n\n## Rationale\n\nThe Docker daemon runs as root. The default Unix socket therefore must be owned by root. If any other user or process owns this socket, it might be possible for that non-privileged user or process to interact with the Docker daemon. Additionally, in this case a non-privileged user or process might be able to interact with containers which is neither a secure nor desired behavior. Additionally, the Docker installer creates a Unix group called docker. You can add users to this group, and in this case, those users would be able to read and write to the default Docker Unix socket. The membership of the docker group is tightly controlled by the system administrator. However, ff any other group owns this socket, then it might be possible for members of that group to interact with the Docker daemon. Such a group might not be as tightly controlled as the docker group. Again, this is not in line with good security practice. For these reason, the default Docker Unix socket file should be owned by root and group owned by docker to maintain the integrity of the socket file.\n\n## Audit\n\nVerify that the Docker socket file is owned by root and group-owned by `docker` by running: \n```\nstat -c %U:%G /var/run/docker.sock | grep -v root:docker\n```\nThe command should return no results.\n\n## Remediation\n\nRun the following command: `chown root:docker /var/run/docker.sock`\n\nThis sets the ownership to root and group ownership to docker for the default Docker socket file.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the ownership and group ownership for the Docker socket file is correctly set to root:docker.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option\n2. https://docs.docker.com/engine/reference/commandline/dockerd/#bind-docker-to-another-hostport-or-a-unix-socket\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.15","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.15\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ysh-lkt-poz","createdAt":1599605574088,"name":"Docker socket file ownership is set to root:docker"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.7","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `/etc/kubernetes/manifests/etcd.yaml` file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` controls various parameters that set the behavior of the etcd service in the master node. etcd is a highly-available key-value store which Kubernetes uses for persistent storage of all of its REST API object. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/manifests/etcd.yaml\n```\n\nVerify the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/manifests/etcd.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `/etc/kubernetes/manifests/etcd.yaml` file has permissions of 640.\n\n## References\n\n1. https://coreos.com/etcd\n2. https://kubernetes.io/docs/admin/etcd/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.7","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vqc-dps-6tp","createdAt":1599605605880,"name":"etcd pod specification file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.11","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/usr/bin/containerd`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `/usr/bin/containerd`, so it should be audited.\n\n## Audit\n\nVerify that there is an audit rule corresponding to the `/usr/bin/containerd` file. To display the rule for the `/usr/bin/containerd` file, run: \n\n```\nauditctl -l | grep /usr/bin/containerd\n```\n\n## Remediation\n\nYou should add a rule for the `/usr/bin/containerd` file. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /usr/bin/containerd -k docker \n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `/usr/bin/containerd` may not be present on the system and in that case, this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n2. [https://github.com/docker/docker/pull/20662][2]\n3. [https://containerd.tools/][3]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html \n[2]: https://github.com/docker/docker/pull/20662 \n[3]: https://containerd.tools/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.11","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tor-6yx-oyz","createdAt":1599605637503,"name":"/usr/bin/containerd auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.32","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\netcd should be configured to make use of TLS encryption for client connections.\n\n## Rationale\n\netcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be protected by client authentication. This requires the API server to identify itself to the etcd server using a SSL Certificate Authority file.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--etcd-cafile` argument exists and it is set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection between the apiserver and etcd. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the etcd certificate authority file parameter: `--etcd-cafile=<path/to/ca-file>`\n\n## Impact\n\nTLS and client certificate authentication must be configured for etcd.\n\n## Default value\n\nBy default, `--etcd-cafile` is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://coreos.com/etcd/docs/latest/op-guide/security.html\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.32","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.32\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"o8k-9hv-rri","createdAt":1599605669411,"name":"--etcd-cafile argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.23","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nRetain the logs for at least 30 days or as appropriate.\n\n## Rationale\n\nRetaining logs for at least 30 days ensures that you can go back in time and investigate or correlate any events. Set your audit log retention period to 30 days or as per your business requirements.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-log-maxage` argument is set to `30` or as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--audit-log-maxage` parameter to `30` or as an appropriate number of days: `--audit-log-maxage=30`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, auditing is not enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://kubernetes.io/docs/concepts/cluster-administration/audit/ \n3. https://github.com/kubernetes/features/issues/22\n\n## CIS controls\n\nVersion 6 6.3 Ensure Audit Logging Systems Are Not Subject To Loss (i.e. rotation/archive) Ensure that all systems that store logs have adequate storage space for the logs generated on a regular basis, so that log files will not fill up between log rotation intervals. The logs must be archived and digitally signed on a periodic basis. Version 7 6.4 Ensure adequate storage for logs Ensure that all systems that store logs have adequate storage space for the logs generated.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.23","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.23\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"jbu-o8v-pku","createdAt":1599605700813,"name":"--audit-log-maxage argument is set to 30 or as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.5","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable certificate based kubelet authentication.\n\n## Rationale\n\nThe apiserver, by default, does not authenticate itself to the kubelet's HTTPS endpoints. The requests from the apiserver are treated anonymously. You should set up certificate-based kubelet authentication to ensure that the apiserver authenticates itself to kubelets when submitting requests.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--kubelet-client-certificate` and `--kubelet-client-key` arguments exist and they are set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection between the apiserver and kubelets. Then, edit API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the kubelet client certificate and key parameters as below. \n\n```\n--kubelet-client-certificate=<path/to/client-certificate-file> \n--kubelet-client-key=<path/to/client-key-file>\n```\n\n## Impact\n\nYou require TLS to be configured on apiserver as well as kubelets.\n\n## Default value\n\nBy default, certificate-based kubelet authentication is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-apiserver/ ][1]\n2. [https://kubernetes.io/docs/admin/kubelet-authentication-authorization/ ][2]\n3. [https://kubernetes.io/docs/concepts/cluster-administration/master-node-communication/#apiserver---kubelet][3]\n\n## CIS controls\n\nVersion 6.3.4 Use Only Secure Channels For Remote System Administration - Perform all remote administration of servers, workstation, network devices, and similar equipment over secure channels. Protocols such as telnet, VNC, RDP, or others that do not actively support strong encryption should only be used if they are performed over a secondary encryption channel, such as SSL, TLS or IPSEC. \n\nVersion 7.4.5 Use Multifactor Authentication For All Administrative Access - Use multi-factor authentication and encrypted channels for all administrative account access. \n\n[1]: https://kubernetes.io/docs/admin/kube-apiserver/ \n[2]: https://kubernetes.io/docs/admin/kubelet-authentication-authorization/ \n[3]: https://kubernetes.io/docs/concepts/cluster-administration/master-node-communication/#apiserver---kubelet\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.5","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ruj-lze-13b","createdAt":1599605732980,"name":"--kubelet-client-certificate and --kubelet-client-key arguments are set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","control:1.2.6","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit the `docker.service` if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `docker.service`. The `docker.service` file might be present if the daemon parameters have been changed by an administrator. If so, it holds various parameters for the Docker daemon and should be audited.\n\n## Audit\n\n1. Locate the `docker.service` file by running: \n    ```\n    systemctl show -p FragmentPath docker.service\n    ```\n\n2. If the file does not exist, this recommendation does not apply. If the file does exist, verify that there is an audit rule corresponding to the `docker.service` file by running: \n\n    ```\n    auditctl -l | grep docker.service\n    ```\n\n## Remediation\n\nIf the file exists, a rule for it should be added. For example, add the following line to the `/etc/audit/audit.rules` file: \n```\n-w /usr/lib/systemd/system/docker.service -k docker \n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `docker.service` may not be present on the system.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.6","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"myy-dsj-omk","createdAt":1599605764788,"name":"docker.service auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","source:compliance-agent","control:1.2.19","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not bind to insecure port.\n\n## Rationale\n\nSetting up the apiserver to serve on an insecure port would allow unauthenticated and unencrypted access to your master node. This would allow attackers who could access this port, to easily take control of the cluster.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--insecure-port` argument is set to `0`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the below parameter. --insecure-port=0\n\n## Impact\n\nAll components that use the API must connect via the secured port, authenticate themselves, and be authorized to use the API. This includes: kube-controller-manager kube-proxy kube-scheduler kubelets\n\n## Default value\n\nBy default, the insecure port is set to 8080.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6 9.1 Limit Open Ports, Protocols, and Services Ensure that only ports, protocols, and services with validated business needs are running on each system. Version 7 9.2 Ensure Only Approved Ports, Protocols and Services Are Running Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.19","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.19\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"2ci-yqv-wv0","createdAt":1599605796539,"name":"--insecure-port argument is set to 0"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.10","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that if the kubelet refers to a configuration file with the `--config` argument, that file is owned by root:root.\n\n## Rationale\n\nThe kubelet reads various parameters, including security settings, from a config file specified by the `--config` argument. If this file is specified you should restrict its file permissions to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nLocate the Kubelet config file as follows: `ps -ef | grep kubelet | grep config`. If the `--config` argument is present, this gives the location of the Kubelet config file, for example `/var/lib/kubelet/config.yaml`. Run the following command (using the file location you just identified) to find that file's permissions: `stat -c %U:%G /var/lib/kubelet/config.yaml`. Verify that the ownership is set to `root:root`.\n\n## Remediation\n\nRun the following command (using the config file location identified in the Audit step): `chown root:root /etc/kubernetes/kubelet.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `/var/lib/kubelet/config.yaml` file as set up by kubeadm is owned by `root:root`.\n\n## References\n\n1. [https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.10","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ptl-pla-t0c","createdAt":1599605828233,"name":"Kubelet configuration file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.10","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy default, all containers on a Docker host share resources equally. By using the resource management capabilities of the Docker host, you can control the amount of memory that a container is able to use.\n\n## Rationale\n\nBy default a container can use all of the memory on the host. You can use memory limit mechanisms to prevent a denial of service occurring where one container consumes all of the hosts resources and other containers on the same host are therefore not able to function. Having no limit on memory usage can lead to issues where one container can easily make the whole system unstable and as a result unusable.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Memory={{ .HostConfig.Memory }}'` \n\nIf this command returns 0, it means that memory limits are not in place; if it returns a non-zero value, it means that they are in place.\n\n## Remediation\n\nYou should run the container with only as much memory as it requires by using the `--memory argument`. For example, you could run a container using the command `docker run --interactive --tty --memory 256m centos /bin/bash`\n\nIn this example, the container is started with a memory limit of 256 MB. Note that the output of the command below returns values in scientific notation if memory limits are in place. `docker inspect --format='{{.Config.Memory}}' 7c5a2d4c7fe0`\n\nFor example, if the memory limit is set to 256 MB for a container instance, the output of the command above would be `2.68435456e+08` and NOT `256m`. You should convert this value using a scientific calculator.\n\n## Impact\n\nIf correct memory limits are not set on each container, one process can expand its usage and cause other containers to run out of resources.\n\n## Default value\n\nBy default, all containers on a Docker host share their resources equally and no memory limits are enforced.\n\n## References\n\n1. https://goldmann.pl/blog/2014/09/11/resource-management-in-docker/\n2. https://docs.docker.com/engine/reference/commandline/run/#options\n3. https://docs.docker.com/engine/admin/runmetrics/\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.10","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ecn-mmt-tqe","createdAt":1599605860081,"name":"Memory usage for containers is limited"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","source:compliance-agent","control:2.2","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable client authentication on etcd service.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should not be available to unauthenticated clients. You should enable the client authentication via valid certificates to secure the access to the etcd service.\n\n## Audit\n\nRun the following command on the etcd server node:\n```\nps -ef | grep etcd\n```\nVerify that the `--client-cert-auth` argument is set to `true`.\n\n## Remediation\n\nEdit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and set the below parameter:\n\n```\n--client-cert-auth=\"true\"\n```\n\n## Impact\n\nAll clients attempting to access the etcd server will require a valid client certificate.\n\n## Default value\n\nBy default, the etcd service can be queried by unauthenticated clients.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][`]\n2. [https://kubernetes.io/docs/admin/etcd/ ][1]\n3. [https://coreos.com/etcd/docs/latest/op-guide/configuration.html#client-cert-auth][2]\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges                \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/ \n[3]: https://coreos.com/etcd/docs/latest/op-guide/configuration.html#client-cert-auth\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.2","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"joa-fjx-1li","createdAt":1599605891818,"name":"--client-cert-auth argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.3","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy default, Docker starts containers with a restricted set of Linux kernel capabilities. This means that any process can be granted the required capabilities instead of giving it root access. Using Linux kernel capabilities, processes in general do not need to run as the root user.\n\n## Rationale\n\nDocker supports the addition and removal of capabilities. Remove all capabilities not required for the correct function of the container. Specifically, in the default capability set provided by Docker, the NET_RAW capability should be removed if not explicitly required, as it can give an attacker with access to a container the ability to create spoofed network traffic.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CapAdd={{ .HostConfig.CapAdd }} CapDrop={{ .HostConfig.CapDrop }}'` \n\nVerify that the added and deleted Linux kernel capabilities are in line with the ones needed by the container process in each container instance. Specifically, ensure that the `NET_RAW` capability is removed if not required.\n\n## Remediation\n\nExecute the command `docker run --cap-add={\"Capability 1\",\"Capability 2\"} <Run arguments> <Container Image Name or ID> <Command>` to add required capabilities.\n\nExecute the command `docker run --cap-drop={\"Capability 1\",\"Capability 2\"} <Run arguments> <Container Image Name or ID> <Command>` to remove unneeded capabilities.\n\nAlternatively, remove all the currently configured capabilities and then restore only the ones you specifically use: `docker run --cap-drop=all --cap-add={\"Capability 1\",\"Capability 2\"} <Run arguments> <Container Image Name or ID> <Command>`\n\n## Impact\n\nRestrictions on processes within a container are based on which Linux capabilities are in force. Removal of the `NET_RAW` capability prevents the container from creating raw sockets which is good security practice under most circumstances, but may affect some networking utilities.\n\n## Default value\n\nBy default, the capabilities below are applied to containers:\n\n* `AUDIT_WRITE`\n* `CHOWN`\n* `DAC_OVERRIDE`\n* `FOWNER`\n* `FSETID`\n* `KILL`\n* `MKNOD`\n* `NET_BIND_SERVICE`\n* `NET_RAW`\n* `SETFCAP`\n* `SETGID`\n* `SETPCAP`\n* `SETUID`\n* `SYS_CHROOT`\n\n## References\n\n1. https://docs.docker.com/engine/security/security/#linux-kernel-capabilities\n2. http://man7.org/linux/man-pages/man7/capabilities.7.html\n3. http://www.oreilly.com/webops-perf/free/files/docker-security.pdf\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.3","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"3j5-bun-deq","createdAt":1599605923399,"name":"Linux kernel capabilities are restricted within containers"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.11","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy default, all containers on a Docker host share resources equally. By using the resource management capabilities of the Docker host you can control the host CPU resources that a container may consume.\n\n## Rationale\n\nBy default, CPU time is divided between containers equally. If you wish to control available CPU resources amongst container instances, you can use the CPU sharing feature. CPU sharing allows you to prioritize one container over others and prevents lower priority containers from absorbing CPU resources which may be required by other processes. This ensures that high priority containers are able to claim the CPU runtime they require.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CpuShares={{ .HostConfig.CpuShares }}'` \n\nIf this command returns 0 or 1024, it means that CPU shares are not in place. If it returns a non-zero value other than 1024, it means that they are in place.\n\n## Remediation\n\nYou should manage the CPU runtime between your containers dependent on their priority within your organization. To do so, start the container using the `--cpu-shares` argument. For example, you could run a container as `docker run --interactive --tty --cpu-shares 512 centos /bin/bash` The container is started with CPU shares of 50% of what other containers use. So if the other container has CPU shares of 80%, this container will have CPU shares of 40%. Every new container will have 1024 shares of CPU by default. However, this value is shown as 0 if you run the command mentioned in the audit section.\n\n\nAlternatively:\n\n1. Navigate to the `/sys/fs/cgroup/cpu/system.slice/` directory.\n2. Check your container instance ID using docker ps.\n3. Inside the above directory (in step 1), call a directory. For example: `docker-<Instance ID>.scope` or `docker-4acae729e8659c6be696ee35b2237cc1fe4edd2672e9186434c5116e1a6fbed6.scope`. Navigate to this directory.\n4. You will find a file named `cpu.shares`. Execute `cat cpu.shares`. This will always give you the CPU share value based on the system. Even if there are no CPU shares configured using the `-c` or `--cpu-shares` argument in the docker run command, this file will have a value of 1024. If you set one containers CPU shares to 512 it will receive half of the CPU time compared to the other containers. So if you take 1024 as 100% you can then derive the number that you should set for respective CPU shares. For example, use 512 if you want to set it to 50% and 256 if you want to set it 25%.\n\n## Impact\n\nIf you do not correctly assign CPU thresholds, the container process may run out of resources and become unresponsive. If CPU resources on the host are not constrained, CPU shares do not place any restrictions on individual resources.\n\n## Default value\n\nBy default, all containers on a Docker host share their resources equally. No CPU shares are enforced.\n\n## References\n\n1. https://goldmann.pl/blog/2014/09/11/resource-management-in-docker/\n2. https://docs.docker.com/engine/reference/commandline/run/#options\n3. https://docs.docker.com/engine/admin/runmetrics/\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.11","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"gfh-gqy-log","createdAt":1599605955638,"name":"CPU priority is set appropriately on containers"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.20","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUTS namespaces provide isolation between two system identifiers: the hostname and the NIS domain name. It is used to set the hostname and the domain which are visible to running processes in that namespace. Processes running within containers do not typically require to know either the hostname or the domain name. The UTS namespace should therefore not be shared with the host.\n\n## Rationale\n\nSharing the UTS namespace with the host provides full permission for each container to change the hostname of the host. This is not in line with good security practice and should not be permitted.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: UTSMode={{ .HostConfig.UTSMode }}'` \n\nIf this command returns `host`, it means the host UTS namespace is shared with the container and this recommendation is non-compliant. If the above command returns nothing, then the host's UTS namespace is not shared. This recommendation is then compliant.\n\n## Remediation\n\nYou should not start a container with the `--uts=host` argument. For example, do not start a container using the command `docker run --rm --interactive --tty --uts=host rhel7.2`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, all containers have the UTS namespace enabled and the host UTS namespace is not shared with any containers.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#uts-settings-uts\n2. http://man7.org/linux/man-pages/man7/namespaces.7.html\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.20","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.20\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"j1n-gsx-mlx","createdAt":1599605987292,"name":"Host's UTS namespace is not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","control:2.3","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use self-signed certificates for TLS.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should not be available to unauthenticated clients. You should enable the client authentication via valid certificates to secure the access to the etcd service.\n\n## Audit\n\nRun the following command on the etcd server node: \n```\nps -ef | grep etcd\n```\nVerify that if the `--auto-tls` argument exists, it is not set to `true`.\n\n## Remediation\n\nEdit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and either remove the `--auto-tls` parameter or set it to false:\n\n```\n--auto-tls=false\n```\n\n## Impact\n\nClients will not be able to use self-signed certificates for TLS.\n\n## Default value\n\nBy default, `--auto-tls` is set to false.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][1]\n2. [https://kubernetes.io/docs/admin/etcd/ ][2]\n3. [https://coreos.com/etcd/docs/latest/op-guide/configuration.html#auto-tls][3]\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. Version 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.                \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/ \n[3]: https://coreos.com/etcd/docs/latest/op-guide/configuration.html#auto-tls\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.3","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qai-h9s-xgt","createdAt":1599606018741,"name":"--auto-tls argument is not set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.1","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable anonymous requests to the Kubelet server.\n\n## Rationale\n\nWhen enabled, requests that are not rejected by other configured authentication methods are treated as anonymous requests. These requests are then served by the Kubelet server. You should rely on authentication to authorize access and disallow anonymous requests.\n\n## Audit\n\nIf using a Kubelet configuration file, check that there is an entry for authentication: anonymous: enabled set to false. Run the following command on each node: `ps -ef | grep kubelet`. Verify that the `--anonymous-auth` argument is set to false. This executable argument may be omitted, provided there is a corresponding entry set to false in the Kubelet config file.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `authentication: anonymous: enabled` to false. If using executable arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_SYSTEM_PODS_ARGS` variable:\n\n```\n--anonymous-auth=false\n```\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nAnonymous requests will be rejected.\n\n## Default value\n\nBy default, anonymous access is enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authentication][2]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.14 Controlled Access Based on the Need to Know\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authentication\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.1","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oun-uxo-viy","createdAt":1599606050277,"name":"Anonymous-auth argument is set to false"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.18","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not bind the insecure API service.\n\n## Rationale\n\nIf you bind the apiserver to an insecure address, basically anyone who could connect to it over the insecure port, would have unauthenticated and unencrypted access to your master node. The apiserver doesn't do any authentication checking for insecure binds and traffic to the Insecure API port is not encrpyted, allowing attackers to potentially read sensitive data in transit.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--insecure-bind-address` argument does not exist.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and remove the --insecure-bind-address parameter.\n\n## Impact\n\nConnections to the API server will require valid authentication credentials.\n\n## Default value\n\nBy default, the insecure bind address is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6 9.1 Limit Open Ports, Protocols, and Services Ensure that only ports, protocols, and services with validated business needs are running on each system. Version 7 9.2 Ensure Only Approved Ports, Protocols and Services Are Running Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.18","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.18\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tzo-x3g-yya","createdAt":1599606081666,"name":"--insecure-bind-address argument is not set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.29","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\netcd should be configured to make use of TLS encryption for client connections.\n\n## Rationale\n\netcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be protected by client authentication. This requires the API server to identify itself to the etcd server using a client certificate and key.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--etcd-certfile` and `--etcd-keyfile` arguments exist and they are set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection between the apiserver and etcd. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the etcd certificate and key file parameters. \n```\n--etcd-certfile=<path/to/client-certificate-file> \n--etcd-keyfile=<path/to/client-key-file>\n```\n\n## Impact\n\nTLS and client certificate authentication must be configured for etcd.\n\n## Default value\n\nBy default, `--etcd-certfile` and `--etcd-keyfile` arguments are not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://coreos.com/etcd/docs/latest/op-guide/security.html\n\n## CIS controls\n\nVersion 6 9 Limitation and Control of Network Ports, Protocols, and Services\nVersion 7 9 Limitation and Control of Network Ports, Protocols, and Services\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.29","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.29\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"2xl-vuo-tud","createdAt":1599606113167,"name":"--etcd-certfile and --etcd-keyfile arguments are set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.9","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the TLS CA certificate file, the file that is passed along with the `--tlscacert parameter`, is individually owned and group owned by root.\n\n## Rationale\n\nThe TLS CA certificate file should be protected from any tampering. It is used to authenticate the Docker server based on a given CA certificate. It must be therefore be individually owned and group owned by root to ensure that it cannot be modified by less privileged users.\n\n## Audit\n\nYou should execute the command below to verify that the TLS CA certificate file is owned and group owned by root: \n\n```\nstat -c %U:%G <path to TLS CA certificate file> | grep -v root:root\n```\n\nThis command does not return any data.\n\n## Remediation\n\nRun the following command: `chown root:root <path to TLS CA certificate file>`\n\nThis sets the individual ownership and group ownership for the TLS CA certificate file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the ownership and group-ownership for TLS CA certificate file is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.9","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"8nb-ex2-pqe","createdAt":1602076303298,"name":"TLS CA certificate file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","source:compliance-agent","control:2.2"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSet Docker daemon log level to `info`.\n\n## Rationale\n\nSetting up an appropriate log level configures the Docker daemon to log events that you would want to review later. A base log level of `info` and above captures all logs except `debug` logs. Unless required, you should not run Docker daemon at `debug` log level.\n\n## Audit\n\nTo confirm that the log level setting is `info`, review both the `dockerd` startup options, and also the log level settings in `/etc/docker/daemon.json`. To review the `dockerd` startup options, run: \n```\nps -ef | grep dockerd \n```\nEnsure that either the `--log-level` parameter is not present or if present, that it is set to `info`. \n\nSimilarly, review the `/etc/docker/daemon.json` for the `log-level` setting.\n\n## Remediation\n\nEnsure that the Docker daemon configuration file has the following configuration included:\n\n```\n\"log-level\": \"info\" \n```\n\nAlternatively, run the Docker daemon with the `log-level` specified:\n\n```\ndockerd --log-level=\"info\"\n```\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, Docker daemon is set to log level of `info`.\n\n## References\n\n1. [https://docs.docker.com/edge/engine/reference/commandline/dockerd/][1]\n\n## CIS controls\n\nVersion 6.6.2 Ensure Audit Log Settings Support Appropriate Log Entry Formatting - Validate audit log settings for each hardware device and the software installed on it, ensuring that logs include a date, timestamp, source addresses, destination addresses, and various other useful elements of each packet and/or transaction. Systems should record logs in a standardized format such as syslog entries or those outlined by the Common Event Expression initiative. If systems cannot generate logs in a standardized format, log normalization tools can be deployed to convert logs into such a format. \n\nVersion 7.6.2 Activate audit logging - Ensure that local logging has been enabled on all systems and networking devices. \n\nVersion 6.3 Enable Detailed Logging - Enable system logging to include detailed information such as an event source, date, user, timestamp, source addresses, destination addresses, and other useful elements.                \n\n[1]: https://docs.docker.com/edge/engine/reference/commandline/dockerd/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.2","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"q6o-wrf-hf4","createdAt":1602076723155,"name":"Logging level is set to 'info'"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.10","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the TLS CA certificate file, the file that is passed along with the `--tlscacert` parameter, has permissions of 444 or is set more restrictively.\n\n## Rationale\n\nThe TLS CA certificate file should be protected from any tampering. It is used to authenticate the Docker server based on a given CA certificate. It must therefore have permissions of 444, or more restrictive permissions to ensure that the file cannot be modified by a less privileged user.\n\n## Audit\n\nVerify that the TLS CA certificate file has permissions of `444` or more restrictive, by running: \n```\nstat -c %a <path to TLS CA certificate file>\n```\n\n## Remediation\n\nRun the following command: `chmod 444 <path to TLS CA certificate file>`\n\nThis sets the file permissions on the TLS CA file to 444.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for the TLS CA certificate file might not be 444. The default file permissions are governed by the operating system or user specific umask values.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.10","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"hyd-ar9-kzl","createdAt":1602076723625,"name":"TLS CA certificate file permissions are set to 444 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.12","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker server certificate file, the file that is passed along with the `--tlscert` parameter, has permissions of 444 or more restrictive permissions.\n\n## Rationale\n\nThe Docker server certificate file should be protected from any tampering. It is used to authenticate the Docker server based on the given server certificate. It should therefore have permissions of 444 to prevent its modification.\n\n## Audit\n\nVerify that the Docker server certificate file has permissions of `444` or more restrictive, by running: \n```\nstat -c %a <path to Docker server certificate file>\n```\n\n## Remediation\n\nRun the command below: `chmod 444 <path to Docker server certificate file>`\n\nThis sets the file permissions of the Docker server certificate file to 444.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for the Docker server certificate file might not be 444. The default file permissions are governed by the operating system or user specific umask values.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.12","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"blu-k6b-re1","createdAt":1602076770300,"name":"Docker server certificate file permissions are set to 444 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.1","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAll Docker containers and their data and metadata are stored in the `/var/lib/docker` directory. By default, `/var/lib/docker` should be mounted under either the `/` or `/var` partitions depending on how the Linux operating system in use is configured.\n\n## Rationale\n\nDocker depends on `/var/lib/docker` as the default directory where all Docker related files, including the images, are stored. This directory could fill up quickly causing both Docker and the host to become unusable. For this reason, you should create a separate partition (logical volume) for storing Docker files.\n\n## Audit\n\nTo see the partition details for the `/var/lib/docker` mount point, at the Docker host run:\n\n```\ngrep '/var/lib/docker\\s' /proc/mounts \n```\n\nAlternatively, to see whether the configured root directory is a mount point, run.\n\n```\nmountpoint -- \"$(docker info -f '{{ .DockerRootDir }}')\" \n```\n\n## Remediation\n\nFor new installations, you should create a separate partition for the `/var/lib/docker` mount point. For systems that have already been installed, you should use the Logical Volume Manager (LVM) within Linux to create a new partition.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, `/var/lib/docker` is mounted under the `/` or `/var` partitions dependent on how the OS is configured.\n\n## References\n\n1. [https://www.projectatomic.io/docs/docker-storage-recommendation/][1]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know                \n\n[1]: https://www.projectatomic.io/docs/docker-storage-recommendation/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.1","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"wcf-c0t-fkz","createdAt":1602076808377,"name":"A separate partition for containers has been created"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:3.14","security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker server certificate key file, the file that is passed along with the `--tlskey` parameter, has permissions of 400.\n\n## Rationale\n\nThe Docker server certificate key file should be protected from any tampering or unneeded reads. It holds the private key for the Docker server certificate. It must therefore have permissions of 400 to ensure that the certificate key file is not modified.\n\n## Audit\n\nVerify that the Docker server certificate key file has permissions of `400` by running: \n```\nstat -c %a <path to Docker server certificate key file>\n```\n\n## Remediation\n\nYou should execute the following command: `chmod 400 <path to Docker server certificate key file>`\n\nThis sets the Docker server certificate key file permissions to 400.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for the Docker server certificate key file might not be 400. The default file permissions are governed by the operating system or user specific umask values.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.14","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.14\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"z0n-cod-mxi","createdAt":1602077570102,"name":"Docker server certificate key file permissions are set to 400"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:2.6","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIt is possible to make the Docker daemon available remotely over a TCP port. If this is required, you should ensure that TLS authentication is configured in order to restrict access to the Docker daemon via IP address and port.\n\n## Rationale\n\nBy default, the Docker daemon binds to a non-networked Unix socket and runs with root privileges. If you change the default Docker daemon binding to a TCP port or any other Unix socket, anyone with access to that port or socket could have full access to the Docker daemon and therefore in turn to the host system. For this reason, you should not bind the Docker daemon to another IP/port or a Unix socket. If you must expose the Docker daemon via a network socket, you should configure TLS authentication for the daemon and for any Docker Swarm APIs (if they are in use). This type of configuration restricts the connections to your Docker daemon over the network to a limited number of clients who have access to the TLS client credentials.\n\n## Audit\n\nTo confirm that the TLS authentication setting is correct, review the `dockerd` startup options and the settings in `/etc/docker/daemon.json`. To review the `dockerd` startup options, run: \n```\nps -ef | grep dockerd \n```\nConfirm that the following parameters are present: `--tlsverify --tlscacert --tlscert --tlskey`.\n\nAlso review the `/etc/docker/daemon.json` file to ensure these settings are in place.\n\n## Remediation\n\nFollow the steps mentioned in the Docker documentation or other references.\n\n## Impact\n\nYou would need to manage and guard certificates and keys for the Docker daemon and Docker clients.\n\n## Default value\n\nBy default, TLS authentication is not configured.\n\n## References\n\n1. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system.\n\nVersion 7\n\n9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.6","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"rh4-jeh-afu","createdAt":1602077571799,"name":"TLS authentication for Docker daemon is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:3.13","security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker server certificate key file, the file that is passed along with the `--tlskey` parameter, is individually owned and group owned by root.\n\n## Rationale\n\nThe Docker server certificate key file should be protected from any tampering or unneeded reads/writes. As it holds the private key for the Docker server certificate, it must be individually owned and group owned by root to ensure that it cannot be accessed by less privileged users.\n\n## Audit\n\nVerify that the Docker server certificate key file is individually owned and group-owned by root, by running: \n```\nstat -c %U:%G <path to Docker server certificate key file> | grep -v root:root \n```\nThe command should return no results.\n\n## Remediation\n\nRun the following command: `chown root:root <path to Docker server certificate key file>`\n\nThis sets the individual ownership and group ownership for the Docker server certificate key file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the individual ownership and group ownership for the Docker server certificate key file is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.13","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.13\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oiu-e3x-yg6","createdAt":1602077710804,"name":"Docker server certificate key file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.11","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker server certificate file, the file that is passed along with the `--tlscert` parameter, is individual owned and group owned by root.\n\n## Rationale\n\nThe Docker server certificate file should be protected from any tampering. It is used to authenticate the Docker server based on the given server certificate. It must therefore be individually owned and group owned by root to prevent modification by less privileged users.\n\n## Audit\n\nVerify that the Docker server certificate file is individually owned and group-owned by root, by running: \n```\nstat -c %U:%G <path to Docker server certificate file> | grep -v root:root\n```\nThe command should return no results.\n\n## Remediation\n\nRun the following command: `chown root:root <path to Docker server certificate file>`\n\nThis sets the individual ownership and the group ownership for the Docker server certificate file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the ownership and group-ownership for Docker server certificate file is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.11","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tkm-izb-xe1","createdAt":1602077837917,"name":"Docker server certificate file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Network-Policies-and-CNI","control:5.3.2","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUse network policies to isolate traffic in your cluster network.\n\n## Rationale\n\nRunning different applications on the same Kubernetes cluster creates a risk of one compromised application attacking a neighboring application. Network segmentation is important to ensure that containers can communicate only with those they are supposed to. A network policy is a specification of how selections of pods are allowed to communicate with each other and other network endpoints. Network Policies are namespace scoped. When a network policy is introduced to a given namespace, all traffic not allowed by the policy is denied. However, if there are no network policies in a namespace, all traffic will be allowed into and out of the pods in that namespace.\n\n## Audit\n\nRun the following command and review the NetworkPolicy objects created in the cluster: `kubectl --all-namespaces get networkpolicy`\n\nEnsure that each namespace defined in the cluster has at least one Network Policy.\n\n## Remediation\n\nFollow the documentation and create network policy objects as you need them.\n\n## Impact\n\nOnce network policies are in use within a given namespace, traffic not explicitly allowed by a network policy will be denied. It is important to ensure that, when introducing network policies, legitimate traffic is not blocked.\n\n## Default value\n\nBy default, network policies are not created.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/services-networking/networkpolicies/ ][1]\n2. [https://octetz.com/posts/k8s-network-policy-apis ][2]\n3. [https://kubernetes.io/docs/tasks/configure-pod-container/declare-network-policy/][3]\n\n## CIS controls\n\nVersion 6.14.1 Implement Network Segmentation Based On Information Class Segment - The network based on the label or classification level of the information stored on the servers. Locate all sensitive information on separated VLANS with firewall filtering to ensure that only authorized individuals are only able to communicate with systems necessary to fulfill their specific responsibilities.\n\nVersion 7.14.1 Segment the Network Based on Sensitivity - Segment the network based on the label or classification level of the information stored on the servers, locate all sensitive information on separated Virtual Local Area Networks (VLANs).\n\nVersion 7.14.2 Enable Firewall Filtering Between VLANs - Enable firewall filtering between VLANs to ensure that only authorized systems are able to communicate with other systems necessary to fulfill their specific responsibilities.\n\n[1]: https://kubernetes.io/docs/concepts/services-networking/networkpolicies/\n[2]: https://octetz.com/posts/k8s-network-policy-apis\n[3]: https://kubernetes.io/docs/tasks/configure-pod-container/declare-network-policy/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.3.2","framework":"cis-kubernetes","requirement":"Network-Policies-and-CNI","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":5,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.3.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mrw-bae-anz","createdAt":1604312181303,"name":"All namespaces have network policies defined"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","requirement:RBAC-and-Service-Accounts","scored:true","security:compliance","control:5.1.5","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe default service account should not be used to ensure that rights granted to applications can be more easily audited and reviewed.\n\n## Rationale\n\nKubernetes provides a default service account which is used by cluster workloads where no specific service account is assigned to the pod. Where access to the Kubernetes API from a pod is required, a specific service account should be created for that pod, and rights granted to that service account. The default service account should be configured such that it does not provide a service account token and does not have any explicit rights assignments.\n\n## Audit\n\nFor each namespace in the cluster, review the rights assigned to the default service account and ensure that it has no roles or cluster roles bound to it apart from the defaults. Additionally ensure that the `automountServiceAccountToken: false` setting is in place for each default service account.\n\n## Remediation\n\nCreate explicit service accounts wherever a Kubernetes workload requires specific access to the Kubernetes API server. Modify the configuration of each default service account to include this value `automountServiceAccountToken: false`.\n\n## Impact\n\nAll workloads which require access to the Kubernetes API will require an explicit service account to be created.\n\n## Default value\n\nBy default the default service account allows for its service account token to be mounted in pods in its namespace.\n\n## References\n\n1. [https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/][1]\n\n## CIS controls\n\nNone\n\n[1]: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.1.5","framework":"cis-kubernetes","requirement":"RBAC-and-Service-Accounts","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.1.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"3yv-aqm-bxc","createdAt":1604312204438,"name":"Default service accounts are not actively used"}]}
    headers:
      Content-Type:
      - application/json
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=2&page%5Bsize%5D=100
    method: GET
  response:
    body: |
      {"meta":{"page":{"total_filtered_count":0,"total_count":152}},"data":[]}
    headers:
      Content-Type:
      - application/json
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=0&page%5Bsize%5D=100
    method: GET
  response:
    body: |
      {"meta":{"page":{"total_filtered_count":100,"total_count":152}},"data":[{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Controller-Manager","control:1.3.5","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAllow pods to verify the API server's serving certificate before establishing connections.\n\n## Rationale\n\nProcesses running within pods that need to contact the API server must verify the API server's serving certificate. Failing to do so could be a subject to man-in-the-middle attacks. Providing the root certificate for the API server's serving certificate to the controller manager with the `--root-ca-file` argument allows the controller manager to inject the trusted bundle into pods so that they can verify TLS connections to the API server.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--root-ca-file` argument exists and is set to a certificate bundle file containing the root certificate for the API server's serving certificate.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and set the `--root-ca-file` parameter to the certificate bundle file: `--root-ca-file=<path/to/file>`\n\n## Impact\n\nYou need to setup and maintain root certificate authority file.\n\n## Default value\n\nBy default, `--root-ca-file` is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-controller-manager/ ][1]\n2. [https://github.com/kubernetes/kubernetes/issues/11000][2]\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.                \n\n[1]: https://kubernetes.io/docs/admin/kube-controller-manager/ \n[2]: https://github.com/kubernetes/kubernetes/issues/11000\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.5","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"k7t-yxp-axc","createdAt":1599598174692,"name":"--root-ca-file argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:1.2.2","security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe Docker daemon requires access to the Docker socket which is, by default, owned by the user `root` and the group `docker`.\n\n## Rationale\n\nDocker allows you to share a directory between the Docker host and a guest container without limiting the access rights of the container. This means that you can start a container and map the `/` directory on your host to the container. The container is able to modify your host file system without any restrictions. This means that you could gain elevated privileges simply by being a member of the `docker` group and subsequently start a container which maps the root `/` directory on the host.\n\n\n## Audit\n\nRun the following command on the Docker host to see the members of the `docker` group, and ensure that only trusted users are members:\n\n```\ngetent group docker\n```\n\n## Remediation\n\nYou should remove any untrusted users from the `docker` group. Additionally, you should not create a mapping of sensitive directories from the host to container volumes.\n\n## Impact\n\nProvided the proceeding instructions are implemented, rights to build and execute containers as normal user would be restricted.\n\n## Default value\n\nNot Applicable\n\n## References\n\n1. [https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface]\n2. [https://www.andreas-jung.com/contents/on-docker-security-docker-group-considered-harmful]\n3. [http://www.projectatomic.io/blog/2015/08/why-we-dont-let-non-root-users-run-docker-in-centos-fedora-or-rhel/]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.                \n\n[1]: https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface \n[2]: https://www.andreas-jung.com/contents/on-docker-security-docker-group-considered-harmful \n[3]: http://www.projectatomic.io/blog/2015/08/why-we-dont-let-non-root-users-run-docker-in-centos-fedora-or-rhel/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.2","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"dev-mh8-u1i","createdAt":1599598174666,"name":"Only trusted users are allowed to control Docker daemon"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","control:2.6","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use automatically generated self-signed certificates for TLS connections between peers.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be accessible only by authenticated etcd peers in the etcd cluster. Hence, do not use self-signed certificates for authentication.\n\n## Audit\n\nThis recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable.\n\nRun the following command on the etcd server node: \n```\nps -ef | grep etcd\n```\nVerify that if the `--peer-auto-tls` argument exists, it is not set to `true`.\n\n## Remediation\n\nEdit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and either remove the `--peer-auto-tls` parameter or set it to false. \n\n```\n--peer-auto-tls=false\n```\n\n## Impact\n\nAll peers attempting to communicate with the etcd server will require a valid client certificate for authentication.\n\n## Default value\n\n*Note*: This recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable. By default, `--peer-auto-tls` argument is set to false.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][1]\n2. [https://kubernetes.io/docs/admin/etcd/ ][2]\n3. [https://coreos.com/etcd/docs/latest/op-guide/configuration.html#peer-auto-tls][3]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.4 Controlled Use of Administrative Privileges             \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/ \n[3]: https://coreos.com/etcd/docs/latest/op-guide/configuration.html#peer-auto-tls\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.6","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"l0y-lyz-foj","createdAt":1599598174666,"name":"--peer-auto-tls argument is not set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.14","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy using the `--restart` flag in the docker run command you can specify a restart policy for how a container should or should not be restarted on exit. You should choose the on-failure restart policy and limit the restart attempts to 5.\n\n## Rationale\n\nIf you indefinitely keep trying to start the container, it could possibly lead to a denial of service on the host. It could be an easy way to do a distributed denial of service attack especially if you have many containers on the same host. Additionally, ignoring the exit status of the container and always attempting to restart the container, leads to non-investigation of the root cause behind containers getting terminated. If a container gets terminated, you should investigate on the reason behind it instead of just attempting to restart it indefinitely. You should use the on-failure restart policy to limit the number of container restarts to a maximum of 5 attempts.\n\n## Audit\n\nExecute this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: RestartPolicyName={{ .HostConfig.RestartPolicy.Name }} MaximumRetryCount={{ .HostConfig.RestartPolicy.MaximumRetryCount }}'` \n\nIf this command returns `RestartPolicyName=always`, then the system is not configured optimally. If this command returns `RestartPolicyName=no` or just `RestartPolicyName=`, then restart policies are not being used and the container would never be restarted automatically. This may be a secure option, but it is not the best option from a usability standpoint. If this command returns `RestartPolicyName=on-failure`, then verify that the number of restart attempts is set to 5 or less by looking at `MaximumRetryCount`.\n\n## Remediation\n\nIf you wish a container to be automatically restarted, use `docker run --detach --restart=on-failure:5 nginx`\n\n## Impact\n\nIf this option is set, a container will only attempt to restart itself 5 times.\n\n## Default value\n\nBy default, containers are not configured with restart policies.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/run/#restart-policies-restart\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.14","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.14\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ycq-buv-pf8","createdAt":1599598174688,"name":"'on-failure' container restart policy is set to '5'"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","control:1.1.4","security:compliance","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the controller manager pod specification file ownership is set to root:root.\n\n## Rationale\n\nThe controller manager pod specification file controls various parameters that set the behavior of various components of the master node. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/manifests/kube-controller-manager.yaml\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/manifests/kube-controller-manager.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kube-controller-manager.yaml` file ownership is set to root:root.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-controller-manager\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.4","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"jwf-xdm-mi9","createdAt":1599599105053,"name":"Controller manager pod specification file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.31","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSetup TLS connection on the API server.\n\n## Rationale\n\nAPI server communication contains sensitive parameters that should remain encrypted in transit. Configure the API server to serve only HTTPS traffic. If `--client-ca-file` argument is set, any request presenting a client certificate signed by one of the authorities in the `client-ca-file` is authenticated with an identity corresponding to the CommonName of the client certificate.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--client-ca-file` argument exists and it is set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection on the apiserver. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the client certificate authority file: `--client-ca-file=<path/to/client-ca-file>`\n\n## Impact\n\nTLS and client certificate authentication must be configured for your Kubernetes cluster deployment.\n\n## Default value\n\nBy default, `--client-ca-file` argument is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. http://rootsquash.com/2016/05/10/securing-the-kubernetes-api/ \n3. https://github.com/kelseyhightower/docker-kubernetes-tls-guide\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.31","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.31\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"nad-eon-2rv","createdAt":1599599105054,"name":"--client-ca-file argument is set as appropriate (API server)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.27","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nValidate service account before validating token.\n\n## Rationale\n\nIf --service-account-lookup is not enabled, the apiserver only verifies that the authentication token is valid, and does not validate that the service account token mentioned in the request is actually present in etcd. This allows using a service account token even after the corresponding service account is deleted. This is an example of time of check to time of use security issue.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that if the `--service-account-lookup` argument exists it is set to `true`.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the below parameter. `--service-account-lookup=true` Alternatively, you can delete the `--service-account-lookup` parameter from this file so that the default takes effect.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `--service-account-lookup` argument is set to true.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://github.com/kubernetes/kubernetes/issues/24167 \n3. https://en.wikipedia.org/wiki/Time_of_check_to_time_of_use\n\n## CIS controls\n\nVersion 6 16 Account Monitoring and Control Account Monitoring and Control Version 7 16 Account Monitoring and Control Account Monitoring and Control\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.27","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.27\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ycp-ppm-trb","createdAt":1599599105043,"name":"--service-account-lookup argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.12","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable kubelet server certificate rotation.\n\n## Rationale\n\n`RotateKubeletServerCertificate` causes the kubelet to both request a serving certificate after bootstrapping its client credentials and rotate the certificate as its existing credentials expire. This automated periodic rotation ensures that the there are no downtimes due to expired certificates and thus addressing availability in the CIA security triad.\n\n*Note*: This recommendation only applies if you let kubelets get their certificates from the API server. In case your kubelet certificates come from an outside authority/tool (e.g. Vault) then you need to take care of rotation yourself.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that `RotateKubeletServerCertificate` argument exists and is set to `true`.\n\n## Remediation\n\nOn the master edit `/var/lib/kubelet/kubeadm-flags.env` and set the parameter `KUBELET_CERTIFICATE_ARGS --feature-gates=RotateKubeletServerCertificate=true` or as an alternative, and suggested as a last resort, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_CERTIFICATE_ARGS` variable:\n\n```\n--feature-gates=RotateKubeletServerCertificate=true\n```\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, kubelet server certificate rotation is disabled.\n\n## References\n\n1. https://github.com/kubernetes/kubernetes/pull/45059\n2. https://kubernetes.io/docs/admin/kubelet-tls-bootstrapping/#kubelet-configuration\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted.\n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n\n[1]: https://github.com/kubernetes/kubernetes/pull/45059\n[2]: https://kubernetes.io/docs/admin/kubelet-tls-bootstrapping/#kubelet-configuration\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.12","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"afr-qkp-94a","createdAt":1599599105048,"name":"RotateKubeletServerCertificate argument is set to true (Kubelet)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Docker-Daemon-Configuration","control:2.3","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe `iptables` firewall is used to set up, maintain, and inspect the tables of IP packet filter rules within the Linux kernel. The Docker daemon should be allowed to make changes to the `iptables` ruleset.\n\n## Rationale\n\nDocker will not make changes to your system `iptables` rules unless you allow it to do so. If you do allow this, Docker server will automatically make any required changes. You should let Docker make changes to `iptables` automatically in order to avoid networking misconfigurations that could affect the communication between containers and with the outside world. Additionally, this reduces the administrative overhead of updating `iptables` every time you add containers or modify networking options.\n\n## Audit\n\nTo confirm that the Docker daemon is allowed to change the `iptables` ruleset, review the `dockerd` startup options and the settings in `/etc/docker/daemon.json`. To review the `dockerd` startup options, run: \n```\nps -ef | grep dockerd \n```\nEnsure that the `--iptables` parameter is either not present or not set to `false`. Also review the `/etc/docker/daemon.json` file to check that the `iptables` setting is not set to `false`.\n\n## Remediation\n\nDo not run the Docker daemon with `--iptables=false` parameter. \n\n## Impact\n\nThe Docker daemon service requires `iptables` rules to be enabled before it starts. Any restarts of `iptables` during Docker daemon operation may result in losing Docker-created rules. Adding `iptables-persistent` to your `iptables` install can mitigate.\n\n## Default value\n\nBy default, `iptables` is set to true.\n\n## References\n\n1. [https://docs.docker.com/engine/userguide/networking/default_network/container-communication/][1]\n2. [https://fralef.me/docker-and-iptables.html][2]\n\n## CIS controls\n\nVersion 6.5 Controlled Use of Administration Privileges                \n\n[1]: https://docs.docker.com/engine/userguide/networking/default_network/container-communication/\n[2]: https://fralef.me/docker-and-iptables.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.3","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"3fv-xgy-7fb","createdAt":1599599453907,"name":"Docker is allowed to make changes to iptables"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.7","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that all the registry certificate files, usually found under the `/etc/docker/certs.d/<registry-name>` directory, are individually owned and group owned by root.\n\n## Rationale\n\nThe `/etc/docker/certs.d/<registry-name>` directory contains Docker registry certificates. These certificate files must be individually owned and group owned by root to ensure that less privileged users are unable to modify the contents of the directory.\n\n## Audit\n\nYou should execute the command below to verify that the registry certificate files are individually owned and group owned by root: \n\n```\nstat -c %U:%G /etc/docker/certs.d/* | grep -v root:root \n```\n\nThis command does not return any data.\n\n## Remediation\n\nExecute the following command: `chown root:root /etc/docker/certs.d/<registry-name>/*`\n\nThis sets the individual ownership and group ownership for the registry certificate files to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the individual ownership and group ownership for registry certificate files is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.7","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"fbv-qsy-urc","createdAt":1599599454050,"name":"Registry certificate file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.17","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `controller-manager.conf` file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe `controller-manager.conf` file is the kubeconfig file for the Controller Manager. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/controller-manager.conf\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/controller-manager.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `controller-manager.conf` has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-controller-manager/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.17","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.17\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"iss-afi-xfp","createdAt":1599599454121,"name":"controller-manager.conf file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.11","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not allow all requests.\n\n## Rationale\n\nSetting admission control plugin AlwaysAdmit allows all requests and do not filter any requests. The AlwaysAdmit admission controller was deprecated in Kubernetes v1.13. Its behavior was equivalent to turning off all admission controllers.\n\n## Audit\n\nRun the following command on the master node:\n\n```bash\nps -ef | grep kube-apiserver\n```\n\nVerify the `--enable-admission-plugins` argument's value (if set) does not include `AlwaysAdmit`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and either remove the --enable-admission-plugins parameter, or set it to a value that does not include AlwaysAdmit.\n\n## Impact\n\nOnly requests explicitly allowed by the admissions control plugins would be served.\n\n## Default value\n\nAlwaysAdmit is not in the list of default admission plugins.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#alwaysadmit\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.11","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ysr-4gg-vu5","createdAt":1599599454382,"name":"Admission control plugin AlwaysAdmit is not set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.6","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `kubelet.conf` file ownership is set to `root:root`.\n\n## Rationale\n\nThe `kubelet.conf` file is the kubeconfig file for the node, and controls various parameters that set the behavior and identity of the worker node. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %U:%G /etc/kubernetes/kubelet.conf`. Verify that the ownership is set to `root:root`.\n\n## Remediation\n\nRun this command (based on the file location on your system) on the each worker node. For example, `chown root:root /etc/kubernetes/kubelet.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kubelet.conf` file ownership is set to `root:root`.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.6","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mrc-waf-mbs","createdAt":1599599696342,"name":"kubelet.conf file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.16","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `scheduler.conf` file ownership is set to `root:root`.\n\n## Rationale\n\nThe `scheduler.conf` file is the kubeconfig file for the Scheduler. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/scheduler.conf\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/scheduler.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `scheduler.conf` file ownership is set to root:root.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kubeadm/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.16","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.16\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"pbp-y4b-dhf","createdAt":1599600185878,"name":"scheduler.conf file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.2","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not allow all requests. Enable explicit authorization.\n\n## Rationale\n\nKubelets, by default, allow all authenticated requests (even anonymous ones) without needing explicit authorization checks from the API server. You should restrict this behavior and only allow explicitly authorized requests.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. If the `--authorization-mode` argument is present check that it is not set to AlwaysAllow. If it is not present check that there is a Kubelet config file specified by `--config`, and that file sets authorization: mode to something other than AlwaysAllow. It is also possible to review the running configuration of a Kubelet via the /configs endpoint on the Kubelet API port (typically `10250/TCP`). Accessing these with appropriate credentials will provide details of the Kubelet's configuration.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set authorization: mode to Webhook. If using executable arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_AUTHZ_ARGS` variable.\n\n`--authorization-mode=Webhook`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nUnauthorized requests will be denied.\n\n## Default value\n\nBy default, `--authorization-mode` argument is set to `AlwaysAllow`.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authentication][2]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\nVersion 7.14 Controlled Access Based on the Need to Know\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authentication\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.2","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"un4-gin-3dq","createdAt":1599600248005,"name":"--authorization-mode argument is not set to AlwaysAllow (Kubelet)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.8","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `/etc/kubernetes/manifests/etcd.yaml` file ownership is set to `root:root`.\n\n## Rationale\n\nThe etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` controls various parameters that set the behavior of the etcd service in the master node. etcd is a highly-available key-value store which Kubernetes uses for persistent storage of all of its REST API object. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/manifests/etcd.yaml\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/manifests/etcd.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `/etc/kubernetes/manifests/etcd.yaml` file ownership is set to root:root.\n\n## References\n\n1. https://coreos.com/etcd\n2. https://kubernetes.io/docs/admin/etcd/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.8","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oac-lbl-npz","createdAt":1599600311388,"name":"etcd pod specification file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.3","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable Kubelet authentication using certificates.\n\n## Rationale\n\nThe connections from the API server to the kubelet are used for fetching logs for pods, attaching (through kubectl) to running pods, and using the kubelet's port-forwarding functionality. These connections terminate at the kubelet's HTTPS endpoint. By default, the API server does not verify the kubelet's serving certificate, which makes the connection subject to man-in-the-middle attacks, and unsafe to run over untrusted and/or public networks. Enabling Kubelet certificate authentication ensures that the API server could authenticate the Kubelet before submitting any requests.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--client-ca-file` argument exists and is set to the location of the client certificate authority file. If the `--client-ca-file` argument is not present, check that there is a Kubelet config file specified by `--config`, and that the file sets authentication: x509: clientCAFile to the location of the client certificate authority file.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `authentication: x509: clientCAFile` to the location of the client CA file. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_AUTHZ_ARGS` variable.\n\n`--client-ca-file=<path/to/client-ca-file>`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nYou require TLS to be configured on API server as well as kubelets.\n\n## Default value\n\nBy default, `--client-ca-file argument` is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-authentication-authorization/][2]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted.\n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-authentication-authorization/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.3","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"x6l-4d1-dwh","createdAt":1599600373842,"name":"--client-ca-file argument is set as appropriate (Kubelet)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Pod-Security-Policies","control:5.2.3","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not generally permit containers to be run with the hostIPC flag set to true.\n\n## Rationale\n\nA container running in the host's IPC namespace can use IPC to interact with processes outside the container. There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to share the host IPC namespace. If you have a requirement to containers that require hostIPC, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n## Audit\n\nGet the set of PSPs with the following command: `kubectl get psp`\n\nFor each PSP, check whether privileged is enabled: `kubectl get psp <name> -o=jsonpath='{.spec.hostIPC}'`\n\nVerify that there is at least one PSP which does not return true.\n\n## Remediation\n\nCreate a PSP as described in the Kubernetes documentation, ensuring that the .spec.hostIPC field is omitted or set to false.\n\n## Impact\n\nPods defined with spec.hostIPC: true will not be permitted unless they are run under a specific PSP.\n\n## Default value\n\nBy default, PodSecurityPolicies are not defined.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/policy/pod-security-policy][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://kubernetes.io/docs/concepts/policy/pod-security-policy\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.2.3","framework":"cis-kubernetes","requirement":"Pod-Security-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vs4-ja0-gkh","createdAt":1599600435891,"name":"Minimize the admission of containers wishing to share the host IPC namespace"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","control:5.1","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAppArmor is an effective and easy-to-use Linux application security system. It is available on some Linux distributions by default, for example, on Debian and Ubuntu.\n\n## Rationale\n\nAppArmor protects the Linux OS and applications from various threats by enforcing a security policy which is also known as an AppArmor profile. You can create your own AppArmor profile for containers or use Docker's default profile. Enabling this feature enforces security policies on containers as defined in the profile.\n\n## Audit\n\nYou should run this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: AppArmorProfile={{ .AppArmorProfile }}'` \n\nThis command returns a valid AppArmor Profile for each container instance.\n\n## Remediation\n\nIf AppArmor is applicable for your Linux OS, enable it.\n\n1. Verify AppArmor is installed.\n2. Create or import a AppArmor profile for Docker containers.\n3. Enable enforcement of the policy.\n4. Start your Docker container using the customized AppArmor profile. For example: `docker run --interactive --tty --security-opt=\"apparmor:PROFILENAME\" ubuntu /bin/bash` Alternatively, Docker's default AppArmor policy can be used.\n\n## Impact\n\nThe container will have the security controls defined in the AppArmor profile. It should be noted that if the AppArmor profile is misconfigured, this may cause issues with the operation of the container.\n\n## Default value\n\nBy default, the docker-default AppArmor profile is applied to running containers. This profile can be found at `/etc/apparmor.d/docker`\n\n## References\n\n1. https://docs.docker.com/engine/security/apparmor/\n2. https://docs.docker.com/engine/reference/run/#security-configuration\n3. https://docs.docker.com/engine/security/security/#other-kernel-security-features\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.1","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"s4z-dsj-llz","createdAt":1599600498264,"name":"An AppArmor Profile is enabled"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Pod-Security-Policies","control:5.2.2","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not generally permit containers to be run with the hostPID flag set to true.\n\n## Rationale\n\nA container running in the host's PID namespace can inspect processes running outside the container. If the container also has access to ptrace capabilities this can be used to escalate privileges outside of the container. There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to share the host PID namespace. If you need to run containers which require hostPID, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n## Audit\n\nGet the set of PSPs with the following command: `kubectl get psp`\n\nFor each PSP, check whether privileged is enabled: `kubectl get psp <name> -o=jsonpath='{.spec.hostPID}'`\n\nVerify that there is at least one PSP which does not return true.\n\n## Remediation\n\nCreate a PSP as described in the Kubernetes documentation, ensuring that the `.spec.hostPID` field is omitted or set to false.\n\n## Impact\n\nPods defined with spec.hostPID: true will not be permitted unless they are run under a specific PSP.\n\n## Default value\n\nBy default, PodSecurityPolicies are not defined.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/policy/pod-security-policy][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://kubernetes.io/docs/concepts/policy/pod-security-policy\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.2.2","framework":"cis-kubernetes","requirement":"Pod-Security-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"flc-1s1-okw","createdAt":1599600559953,"name":"Minimize the admission of containers wishing to share the host process ID namespace"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.7","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the certificate authorities file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe certificate authorities file controls the authorities used to validate API requests. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command: `ps -ef | grep kubelet`. Find the file specified by the `--client-ca-file` argument. Run the following command: `stat -c %a <filename>`. Verify that the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the following command to modify the file permissions of the `--client-ca-file`:\n\n```\nchmod 644 <filename>\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default no `--client-ca-file` is specified.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/authentication/#x509-client-certs][1]\n\n## CIS controls\n\nVersion 6 5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7 14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\n[1]: https://kubernetes.io/docs/admin/authentication/#x509-client-certs\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.7","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qtd-deo-dgb","createdAt":1599600622129,"name":"Certificate authorities file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.3.4","requirement:Controller-Manager","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nExplicitly set a service account private key file for service accounts on the controller manager.\n\n## Rationale\n\nTo ensure that keys for service account tokens can be rotated as needed, a separate public/private key pair should be used for signing service account tokens. The private key should be specified to the controller manager with `--service-account-private-key-file` as appropriate.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--service-account-private-key-file` argument is set as appropriate.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and set the `--service-account-private-key-file parameter` to the private key file for service accounts:\n\n```\n--service-account-private-key-file=<filename>\n```\n\n## Impact\n\nYou would need to securely maintain the key file and rotate the keys based on your organization's key rotation policy.\n\n## Default value\n\nBy default, `--service-account-private-key-file` it not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-controller-manager/][1]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.4 Controlled Use of Administrative Privileges          \n\n[1]: https://kubernetes.io/docs/admin/kube-controller-manager/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.4","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mj1-ode-sln","createdAt":1599600796213,"name":"--service-account-private-key-file argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","control:1.2.7","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `docker.socket`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges, it is very important to audit its activities and usage. Its behavior depends on some key files and directories, including the `docker.socket` file, which holds various parameters for the Docker daemon, it should be audited.\n\n## Audit\n\n1. Locate the `docker.socket` file by running: \n    ```\n    systemctl show -p FragmentPath docker.socket \n    ```\n2. If the file does not exist, this recommendation is not applicable. If the `docker.socket` file exists, verify that there is an audit rule corresponding to the `docker.socket` file by running: \n    ```\n    auditctl -l | grep docker.socket \n    ```\n\n## Remediation\n\nIf the file exists, you should add a rule for it. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /usr/lib/systemd/system/docker.socket -k docker \n```\n\nThen restart the audit daemon: \n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `docker.socket` may not be present, but if it is, it should be audited.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.7","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"afg-qbt-7uw","createdAt":1599600857858,"name":"docker.socket auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.15","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe Process ID (PID) namespace isolates the process ID space, meaning that processes in different PID namespaces can have the same PID. This creates process level isolation between the containers and the host.\n\n## Rationale\n\nPID namespace provides separation between processes. It prevents system processes from being visible, and allows process ids to be reused including PID 1. If the host's PID namespace is shared with containers, it would basically allow these to see all of the processes on the host system. This reduces the benefit of process level isolation between the host and the containers. Under these circumstances a malicious user who has access to a container could get access to processes on the host itself, manipulate them, and even be able to kill them. This could allow for the host itself being shut down, which could be extremely serious, particularly in a multi-tenanted environment. You should not share the host's process namespace with the containers running on it.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: PidMode={{ .HostConfig.PidMode }}'` \n\nIf the command returns `host`, it means that the host PID namespace is shared with its containers; any other result means that the system is configured in line with good security practice.\n\n## Remediation\n\nYou should not start a container with the `--pid=host` argument. For example, do not start a container with the command: `docker run --interactive --tty --pid=host centos /bin/bash`\n\n## Impact\n\nContainer processes cannot see processes on the host system. In certain circumstances, you may want your container to share the host's process namespace. For example, you could build a container containing debugging tools such as strace or gdb, and want to use these tools when debugging processes on the host. If this is desired, then share specific host processes using the `-p` switch. For example: `docker run --pid=host rhel7 strace -p 1234`\n\n## Default value\n\nBy default, all containers have the PID namespace enabled and the therefore the host's process namespace is not shared with its containers.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#pid-settings-pid 2. http://man7.org/linux/man-pages/man7/pid_namespaces.7.html\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.15","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.15\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mk8-jwd-4ag","createdAt":1599600919537,"name":"Host's process namespace is not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.4","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUse https for kubelet connections.\n\n## Rationale\n\nConnections from apiserver to kubelets could potentially carry sensitive data such as secrets and keys. It is thus important to use in-transit encryption for any communication between the apiserver and kubelets.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--kubelet-https` argument either does not exist or is set to `true`.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and remove the `--kubelet-https` parameter.\n\n## Impact\n\nYou require TLS to be configured on apiserver as well as kubelets.\n\n## Default value\n\nBy default, kubelet connections are over https.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-apiserver/ ][1]\n2. [https://kubernetes.io/docs/admin/kubelet-authentication-authorization/][2]\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.                \n\n[1]: https://kubernetes.io/docs/admin/kube-apiserver/ \n[2]: https://kubernetes.io/docs/admin/kubelet-authentication-authorization/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.4","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"critical","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ftg-h4g-hqj","createdAt":1599600981186,"name":"--kubelet-https argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:2.5","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use `aufs` as the storage driver for your Docker instance.\n\n## Rationale\n\nThe `aufs` storage driver is the oldest storage driver used on Linux systems. It is based on a Linux kernel patch-set that is unlikely in future to be merged into the main OS kernel. The `aufs` driver is also known to cause some serious kernel crashes. `aufs` has only legacy support within systems using Docker. Most importantly, `aufs` is not a supported driver in many Linux distributions using latest Linux kernels.\n\n## Audit\n\nVerify that `aufs` is not used as storage driver by running this command and ensuring `aufs` is not listed: \n```\ndocker info --format 'Storage Driver: {{ .Driver }}' \n```\n\n## Remediation\n\nDo not explicitly use `aufs` as storage driver. For example, do not start Docker daemon with the `--storage-driver aufs` flag.\n\n## Impact\n\n`aufs` is the only storage driver that allows containers to share executable and shared library memory. It might be useful if you are running thousands of containers with the same program or libraries. However, you should review its use with respect to your organization's security policy.\n\n## Default value\n\nBy default, Docker uses `devicemapper` as the storage driver on most of the platforms. The default storage driver can vary based on your OS vendor. You should use the storage driver that is recommended by your preferred vendor and which is in line with policy around the applications which are being deployed.\n\n## References\n\n1. [https://docs.docker.com/engine/userguide/storagedriver/selectadriver/#supported-backing-filesystems][1]\n2. [http://muehe.org/posts/switching-docker-from-aufs-to-devicemapper/][2]\n3. [http://jpetazzo.github.io/assets/2015-03-05-deep-dive-into-docker-storage-drivers.html#1][3]\n4. [https://docs.docker.com/engine/userguide/storagedriver/][4]\n\n## CIS controls\n\nVersion 6.18 Application Software Security                \n\n[1]: https://docs.docker.com/engine/userguide/storagedriver/selectadriver/#supported-backing-filesystems \n[2]: http://muehe.org/posts/switching-docker-from-aufs-to-devicemapper/ \n[3]: http://jpetazzo.github.io/assets/2015-03-05-deep-dive-into-docker-storage-drivers.html#1 \n[4]: https://docs.docker.com/engine/userguide/storagedriver/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.5","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"n0x-jqo-rof","createdAt":1599601042737,"name":"aufs storage driver is not used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.22","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable auditing on the Kubernetes API Server and set the desired audit log path.\n\n## Rationale\n\nAuditing the Kubernetes API Server provides a security-relevant chronological set of records documenting the sequence of activities that have affected system by individual users, administrators or other components of the system. Even though currently, Kubernetes provides only basic audit capabilities, it should be enabled. You can enable it by setting an appropriate audit log path.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-log-path` argument is set as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --audit-log-path parameter to a suitable path and file where you would like audit logs to be written, for example: --audit-log-path=/var/log/apiserver/audit.log\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, auditing is not enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/concepts/cluster-administration/audit/ 3. https://github.com/kubernetes/features/issues/22\n\n## CIS controls\n\nVersion 6 6.2 Ensure Audit Log Settings Support Appropriate Log Entry Formatting Validate audit log settings for each hardware device and the software installed on it, ensuring that logs include a date, timestamp, source addresses, destination addresses, and various other useful elements of each packet and/or transaction. Systems should record logs in a standardized format such as syslog entries or those outlined by the Common Event Expression initiative. If systems cannot generate logs in a standardized format, log normalization tools can be deployed to convert logs into such a format. Version 7 6.2 Activate audit logging Ensure that local logging has been enabled on all systems and networking devices. 6.3 Enable Detailed Logging Enable system logging to include detailed information such as an event source, date, user, timestamp, source addresses, destination addresses, and other useful elements.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.22","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.22\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"fny-sti-0dk","createdAt":1599601104396,"name":"--audit-log-path argument is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.17","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nLimit the Node and Pod objects that a kubelet could modify.\n\n## Rationale\n\nUsing the NodeRestriction plug-in ensures that the kubelet is restricted to the Node and Pod objects that it could modify as defined. Such kubelets will only be allowed to modify their own Node API object, and only modify Pod API objects that are bound to their node.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--enable-admission-plugins` argument is set to a value that includes `NodeRestriction`.\n\n## Remediation\n\nFollow the Kubernetes documentation and configure NodeRestriction plug-in on kubelets. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --enable-admission-plugins parameter to a value that includes NodeRestriction. --enable-admission-plugins=...,NodeRestriction,...\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, NodeRestriction is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#noderestriction 3. https://kubernetes.io/docs/admin/authorization/node/ 4. https://acotten.com/post/kube17-security\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.17","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.17\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"jre-tn7-yma","createdAt":1599601166101,"name":"Admission control plugin NodeRestriction is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.1","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the API server pod specification file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe API server pod specification file controls various parameters that set the behavior of the API server. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node:\n\n```bash\nstat -c %a /etc/kubernetes/manifests/kube-apiserver.yaml\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/manifests/kube-apiserver.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `kube-apiserver.yaml` file has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.1","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"8tj-q6g-eyj","createdAt":1599601227733,"name":"API server pod specification file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.21","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/sysconfig/docker` file permissions are correctly set to 644 or more restrictively.\n\n## Rationale\n\nThe `/etc/sysconfig/docker` file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be writeable only by root in order to ensure that it is not modified by less privileged users.\n\n## Audit\n\nVerify that the `/etc/sysconfig/docker` file permissions are set to `644` or more restrictive, by running: \n```\nstat -c %a /etc/sysconfig/docker\n```\n\n## Remediation\n\nRun the following command: `chmod 644 /etc/sysconfig/docker`\n\nThis sets the file permissions for this file to 644.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system and in this case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/admin/configuring/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.21","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.21\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"au3-ayl-tdm","createdAt":1599601289420,"name":"/etc/sysconfig/docker file permissions are set to 644 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.4.2","requirement:Scheduler","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not bind the scheduler service to non-loopback insecure addresses.\n\n## Rationale\n\nThe Scheduler API service which runs on port 10251/TCP by default is used for health and metrics information and is available without authentication or encryption. As such it should only be bound to a localhost interface, to minimize the cluster's attack surface\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-scheduler\n```\nVerify that the `--bind-address` argument is set to `127.0.0.1`.\n\n## Remediation\n\nEdit the Scheduler pod specification file `/etc/kubernetes/manifests/kube-scheduler.yaml` on the master node and ensure the correct value for the `--bind-address` parameter.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `--bind-address` parameter is set to `0.0.0.0`.\n\n## References\n\n1. [https://kubernetes.io/docs/reference/command-line-tools-reference/kube-scheduler/][1]\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.                \n\n[1]: https://kubernetes.io/docs/reference/command-line-tools-reference/kube-scheduler/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.4.2","framework":"cis-kubernetes","requirement":"Scheduler","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.4.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"g1h-91b-y2x","createdAt":1599601351149,"name":"--bind-address argument is set to 127.0.0.1 (Scheduler)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.11","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the etcd data directory has permissions of 700 or more restrictive.\n\n## Rationale\n\netcd is a highly-available key-value store used by Kubernetes deployments for persistent storage of all of its REST API objects. This data directory should be protected from any unauthorized reads or writes. It should not be readable or writable by any group members or the world.\n\n## Audit\n\nOn the etcd server node, get the etcd data directory passed as an argument `--data-dir`, from the command:\n\n```bash\nps -ef | grep etcd\n```\n\n Based on the etcd data directory found above, run the command:\n \n ```bash\n stat -c %a /var/lib/etcd\n ```\n \n Verify the permissions are `700` or more restrictive.\n\n## Remediation\n\nOn the etcd server node, get the etcd data directory, passed as an argument `--data-dir`, from the below command: `ps -ef | grep etcd`\n\nRun the command (based on the etcd data directory found above): `chmod 700 /var/lib/etcd`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, etcd data directory has permissions of 755.\n\n## References\n\n1. https://coreos.com/etcd/docs/latest/op-guide/configuration.html#data-dir\n2. https://kubernetes.io/docs/admin/etcd/\n\n## CIS controls\n\nVersion 6\n\n14 Controlled Access Based on the Need to Know\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.11","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qgj-hf0-an1","createdAt":1599601412710,"name":"etcd data directory permissions are set to 700 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.10","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/etc/docker/daemon.json`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `/etc/docker/daemon.json`. This holds various parameters for the Docker daemon, and so it should be audited.\n\n## Audit\n\nVerify that there is an audit rule associated with the `/etc/docker/daemon.json` file. To display the rule for the `/etc/docker/daemon.json` file, run: \n\n```\nauditctl -l | grep /etc/docker/daemon.json\n```\n\n## Remediation\n\nYou should add a rule for the `/etc/docker/daemon.json` file. For example, add the following line to the `/etc/audit/audit.rules` file: \n\n```\n-w /etc/docker/daemon.json -k docker \n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `/etc/docker/daemon.json` may not exist on the system and in that case, this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n2. [https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file][2]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html \n[2]: https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.10","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"v2o-aio-i0e","createdAt":1599601474412,"name":"/etc/docker/daemon.json auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent","control:3.1"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the docker.service file ownership and group ownership are correctly set to root.\n\n## Rationale\n\nThe docker.service file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be individually and group owned by the root user in order to ensure that it is not modified or corrupted by a less privileged user.\n\n## Audit\n\n1. Locate the `docker.service` file by running: \n    ```\n    systemctl show -p FragmentPath docker.service \n    ```\n2. If the file does not exist, this recommendation is not applicable. If the file exists, verify that it is owned and group-owned by root, by running the following command with the correct filepath:\n    ```\n    stat -c %U:%G /usr/lib/systemd/system/docker.service | grep -v root:root \n    ```\n    The command should not return anything.\n\n## Remediation\n\n1. Find out the file location: `systemctl show -p FragmentPath docker.service`\n2. If the file does not exist, this recommendation is not applicable. If the file does exist, you should execute the command below, including the correct file path, in order to set the ownership and group ownership for the file to root.\n\nFor example, `chown root:root /usr/lib/systemd/system/docker.service`\n\n## Impact\n\nNone.\n\n## Default value\n\nThis file may not be present on the system and if it is not, this recommendation is not applicable. By default, if the file is present, the correct permissions are for the ownership and group ownership to be set to \"root\".\n\n## References\n\n1. https://docs.docker.com/engine/admin/systemd/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.1","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mhz-jes-n2m","createdAt":1599601536215,"name":"docker.service file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.14","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAutomate service accounts management.\n\n## Rationale\n\nWhen you create a pod, if you do not specify a service account, it is automatically assigned the default service account in the same namespace. You should create your own service account and let the API server manage its security tokens.\n\n## Audit\n\nRun the following command on the master node:\n\n```bash\nps -ef | grep kube-apiserver\n```\n\nVerify the `--disable-admission-plugins` argument is set to a value that does not include `ServiceAccount`.\n\n## Remediation\n\nFollow the documentation and create ServiceAccount objects as per your environment. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and ensure that the --disable-admission-plugins parameter is set to a value that does not include ServiceAccount.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, ServiceAccount is set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#serviceaccount 3. https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n\n## CIS controls\n\nVersion 6 16 Account Monitoring and Control Account Monitoring and Control Version 7 16 Account Monitoring and Control Account Monitoring and Control\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.14","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.14\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"wrk-jrm-u8h","createdAt":1599601597784,"name":"Admission control plugin ServiceAccount is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent","control:1.2.8"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/etc/default/docker`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `/etc/default/docker`. It holds various parameters related to the Docker daemon and should therefore be audited.\n\n## Audit\n\nVerify that there is an audit rule associated with the `/etc/default/docker` file. To see the rule for the `/etc/default/docker` file, run: \n```\nauditctl -l | grep /etc/default/docker \n```\n\n## Remediation\n\nYou should add a rule for the `/etc/default/docker` file. For example, add the following line to the `/etc/audit/audit.rules` file: \n\n```\n-w /etc/default/docker -k docker \n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited so these defaults should be changed in line with organizational security policy. The file `/etc/default/docker` may not be present, and if so, this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7 14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.8","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qfi-cgy-a6e","createdAt":1599601659531,"name":"/etc/default/docker auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.2","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the docker.service file permissions are either set to 644 or to a more restrictive value.\n\n## Rationale\n\nThe docker.service file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore not be writable by any other user other than root in order to ensure that it can not be modified by less privileged users.\n\n## Audit\n\n1. Locate the `docker.service` file by running: \n    ```\n    systemctl show -p FragmentPath docker.service\n    ```\n2. If the file does not exist, this recommendation is not applicable. If the file exists, verify that the file permissions are set to `644` or a more restrictive value by running the following command with the correct filepath:\n    ```\n    stat -c %a /usr/lib/systemd/system/docker.service\n    ```\n\n## Remediation\n\n1. Find out the file location: `systemctl show -p FragmentPath docker.service`\n2. If the file does not exist, this recommendation is not applicable. If the file exists, execute the command below including the correct file path to set the file permissions to 644. For example, `chmod 644 /usr/lib/systemd/system/docker.service`\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system. In that case, this recommendation is not applicable. By default, if the file is present, the file permissions are correctly set to 644.\n\n## References\n\n1. https://docs.docker.com/articles/systemd/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.2","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"zyv-o6s-69z","createdAt":1599601721176,"name":"docker.service file permissions are appropriately set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Pod-Security-Policies","control:5.2.5","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not generally permit containers to be run with the allowPrivilegeEscalation flag set to true.\n\n## Rationale\n\nA container running with the `allowPrivilegeEscalation` flag set to true may have processes that can gain more privileges than their parent. There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to allow privilege escalation. The option exists (and is defaulted to true) to permit setuid binaries to run. If you have need to run containers that use setuid binaries or require privilege escalation, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n## Audit\n\nGet the set of PSPs with the following command: `kubectl get psp`\n\nFor each PSP, check whether privileged is enabled: `kubectl get psp <name> -o=jsonpath='{.spec.allowPrivilegeEscalation}'`\n\nVerify that there is at least one PSP which does not return true.\n\n## Remediation\n\nCreate a PSP as described in the Kubernetes documentation, ensuring that the `.spec.allowPrivilegeEscalation` field is omitted or set to false.\n\n## Impact\n\nPods defined with `spec.allowPrivilegeEscalation: true` will not be permitted unless they are run under a specific PSP.\n\n## Default value\n\nBy default, PodSecurityPolicies are not defined.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/policy/pod-security-policy][1]\n\n## CIS controls\n\nVersion 6 5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://kubernetes.io/docs/concepts/policy/pod-security-policy\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.2.5","framework":"cis-kubernetes","requirement":"Pod-Security-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"frf-hog-dra","createdAt":1599601783271,"name":"Minimize the admission of containers with allowPrivilegeEscalation"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.22","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/default/docker` file permissions are correctly set to 644 or more restrictively.\n\n## Rationale\n\nThe `/etc/default/docker` file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be writeable only by root in order to ensure that it is not modified by less privileged users.\n\n## Audit\n\nVerify that the `/etc/default/docker` file permissions are set to `644` or more restrictively, by running: \n```\nstat -c %a /etc/default/docker\n```\n\n## Remediation\n\nRun the following command: `chmod 644 /etc/default/docker`\n\nThis sets the file permissions for this file to 644.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system and in this case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/admin/configuring/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.22","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.22\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"pqb-2cq-piw","createdAt":1599601845070,"name":"/etc/default/docker file permissions are set to 644 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.24","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIt is possible to attach to a particular `cgroup` when a container is instantiated. Confirming `cgroup` usage would ensure that containers are running in defined `cgroup`s.\n\n## Rationale\n\nSystem administrators typically define `cgroup`s in which containers are supposed to run. If `cgroup`s are not explicitly defined by the system administrator, containers run in the docker `cgroup` by default. At run time, it is possible to attach a container to a different `cgroup` other than the one originally defined. This usage should be monitored and confirmed, as by attaching to a different `cgroup`, excess permissions and resources might be granted to the container and this can therefore prove to be a security risk.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CgroupParent={{ .HostConfig.CgroupParent }}'` \n\nThis command returns the cgroup where the containers are running. If it is blank, it means that containers are running under the default docker cgroup. Any other return value indicates that the system is not configured in line with good security practice.\n\n## Remediation\n\nYou should not use the `--cgroup-parent` option within the docker run command unless strictly required.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, containers run under docker `cgroup`.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#specify-custom-cgroups\n2. https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Resource_Management_Guide/ch01.html\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n\n## Audit\n\nYou should run the following command: docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CgroupParent={{ .HostConfig.CgroupParent }}' The above command returns the cgroup where the containers are running. If it is blank, it means that containers are running under the default docker cgroup. Any other return value indicates that the system is not configured in line with good security practice.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.24","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.24\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"maa-bf8-zan","createdAt":1599601906764,"name":"cgroup usage is confirmed"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.12","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the etcd data directory ownership is set to `etcd:etcd`.\n\n## Rationale\n\n`etcd` is a highly-available key-value store used by Kubernetes deployments for persistent storage of all of its REST API objects. This data directory should be protected from any unauthorized reads or writes. It should be owned by `etcd:etcd`.\n\n## Audit\n\nOn the etcd server node, get the etcd data directory passed as an argument `--data-dir` from the command:\n\n```bash\nps -ef | grep etcd\n```\n\nBased on the etcd data directory found above, run the command:\n\n```bash\nstat -c %U:%G /var/lib/etcd\n```\n\nVerify the ownership is set to `etcd:etcd`.\n\n## Remediation\n\nOn the etcd server node, get the etcd data directory, passed as an argument `--data-dir`, from the below command: `ps -ef | grep etcd`\n\nRun the command (based on the etcd data directory found above): `chown etcd:etcd /var/lib/etcd`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, etcd data directory ownership is set to `etcd:etcd`.\n\n## References\n\n1. https://coreos.com/etcd/docs/latest/op-guide/configuration.html#data-dir\n2. https://kubernetes.io/docs/admin/etcd/\n\n## CIS controls\n\nVersion 6\n\n14 Controlled Access Based on the Need to Know\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.12","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"25d-zal-sfr","createdAt":1599601968321,"name":"etcd data directory ownership is set to etcd:etcd"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.5","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not disable timeouts on streaming connections.\n\n## Rationale\n\nSetting idle timeouts ensures that you are protected against denial-of-service attacks, inactive connections, and running out of ephemeral ports.\n\n*Note*: By default, `--streaming-connection-idle-timeout` is set to four hours, which might be too high for your environment. Setting this as appropriate would additionally ensure that such streaming connections are timed out after serving legitimate use cases.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--streaming-connection-idle-timeout` argument is not set to 0. If the argument is not present, and there is a Kubelet config file specified by `--config`, check that it does not set `streamingConnectionIdleTimeout` to 0.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `streamingConnectionIdleTimeout` to a value other than 0. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_SYSTEM_PODS_ARGS` variable.\n\n`--streaming-connection-idle-timeout=5m`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nLong-lived connections could be interrupted.\n\n## Default value\n\nBy default, `--streaming-connection-idle-timeout` is set to four hours.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://github.com/kubernetes/kubernetes/pull/18552][2]\n\n## CIS controls\n\nVersion 6.9 Limitation and Control of Network Ports, Protocols, and Services\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://github.com/kubernetes/kubernetes/pull/18552\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.5","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"xmg-h3a-wj4","createdAt":1599602030157,"name":"--streaming-connection-idle-timeout argument is not set to 0"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.3","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIf kube-proxy is running, and if it is using a file-based kubeconfig file, ensure that the proxy kubeconfig file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe kube-proxy kubeconfig file controls various parameters of the kube-proxy service in the worker node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system. It is possible to run kube-proxy with the kubeconfig parameters configured as a Kubernetes ConfigMap instead of a file. In this case, there is no proxy kubeconfig file.\n\n## Audit\n\nFind the kubeconfig file being used by `kube-proxy` by running the following command: `ps -ef | grep kube-proxy`. If `kube-proxy` is running, get the kubeconfig file location from the `--kubeconfig` parameter.\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %a <proxy kubeconfig file>`. Verify that if a file is specified and it exists, the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the each worker node:\n\n```\nchmod 644 <proxy kubeconfig file>\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, proxy file has permissions of 640.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-proxy/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior. \n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.        \n\n[1]: https://kubernetes.io/docs/admin/kube-proxy/\n\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.3","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"alc-y7j-j9q","createdAt":1599602091672,"name":"Proxy kubeconfig file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.7","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe TCP/IP port numbers below 1024are considered privileged ports. Normal users and processes are not allowed to use them for various security reasons. Docker does, however allow a container port to be mapped to a privileged port.\n\n## Rationale\n\nBy default, if the user does not specifically declare a container port to host port mapping, Docker automatically and correctly maps the container port to one available in the `49153`-`65535` range on the host. Docker does, however, allow a container port to be mapped to a privileged port on the host if the user explicitly declares it. This is because containers are executed with `NET_BIND_SERVICE` Linux kernel capability which does not restrict privileged port mapping. The privileged ports receive and transmit various pieces of data which are security sensitive and allowing containers to use them is not in line with good security practice.\n\n## Audit\n\nList all running containers instances and their port mappings by executing this command: `docker ps --quiet | xargs docker inspect --format '{{ .Id }}: Ports={{ .NetworkSettings.Ports }}'` You should then review the list and ensure that container ports are not mapped to host port numbers below `102.4`.\n\n## Remediation\n\nDo not map container ports to privileged host ports when starting a container. You should also ensure that there is no such container to host privileged port mapping declarations in the Dockerfile.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, mapping a container port to a privileged port on the host is allowed.\n\n**Note**: There might be certain cases where you want to map privileged ports, because if you forbid it, then the corresponding application has to run outside of a container.\n\nFor example: HTTP and HTTPS load balancers have to bind `80/tcp` and `443/tcp` respectively. Forbidding to map privileged ports effectively forbids from running those in a container, and mandates using an external load balancer. In such cases, those containers instances should be marked as exceptions for this recommendation.\n\n## References\n\n1. https://docs.docker.com/engine/userguide/networking/\n\n## CIS controls\n\nVersion 6\n\n9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system.\n\nVersion 7\n\n9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.7","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ua5-ygj-jad","createdAt":1599602153218,"name":"Privileged ports are not mapped within containers"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:Logging","security:compliance","control:3.2.1","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nKubernetes can audit the details of requests made to the API server. The `--audit-policy-file` flag must be set for this logging to be enabled.\n\n## Rationale\n\nLogging is an important detective control for all systems, to detect potential unauthorised access.\n\n## Audit\n\nRun the following command on one of the cluster master nodes: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-policy-file` is set. Review the contents of the file specified and ensure that it contains a valid audit policy.\n\n## Remediation\n\nCreate an audit policy file for your cluster.\n\n## Impact\n\nAudit logs will be created on the master nodes, which will consume disk space. Care should be taken to avoid generating too large volumes of log information as this could impact the available of the cluster nodes.\n\n## Default value\n\nUnless the `--audit-policy-file` flag is specified, no auditing will be carried out.\n\n## References\n\n1. [https://kubernetes.io/docs/tasks/debug-application-cluster/audit/][1]\n\n## CIS controls\n\nVersion 7.6.2 Activate audit logging - Ensure that local logging has been enabled on all systems and networking devices.\n\n[1]: https://kubernetes.io/docs/tasks/debug-application-cluster/audit/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"3.2.1","framework":"cis-kubernetes","requirement":"Logging","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-3.2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ehp-xpm-xi3","createdAt":1599602215207,"name":"Minimal audit policy is created"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.12","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe container's root filesystem should be treated as a 'golden image' by using Docker run's `--read-only` option. This prevents any writes to the container's root filesystem at container runtime and enforces the principle of immutable infrastructure.\n\n## Rationale\n\nEnabling this option forces containers at runtime to explicitly define their data writing strategy to persist or not persist their data. This also reduces security attack vectors since the container instance's filesystem cannot be tampered with or written to unless it has explicit read-write permissions on its filesystem folder and directories.\n\n## Audit\n\nRun this command on the docker host: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: ReadonlyRootfs={{ .HostConfig.ReadonlyRootfs }}'` \n\nIf this command returns `true`, it means the container's root filesystem is mounted read-only. If the above command returns `false`, it means the container's root filesystem is writeable.\n\n## Remediation\n\nAdd a `--read-only` flag at a container's runtime to enforce the container's root filesystem being mounted as read only. For example, `docker run <Run arguments> --read-only <Container Image Name or ID> <Command>`\n\nEnabling the `--read-only` option at a container's runtime should be used by administrators to force a container's executable processes to only write container data to explicit storage locations during its lifetime. \n\nExamples of explicit storage locations during a container's runtime include, but are not limited to:\n\n1. Using the `--tmpfs` option to mount a temporary file system for non-persistent data writes. `docker run --interactive --tty --read-only --tmpfs \"/run\" --tmpfs \"/tmp\" centos /bin/bash`\n2. Enabling Docker rw mounts at a container's runtime to persist container data directly on the Docker host filesystem. For example, `docker run --interactive --tty --read-only -v /opt/app/data:/run/app/data:rw centos /bin/bash`\n\n3. Utilizing the Docker shared-storage volume plugin for Docker data volume to persist container data. For example, `docker volume create -d convoy --opt o=size=20GB my-named-volume docker run --interactive --tty --read-only -v my-named-volume:/run/app/data centos /bin/bash`\n\n3. Transmitting container data outside of the Docker controlled area during the container's runtime for container data in order to ensure that it is persistent. Examples include hosted databases, network file shares and APIs.\n\n## Impact\n\nEnabling `--read-only` at container runtime may break some container OS packages if a data writing strategy is not defined. You should define what the container's data should and should not persist at runtime in order to decide which strategy to use. Example: Enable use `--tmpfs` for temporary file writes to /tmp Use Docker shared data volumes for persistent data writes\n\n## Default value\n\nBy default, a container has its root filesystem writeable, allowing all container processes to write files owned by the container's actual runtime user.\n\n## References\n\n1. http://docs.docker.com/reference/commandline/cli/#run\n2. https://docs.docker.com/engine/tutorials/dockervolumes/\n3. http://www.projectatomic.io/blog/2015/12/making-docker-images-write-only-in-production/\n4. https://docs.docker.com/engine/reference/commandline/run/#mount-tmpfs-tmpfs\n5. https://docs.docker.com/engine/tutorials/dockervolumes/#creating-and-mounting-a-data-volume-container\n\n## CIS controls\n\nVersion 6\n\n14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.12","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"635-mc8-3mr","createdAt":1599602276896,"name":"Container's root filesystem is mounted as read only"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","source:compliance-agent","control:1.2.8","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nRestrict kubelet nodes to reading only objects associated with them.\n\n## Rationale\n\nThe Node authorization mode only allows kubelets to read Secret, ConfigMap, PersistentVolume, and PersistentVolumeClaim objects associated with their nodes.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--authorization-mode` argument exists and is set to a value to include Node.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--authorization-mode` parameter to a value that includes Node. `--authorization-mode=Node,RBAC`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, Node authorization is not enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-apiserver/ ][1]\n2. [https://kubernetes.io/docs/admin/authorization/node/ ][2]\n3. [https://github.com/kubernetes/kubernetes/pull/46076 ][3]\n4. [https://acotten.com/post/kube17-security][4]\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.              \n\n[1]: https://kubernetes.io/docs/admin/kube-apiserver/ \n[2]: https://kubernetes.io/docs/admin/authorization/node/ \n[3]: https://github.com/kubernetes/kubernetes/pull/46076 \n[4]: https://acotten.com/post/kube17-security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.8","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vgg-kwx-7dh","createdAt":1599602338742,"name":"--authorization-mode argument includes Node"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.3.3","requirement:Controller-Manager","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUse individual service account credentials for each controller.\n\n## Rationale\n\nThe controller manager creates a service account per controller in the kube-system namespace, generates a credential for it, and builds a dedicated API client with that service account credential for each controller loop to use. Setting the `--use-service-account-credentials` to true runs each control loop within the controller manager using a separate service account credential. When used in combination with RBAC, this ensures that the control loops run with the minimum permissions required to perform their intended tasks.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--use-service-account-credentials` argument is set to true.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node to set the below parameter:\n\n```\n--use-service-account-credentials=true\n```\n\n## Impact\n\nWhatever authorizer is configured for the cluster, it must grant sufficient permissions to the service accounts to perform their intended tasks. When using the RBAC authorizer, those roles are created and bound to the appropriate service accounts in the kube-system namespace automatically with default roles and rolebindings that are auto-reconciled on startup. If using other authorization methods (ABAC, Webhook, etc.), the cluster deployer is responsible for granting appropriate permissions to the service accounts (the required permissions can be seen by inspecting the `controller-roles.yaml` and `controller-role-bindings.yaml` files for the RBAC roles.\n\n## Default value\n\nBy default, `--use-service-account-credentials` is set to false.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-controller-manager/ ][1]\n2. [https://kubernetes.io/docs/admin/service-accounts-admin/ ][2]\n3. [https://github.com/kubernetes/kubernetes/blob/release-1.6/plugin/pkg/auth/authorizer/rbac/bootstrappolicy/testdata/controller-roles.yaml ][3]\n4. [https://github.com/kubernetes/kubernetes/blob/release-1.6/plugin/pkg/auth/authorizer/rbac/bootstrappolicy/testdata/controller-role-bindings.yaml ][4]\n5. [https://kubernetes.io/docs/admin/authorization/rbac/#controller-roles][5]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.4 Controlled Use of Administrative Privileges \n\n[1]: https://kubernetes.io/docs/admin/kube-controller-manager/ \n[2]: https://kubernetes.io/docs/admin/service-accounts-admin/ \n[3]: https://github.com/kubernetes/kubernetes/blob/release-1.6/plugin/pkg/auth/authorizer/rbac/bootstrappolicy/testdata/controller-roles.yaml \n[4]: https://github.com/kubernetes/kubernetes/blob/release-1.6/plugin/pkg/auth/authorizer/rbac/bootstrappolicy/testdata/controller-role-bindings.yaml \n[5]: https://kubernetes.io/docs/admin/authorization/rbac/#controller-roles\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.3","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"b7m-bho-nat","createdAt":1599602400314,"name":"--use-service-account-credentials argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.6","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nProtect tuned kernel parameters from overriding kubelet default kernel parameter values.\n\n## Rationale\n\nKernel parameters are usually tuned and hardened by the system administrators before putting the systems into production. These parameters protect the kernel and the system. Your kubelet kernel defaults that rely on such parameters should be appropriately set to match the desired secured system state. Ignoring this could potentially lead to running pods with undesired kernel behavior.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--protect-kernel-defaults` argument is set to true. If the `--protect-kernel-defaults` argument is not present, check that there is a Kubelet config file specified by `--config`, and that the file sets `protectKernelDefaults` to `true`.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `protectKernelDefaults: true`. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_SYSTEM_PODS_ARGS` variable.\n\n`--protect-kernel-defaults=true`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nYou would have to re-tune kernel parameters to match kubelet parameters.\n\n## Default value\n\nBy default, `--protect-kernel-defaults` is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.3 Secure Configurations for Hardware and Software on Mobile Devices, Laptops, Workstations, and Servers\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.6","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"uiw-kms-wwu","createdAt":1599602462044,"name":"--protect-kernel-defaults argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.4","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/var/lib/docker`.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories. For example, audit `/var/lib/docker`, which holds all the information about containers it should be audited.\n\n## Audit\n\nVerify that there is an audit rule applied to the `/var/lib/docker` directory. To see the rule for the `/var/lib/docker` directory, run: \n\n```\nauditctl -l | grep /var/lib/docker\n```\n\n## Remediation\n\nYou should add a rule for the `/var/lib/docker` directory. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /var/lib/docker -k docker \n```\n\nThen restart the audit daemon:\n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.4","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tfa-927-tto","createdAt":1599602523672,"name":"/var/lib/docker auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.31","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe Docker socket docker.sock should not be mounted inside a container.\n\n## Rationale\n\nIf the Docker socket is mounted inside a container it could allow processes running within the container to execute Docker commands which would effectively allow for full control of the host.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Volumes={{ .Mounts }}' | grep docker.sock` This returns any instances where `docker.sock` has been mapped to a container as a volume.\n\n## Remediation\n\nYou should ensure that no containers mount docker.sock as a volume.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, docker.sock is not mounted inside containers.\n\n## References\n\n1. https://raesene.github.io/blog/2016/03/06/The-Dangers-Of-Docker.sock/\n2. https://forums.docker.com/t/docker-in-docker-vs-mounting-var-run-docker-sock/9450/2\n3. https://github.com/docker/docker/issues/21109\n\n## CIS controls\n\nVersion 6\n\n9 Limitation and Control of Network Ports, Protocols, and Services\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.31","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.31\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"3iw-zus-yz3","createdAt":1599602585460,"name":"Docker socket is not mounted inside any containers"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.7","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not always authorize all requests.\n\n## Rationale\n\nThe API Server, can be configured to allow all requests. This mode should not be used on any production cluster.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--authorization-mode` argument exists and is not set to `AlwaysAllow`.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--authorization-mode` parameter to values other than `AlwaysAllow`. One such example could be as below:\n\n```\n--authorization-mode=RBAC\n```\n\n## Impact\n\nOnly authorized requests will be served.\n\n## Default value\n\nBy default, `AlwaysAllow` is not enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-apiserver/ ][1]\n2. [https://kubernetes.io/docs/admin/authorization/node/ ][2]\n\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.              \n\n[1]: https://kubernetes.io/docs/admin/kube-apiserver/ \n[2]: https://kubernetes.io/docs/admin/authorization/node/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.7","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"kli-btm-jbr","createdAt":1599602646953,"name":"--authorization-mode argument is not set to AlwaysAllow (API server)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.4","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUsing the `--privileged` flag provides all Linux kernel capabilities to the container to which it is applied and therefore overwrites the `--cap-add` and `--cap-drop` flags. For this reason, ensure that it is not used.\n\n## Rationale\n\nThe `--privileged` flag provides all capabilities to the container to which it is applied, and also lifts all the limitations enforced by the device cgroup controller. As a consequence this the container has most of the rights of the underlying host. This flag only exists to allow for specific use cases (for example running Docker within Docker) and should not generally be used.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Privileged={{ .HostConfig.Privileged }}'` This command returns `Privileged=false` for each container instance.\n\n## Remediation\n\nDo not run containers with the `--privileged` flag. For example, do not start a container using the command `docker run --interactive --tty --privileged centos /bin/bash`\n\n## Impact\n\nIf you start a container without the `--privileged` flag, it will not have excessive default capabilities.\n\n## Default value\n\nFalse\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.4","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"rbd-urm-klo","createdAt":1599602708557,"name":"Privileged containers are not used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.21","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable profiling, if not needed.\n\n## Rationale\n\nProfiling allows for the identification of specific performance bottlenecks. It generates a significant amount of program data that could potentially be exploited to uncover system and program details. If you are not experiencing any bottlenecks and do not need the profiler for troubleshooting purposes, it is recommended to turn it off to reduce the potential attack surface.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--profiling` argument is set to `false`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the below parameter. --profiling=false\n\n## Impact\n\nProfiling information would not be available.\n\n## Default value\n\nBy default, profiling is enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.21","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.21\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"wk0-7yo-dw9","createdAt":1599602770265,"name":"--profiling argument is set to false (API server)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.18","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the daemon.json file permissions are correctly set to 644 or more restrictively.\n\n## Rationale\n\nThe daemon.json file contains sensitive parameters that may alter the behavior of the docker daemon. Therefore it should be writeable only by root to ensure it is not modified by less privileged users.\n\n## Audit\n\nVerify that the `daemon.json` file permissions are set to `644` or more restrictive, by running: \n```\nstat -c %a /etc/docker/daemon.json\n```\n\n## Remediation\n\nRun `chmod 644 /etc/docker/daemon.json`\n\nThis sets the file permissions for this file to 644.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system, and in that case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.18","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.18\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"7df-4w8-g7l","createdAt":1599602831833,"name":"daemon.json file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.2","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the API server pod specification file ownership is set to root:root.\n\n## Rationale\n\nThe API server pod specification file controls various parameters that set the behavior of the API server. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/manifests/kube-apiserver.yaml\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, chown root:root /etc/kubernetes/manifests/kube-apiserver.yaml\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the kube-apiserver.yaml file ownership is set to root:root.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6 5.1 Minimize And Sparingly Use Administrative Privileges Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior. Version 7 5.2 Maintain Secure Images Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.2","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vbb-t30-k0f","createdAt":1599602893246,"name":"API server pod specification file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","security:compliance","scored:false","control:1.2.33","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEncrypt etcd key-value store.\n\n## Rationale\n\netcd is a highly available key-value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be encrypted at rest to avoid any disclosures.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--encryption-provider-config` argument is set to a EncryptionConfig file. Additionally, ensure that the EncryptionConfig file has all the desired resources covered especially any secrets.\n\n## Remediation\n\nFollow the Kubernetes documentation and configure a EncryptionConfig file. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--encryption-provider-config` parameter to the path of that file: `--encryption-provider-config=</path/to/EncryptionConfig/File>`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `--encryption-provider-config` is not set.\n\n## References\n\n1. https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/ \n2. https://acotten.com/post/kube17-security \n3. https://kubernetes.io/docs/admin/kube-apiserver/ \n4. https://github.com/kubernetes/features/issues/92\n\n## CIS controls\n\nVersion 6 14.5 Encrypt At Rest Sensitive Information Sensitive information stored on systems shall be encrypted at rest and require a secondary authentication mechanism, not integrated into the operating system, in order to access the information. \n\nVersion 7 14.8 Encrypt Sensitive Information at Rest Encrypt all sensitive information at rest using a tool that requires a secondary authentication mechanism not integrated into the operating system, in order to access the information.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.33","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.33\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"7rg-crl-fs0","createdAt":1599602954959,"name":"--encryption-provider-config argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:5.28","security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should use the `--pids-limit` flag at container runtime.\n\n## Rationale\n\nAttackers could launch a fork bomb with a single command inside the container. This fork bomb could crash the entire system and would require a restart of the host to make the system functional again. Using the PIDs cgroup parameter --pids-limit would prevent this kind of attack by restricting the number of forks that can happen inside a container within a specified time frame.\n\n## Audit\n\nRun this command and ensure that `PidsLimit` is not set to 0 or -\n1.  A PidsLimit of 0 or -1 means that any number of processes can be forked concurrently inside the container. \n\n```\ndocker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: PidsLimit={{ .HostConfig.PidsLimit }}'\n```\n\n## Remediation\n\nUse `--pids-limit` flag with an appropriate value when launching the container. For example, `docker run -it --pids-limit 100 <Image_ID>`\n\nIn the above example, the number of processes allowed to run at any given time is set to 100. After a limit of 100 concurrently running processes is reached, Docker would restrict any new process creation.\n\n## Impact\n\nSet the PIDs limit value as appropriate. Incorrect values might leave containers unusable.\n\n## Default value\n\nThe Default value for `--pids-limit` is 0 which means there is no restriction on the number of forks. Note that the PIDs cgroup limit works only for kernel versions 4.3 and higher.\n\n## References\n\n1. https://github.com/docker/docker/pull/18697\n2. https://docs.docker.com/engine/reference/commandline/run/#options\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.28","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.28\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tmp-lms-u8p","createdAt":1599603016485,"name":"PIDs cgroup limit is used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.6","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the scheduler pod specification file ownership is set to root:root.\n\n## Rationale\n\nThe scheduler pod specification file controls various parameters that set the behavior of the kube-scheduler service in the master node. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/manifests/kube-scheduler.yaml\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/manifests/kube-scheduler.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kube-scheduler.yaml` file ownership is set to root:root.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-scheduler/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.6","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"y79-4ts-a0k","createdAt":1599603078027,"name":"Scheduler pod specification file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","control:1.4.1","security:compliance","requirement:Scheduler","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable profiling, if not needed.\n\n## Rationale\n\nProfiling allows for the identification of specific performance bottlenecks. It generates a significant amount of program data that could potentially be exploited to uncover system and program details. If you are not experiencing any bottlenecks and do not need the profiler for troubleshooting purposes, it is recommended to turn it off to reduce the potential attack surface.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-scheduler\n```\nVerify that the `--profiling` argument is set to `false`.\n\n## Remediation\n\nEdit the Scheduler pod specification file `/etc/kubernetes/manifests/kube-scheduler.yaml` file on the master node and set the below parameter:\n\n```\n--profiling=false\n```\n\n## Impact\n\nProfiling information would not be available.\n\n## Default value\n\nBy default, profiling is enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-scheduler/ ][1]\n2. [https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md][2]\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges                \n\n[1]: https://kubernetes.io/docs/admin/kube-scheduler/ \n[2]: https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.4.1","framework":"cis-kubernetes","requirement":"Scheduler","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.4.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"hya-urf-09b","createdAt":1599603139661,"name":"--profiling argument is set to false (Scheduler)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.25","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nRotate log files on reaching 100 MB or as appropriate.\n\n## Rationale\n\nKubernetes automatically rotates the log files. Retaining old log files ensures that you would have sufficient log data available for carrying out any investigation or correlation. If you have set file size of 100 MB and the number of old log files to keep as 10, you would approximate have 1 GB of log data that you could potentially use for your analysis.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-log-maxsize` argument is set to `100` or as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--audit-log-maxsize` parameter to an appropriate size in MB. For example, to set it as 100 MB: `--audit-log-maxsize=100`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, auditing is not enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/concepts/cluster-administration/audit/ 3. https://github.com/kubernetes/features/issues/22\n\n## CIS controls\n\nVersion 6 6.3 Ensure Audit Logging Systems Are Not Subject To Loss (i.e. rotation/archive) Ensure that all systems that store logs have adequate storage space for the logs generated on a regular basis, so that log files will not fill up between log rotation intervals. The logs must be archived and digitally signed on a periodic basis. Version 7 6.4 Ensure adequate storage for logs Ensure that all systems that store logs have adequate storage space for the logs generated.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.25","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.25\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qhy-gng-bh4","createdAt":1599603202907,"name":"--audit-log-maxsize argument is set to 100 or as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.17","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the daemon.json file individual ownership and group ownership is correctly set to root.\n\n## Rationale\n\nThe daemon.json file contains sensitive parameters that could alter the behavior of the docker daemon. It should therefore be owned and group owned by root to ensure it can not be modified by less privileged users.\n\n## Audit\n\nVerify that the `daemon.json` file is owned and group-owned by root by running: \n```\nstat -c %U:%G /etc/docker/daemon.json | grep -v root:root \n```\nThe command should return no results.\n\n## Remediation\n\nRun `chown root:root /etc/docker/daemon.json`\n\nThis sets the ownership and group ownership for the file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system, and in that case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.17","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.17\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"hlb-qzw-opk","createdAt":1599603264485,"name":"daemon.json file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.8","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the certificate authorities file ownership is set to `root:root`.\n\n## Rationale\n\nThe certificate authorities file controls the authorities used to validate API requests. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the following command: `ps -ef | grep kubelet`. Find the file specified by the `--client-ca-file` argument. Run the following command: `stat -c %U:%G <filename>`. Verify that the ownership is set to `root:root`.\n\n## Remediation\n\nRun the following command to modify the ownership of the `--client-ca-file`:\n\n```\nchown root:root <filename>\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default no `--client-ca-file` is specified.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/authentication/#x509-client-certs][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/authentication/#x509-client-certs\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.8","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ifc-9ej-k7k","createdAt":1599603326156,"name":"Client certificate authorities file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.16","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker socket file has permissions of 660 or are configured more restrictively.\n\n## Rationale\n\nOnly root and the members of the docker group should be allowed to read and write to the default Docker Unix socket. The Docker socket file should therefore have permissions of 660 or more restrictive permissions.\n\n## Audit\n\nVerify that the Docker socket file has permissions of `660` or more restrictive, by running: \n```\nstat -c %a /var/run/docker.sock\n```\n\n## Remediation\n\nRun the command `chmod 660 /var/run/docker.sock`\n\nThis sets the file permissions of the Docker socket file to 660.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for the Docker socket file is correctly set to 660.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option\n2. https://docs.docker.com/engine/reference/commandline/dockerd/#bind-docker-to-another-hostport-or-a-unix-socket\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.16","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.16\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"jxv-zrr-1c1","createdAt":1599603387716,"name":"Docker socket file permissions are set to 660 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","control:1.2.3","security:compliance","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use token based authentication.\n\n## Rationale\n\nThe token-based authentication utilizes static tokens to authenticate requests to the apiserver. The tokens are stored in clear-text in a file on the apiserver, and cannot be revoked or rotated without restarting the apiserver. Hence, do not use static token-based authentication.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver \n```\nVerify that the `--token-auth-file` argument does not exist.\n\n## Remediation\n\nFollow the documentation and configure alternate mechanisms for authentication. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and remove the `--token-auth-file=<filename>` parameter.\n\n## Impact\n\nYou will have to configure and use alternate authentication mechanisms such as certificates. Static token based authentication could not be used.\n\n## Default value\n\nBy default, `--token-auth-file` argument is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/authentication/#static-token-file\n2. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n16.14 Encrypt/Hash All Authentication Files And Monitor Their Access - Verify that all authentication files are encrypted or hashed and that these files cannot be accessed without root or administrator privileges. Audit all access to password files in the system.\n\nVersion 7\n\n16.4 Encrypt or Hash all Authentication Credentials - Encrypt or hash with a salt all authentication credentials when stored.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.3","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mvv-hb7-ucv","createdAt":1599603449449,"name":"--token-auth-file parameter is not set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.12","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/usr/sbin/runc`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `/usr/sbin/runc`, and so it should be audited.\n\n## Audit\n\nVerify that there is an audit rule corresponding to the `/usr/sbin/runc` file. To display the rule for the `/usr/sbin/runc` file, run:\n\n```\nauditctl -l | grep /usr/sbin/runc\n```\n\n## Remediation\n\nYou should add a rule for `/usr/sbin/runc` file. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /usr/sbin/runc -k docker\n```\n\nThen restart the audit daemon:\n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The `file/usr/sbin/runc` may not be present on the system, and in that case this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n2. [https://github.com/docker/docker/pull/20662][2]\n3. [https://containerd.tools/][3]\n4. [https://github.com/opencontainers/runc][4]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html \n[2]: https://github.com/docker/docker/pull/20662 \n[3]: https://containerd.tools/ \n[4]: https://github.com/opencontainers/runc\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.12","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ksp-ylk-dub","createdAt":1599603510904,"name":"/usr/sbin/runc auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.10","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSetup TLS connection on the Kubelets.\n\n## Rationale\n\nKubelet communication contains sensitive parameters that should remain encrypted in transit. Configure the Kubelets to serve only HTTPS traffic.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--tls-cert-file` and `--tls-private-key-file` arguments exist and they are set as appropriate. If these arguments are not present, check that there is a Kubelet config specified by `--config` and that it contains appropriate settings for `tlsCertFile` and `tlsPrivateKeyFile`.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `tlsCertFile` to the location of the certificate file to use to identify this Kubelet, and `tlsPrivateKeyFile` to the location of the corresponding private key file. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameters in K`UBELET_CERTIFICATE_ARGS` variable.\n\n```\n--tls-cert-file=<path/to/tls-certificate-file>\n--tls-private-key-file=<path/to/tls-key-file>\n```\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nTLS and client certificate authentication must be configured for your Kubernetes cluster deployment.\n\n## Default value\n\nBy default, `--tls-cert-file` and `--tls-private-key-file` arguments are not set. If `--tls-cert-file` and `--tls-private-key-file` are not provided, a self-signed certificate and key are generated for the public address and saved to the directory passed to `--cert-dir`.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [http://rootsquash.com/2016/05/10/securing-the-kubernetes-api/ ][2]\n3. [https://github.com/kelseyhightower/docker-kubernetes-tls-guide ][3]\n4. [https://jvns.ca/blog/2017/08/05/how-kubernetes-certificates-work/][4]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted.\n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: http://rootsquash.com/2016/05/10/securing-the-kubernetes-api/\n[3]: https://github.com/kelseyhightower/docker-kubernetes-tls-guide\n[4]: https://jvns.ca/blog/2017/08/05/how-kubernetes-certificates-work/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.10","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"gqg-7cf-6bu","createdAt":1599603572402,"name":"--tls-cert-file and --tls-private-key-file arguments are set as appropriate (Kubelet)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:1.1.3","framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the controller manager pod specification file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe controller manager pod specification file controls various parameters that set the behavior of the Controller Manager on the master node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/manifests/kube-controller-manager.yaml\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/manifests/kube-controller-manager.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `kube-controller-manager.yaml` file has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.3","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"pr0-hcf-xkw","createdAt":1599603633988,"name":"Controller manager pod specification file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","source:compliance-agent","control:1.1.19","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the Kubernetes PKI directory and file ownership is set to root:root.\n\n## Rationale\n\nKubernetes makes use of a number of certificates as part of its operation. You should set the ownership of the directory containing the PKI information and all files in that directory to maintain their integrity. The directory and files should be owned by root:root.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nls -laR /etc/kubernetes/pki/\n```\n\nVerify the ownership of all files and directories in this hierarchy is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown -R root:root /etc/kubernetes/pki/`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `/etc/kubernetes/pki/` directory and all of the files and directories contained within it, are set to be owned by the root user.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.19","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.19\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tgm-6a5-ttf","createdAt":1599603695482,"name":"Kubernetes PKI directory and file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.20","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not disable the secure port.\n\n## Rationale\n\nThe secure port is used to serve https with authentication and authorization. If you disable it, no https traffic is served and all traffic is served unencrypted.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--secure-port` argument is either not set or is set to an integer value between `1` and `65535`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and either remove the --secure-port parameter or set it to a different (non-zero) desired port.\n\n## Impact\n\nYou need to set the API Server up with the right TLS certificates.\n\n## Default value\n\nBy default, port 6443 is used as the secure port.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. Version 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.20","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.20\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"5w3-iw4-y16","createdAt":1599603757033,"name":"--secure-port argument is not set to 0"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Controller-Manager","source:compliance-agent","control:1.3.7","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not bind the Controller Manager service to non-loopback insecure addresses.\n\n## Rationale\n\nThe Controller Manager API service which runs on port 10252/TCP by default is used for health and metrics information and is available without authentication or encryption. As such it should only be bound to a localhost interface, to minimize the cluster's attack surface\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--bind-address` argument is set to `127.0.0.1`.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and ensure the correct value for the `--bind-address` parameter.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `--bind-address` parameter is set to `0.0.0.0`.\n\n## References\n\n1. https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager/ \n\n*Notes*: Although the current Kubernetes documentation site says that `--address` is deprecated in favour of `--bind-address`. Kubeadm 1.11 still makes use of `--address`.\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.7","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"pvo-5un-k18","createdAt":1599603818624,"name":"--bind-address argument is set to 127.0.0.1 (Controller Manager)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.6","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nVerify kubelet's certificate before establishing connection.\n\n## Rationale\n\nThe connections from the apiserver to the kubelet are used for fetching logs for pods, attaching (through kubectl) to running pods, and using the kubelets port-forwarding functionality. These connections terminate at the kubelets HTTPS endpoint. By default, the apiserver does not verify the kubelets serving certificate, which makes the connection subject to man-in-the-middle attacks, and unsafe to run over untrusted and/or public networks.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--kubelet-certificate-authority` argument exists and is set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and setup the TLS connection between the apiserver and kubelets. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--kubelet-certificate-authority` parameter to the path to the cert file for the certificate authority. \n\n```\n--kubelet-certificate-authority=<ca-string>\n```\n\n## Impact\n\nYou require TLS to be configured on apiserver as well as kubelets.\n\n## Default value\n\nBy default, `--kubelet-certificate-authority` argument is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://kubernetes.io/docs/admin/kubelet-authentication-authorization/ \n3. https://kubernetes.io/docs/concepts/cluster-administration/master-node-communication/#apiserver---kubelet\n\n## CIS controls\n\nVersion 6.3.4 Use Only Secure Channels For Remote System Administration - Perform all remote administration of servers, workstation, network devices, and similar equipment over secure channels. Protocols such as telnet, VNC, RDP, or others that do not actively support strong encryption should only be used if they are performed over a secondary encryption channel, such as SSL, TLS or IPSEC. \n\nVersion 7.4.5 Use Multifactor Authentication For All Administrative Access - Use multi-factor authentication and encrypted channels for all administrative account access.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.6","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"sbm-nxt-qv3","createdAt":1599603880124,"name":"--kubelet-certificate-authority argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","control:2.4","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEtcd should be configured to make use of TLS encryption for peer connections.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be encrypted in transit and also amongst peers in the etcd clusters.\n\n## Audit\n\nThis recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable.\n\nRun the following command on the etcd server node: \n```\nps -ef | grep etcd\n```\nVerify that the `--peer-cert-file` and `--peer-key-file` arguments are set as appropriate. \n\n## Remediation\n\nFollow the etcd service documentation and configure peer TLS encryption as appropriate for your etcd cluster. Then, edit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and set the below parameters:\n\n```\n--peer-cert-file=</path/to/peer-cert-file> \n--peer-key-file=</path/to/peer-key-file>\n```\n\n## Impact\n\nEtcd cluster peers would need to set up TLS for their communication.\n\n## Default value\n\n*Note*: This recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable. By default, peer communication over TLS is not configured.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][1]\n2. [https://kubernetes.io/docs/admin/etcd/][2]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.  \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.4","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"lzq-1mk-xc7","createdAt":1599603941695,"name":"--peer-cert-file and --peer-key-file arguments are set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.5","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/etc/docker`.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privilege and its behavior depends on some key files and directories, including `/etc/docker`. This holds various certificates and keys used for TLS communication between Docker daemon and Docker client and so it should be audited.\n\n## Audit\n\nVerify that there is an audit rule applied to the `/etc/docker` directory. To see the rule for the `/etc/docker` directory, run: \n\n```\nauditctl -l | grep /etc/docker\n```\n\n## Remediation\n\nYou should add a rule for the `/etc/docker` directory. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /etc/docker -k docker \n```\n\nThen restart the audit daemon:\n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.5","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"5ns-uab-zcf","createdAt":1599604003342,"name":"/etc/docker auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.16","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIPC (POSIX/SysV IPC) namespace provides separation of named shared memory segments, semaphores and message queues. The IPC namespace on the host should therefore not be shared with containers and should remain isolated.\n\n## Rationale\n\nThe IPC namespace provides separation of IPC between the host and containers. If the host's IPC namespace is shared with the container, it would allow processes within the container to see all of IPC communications on the host system. This would remove the benefit of IPC level isolation between host and containers. An attacker with access to a container could get access to the host at this level with major consequences. The IPC namespace should therefore not be shared between the host and its containers.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: IpcMode={{ .HostConfig.IpcMode }}'` \n\nIf the command returns `host`, it means that the host IPC namespace is shared with the container. Any other result means that it is not shared, and that the system is configured in line with good security practice.\n\n## Remediation\n\nDo not start a container with the `--ipc=host` argument. For example, do not start a container with the command `docker run --interactive --tty --ipc=host centos /bin/bash`\n\n## Impact\n\nShared memory segments are used in order to accelerate interprocess communications, commonly in high-performance applications. If this type of application is containerized into multiple containers, you might need to share the IPC namespace of the containers in order to achieve high performance. Under these circumstances, you should still only share container specific IPC namespaces and not the host IPC namespace. A container's IPC namespace can be shared with another container. For example, `docker run --interactive --tty --ipc=container:e3a7a1a97c58 centos /bin/bash`\n\n## Default value\n\nBy default, all containers have their IPC namespace enabled and host IPC namespace is not shared with any container.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#ipc-settings-ipc\n2. http://man7.org/linux/man-pages/man7/namespaces.7.html\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.16","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.16\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qpe-nj2-sl8","createdAt":1599604030036,"name":"Host's IPC namespace is not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","control:1.3.2","security:compliance","requirement:Controller-Manager","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable profiling, if not needed.\n\n## Rationale\n\nProfiling allows for the identification of specific performance bottlenecks. It generates a significant amount of program data that could potentially be exploited to uncover system and program details. If you are not experiencing any bottlenecks and do not need the profiler for troubleshooting purposes, it is recommended to turn it off to reduce the potential attack surface.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--profiling` argument is set to `false`.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and set the below parameter:\n\n```\n--profiling=false\n```\n\n## Impact\n\nProfiling information would not be available.\n\n## Default value\n\nBy default, profiling is enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-controller-manager/ ][1]\n2. [https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md][2]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.4 Controlled Use of Administrative Privileges \n\n[1]: https://kubernetes.io/docs/admin/kube-controller-manager/ \n[2]: https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.2","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"1ie-ddf-7wm","createdAt":1599604031896,"name":"--profiling argument is set to false (Controller Manager)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.6","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/docker` directory permissions are correctly set to 755 or more restrictively.\n\n## Rationale\n\nThe `/etc/docker` directory contains certificates and keys in addition to various sensitive files. It should therefore only be writeable by root to ensure that it can not be modified by a less privileged user.\n\n## Audit\n\nYou should execute the command below to verify that the directory has permissions of 755+: \n\n```\nstat -c %a /etc/docker\n```\n\n## Remediation\n\nRun the following command: `chmod 755 /etc/docker`\n\nThis sets the permissions for the directory to 755.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for this directory are set to 755.\n\n## References\n\n1. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.6","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"een-7do-u18","createdAt":1599604083943,"name":"/etc/docker directory permissions are set to 755 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.30","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSetup TLS connection on the API server.\n\n## Rationale\n\nAPI server communication contains sensitive parameters that should remain encrypted in transit. Configure the API server to serve only HTTPS traffic.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--tls-cert-file` and `--tls-private-key-file` arguments exist and they are set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection on the apiserver. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the TLS certificate and private key file parameters. \n```\n--tls-cert-file=<path/to/tls-certificate-file> \n--tls-private-key-file=<path/to/tls-key-file>\n```\n\n## Impact\n\nTLS and client certificate authentication must be configured for your Kubernetes cluster deployment.\n\n## Default value\n\nBy default, `--tls-cert-file` and `--tls-private-key-file` arguments are not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. http://rootsquash.com/2016/05/10/securing-the-kubernetes-api/ \n3. https://github.com/kelseyhightower/docker-kubernetes-tls-guide\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \nVersion 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.30","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.30\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"m9r-8ka-arc","createdAt":1599604115727,"name":"--tls-cert-file and --tls-private-key-file arguments are set as appropriate (API server)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","security:compliance","scored:false","control:1.1.20","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that Kubernetes PKI certificate files have permissions of 644 or more restrictive.\n\n## Rationale\n\nKubernetes makes use of a number of certificate files as part of the operation of its components. The permissions on these files should be set to 644 or more restrictive to protect their integrity.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nfind /etc/kubernetes/pki -name \"*.crt\" | xargs stat -c '%n %a'\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod -R 644 /etc/kubernetes/pki/*.crt`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the certificates used by Kubernetes are set to have permissions of 644\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.20","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.20\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ion-6fc-xd4","createdAt":1599604147464,"name":"Kubernetes PKI certificate file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.5","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the scheduler pod specification file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe scheduler pod specification file controls various parameters that set the behavior of the Scheduler service in the master node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/manifests/kube-scheduler.yaml\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/manifests/kube-scheduler.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kube-scheduler.yaml` file has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-scheduler/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.5","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qxe-hc6-qlm","createdAt":1599604179189,"name":"Scheduler pod specification file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","source:compliance-agent","control:2.1","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nConfigure TLS encryption for the etcd service.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be encrypted in transit.\n\n## Audit\n\nRun the following command on the etcd server node:\n```\nps -ef | grep etcd\n```\nVerify that the `--cert-file` and the `--key-file` arguments are set as appropriate.\n\n## Remediation\n\nFollow the etcd service documentation and configure TLS encryption. Then, edit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and set the below parameters:\n\n```\n--cert-file=</path/to/ca-file> \n--key-file=</path/to/key-file>\n```\n\n## Impact\n\nClient connections only over TLS would be served.\n\n## Default value\n\nBy default, TLS encryption is not set.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][1]\n2. [https://kubernetes.io/docs/admin/etcd/][2]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.                \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.1","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ezf-1mn-luf","createdAt":1599604210918,"name":"--cert-file and --key-file arguments are set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.26","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSet global request timeout for API server requests as appropriate.\n\n## Rationale\n\nSetting global request timeout allows extending the API server request timeout limit to a duration appropriate to the user's connection speed. By default, it is set to 60 seconds which might be problematic on slower connections making cluster resources inaccessible once the data volume for requests exceeds what can be transmitted in 60 seconds. But, setting this timeout limit to be too large can exhaust the API server resources making it prone to Denial-of-Service attack. Hence, it is recommended to set this limit as appropriate and change the default limit of 60 seconds only if needed.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--request-timeout` argument is either not set or set to an appropriate value.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml and set the below parameter as appropriate and if needed. For example, --request-timeout=300s\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, --request-timeout is set to 60 seconds.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://github.com/kubernetes/kubernetes/pull/51415\n\n## CIS controls\n\nVersion 6 14.6 Enforce Detailed Audit Logging For Sensitive Information Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. Version 7 14.9 Enforce Detail Logging for Access or Changes to Sensitive Data Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.26","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.26\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"1kt-cbt-hvl","createdAt":1599604242564,"name":"--request-timeout argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Pod-Security-Policies","control:5.2.4","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not generally permit containers to be run with the hostNetwork flag set to true.\n\n## Rationale\n\nA container running in the host's network namespace could access the local loopback device, and could access network traffic to and from other pods. There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to share the host network namespace. If you have need to run containers which require hostNetwork, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n## Audit\n\nGet the set of PSPs with the following command: `kubectl get psp`\n\nFor each PSP, check whether privileged is enabled: `kubectl get psp <name> -o=jsonpath='{.spec.hostNetwork}'`\n\nVerify that there is at least one PSP which does not return true.\n\n## Remediation\n\nCreate a PSP as described in the Kubernetes documentation, ensuring that the `.spec.hostNetwork` field is omitted or set to false.\n\n## Impact\n\nPods defined with spec.hostNetwork: true will not be permitted unless they are run under a specific PSP.\n\n## Default value\n\nBy default, PodSecurityPolicies are not defined.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/policy/pod-security-policy][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://kubernetes.io/docs/concepts/policy/pod-security-policy\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.2.4","framework":"cis-kubernetes","requirement":"Pod-Security-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mlb-fwt-s80","createdAt":1599604274257,"name":"Minimize the admission of containers wishing to share the host network namespace"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:1.2.3","security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit all Docker daemon activities.\n\n## Rationale\n\nAs well as auditing the normal Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges. It is very important to audit its activities and usage.\n\n## Audit\n\nVerify that there are audit rules for the Docker daemon. To see the rules associated with the Docker daemon, run: \n\n```\nauditctl -l | grep /usr/bin/dockerd\n```\n\n## Remediation\n\nYou should add rules for the Docker daemon. For example, add the following line to the `/etc/audit/audit.rules` file: \n\n```\n-w /usr/bin/dockerd -k docker \n```\n\nThen restart the audit daemon using the following command:\n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, the Docker daemon is not audited.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.6.2 Ensure Audit Log Settings Support Appropriate Log Entry Formatting - Validate audit log settings for each hardware device and the software installed on it, ensuring that logs include a date, timestamp, source addresses, destination addresses, and various other useful elements of each packet and/or transaction. Systems should record logs in a standardized format such as syslog entries or those outlined by the Common Event Expression initiative. If systems cannot generate logs in a standardized format, log normalization tools can be deployed to convert logs into such a format. \n\nVersion 7.6.2 Activate audit logging - Ensure that local logging has been enabled on all systems and networking devices. \n\nVersion 6.3 Enable Detailed Logging - Enable system logging to include detailed information such as an event source, date, user, timestamp, source addresses, destination addresses, and other useful elements.                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.3","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"fpu-oe5-feu","createdAt":1599604305682,"name":"Auditing is configured for the Docker daemon"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.25","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should restrict the container from acquiring additional privileges via SUID or SGID bits.\n\n## Rationale\n\nA process can set the `no_new_priv` bit in the kernel and this persists across forks, clones and execve. The `no_new_priv` bit ensures that the process and its child processes do not gain any additional privileges via SUID or SGID bits. This reduces the danger associated with many operations because the possibility of subverting privileged binaries is lessened.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: SecurityOpt={{ .HostConfig.SecurityOpt }}'` \n\nThis command returns all of the security options currently configured for containers. The option `no-new-privileges` should be one of them.\n\n## Remediation\n\nStart your container with the options `docker run --rm -it --security-opt=no-new-privileges ubuntu bash`\n\n## Impact\n\nThe `no_new_priv` option prevents LSMs like SELinux from allowing processes to acquire new privileges.\n\n## Default value\n\nBy default, new privileges are not restricted.\n\n## References\n\n1. https://github.com/projectatomic/atomic-site/issues/269\n2. https://github.com/docker/docker/pull/20727\n3. https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt\n4. https://lwn.net/Articles/475678/\n5. https://lwn.net/Articles/475362/\n\n## CIS controls\n\nVersion 6\n\n5 Controlled Use of Administration Privileges Controlled Use of Administration Privileges\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.25","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.25\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"cft-3kh-z3l","createdAt":1599604337425,"name":"Container is restricted from acquiring additional privileges"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.4","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable the read-only port.\n\n## Rationale\n\nThe Kubelet process provides a read-only API in addition to the main Kubelet API. Unauthenticated access is provided to this read-only API which could possibly retrieve potentially sensitive information about the cluster.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--read-only-port` argument exists and is set to 0. If the `--read-only-port` argument is not present, check that there is a Kubelet config file specified by `--config`. Check that if there is a readOnlyPort entry in the file, it is set to 0.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `readOnlyPort` to 0. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_SYSTEM_PODS_ARGS` variable.\n\n`--read-only-port=0`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nRemoval of the read-only port will require that any service which made use of it will need to be re-configured to use the main Kubelet API.\n\n## Default value\n\nBy default, `--read-only-port` is set to 10255/TCP. However, if a config file is specified by `--config` the default value for `readOnlyPort` is 0.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system.\n\nVersion 7 9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.4","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"dgo-kog-lle","createdAt":1599604369044,"name":"--read-only-port argument is set to 0"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.4","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIf kube-proxy is running, ensure that the file ownership of its kubeconfig file is set to root:root.\n\n## Rationale\n\nThe kubeconfig file for kube-proxy controls various parameters for the kube-proxy service in the worker node. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nFind the kubeconfig file being used by `kube-proxy` by running the following command: `ps -ef | grep kube-proxy`. If `kube-proxy` is running, get the kubeconfig file location from the `--kubeconfig` parameter.\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %U:%G <proxy kubeconfig file>`. Verify that the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the each worker node:\n\n`chown root:root <proxy kubeconfig file>`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, proxy file ownership is set to root:root.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-proxy/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kube-proxy/\n\n## Audit\n\nFind the kubeconfig file being used by kube-proxy by running the following command: ps -ef | grep kube-proxy If kube-proxy is running, get the kubeconfig file location from the --kubeconfig parameter. Run the below command (based on the file location on your system) on the each worker node. For example, stat -c %U:%G <proxy kubeconfig file> Verify that the ownership is set to root:root.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.4","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oat-dei-klo","createdAt":1599604401268,"name":"Proxy kubeconfig file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.1","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the kubelet service file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe kubelet service file controls various parameters that set the behavior of the kubelet service in the worker node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %a /etc/systemd/system/kubelet.service.d/10-kubeadm.conf`. Verify that the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the each worker node.\n\nFor example, `chmod 644 /etc/systemd/system/kubelet.service.d/10-kubeadm.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the kubelet service file has permissions of 640.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#44-joining-your-nodes ][2]\n3. [https://kubernetes.io/docs/admin/kubeadm/#kubelet-drop-in][3]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#44-joining-your-nodes\n[3]: https://kubernetes.io/docs/admin/kubeadm/#kubelet-drop-in\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.1","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"j8k-7ii-fwo","createdAt":1599604432646,"name":"Kubelet service file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.5","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/docker` directory ownership and group ownership is correctly set to root.\n\n## Rationale\n\nThe `/etc/docker` directory contains certificates and keys in addition to various other sensitive files. It should therefore be individual owned and group owned by root in order to ensure that it can not be modified by less privileged users.\n\n## Audit\n\nYou should execute the command below to verify that the directory is owned and group owned by root: \n\n```\nstat -c %U:%G /etc/docker | grep -v root:root\n``` \n\nThis command does not return any data.\n\n## Remediation\n\nTo resolve this issue, run the following command: `chown root:root /etc/docker`\n\nThis sets the ownership and group ownership for the directory to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the ownership and group ownership for this directory is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.`\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.5","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"heb-axz-wdc","createdAt":1599604466531,"name":"/etc/docker directory ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","control:3.20","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/sysconfig/docker` file individual ownership and group ownership is correctly set to root.\n\n## Rationale\n\nThe `/etc/sysconfig/docker` file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be individually owned and group owned by root to ensure that it is not modified by less privileged users.\n\n## Audit\n\nVerify that the `/etc/sysconfig/docker` file is individually owned and group-owned by root by running: \n```\nstat -c %U:%G /etc/sysconfig/docker | grep -v root:root\n```\nThe command should return no results.\n\n## Remediation\n\nRun the following command: `chown root:root /etc/sysconfig/docker`\n\nThis sets the ownership and group ownership for the file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system, and in this case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/admin/configuring/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.20","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.20\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"xrt-uiz-s7o","createdAt":1599604498138,"name":"/etc/sysconfig/docker file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.15","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `scheduler.conf` file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe `scheduler.conf` file is the kubeconfig file for the Scheduler. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/scheduler.conf\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/scheduler.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `scheduler.conf` has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.15","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.15\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"fmc-m0d-pe5","createdAt":1599604530000,"name":"scheduler.conf file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent","control:1.2.9"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/etc/sysconfig/docker`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges, it is very important to audit its activities and usage. Its behavior depends on some key files and directories, including `/etc/sysconfig/docker`. It contains various parameters related to the Docker daemon when run on CentOS and RHEL based distributions. If present, it is important that it is audited.\n\n## Audit\n\nVerify that there is an audit rule associated with the `/etc/sysconfig/docker` file. To see the rule for the `/etc/sysconfig/docker` file, run: \n```\nauditctl -l | grep /etc/sysconfig/docker\n```\n\n## Remediation\n\nYou should add a rule for `/etc/sysconfig/docker` file. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /etc/sysconfig/docker -k docker\n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `/etc/sysconfig/docker` may not be present on the system and in that case, this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.9","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ps6-vb4-bim","createdAt":1599604561498,"name":"/etc/sysconfig/docker auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","source:compliance-agent","control:2.1"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy default, all network traffic is allowed between containers on the same host on the default network bridge. You can restrict all inter-container communication and link specific containers together that require communication. Or, you can create a custom network and only join containers that need to communicate to that custom network.\n\n## Rationale\n\nBy default, unrestricted network traffic is enabled between all containers on the same host on the default network bridge. Each container has the potential of reading all packets across the container network on the same host. This might lead to an unintended and unwanted disclosure of information to other containers. Hence, restrict inter-container communication on the default network bridge.\n\n## Audit\n\nVerify that the default network bridge has been configured to restrict inter-container communication by running:\n```\ndocker network ls --quiet | xargs docker network inspect --format '{{ .Name }}: {{ .Options }}' \n```\nCheck that it returns `com.docker.network.bridge.enable_icc:false` for the default network bridge.\n\n## Remediation\n\nEdit the Docker daemon configuration file to ensure that inter-container communication is disabled:\n\n```\n\"icc\": false\n```\n\nAlternatively, run the Docker daemon directly and pass `--icc=false` as an argument:\n\n```\ndockerd --icc=false \n```\n\nFollow the Docker documentation and create a custom network, and only join containers that need to communicate to that custom network. The `--icc` parameter only applies to the default docker bridge. If you use a custom network, adopt the segmenting networks approach instead.\n\n## Impact\n\nInter-container communication is disabled on the default network bridge. If any communication between containers on the same host is desired, it needs to be explicitly defined using container linking or custom networks.\n\n## Default value\n\nBy default, all inter-container communication is allowed on the default network bridge.\n\n## References\n\n1. [https://docs.docker.com/engine/userguide/networking/][1]\n2. [https://docs.docker.com/engine/userguide/networking/default_network/container-communication/#communication-between-containers][2]\n\n## CIS controls\n\nNone                \n\n[1]: https://docs.docker.com/engine/userguide/networking/ \n[2]: https://docs.docker.com/engine/userguide/networking/default_network/container-communication/#communication-between-containers\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_network","complianceFrameworks":[{"control":"2.1","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"dmd-zy3-5un","createdAt":1599604593277,"name":"Network traffic is restricted between containers on the default bridge"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.16","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nReject creating pods that do not match Pod Security Policies.\n\n## Rationale\n\nA Pod Security Policy is a cluster-level resource that controls the actions that a pod can perform and what it has the ability to access. The PodSecurityPolicy objects define a set of conditions that a pod must run with in order to be accepted into the system. Pod Security Policies are comprised of settings and strategies that control the security features a pod has access to and hence this must be used to control pod access permissions. Note: When the PodSecurityPolicy admission plugin is in use, there needs to be at least one PodSecurityPolicy in place for ANY pods to be admitted. See section 1.7 for recommendations on PodSecurityPolicy settings.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--enable-admission-plugins` argument is set to a value that includes `PodSecurityPolicy`.\n\n## Remediation\n\nFollow the documentation and create Pod Security Policy objects as per your environment. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --enable-admission-plugins parameter to a value that includes PodSecurityPolicy: --enable-admission-plugins=...,PodSecurityPolicy,... Then restart the API Server.\n\n## Impact\n\nThe policy objects must be created and granted before pod creation would be allowed.\n\n## Default value\n\nBy default, PodSecurityPolicy is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#podsecuritypolicy 3. https://kubernetes.io/docs/concepts/policy/pod-security-policy/#enabling-pod-security-policies\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.16","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.16\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vwz-aw9-c09","createdAt":1599604624793,"name":"Admission control plugin PodSecurityPolicy is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.4","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the file permissions on the docker.socket file are correctly set to 644 or more restrictively.\n\n## Rationale\n\nThe docker.socket file contains sensitive parameters that may alter the behavior of the Docker remote API. It should therefore be writeable only by root in order to ensure that it is not modified by less privileged users.\n\n## Audit\n\n1. Locate the `docker.socket` file by running: \n    ```\n    systemctl show -p FragmentPath docker.socket \n    ```\n2. If the file does not exist, this recommendation is not applicable. If the file exists, verify that the file permissions are set to `644` or more restrictively, by running the following command with the correct filepath:\n    ```\n    stat -c %a /usr/lib/systemd/system/docker.socket\n    ```\n\n## Remediation\n\n1. Find out the file location: `systemctl show -p FragmentPath docker.socket`\n2. If the file does not exist, this recommendation is not applicable. If the file does exist, you should execute the command below, including the correct file path to set the file permissions to 644. For example, `chmod 644 /usr/lib/systemd/system/docker.socket`\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system and in that case, this recommendation is not applicable. By default, if the file is present, the permissions should be set to 644 or more restrictively.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#bind-docker-to-another-hostport-or-a-unix-socket\n2. https://github.com/YungSang/fedora-atomic-packer/blob/master/oem/docker.socket\n3. http://daviddaeschler.com/2014/12/14/centos-7rhel-7-and-docker-containers-on-boot/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.4","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"myf-zyh-89p","createdAt":1599604656679,"name":"docker.socket file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","control:2.4","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDocker considers a private registry either secure or insecure. By default, registries are considered secure.\n\n## Rationale\n\nA secure registry uses TLS. A copy of the registry's CA certificate is placed on the Docker host in the `/etc/docker/certs.d/<registry-name>/` directory. An insecure registry is one which does not have a valid registry certificate, or one not not using TLS. You should not use insecure registries because they present a risk of traffic interception and modification. Additionally, once a registry has been marked as insecure, commands such as `docker pull`, `docker push`, and `docker search` will not result in an error message, and users may indefinitely be working with this type of insecure registry without ever being notified of the risk of potential compromise.\n\n## Audit\n\nFind out if any insecure registries are in use by running: \n```\ndocker info --format 'Insecure Registries: {{.RegistryConfig.InsecureRegistryCIDRs}}'\n```\n\n## Remediation\n\nYou should ensure that no insecure registries are in use.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, Docker assumes all registries except local ones are secure.\n\n## References\n\n1. [https://docs.docker.com/registry/insecure/][1]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.                \n\n[1]: https://docs.docker.com/registry/insecure/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.4","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"wki-o8r-1ha","createdAt":1599604688564,"name":"Insecure registries are not used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.14","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `admin.conf` file ownership is set to root:root.\n\n## Rationale\n\nThe `admin.conf` file contains the admin credentials for the cluster. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/admin.conf\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/admin.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `admin.conf` file ownership is set to `root:root`.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kubeadm/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.14","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.14\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"kcn-wwa-os0","createdAt":1599604720378,"name":"admin.conf file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.19","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/default/docker` file ownership and group-ownership is correctly set to root.\n\n## Rationale\n\nThe `/etc/default/docker` file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be individually owned and group owned by root to ensure that it cannot be modified by less privileged users.\n\n## Audit\n\nVerify that the `/etc/default/docker` file is individually owned and group-owned by root by running: \n```\nstat -c %U:%G /etc/default/docker | grep -v root:root \n```\nThe command should return no results.\n\n## Remediation\n\nExecute the following command: `chown root:root /etc/default/docker`\n\nThis sets the ownership and group ownership of the file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system, and in this case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/admin/configuring/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.19","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.19\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"o5w-d8y-ka1","createdAt":1599604751728,"name":"/etc/default/docker file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.5","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the kubelet.conf file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe `kubelet.conf` file is the kubeconfig file for the node, and controls various parameters that set the behavior and identity of the worker node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %a /etc/kubernetes/kubelet.conf`. Verify that the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun this command (based on the file location on your system) on the each worker node. For example, `chmod 644 /etc/kubernetes/kubelet.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kubelet.conf` file has permissions of 640.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior. \n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.5","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"x88-8vs-ygw","createdAt":1599604783481,"name":"kubelet.conf file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.5","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should not allow sensitive host system directories such as those listed below to be mounted as container volumes, especially in read-write mode. `/` `/boot` `/dev` `/etc` `/lib` `/proc` `/sys` `/usr`\n\n## Rationale\n\nIf sensitive directories are mounted in read-write mode, it is possible to make changes to files within them. This has obvious security implications and should be avoided.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Volumes={{ .Mounts }}'` This command returns a list of currently mapped directories and indicates whether they are mounted in read-write mode for each container instance.\n\n## Remediation\n\nDo not mount directories which are security sensitive on the host within containers, especially in read-write mode.\n\n## Impact\n\nNone\n\n## Default value\n\nDocker defaults to using a read-write volume but you can also mount a directory read-only. By default, no sensitive host directories are mounted within containers.\n\n## References\n\n1. https://docs.docker.com/engine/tutorials/dockervolumes/\n\n## CIS controls\n\nVersion 6\n\n14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.5","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"dmq-wqu-2im","createdAt":1599604814929,"name":"Sensitive host system directories are not mounted on containers"}]}
    headers:
      Content-Type:
      - application/json
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=1&page%5Bsize%5D=100
    method: GET
  response:
    body: |
      {"meta":{"page":{"total_filtered_count":52,"total_count":152}},"data":[{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.28","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nExplicitly set a service account public key file for service accounts on the apiserver.\n\n## Rationale\n\nBy default, if no --service-account-key-file is specified to the apiserver, it uses the private key from the TLS serving certificate to verify service account tokens. To ensure that the keys for service account tokens could be rotated as needed, a separate public/private key pair should be used for signing service account tokens. Hence, the public key should be specified to the apiserver with --service-account-key-file.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--service-account-key-file` argument exists and is set as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--service-account-key-file` parameter to the public key file for service accounts: `--service-account-key-file=<filename>`\n\n## Impact\n\nThe corresponding private key must be provided to the controller manager. You would need to securely maintain the key file and rotate the keys based on your organization's key rotation policy.\n\n## Default value\n\nBy default, `--service-account-key-file` argument is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://github.com/kubernetes/kubernetes/issues/24167\n\n## CIS controls\n\nVersion 6 3 Secure Configurations for Hardware and Software on Mobile Devices, Laptops, Workstations, and Servers \nVersion 7 5 Secure Configuration for Hardware and Software on Mobile Devices, Laptops, Workstations and Servers \n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.28","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.28\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"xtg-mzn-vft","createdAt":1599604846892,"name":"--service-account-key-file argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent","control:5.30"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should not share the host's user namespaces with containers running on it.\n\n## Rationale\n\nUser namespaces ensure that a root process inside the container will be mapped to a non-root process outside the container. Sharing the user namespaces of the host with the container does not therefore isolate users on the host from users in the containers.\n\n## Audit\n\nRun this command and ensure that it does not return any value for `UsernsMode`. If it returns a value of `host`, it means that the host user namespace is shared with its containers: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: UsernsMode={{ .HostConfig.UsernsMode }}'`\n\n## Remediation\n\nDo not share user namespaces between host and containers. For example, do not run the command `docker run --rm -it --userns=host ubuntu bash`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the host user namespace is shared with containers unless user namespace support is enabled.\n\n## References\n\n1. https://docs.docker.com/engine/security/userns-remap/\n2. https://docs.docker.com/engine/reference/commandline/run/#options\n3. https://github.com/docker/docker/pull/12648\n4. https://events.linuxfoundation.org/sites/events/files/slides/User%20Namespaces%20-%20ContainerCon%202015%20-%2016-9-final_0.pdf\n\n## CIS controls\n\nVersion 6\n\n12 Boundary Defense Boundary Defense\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.30","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.30\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"e7c-uzf-jwy","createdAt":1599604878282,"name":"Host's user namespaces are not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","requirement:Container-Images-and-Build-File-Configuration","framework:cis-docker","control:4.6","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should add the `HEALTHCHECK` instruction to your Docker container images in order to ensure that health checks are executed against running containers.\n\n## Rationale\n\nAn important security control is that of availability. Adding the `HEALTHCHECK` instruction to your container image ensures that the Docker engine periodically checks the running container instances against that instruction to ensure that containers are still operational. Based on the results of the health check, the Docker engine could terminate containers which are not responding correctly, and instantiate new ones.\n\n## Audit\n\nRun this command to ensure that Docker images have the appropriate `HEALTHCHECK` instruction configured: `docker inspect --format='{{ .Config.Healthcheck }}' <IMAGE>`\n\n## Remediation\n\nYou should follow the Docker documentation and rebuild your container images to include the `HEALTHCHECK` instruction.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `HEALTHCHECK` is not set.\n\n## References\n\n1. https://docs.docker.com/engine/reference/builder/#healthcheck\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_image","complianceFrameworks":[{"control":"4.6","framework":"cis-docker","requirement":"Container-Images-and-Build-File-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-4.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"5xs-afd-sfx","createdAt":1599604909942,"name":"HEALTHCHECK instructions have been added to container images"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:5.7.4","source:compliance-agent","requirement:General-Policies","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nKubernetes provides a default namespace, where objects are placed if no namespace is specified for them. Placing objects in this namespace makes application of RBAC and other controls more difficult.\n\n## Rationale\n\nResources in a Kubernetes cluster should be segregated by namespace, to allow for security controls to be applied at that level and to make it easier to manage resources.\n\n## Audit\n\nRun this command to list objects in default namespace: `kubectl get all`\n\nThe only entries there should be system managed resources such as the Kubernetes service.\n\n## Remediation\n\nEnsure that namespaces are created to allow for appropriate segregation of Kubernetes resources and that all new resources are created in a specific namespace.\n\n## Impact\n\nNone\n\n## Default value\n\nUnless a namespace is specific on object creation, the default namespace will be used.\n\n## References\n\nNone\n\n## CIS controls\n\nNone\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.7.4","framework":"cis-kubernetes","requirement":"General-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.7.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"gly-1rp-obv","createdAt":1599604941259,"name":"The default namespace should not be used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.21","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSeccomp filtering provides a means for a process to specify a filter for incoming system calls. The default Docker seccomp profile works on a whitelist basis and allows for a large number of common system calls, whilst blocking all others. This filtering should not be disabled unless it causes a problem with your container application usage.\n\n## Rationale\n\nA large number of system calls are exposed to every userland process with many of them going unused for the entire lifetime of the process. Most of applications do not need all these system calls and would therefore benefit from having a reduced set of available system calls. Having a reduced set of system calls reduces the total kernel surface exposed to the application and thus improvises application security.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: SecurityOpt={{ .HostConfig.SecurityOpt }}'` \n\nThis returns either `<no value>` or your modified seccomp profile. If it returns `[seccomp:unconfined]`, the container is running without any seccomp profiles and is therefore not configured in line with good security practices.\n\n## Remediation\n\nBy default, seccomp profiles are enabled. You do not need to do anything unless you want to modify and use a modified seccomp profile.\n\n## Impact\n\nWith Docker 1.10 and greater, the default seccomp profile blocks syscalls, regardless of `--cap-add passed` to the container. You should create your own custom seccomp profile in such cases. You can also disable the default seccomp profile by passing `--security-opt=seccomp:unconfined` on docker run.\n\n## Default value\n\nWhen you run a container, it uses the default profile unless you override it with the `--security-opt` option.\n\n## References\n\n1. http://blog.scalock.com/new-docker-security-features-and-what-they-mean-seccomp-profiles\n2. https://docs.docker.com/engine/reference/run/#security-configuration\n3. https://github.com/docker/docker/blob/master/profiles/seccomp/default.json\n4. https://docs.docker.com/engine/security/seccomp/\n5. https://www.kernel.org/doc/Documentation/prctl/seccomp_filter.txt\n6. https://github.com/docker/docker/issues/22870\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.21","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.21\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"hub-v5u-cw0","createdAt":1599604972925,"name":"Default seccomp profile is not Disabled"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.7","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAllow Kubelet to manage `iptables`.\n\n## Rationale\n\nKubelets can automatically manage the required changes to `iptables` based on how you choose your networking options for the pods. It is recommended to let kubelets manage the changes to `iptables`. This ensures that the `iptables` configuration remains in sync with pods networking configuration. Manually configuring `iptables` with dynamic pod network configuration changes might hamper the communication between pods/containers and to the outside world. You might have `iptables` rules too restrictive or too open.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that if the `--make-iptables-util-chains` argument exists then it is set to true. If the `--make-iptables-util-chains` argument does not exist, and there is a Kubelet config file specified by `--config`, verify that the file does not set `makeIPTablesUtilChains` to `false`.\n\n## Remediation\n\nIf using a kubelet config file, edit the file to set `makeIPTablesUtilChains: true`. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and remove the `--make-iptables-util-chains` argument from the `KUBELET_SYSTEM_PODS_ARGS` variable. Based on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nKubelet would manage the `iptables` on the system and keep it in sync. If you are using any other `iptables` management solution, then there might be some conflicts.\n\n## Default value\n\nBy default, `--make-iptables-util-chains argument` is set to true.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.9 Limitation and Control of Network Ports, Protocols, and Services\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.7","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"f3g-zcg-jm0","createdAt":1599605004390,"name":"--make-iptables-util-chains argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.2","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSELinux is an effective and easy-to-use Linux application security system. It is available by default on some distributions such as Red Hat and Fedora.\n\n## Rationale\n\nSELinux provides a Mandatory Access Control (MAC) system that greatly augments the default Discretionary Access Control (DAC) model. You can therefore add an extra layer of safety to your containers by enabling SELinux on your Linux host.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: SecurityOpt={{ .HostConfig.SecurityOpt }}'` \n\nThis command returns all the security options currently configured on the containers listed.\n\n## Remediation\n\nIf SELinux is applicable for your Linux OS, you should use it.\n\n1. Set the SELinux State.\n2. Set the SELinux Policy.\n3. Create or import a SELinux policy template for Docker containers.\n4. Start Docker in daemon mode with SELinux enabled. For example: `docker daemon --selinux-enabled`\n5. Start your Docker container using the security options. For example, `docker run --interactive --tty --security-opt label=level:TopSecret centos /bin/bash`\n\n## Impact\n\nAny restrictions defined in the SELinux policy will be applied to your containers. It should be noted that if your SELinux policy is misconfigured, this may have an impact on the correct operation of the affected containers.\n\n## Default value\n\nBy default, no SELinux security options are applied on containers.\n\n## References\n\n1. https://docs.docker.com/engine/security/security/#other-kernel-security-features\n2. https://docs.docker.com/engine/reference/run/#security-configuration\n3. http://docs.fedoraproject.org/en-US/Fedora/13/html/Security-Enhanced_Linux/\n4. https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux_atomic_host/7/html/container_security_guide/docker_selinux_security_policy\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.2","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"eww-c9f-0hf","createdAt":1599605036108,"name":"SELinux security options are set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.26","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIf the container image does not have an HEALTHCHECK instruction defined, you should use the `--health-cmd` parameter at container runtime to check container health.\n\n## Rationale\n\nIf the container image you are using does not have a pre-defined HEALTHCHECK instruction, use the `--health-cmd` parameter to check container health at runtime. Based on the reported health status, remedial actions can be taken if necessary.\n\n## Audit\n\nRun this command and ensure that all containers are reporting their health status: `docker ps --quiet | xargs docker inspect --format '{{ .Id }}: Health={{ .State.Health.Status }}'`\n\n## Remediation\n\nYou should run the container using the `--health-cmd` parameter. For example, `docker run -d --health-cmd='stat /etc/passwd || exit 1' nginx`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, health checks are not carried out at container runtime.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#healthcheck\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.26","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.26\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ojg-sb1-nso","createdAt":1599605067593,"name":"Container health is checked at runtime"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","control:2.5","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEtcd should be configured for peer authentication.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be accessible only by authenticated etcd peers in the etcd cluster.\n\n## Audit\n\nThis recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable.\n\nRun the following command on the etcd server node: \n```\nps -ef | grep etcd\n```\nVerify that the `--peer-client-cert-auth` argument is set to `true`.  \n\n## Remediation\n\nEdit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and set the below parameter:\n\n```\n--peer-client-cert-auth=true\n```\n\n## Impact\n\nAll peers attempting to communicate with the etcd server will require a valid client certificate for authentication.\n\n## Default value\n\n*Note*: This recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable. By default, `--peer-client-cert-auth` argument is set to false.\n\n## References\n\n1. https://coreos.com/etcd/docs/latest/op-guide/security.html \n2. https://kubernetes.io/docs/admin/etcd/ \n3. https://coreos.com/etcd/docs/latest/op-guide/configuration.html#peer-client-cert-auth\n\n## CIS controls\n\nVersion 6.14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities. \n\nVersion 7.14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.                \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/ \n[3]: https://coreos.com/etcd/docs/latest/op-guide/configuration.html#peer-client-cert-auth\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.5","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"l01-5y2-miz","createdAt":1599605099307,"name":"--peer-client-cert-auth argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","requirement:Container-Images-and-Build-File-Configuration","framework:cis-docker","control:4.1","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nContainers should run as a non-root user.\n\n## Rationale\n\nIt is good practice to run the container as a non-root user, where possible. This can be done either via the USER directive in the Dockerfile or through [gosu][1] or similar where used as part of the CMD or ENTRYPOINT directives.\n\n## Remediation\n\nEnsure that the Dockerfile for each container image contains `USER <username or ID>`\n\nIn this case, the user name or ID refers to the user that was found in the container base image. If there is no specific user created in the container base image, then make use of the `useradd` command to add a specific user before the USER instruction in the Dockerfile. \n\nFor example, add the below lines in the Dockerfile to create a user in the container:\n`RUN useradd -d /home/username -m -s /bin/bash username USER username`\n\n**Note**: If there are users in the image that are not needed, you should consider deleting them. After deleting those users, commit the image and then generate new instances of the containers. Alternatively, if it is not possible to set the USER directive in the Dockerfile, a script running as part of the CMD or ENTRYPOINT sections of the Dockerfile should be used to ensure that the container process switches to a non-root user.\n\n## Impact\n\nRunning as a non-root user can present challenges when binding mount volumes from the underlying host. In this case, ensure that the user running the contained process can read and write to the bound directory, according to their requirements.\n\n## Default value\n\nBy default, containers are run with root privileges and also run as the root user inside the container.\n\n## References\n\n1. https://github.com/docker/docker/issues/2918\n2. https://github.com/docker/docker/pull/4572\n3. https://github.com/docker/docker/issues/7906\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://github.com/tianon/gosu\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"4.1","framework":"cis-docker","requirement":"Container-Images-and-Build-File-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-4.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"iml-sbn-bao","createdAt":1599605130883,"name":"A user for the container has been created"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Controller-Manager","control:1.3.6","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable kubelet server certificate rotation on controller-manager.\n\n## Rationale\n\n`RotateKubeletServerCertificate` causes the kubelet to both request a serving certificate after bootstrapping its client credentials and rotate the certificate as its existing credentials expire. This automated periodic rotation ensures that the there are no downtimes due to expired certificates and thus addressing availability in the CIA security triad. \n\n*Note*: This recommendation only applies if you let kubelets get their certificates from the API server. In case your kubelet certificates come from an outside authority/tool (e.g. Vault) then you need to take care of rotation yourself.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-controller-manager\n```\nVerify that `RotateKubeletServerCertificate` argument exists and is set to `true`.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and set the `--feature-gates` parameter to include `RotateKubeletServerCertificate=true`. \n\n```\n--feature-gates=RotateKubeletServerCe`rtificate=true\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `RotateKubeletServerCertificate` is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet-tls-bootstrapping/#approval-controller ][1]\n2. [https://github.com/kubernetes/features/issues/267 ][2]\n3. [https://github.com/kubernetes/kubernetes/pull/45059 ][3]\n4. [https://kubernetes.io/docs/admin/kube-controller-manager/][4]\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.               \n\n[1]: https://kubernetes.io/docs/admin/kubelet-tls-bootstrapping/#approval-controller \n[2]: https://github.com/kubernetes/features/issues/267 \n[3]: https://github.com/kubernetes/kubernetes/pull/45059 \n[4]: https://kubernetes.io/docs/admin/kube-controller-manager/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.6","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"asw-6hh-yc2","createdAt":1599605162809,"name":"RotateKubeletServerCertificate argument is set to true (Controller Manager)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.2","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the kubelet service file ownership is set to root:root.\n\n## Rationale\n\nThe kubelet service file controls various parameters that set the behavior of the kubelet service in the worker node. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %U:%G /etc/systemd/system/kubelet.service.d/10-kubeadm.conf`. Verify that the ownership is set to root:root.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the each worker node.\n\nFor example, `chown root:root /etc/systemd/system/kubelet.service.d/10-kubeadm.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, kubelet service file ownership is set to root:root.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#44-joining-your-nodes ][2]\n3. [https://kubernetes.io/docs/admin/kubeadm/#kubelet-drop-in][3]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#44-joining-your-nodes\n[3]: https://kubernetes.io/docs/admin/kubeadm/#kubelet-drop-in\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.2","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"sy4-z1k-udc","createdAt":1599605194356,"name":"Kubelet service file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.8","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that all the registry certificate files, usually found under `/etc/docker/certs.d/<registry-name> directory`, have permissions of 444 or are set more restrictively.\n\n## Rationale\n\nThe `/etc/docker/certs.d/<registry-name>` directory contains Docker registry certificates. These certificate files must have permissions of 444or more restrictive permissions in order to ensure that unprivileged users do not have full access to them..\n\n## Audit\n\nYou should execute the command below to verify that registry certificate files have permissions of 444+.\n\n```\nstat -c %a /etc/docker/certs.d/<registry-name>/*\n```\n\n## Remediation\n\nRun the following command: `chmod 444 /etc/docker/certs.d/<registry-name>/*`\n\nThis sets the permissions for the registry certificate files to 444.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for registry certificate files might not be 444. The default file permissions are governed by the system or user specific umask values which are defined within the operating system itself.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.8","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"sjq-1m3-njp","createdAt":1599605226177,"name":"Registry certificate file permissions are set to 444 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","source:compliance-agent","control:1.2.9","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nTurn on Role Based Access Control.\n\n## Rationale\n\nRole Based Access Control (RBAC) allows fine-grained control over the operations that different entities can perform on different objects in the cluster. It is recommended to use the RBAC authorization mode.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--authorization-mode` argument exists and is set to a value to include RBAC.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--authorization-mode` parameter to a value that includes RBAC, for example: `--authorization-mode=Node,RBAC`\n\n## Impact\n\nWhen RBAC is enabled you will need to ensure that appropriate RBAC settings (including Roles, RoleBindings and ClusterRoleBindings) are configured to allow appropriate access.\n\n## Default value\n\nBy default, RBAC authorization is not enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/reference/access-authn-authz/rbac/][1]\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.                \n\n[1]: https://kubernetes.io/docs/reference/access-authn-authz/rbac/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.9","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"bn4-mzo-nyg","createdAt":1599605257601,"name":"--authorization-mode argument includes RBAC"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","source:compliance-agent","control:1.1.18","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the controller-manager.conf file ownership is set to `root:root`.\n\n## Rationale\n\nThe controller-manager.conf file is the kubeconfig file for the Controller Manager. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/controller-manager.conf\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/controller-manager.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `controller-manager.conf` file ownership is set to `root:root`.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-controller-manager/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.18","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.18\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"bud-aya-umc","createdAt":1599605289575,"name":"controller-manager.conf file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","control:3.3","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the docker.socket file ownership and group ownership are correctly set to root.\n\n## Rationale\n\nThe docker.socket file contains sensitive parameters that may alter the behavior of the Docker remote API. For this reason, it should be owned and group owned by root in order to ensure that it is not modified by less privileged users.\n\n## Audit\n\n1. Locate the `docker.socket` file by running: \n    ```\n    systemctl show -p FragmentPath docker.socket\n    ```\n2. If the file does not exist, this recommendation is not applicable. If the file exists, verify that the file is owned and group-owned by root by running the following command with the correct filepath:\n    ```\n    stat -c %U:%G /usr/lib/systemd/system/docker.socket | grep -v root:root \n    ```\n    The command should not return a value.\n\n## Remediation\n\n1. Find out the file location: `systemctl show -p FragmentPath docker.socket`\n2. If the file does not exist, this recommendation is not applicable. If the file exists, execute the command below, including the correct file path to set the ownership and group ownership for the file to root. For example, `chown root:root /usr/lib/systemd/system/docker.socket`\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system. In that case, this recommendation is not applicable. By default, if the file is present, the ownership and group ownership for it should be set to root.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option 2. https://github.com/docker/docker-ce/blob/master/components/packaging/deb/systemd/docker.socket\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.3","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vc0-12t-fpa","createdAt":1599605321060,"name":"docker.socket file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.11","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable kubelet client certificate rotation.\n\n## Rationale\n\nThe `--rotate-certificates` setting causes the kubelet to rotate its client certificates by creating new CSRs as its existing credentials expire. This automated periodic rotation ensures that the there is no downtime due to expired certificates and thus addressing availability in the CIA security triad.\n\n*Note*: This recommendation only applies if you let kubelets get their certificates from the API server. In case your kubelet certificates come from an outside authority/tool (e.g. Vault) then you need to take care of rotation yourself. \n\n*Note*: This feature also requires the `RotateKubeletClientCertificate` feature gate to be enabled (which is the default since Kubernetes v1.7).\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--rotate-certificates` argument is not present, or is set to true. If the `--rotate-certificates` argument is not present, verify that if there is a Kubelet config file specified by `--config`, that file does not contain `rotateCertificates: false`.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to add the line `rotateCertificates: true` or remove it altogether to use the default value. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and remove the `--rotate-certificates=false` argument from the `KUBELET_CERTIFICATE_ARGS` variable. Based on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, kubelet client certificate rotation is enabled.\n\n## References\n\n1. [https://github.com/kubernetes/kubernetes/pull/41912 ][1]\n2. [https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-tls-bootstrapping/#kubelet-configuration ][2]\n3. [https://kubernetes.io/docs/imported/release/notes/ ][3]\n4. [https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/][4]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted - Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted.\n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n\n[1]: https://github.com/kubernetes/kubernetes/pull/41912\n[2]: https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-tls-bootstrapping/#kubelet-configuration\n[3]: https://kubernetes.io/docs/imported/release/notes/\n[4]: https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.11","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"9x3-sy5-pte","createdAt":1599605353070,"name":"--rotate-certificates argument is not set to false"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.13","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `admin.conf` file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe admin.conf is the administrator kubeconfig file defining various settings for the administration of the cluster. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/admin.conf\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/admin.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, admin.conf has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.13","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.13\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"zlc-pqm-t1x","createdAt":1599605384539,"name":"admin.conf file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.9","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that if the kubelet refers to a configuration file with the `--config` argument, that file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe kubelet reads various parameters, including security settings, from a config file specified by the `--config` argument. If this file is specified you should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nLocate the Kubelet config file as follows: `ps -ef | grep kubelet | grep config`. If the `--config` argument is present, this gives the location of the Kubelet config file, for example `/var/lib/kubelet/config.yaml`. Run the following command (using the file location you just identified) to find that file's permissions: `stat -c %a /var/lib/kubelet/config.yaml`. Verify that the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the following command (using the config file location identified in the Audit step:\n\n```\nchmod 644 /var/lib/kubelet/config.yaml\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `/var/lib/kubelet/config.yaml` file as set up by kubeadm has permissions of 644.\n\n## References\n\n1. [https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.9","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tc4-kmy-wlt","createdAt":1599605416397,"name":"Kubelet configuration file has permissions set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.15","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nReject creating objects in a namespace that is undergoing termination.\n\n## Rationale\n\nSetting admission control policy to NamespaceLifecycle ensures that objects cannot be created in non-existent namespaces, and that namespaces undergoing termination are not used for creating the new objects. This is recommended to enforce the integrity of the namespace termination process and also for the availability of the newer objects.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--disable-admission-plugins` argument is set to a value that does not include `NamespaceLifecycle`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --disable-admission-plugins parameter to ensure it does not include NamespaceLifecycle.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, NamespaceLifecycle is set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#namespacelifecycle\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.15","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.15\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"elk-zj3-p6m","createdAt":1599605447784,"name":"Admission control plugin NamespaceLifecycle is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:1.2.2","framework_version:1.5.1","scored:true","security:compliance","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use basic authentication.\n\n## Rationale\n\nBasic authentication uses plaintext credentials for authentication. Currently, the basic authentication credentials last indefinitely, and the password cannot be changed without restarting the API server. The basic authentication is currently supported for convenience. Hence, basic authentication should not be used.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--basic-auth-file` argument does not exist.\n\n## Remediation\n\nFollow the documentation and configure alternate mechanisms for authentication. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and remove the `--basic-auth-file=<filename>` parameter.\n\n## Impact\n\nYou will have to configure and use alternate authentication mechanisms such as tokens and certificates. Username and password for basic authentication could no longer be used.\n\n## Default value\n\nBy default, basic authentication is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n2. https://kubernetes.io/docs/admin/authentication/#static-password-file\n\n## CIS controls\n\nVersion 6\n\n16.14 Encrypt/Hash All Authentication Files And Monitor Their Access - Verify that all authentication files are encrypted or hashed and that these files cannot be accessed without root or administrator privileges. Audit all access to password files in the system.\n\nVersion 7\n\n16.4 Encrypt or Hash all Authentication Credentials - Encrypt or hash with a salt all authentication credentials when stored.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.2","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oug-uvq-sti","createdAt":1599605479472,"name":"--basic-auth-file argument is not set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.9","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nWhen the networking mode on a container is set to `--net=host`, the container is not placed inside a separate network stack. Effectively, applying this option instructs Docker to not containerize the container's networking. The consequence of this is that the container lives \"outside\" in the main Docker host and has full access to its network interfaces.\n\n## Rationale\n\nSelecting this option is potentially dangerous. It allows the container process to open reserved low numbered ports in the way that any other root process can. It also allows the container to access network services such as D-bus on the Docker host. A container process could potentially carry out undesired actions, such as shutting down the Docker host. This option should not be used unless there is a very specific reason for enabling it.\n\n## Audit\n\nUse this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: NetworkMode={{ .HostConfig.NetworkMode }}'` If this returns `NetworkMode=host`, it means that the `--net=host` option was passed when the container was started.\n\n## Remediation\n\nYou should not pass the --net=host option when starting any container.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, containers connect to the Docker bridge when starting and do not run in the context of the host's network stack.\n\n## References\n\n1. https://docs.docker.com/engine/userguide/networking/ 2. https://docs.docker.com/engine/reference/run/#network-settings\n\n## CIS controls\n\nVersion 6 12 Boundary Defense Boundary Defense\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.9","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"1qj-oqa-jau","createdAt":1599605510860,"name":"Host's network namespace is not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.24","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nRetain 10 or an appropriate number of old log files.\n\n## Rationale\n\nKubernetes automatically rotates the log files. Retaining old log files ensures that you would have sufficient log data available for carrying out any investigation or correlation. For example, if you have set file size of 100 MB and the number of old log files to keep as 10, you would approximate have 1 GB of log data that you could potentially use for your analysis.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-log-maxbackup` argument is set to `10` or as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--audit-log-maxbackup` parameter to `10` or to an appropriate value: `--audit-log-maxbackup=10`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, auditing is not enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://kubernetes.io/docs/concepts/cluster-administration/audit/ \n3. https://github.com/kubernetes/features/issues/22\n\n## CIS controls\n\nVersion 6 6.3 Ensure Audit Logging Systems Are Not Subject To Loss (i.e. rotation/archive) Ensure that all systems that store logs have adequate storage space for the logs generated on a regular basis, so that log files will not fill up between log rotation intervals. The logs must be archived and digitally signed on a periodic basis. Version 7 6.4 Ensure adequate storage for logs Ensure that all systems that store logs have adequate storage space for the logs generated.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.24","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.24\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"r0g-aai-2xf","createdAt":1599605542630,"name":"--audit-log-maxbackup argument is set to 10 or as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.15","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker socket file is owned by root and group owned by docker.\n\n## Rationale\n\nThe Docker daemon runs as root. The default Unix socket therefore must be owned by root. If any other user or process owns this socket, it might be possible for that non-privileged user or process to interact with the Docker daemon. Additionally, in this case a non-privileged user or process might be able to interact with containers which is neither a secure nor desired behavior. Additionally, the Docker installer creates a Unix group called docker. You can add users to this group, and in this case, those users would be able to read and write to the default Docker Unix socket. The membership of the docker group is tightly controlled by the system administrator. However, ff any other group owns this socket, then it might be possible for members of that group to interact with the Docker daemon. Such a group might not be as tightly controlled as the docker group. Again, this is not in line with good security practice. For these reason, the default Docker Unix socket file should be owned by root and group owned by docker to maintain the integrity of the socket file.\n\n## Audit\n\nVerify that the Docker socket file is owned by root and group-owned by `docker` by running: \n```\nstat -c %U:%G /var/run/docker.sock | grep -v root:docker\n```\nThe command should return no results.\n\n## Remediation\n\nRun the following command: `chown root:docker /var/run/docker.sock`\n\nThis sets the ownership to root and group ownership to docker for the default Docker socket file.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the ownership and group ownership for the Docker socket file is correctly set to root:docker.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option\n2. https://docs.docker.com/engine/reference/commandline/dockerd/#bind-docker-to-another-hostport-or-a-unix-socket\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.15","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.15\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ysh-lkt-poz","createdAt":1599605574088,"name":"Docker socket file ownership is set to root:docker"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.7","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `/etc/kubernetes/manifests/etcd.yaml` file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` controls various parameters that set the behavior of the etcd service in the master node. etcd is a highly-available key-value store which Kubernetes uses for persistent storage of all of its REST API object. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/manifests/etcd.yaml\n```\n\nVerify the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/manifests/etcd.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `/etc/kubernetes/manifests/etcd.yaml` file has permissions of 640.\n\n## References\n\n1. https://coreos.com/etcd\n2. https://kubernetes.io/docs/admin/etcd/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.7","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vqc-dps-6tp","createdAt":1599605605880,"name":"etcd pod specification file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.11","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/usr/bin/containerd`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `/usr/bin/containerd`, so it should be audited.\n\n## Audit\n\nVerify that there is an audit rule corresponding to the `/usr/bin/containerd` file. To display the rule for the `/usr/bin/containerd` file, run: \n\n```\nauditctl -l | grep /usr/bin/containerd\n```\n\n## Remediation\n\nYou should add a rule for the `/usr/bin/containerd` file. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /usr/bin/containerd -k docker \n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `/usr/bin/containerd` may not be present on the system and in that case, this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n2. [https://github.com/docker/docker/pull/20662][2]\n3. [https://containerd.tools/][3]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html \n[2]: https://github.com/docker/docker/pull/20662 \n[3]: https://containerd.tools/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.11","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tor-6yx-oyz","createdAt":1599605637503,"name":"/usr/bin/containerd auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.32","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\netcd should be configured to make use of TLS encryption for client connections.\n\n## Rationale\n\netcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be protected by client authentication. This requires the API server to identify itself to the etcd server using a SSL Certificate Authority file.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--etcd-cafile` argument exists and it is set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection between the apiserver and etcd. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the etcd certificate authority file parameter: `--etcd-cafile=<path/to/ca-file>`\n\n## Impact\n\nTLS and client certificate authentication must be configured for etcd.\n\n## Default value\n\nBy default, `--etcd-cafile` is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://coreos.com/etcd/docs/latest/op-guide/security.html\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.32","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.32\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"o8k-9hv-rri","createdAt":1599605669411,"name":"--etcd-cafile argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.23","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nRetain the logs for at least 30 days or as appropriate.\n\n## Rationale\n\nRetaining logs for at least 30 days ensures that you can go back in time and investigate or correlate any events. Set your audit log retention period to 30 days or as per your business requirements.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-log-maxage` argument is set to `30` or as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--audit-log-maxage` parameter to `30` or as an appropriate number of days: `--audit-log-maxage=30`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, auditing is not enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://kubernetes.io/docs/concepts/cluster-administration/audit/ \n3. https://github.com/kubernetes/features/issues/22\n\n## CIS controls\n\nVersion 6 6.3 Ensure Audit Logging Systems Are Not Subject To Loss (i.e. rotation/archive) Ensure that all systems that store logs have adequate storage space for the logs generated on a regular basis, so that log files will not fill up between log rotation intervals. The logs must be archived and digitally signed on a periodic basis. Version 7 6.4 Ensure adequate storage for logs Ensure that all systems that store logs have adequate storage space for the logs generated.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.23","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.23\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"jbu-o8v-pku","createdAt":1599605700813,"name":"--audit-log-maxage argument is set to 30 or as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.5","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable certificate based kubelet authentication.\n\n## Rationale\n\nThe apiserver, by default, does not authenticate itself to the kubelet's HTTPS endpoints. The requests from the apiserver are treated anonymously. You should set up certificate-based kubelet authentication to ensure that the apiserver authenticates itself to kubelets when submitting requests.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--kubelet-client-certificate` and `--kubelet-client-key` arguments exist and they are set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection between the apiserver and kubelets. Then, edit API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the kubelet client certificate and key parameters as below. \n\n```\n--kubelet-client-certificate=<path/to/client-certificate-file> \n--kubelet-client-key=<path/to/client-key-file>\n```\n\n## Impact\n\nYou require TLS to be configured on apiserver as well as kubelets.\n\n## Default value\n\nBy default, certificate-based kubelet authentication is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-apiserver/ ][1]\n2. [https://kubernetes.io/docs/admin/kubelet-authentication-authorization/ ][2]\n3. [https://kubernetes.io/docs/concepts/cluster-administration/master-node-communication/#apiserver---kubelet][3]\n\n## CIS controls\n\nVersion 6.3.4 Use Only Secure Channels For Remote System Administration - Perform all remote administration of servers, workstation, network devices, and similar equipment over secure channels. Protocols such as telnet, VNC, RDP, or others that do not actively support strong encryption should only be used if they are performed over a secondary encryption channel, such as SSL, TLS or IPSEC. \n\nVersion 7.4.5 Use Multifactor Authentication For All Administrative Access - Use multi-factor authentication and encrypted channels for all administrative account access. \n\n[1]: https://kubernetes.io/docs/admin/kube-apiserver/ \n[2]: https://kubernetes.io/docs/admin/kubelet-authentication-authorization/ \n[3]: https://kubernetes.io/docs/concepts/cluster-administration/master-node-communication/#apiserver---kubelet\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.5","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ruj-lze-13b","createdAt":1599605732980,"name":"--kubelet-client-certificate and --kubelet-client-key arguments are set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","control:1.2.6","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit the `docker.service` if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `docker.service`. The `docker.service` file might be present if the daemon parameters have been changed by an administrator. If so, it holds various parameters for the Docker daemon and should be audited.\n\n## Audit\n\n1. Locate the `docker.service` file by running: \n    ```\n    systemctl show -p FragmentPath docker.service\n    ```\n\n2. If the file does not exist, this recommendation does not apply. If the file does exist, verify that there is an audit rule corresponding to the `docker.service` file by running: \n\n    ```\n    auditctl -l | grep docker.service\n    ```\n\n## Remediation\n\nIf the file exists, a rule for it should be added. For example, add the following line to the `/etc/audit/audit.rules` file: \n```\n-w /usr/lib/systemd/system/docker.service -k docker \n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `docker.service` may not be present on the system.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.6","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"myy-dsj-omk","createdAt":1599605764788,"name":"docker.service auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","source:compliance-agent","control:1.2.19","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not bind to insecure port.\n\n## Rationale\n\nSetting up the apiserver to serve on an insecure port would allow unauthenticated and unencrypted access to your master node. This would allow attackers who could access this port, to easily take control of the cluster.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--insecure-port` argument is set to `0`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the below parameter. --insecure-port=0\n\n## Impact\n\nAll components that use the API must connect via the secured port, authenticate themselves, and be authorized to use the API. This includes: kube-controller-manager kube-proxy kube-scheduler kubelets\n\n## Default value\n\nBy default, the insecure port is set to 8080.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6 9.1 Limit Open Ports, Protocols, and Services Ensure that only ports, protocols, and services with validated business needs are running on each system. Version 7 9.2 Ensure Only Approved Ports, Protocols and Services Are Running Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.19","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.19\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"2ci-yqv-wv0","createdAt":1599605796539,"name":"--insecure-port argument is set to 0"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.10","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that if the kubelet refers to a configuration file with the `--config` argument, that file is owned by root:root.\n\n## Rationale\n\nThe kubelet reads various parameters, including security settings, from a config file specified by the `--config` argument. If this file is specified you should restrict its file permissions to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nLocate the Kubelet config file as follows: `ps -ef | grep kubelet | grep config`. If the `--config` argument is present, this gives the location of the Kubelet config file, for example `/var/lib/kubelet/config.yaml`. Run the following command (using the file location you just identified) to find that file's permissions: `stat -c %U:%G /var/lib/kubelet/config.yaml`. Verify that the ownership is set to `root:root`.\n\n## Remediation\n\nRun the following command (using the config file location identified in the Audit step): `chown root:root /etc/kubernetes/kubelet.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `/var/lib/kubelet/config.yaml` file as set up by kubeadm is owned by `root:root`.\n\n## References\n\n1. [https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.10","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ptl-pla-t0c","createdAt":1599605828233,"name":"Kubelet configuration file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.10","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy default, all containers on a Docker host share resources equally. By using the resource management capabilities of the Docker host, you can control the amount of memory that a container is able to use.\n\n## Rationale\n\nBy default a container can use all of the memory on the host. You can use memory limit mechanisms to prevent a denial of service occurring where one container consumes all of the hosts resources and other containers on the same host are therefore not able to function. Having no limit on memory usage can lead to issues where one container can easily make the whole system unstable and as a result unusable.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Memory={{ .HostConfig.Memory }}'` \n\nIf this command returns 0, it means that memory limits are not in place; if it returns a non-zero value, it means that they are in place.\n\n## Remediation\n\nYou should run the container with only as much memory as it requires by using the `--memory argument`. For example, you could run a container using the command `docker run --interactive --tty --memory 256m centos /bin/bash`\n\nIn this example, the container is started with a memory limit of 256 MB. Note that the output of the command below returns values in scientific notation if memory limits are in place. `docker inspect --format='{{.Config.Memory}}' 7c5a2d4c7fe0`\n\nFor example, if the memory limit is set to 256 MB for a container instance, the output of the command above would be `2.68435456e+08` and NOT `256m`. You should convert this value using a scientific calculator.\n\n## Impact\n\nIf correct memory limits are not set on each container, one process can expand its usage and cause other containers to run out of resources.\n\n## Default value\n\nBy default, all containers on a Docker host share their resources equally and no memory limits are enforced.\n\n## References\n\n1. https://goldmann.pl/blog/2014/09/11/resource-management-in-docker/\n2. https://docs.docker.com/engine/reference/commandline/run/#options\n3. https://docs.docker.com/engine/admin/runmetrics/\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.10","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ecn-mmt-tqe","createdAt":1599605860081,"name":"Memory usage for containers is limited"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","source:compliance-agent","control:2.2","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable client authentication on etcd service.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should not be available to unauthenticated clients. You should enable the client authentication via valid certificates to secure the access to the etcd service.\n\n## Audit\n\nRun the following command on the etcd server node:\n```\nps -ef | grep etcd\n```\nVerify that the `--client-cert-auth` argument is set to `true`.\n\n## Remediation\n\nEdit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and set the below parameter:\n\n```\n--client-cert-auth=\"true\"\n```\n\n## Impact\n\nAll clients attempting to access the etcd server will require a valid client certificate.\n\n## Default value\n\nBy default, the etcd service can be queried by unauthenticated clients.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][`]\n2. [https://kubernetes.io/docs/admin/etcd/ ][1]\n3. [https://coreos.com/etcd/docs/latest/op-guide/configuration.html#client-cert-auth][2]\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges                \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/ \n[3]: https://coreos.com/etcd/docs/latest/op-guide/configuration.html#client-cert-auth\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.2","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"joa-fjx-1li","createdAt":1599605891818,"name":"--client-cert-auth argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.3","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy default, Docker starts containers with a restricted set of Linux kernel capabilities. This means that any process can be granted the required capabilities instead of giving it root access. Using Linux kernel capabilities, processes in general do not need to run as the root user.\n\n## Rationale\n\nDocker supports the addition and removal of capabilities. Remove all capabilities not required for the correct function of the container. Specifically, in the default capability set provided by Docker, the NET_RAW capability should be removed if not explicitly required, as it can give an attacker with access to a container the ability to create spoofed network traffic.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CapAdd={{ .HostConfig.CapAdd }} CapDrop={{ .HostConfig.CapDrop }}'` \n\nVerify that the added and deleted Linux kernel capabilities are in line with the ones needed by the container process in each container instance. Specifically, ensure that the `NET_RAW` capability is removed if not required.\n\n## Remediation\n\nExecute the command `docker run --cap-add={\"Capability 1\",\"Capability 2\"} <Run arguments> <Container Image Name or ID> <Command>` to add required capabilities.\n\nExecute the command `docker run --cap-drop={\"Capability 1\",\"Capability 2\"} <Run arguments> <Container Image Name or ID> <Command>` to remove unneeded capabilities.\n\nAlternatively, remove all the currently configured capabilities and then restore only the ones you specifically use: `docker run --cap-drop=all --cap-add={\"Capability 1\",\"Capability 2\"} <Run arguments> <Container Image Name or ID> <Command>`\n\n## Impact\n\nRestrictions on processes within a container are based on which Linux capabilities are in force. Removal of the `NET_RAW` capability prevents the container from creating raw sockets which is good security practice under most circumstances, but may affect some networking utilities.\n\n## Default value\n\nBy default, the capabilities below are applied to containers:\n\n* `AUDIT_WRITE`\n* `CHOWN`\n* `DAC_OVERRIDE`\n* `FOWNER`\n* `FSETID`\n* `KILL`\n* `MKNOD`\n* `NET_BIND_SERVICE`\n* `NET_RAW`\n* `SETFCAP`\n* `SETGID`\n* `SETPCAP`\n* `SETUID`\n* `SYS_CHROOT`\n\n## References\n\n1. https://docs.docker.com/engine/security/security/#linux-kernel-capabilities\n2. http://man7.org/linux/man-pages/man7/capabilities.7.html\n3. http://www.oreilly.com/webops-perf/free/files/docker-security.pdf\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.3","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"3j5-bun-deq","createdAt":1599605923399,"name":"Linux kernel capabilities are restricted within containers"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.11","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy default, all containers on a Docker host share resources equally. By using the resource management capabilities of the Docker host you can control the host CPU resources that a container may consume.\n\n## Rationale\n\nBy default, CPU time is divided between containers equally. If you wish to control available CPU resources amongst container instances, you can use the CPU sharing feature. CPU sharing allows you to prioritize one container over others and prevents lower priority containers from absorbing CPU resources which may be required by other processes. This ensures that high priority containers are able to claim the CPU runtime they require.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CpuShares={{ .HostConfig.CpuShares }}'` \n\nIf this command returns 0 or 1024, it means that CPU shares are not in place. If it returns a non-zero value other than 1024, it means that they are in place.\n\n## Remediation\n\nYou should manage the CPU runtime between your containers dependent on their priority within your organization. To do so, start the container using the `--cpu-shares` argument. For example, you could run a container as `docker run --interactive --tty --cpu-shares 512 centos /bin/bash` The container is started with CPU shares of 50% of what other containers use. So if the other container has CPU shares of 80%, this container will have CPU shares of 40%. Every new container will have 1024 shares of CPU by default. However, this value is shown as 0 if you run the command mentioned in the audit section.\n\n\nAlternatively:\n\n1. Navigate to the `/sys/fs/cgroup/cpu/system.slice/` directory.\n2. Check your container instance ID using docker ps.\n3. Inside the above directory (in step 1), call a directory. For example: `docker-<Instance ID>.scope` or `docker-4acae729e8659c6be696ee35b2237cc1fe4edd2672e9186434c5116e1a6fbed6.scope`. Navigate to this directory.\n4. You will find a file named `cpu.shares`. Execute `cat cpu.shares`. This will always give you the CPU share value based on the system. Even if there are no CPU shares configured using the `-c` or `--cpu-shares` argument in the docker run command, this file will have a value of 1024. If you set one containers CPU shares to 512 it will receive half of the CPU time compared to the other containers. So if you take 1024 as 100% you can then derive the number that you should set for respective CPU shares. For example, use 512 if you want to set it to 50% and 256 if you want to set it 25%.\n\n## Impact\n\nIf you do not correctly assign CPU thresholds, the container process may run out of resources and become unresponsive. If CPU resources on the host are not constrained, CPU shares do not place any restrictions on individual resources.\n\n## Default value\n\nBy default, all containers on a Docker host share their resources equally. No CPU shares are enforced.\n\n## References\n\n1. https://goldmann.pl/blog/2014/09/11/resource-management-in-docker/\n2. https://docs.docker.com/engine/reference/commandline/run/#options\n3. https://docs.docker.com/engine/admin/runmetrics/\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.11","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"gfh-gqy-log","createdAt":1599605955638,"name":"CPU priority is set appropriately on containers"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.20","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUTS namespaces provide isolation between two system identifiers: the hostname and the NIS domain name. It is used to set the hostname and the domain which are visible to running processes in that namespace. Processes running within containers do not typically require to know either the hostname or the domain name. The UTS namespace should therefore not be shared with the host.\n\n## Rationale\n\nSharing the UTS namespace with the host provides full permission for each container to change the hostname of the host. This is not in line with good security practice and should not be permitted.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: UTSMode={{ .HostConfig.UTSMode }}'` \n\nIf this command returns `host`, it means the host UTS namespace is shared with the container and this recommendation is non-compliant. If the above command returns nothing, then the host's UTS namespace is not shared. This recommendation is then compliant.\n\n## Remediation\n\nYou should not start a container with the `--uts=host` argument. For example, do not start a container using the command `docker run --rm --interactive --tty --uts=host rhel7.2`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, all containers have the UTS namespace enabled and the host UTS namespace is not shared with any containers.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#uts-settings-uts\n2. http://man7.org/linux/man-pages/man7/namespaces.7.html\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.20","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.20\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"j1n-gsx-mlx","createdAt":1599605987292,"name":"Host's UTS namespace is not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","control:2.3","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use self-signed certificates for TLS.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should not be available to unauthenticated clients. You should enable the client authentication via valid certificates to secure the access to the etcd service.\n\n## Audit\n\nRun the following command on the etcd server node: \n```\nps -ef | grep etcd\n```\nVerify that if the `--auto-tls` argument exists, it is not set to `true`.\n\n## Remediation\n\nEdit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and either remove the `--auto-tls` parameter or set it to false:\n\n```\n--auto-tls=false\n```\n\n## Impact\n\nClients will not be able to use self-signed certificates for TLS.\n\n## Default value\n\nBy default, `--auto-tls` is set to false.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][1]\n2. [https://kubernetes.io/docs/admin/etcd/ ][2]\n3. [https://coreos.com/etcd/docs/latest/op-guide/configuration.html#auto-tls][3]\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. Version 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.                \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/ \n[3]: https://coreos.com/etcd/docs/latest/op-guide/configuration.html#auto-tls\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.3","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qai-h9s-xgt","createdAt":1599606018741,"name":"--auto-tls argument is not set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.1","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable anonymous requests to the Kubelet server.\n\n## Rationale\n\nWhen enabled, requests that are not rejected by other configured authentication methods are treated as anonymous requests. These requests are then served by the Kubelet server. You should rely on authentication to authorize access and disallow anonymous requests.\n\n## Audit\n\nIf using a Kubelet configuration file, check that there is an entry for authentication: anonymous: enabled set to false. Run the following command on each node: `ps -ef | grep kubelet`. Verify that the `--anonymous-auth` argument is set to false. This executable argument may be omitted, provided there is a corresponding entry set to false in the Kubelet config file.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `authentication: anonymous: enabled` to false. If using executable arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_SYSTEM_PODS_ARGS` variable:\n\n```\n--anonymous-auth=false\n```\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nAnonymous requests will be rejected.\n\n## Default value\n\nBy default, anonymous access is enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authentication][2]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.14 Controlled Access Based on the Need to Know\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authentication\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.1","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oun-uxo-viy","createdAt":1599606050277,"name":"Anonymous-auth argument is set to false"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.18","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not bind the insecure API service.\n\n## Rationale\n\nIf you bind the apiserver to an insecure address, basically anyone who could connect to it over the insecure port, would have unauthenticated and unencrypted access to your master node. The apiserver doesn't do any authentication checking for insecure binds and traffic to the Insecure API port is not encrpyted, allowing attackers to potentially read sensitive data in transit.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--insecure-bind-address` argument does not exist.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and remove the --insecure-bind-address parameter.\n\n## Impact\n\nConnections to the API server will require valid authentication credentials.\n\n## Default value\n\nBy default, the insecure bind address is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6 9.1 Limit Open Ports, Protocols, and Services Ensure that only ports, protocols, and services with validated business needs are running on each system. Version 7 9.2 Ensure Only Approved Ports, Protocols and Services Are Running Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.18","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.18\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tzo-x3g-yya","createdAt":1599606081666,"name":"--insecure-bind-address argument is not set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.29","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\netcd should be configured to make use of TLS encryption for client connections.\n\n## Rationale\n\netcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be protected by client authentication. This requires the API server to identify itself to the etcd server using a client certificate and key.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--etcd-certfile` and `--etcd-keyfile` arguments exist and they are set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection between the apiserver and etcd. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the etcd certificate and key file parameters. \n```\n--etcd-certfile=<path/to/client-certificate-file> \n--etcd-keyfile=<path/to/client-key-file>\n```\n\n## Impact\n\nTLS and client certificate authentication must be configured for etcd.\n\n## Default value\n\nBy default, `--etcd-certfile` and `--etcd-keyfile` arguments are not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://coreos.com/etcd/docs/latest/op-guide/security.html\n\n## CIS controls\n\nVersion 6 9 Limitation and Control of Network Ports, Protocols, and Services\nVersion 7 9 Limitation and Control of Network Ports, Protocols, and Services\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.29","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.29\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"2xl-vuo-tud","createdAt":1599606113167,"name":"--etcd-certfile and --etcd-keyfile arguments are set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.9","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the TLS CA certificate file, the file that is passed along with the `--tlscacert parameter`, is individually owned and group owned by root.\n\n## Rationale\n\nThe TLS CA certificate file should be protected from any tampering. It is used to authenticate the Docker server based on a given CA certificate. It must be therefore be individually owned and group owned by root to ensure that it cannot be modified by less privileged users.\n\n## Audit\n\nYou should execute the command below to verify that the TLS CA certificate file is owned and group owned by root: \n\n```\nstat -c %U:%G <path to TLS CA certificate file> | grep -v root:root\n```\n\nThis command does not return any data.\n\n## Remediation\n\nRun the following command: `chown root:root <path to TLS CA certificate file>`\n\nThis sets the individual ownership and group ownership for the TLS CA certificate file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the ownership and group-ownership for TLS CA certificate file is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.9","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"8nb-ex2-pqe","createdAt":1602076303298,"name":"TLS CA certificate file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","source:compliance-agent","control:2.2"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSet Docker daemon log level to `info`.\n\n## Rationale\n\nSetting up an appropriate log level configures the Docker daemon to log events that you would want to review later. A base log level of `info` and above captures all logs except `debug` logs. Unless required, you should not run Docker daemon at `debug` log level.\n\n## Audit\n\nTo confirm that the log level setting is `info`, review both the `dockerd` startup options, and also the log level settings in `/etc/docker/daemon.json`. To review the `dockerd` startup options, run: \n```\nps -ef | grep dockerd \n```\nEnsure that either the `--log-level` parameter is not present or if present, that it is set to `info`. \n\nSimilarly, review the `/etc/docker/daemon.json` for the `log-level` setting.\n\n## Remediation\n\nEnsure that the Docker daemon configuration file has the following configuration included:\n\n```\n\"log-level\": \"info\" \n```\n\nAlternatively, run the Docker daemon with the `log-level` specified:\n\n```\ndockerd --log-level=\"info\"\n```\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, Docker daemon is set to log level of `info`.\n\n## References\n\n1. [https://docs.docker.com/edge/engine/reference/commandline/dockerd/][1]\n\n## CIS controls\n\nVersion 6.6.2 Ensure Audit Log Settings Support Appropriate Log Entry Formatting - Validate audit log settings for each hardware device and the software installed on it, ensuring that logs include a date, timestamp, source addresses, destination addresses, and various other useful elements of each packet and/or transaction. Systems should record logs in a standardized format such as syslog entries or those outlined by the Common Event Expression initiative. If systems cannot generate logs in a standardized format, log normalization tools can be deployed to convert logs into such a format. \n\nVersion 7.6.2 Activate audit logging - Ensure that local logging has been enabled on all systems and networking devices. \n\nVersion 6.3 Enable Detailed Logging - Enable system logging to include detailed information such as an event source, date, user, timestamp, source addresses, destination addresses, and other useful elements.                \n\n[1]: https://docs.docker.com/edge/engine/reference/commandline/dockerd/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.2","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"q6o-wrf-hf4","createdAt":1602076723155,"name":"Logging level is set to 'info'"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.10","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the TLS CA certificate file, the file that is passed along with the `--tlscacert` parameter, has permissions of 444 or is set more restrictively.\n\n## Rationale\n\nThe TLS CA certificate file should be protected from any tampering. It is used to authenticate the Docker server based on a given CA certificate. It must therefore have permissions of 444, or more restrictive permissions to ensure that the file cannot be modified by a less privileged user.\n\n## Audit\n\nVerify that the TLS CA certificate file has permissions of `444` or more restrictive, by running: \n```\nstat -c %a <path to TLS CA certificate file>\n```\n\n## Remediation\n\nRun the following command: `chmod 444 <path to TLS CA certificate file>`\n\nThis sets the file permissions on the TLS CA file to 444.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for the TLS CA certificate file might not be 444. The default file permissions are governed by the operating system or user specific umask values.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.10","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"hyd-ar9-kzl","createdAt":1602076723625,"name":"TLS CA certificate file permissions are set to 444 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.12","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker server certificate file, the file that is passed along with the `--tlscert` parameter, has permissions of 444 or more restrictive permissions.\n\n## Rationale\n\nThe Docker server certificate file should be protected from any tampering. It is used to authenticate the Docker server based on the given server certificate. It should therefore have permissions of 444 to prevent its modification.\n\n## Audit\n\nVerify that the Docker server certificate file has permissions of `444` or more restrictive, by running: \n```\nstat -c %a <path to Docker server certificate file>\n```\n\n## Remediation\n\nRun the command below: `chmod 444 <path to Docker server certificate file>`\n\nThis sets the file permissions of the Docker server certificate file to 444.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for the Docker server certificate file might not be 444. The default file permissions are governed by the operating system or user specific umask values.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.12","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"blu-k6b-re1","createdAt":1602076770300,"name":"Docker server certificate file permissions are set to 444 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.1","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAll Docker containers and their data and metadata are stored in the `/var/lib/docker` directory. By default, `/var/lib/docker` should be mounted under either the `/` or `/var` partitions depending on how the Linux operating system in use is configured.\n\n## Rationale\n\nDocker depends on `/var/lib/docker` as the default directory where all Docker related files, including the images, are stored. This directory could fill up quickly causing both Docker and the host to become unusable. For this reason, you should create a separate partition (logical volume) for storing Docker files.\n\n## Audit\n\nTo see the partition details for the `/var/lib/docker` mount point, at the Docker host run:\n\n```\ngrep '/var/lib/docker\\s' /proc/mounts \n```\n\nAlternatively, to see whether the configured root directory is a mount point, run.\n\n```\nmountpoint -- \"$(docker info -f '{{ .DockerRootDir }}')\" \n```\n\n## Remediation\n\nFor new installations, you should create a separate partition for the `/var/lib/docker` mount point. For systems that have already been installed, you should use the Logical Volume Manager (LVM) within Linux to create a new partition.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, `/var/lib/docker` is mounted under the `/` or `/var` partitions dependent on how the OS is configured.\n\n## References\n\n1. [https://www.projectatomic.io/docs/docker-storage-recommendation/][1]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know                \n\n[1]: https://www.projectatomic.io/docs/docker-storage-recommendation/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.1","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"wcf-c0t-fkz","createdAt":1602076808377,"name":"A separate partition for containers has been created"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:3.14","security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker server certificate key file, the file that is passed along with the `--tlskey` parameter, has permissions of 400.\n\n## Rationale\n\nThe Docker server certificate key file should be protected from any tampering or unneeded reads. It holds the private key for the Docker server certificate. It must therefore have permissions of 400 to ensure that the certificate key file is not modified.\n\n## Audit\n\nVerify that the Docker server certificate key file has permissions of `400` by running: \n```\nstat -c %a <path to Docker server certificate key file>\n```\n\n## Remediation\n\nYou should execute the following command: `chmod 400 <path to Docker server certificate key file>`\n\nThis sets the Docker server certificate key file permissions to 400.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for the Docker server certificate key file might not be 400. The default file permissions are governed by the operating system or user specific umask values.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.14","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.14\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"z0n-cod-mxi","createdAt":1602077570102,"name":"Docker server certificate key file permissions are set to 400"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:2.6","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIt is possible to make the Docker daemon available remotely over a TCP port. If this is required, you should ensure that TLS authentication is configured in order to restrict access to the Docker daemon via IP address and port.\n\n## Rationale\n\nBy default, the Docker daemon binds to a non-networked Unix socket and runs with root privileges. If you change the default Docker daemon binding to a TCP port or any other Unix socket, anyone with access to that port or socket could have full access to the Docker daemon and therefore in turn to the host system. For this reason, you should not bind the Docker daemon to another IP/port or a Unix socket. If you must expose the Docker daemon via a network socket, you should configure TLS authentication for the daemon and for any Docker Swarm APIs (if they are in use). This type of configuration restricts the connections to your Docker daemon over the network to a limited number of clients who have access to the TLS client credentials.\n\n## Audit\n\nTo confirm that the TLS authentication setting is correct, review the `dockerd` startup options and the settings in `/etc/docker/daemon.json`. To review the `dockerd` startup options, run: \n```\nps -ef | grep dockerd \n```\nConfirm that the following parameters are present: `--tlsverify --tlscacert --tlscert --tlskey`.\n\nAlso review the `/etc/docker/daemon.json` file to ensure these settings are in place.\n\n## Remediation\n\nFollow the steps mentioned in the Docker documentation or other references.\n\n## Impact\n\nYou would need to manage and guard certificates and keys for the Docker daemon and Docker clients.\n\n## Default value\n\nBy default, TLS authentication is not configured.\n\n## References\n\n1. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system.\n\nVersion 7\n\n9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.6","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"rh4-jeh-afu","createdAt":1602077571799,"name":"TLS authentication for Docker daemon is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:3.13","security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker server certificate key file, the file that is passed along with the `--tlskey` parameter, is individually owned and group owned by root.\n\n## Rationale\n\nThe Docker server certificate key file should be protected from any tampering or unneeded reads/writes. As it holds the private key for the Docker server certificate, it must be individually owned and group owned by root to ensure that it cannot be accessed by less privileged users.\n\n## Audit\n\nVerify that the Docker server certificate key file is individually owned and group-owned by root, by running: \n```\nstat -c %U:%G <path to Docker server certificate key file> | grep -v root:root \n```\nThe command should return no results.\n\n## Remediation\n\nRun the following command: `chown root:root <path to Docker server certificate key file>`\n\nThis sets the individual ownership and group ownership for the Docker server certificate key file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the individual ownership and group ownership for the Docker server certificate key file is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.13","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.13\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oiu-e3x-yg6","createdAt":1602077710804,"name":"Docker server certificate key file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.11","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker server certificate file, the file that is passed along with the `--tlscert` parameter, is individual owned and group owned by root.\n\n## Rationale\n\nThe Docker server certificate file should be protected from any tampering. It is used to authenticate the Docker server based on the given server certificate. It must therefore be individually owned and group owned by root to prevent modification by less privileged users.\n\n## Audit\n\nVerify that the Docker server certificate file is individually owned and group-owned by root, by running: \n```\nstat -c %U:%G <path to Docker server certificate file> | grep -v root:root\n```\nThe command should return no results.\n\n## Remediation\n\nRun the following command: `chown root:root <path to Docker server certificate file>`\n\nThis sets the individual ownership and the group ownership for the Docker server certificate file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the ownership and group-ownership for Docker server certificate file is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.11","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tkm-izb-xe1","createdAt":1602077837917,"name":"Docker server certificate file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Network-Policies-and-CNI","control:5.3.2","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUse network policies to isolate traffic in your cluster network.\n\n## Rationale\n\nRunning different applications on the same Kubernetes cluster creates a risk of one compromised application attacking a neighboring application. Network segmentation is important to ensure that containers can communicate only with those they are supposed to. A network policy is a specification of how selections of pods are allowed to communicate with each other and other network endpoints. Network Policies are namespace scoped. When a network policy is introduced to a given namespace, all traffic not allowed by the policy is denied. However, if there are no network policies in a namespace, all traffic will be allowed into and out of the pods in that namespace.\n\n## Audit\n\nRun the following command and review the NetworkPolicy objects created in the cluster: `kubectl --all-namespaces get networkpolicy`\n\nEnsure that each namespace defined in the cluster has at least one Network Policy.\n\n## Remediation\n\nFollow the documentation and create network policy objects as you need them.\n\n## Impact\n\nOnce network policies are in use within a given namespace, traffic not explicitly allowed by a network policy will be denied. It is important to ensure that, when introducing network policies, legitimate traffic is not blocked.\n\n## Default value\n\nBy default, network policies are not created.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/services-networking/networkpolicies/ ][1]\n2. [https://octetz.com/posts/k8s-network-policy-apis ][2]\n3. [https://kubernetes.io/docs/tasks/configure-pod-container/declare-network-policy/][3]\n\n## CIS controls\n\nVersion 6.14.1 Implement Network Segmentation Based On Information Class Segment - The network based on the label or classification level of the information stored on the servers. Locate all sensitive information on separated VLANS with firewall filtering to ensure that only authorized individuals are only able to communicate with systems necessary to fulfill their specific responsibilities.\n\nVersion 7.14.1 Segment the Network Based on Sensitivity - Segment the network based on the label or classification level of the information stored on the servers, locate all sensitive information on separated Virtual Local Area Networks (VLANs).\n\nVersion 7.14.2 Enable Firewall Filtering Between VLANs - Enable firewall filtering between VLANs to ensure that only authorized systems are able to communicate with other systems necessary to fulfill their specific responsibilities.\n\n[1]: https://kubernetes.io/docs/concepts/services-networking/networkpolicies/\n[2]: https://octetz.com/posts/k8s-network-policy-apis\n[3]: https://kubernetes.io/docs/tasks/configure-pod-container/declare-network-policy/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.3.2","framework":"cis-kubernetes","requirement":"Network-Policies-and-CNI","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":5,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.3.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mrw-bae-anz","createdAt":1604312181303,"name":"All namespaces have network policies defined"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","requirement:RBAC-and-Service-Accounts","scored:true","security:compliance","control:5.1.5","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe default service account should not be used to ensure that rights granted to applications can be more easily audited and reviewed.\n\n## Rationale\n\nKubernetes provides a default service account which is used by cluster workloads where no specific service account is assigned to the pod. Where access to the Kubernetes API from a pod is required, a specific service account should be created for that pod, and rights granted to that service account. The default service account should be configured such that it does not provide a service account token and does not have any explicit rights assignments.\n\n## Audit\n\nFor each namespace in the cluster, review the rights assigned to the default service account and ensure that it has no roles or cluster roles bound to it apart from the defaults. Additionally ensure that the `automountServiceAccountToken: false` setting is in place for each default service account.\n\n## Remediation\n\nCreate explicit service accounts wherever a Kubernetes workload requires specific access to the Kubernetes API server. Modify the configuration of each default service account to include this value `automountServiceAccountToken: false`.\n\n## Impact\n\nAll workloads which require access to the Kubernetes API will require an explicit service account to be created.\n\n## Default value\n\nBy default the default service account allows for its service account token to be mounted in pods in its namespace.\n\n## References\n\n1. [https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/][1]\n\n## CIS controls\n\nNone\n\n[1]: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.1.5","framework":"cis-kubernetes","requirement":"RBAC-and-Service-Accounts","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.1.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"3yv-aqm-bxc","createdAt":1604312204438,"name":"Default service accounts are not actively used"}]}
    headers:
      Content-Type:
      - application/json
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=2&page%5Bsize%5D=100
    method: GET
  response:
    body: |
      {"meta":{"page":{"total_filtered_count":0,"total_count":152}},"data":[]}
    headers:
      Content-Type:
      - application/json
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=0&page%5Bsize%5D=100
    method: GET
  response:
    body: |
      {"meta":{"page":{"total_filtered_count":100,"total_count":152}},"data":[{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Controller-Manager","control:1.3.5","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAllow pods to verify the API server's serving certificate before establishing connections.\n\n## Rationale\n\nProcesses running within pods that need to contact the API server must verify the API server's serving certificate. Failing to do so could be a subject to man-in-the-middle attacks. Providing the root certificate for the API server's serving certificate to the controller manager with the `--root-ca-file` argument allows the controller manager to inject the trusted bundle into pods so that they can verify TLS connections to the API server.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--root-ca-file` argument exists and is set to a certificate bundle file containing the root certificate for the API server's serving certificate.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and set the `--root-ca-file` parameter to the certificate bundle file: `--root-ca-file=<path/to/file>`\n\n## Impact\n\nYou need to setup and maintain root certificate authority file.\n\n## Default value\n\nBy default, `--root-ca-file` is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-controller-manager/ ][1]\n2. [https://github.com/kubernetes/kubernetes/issues/11000][2]\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.                \n\n[1]: https://kubernetes.io/docs/admin/kube-controller-manager/ \n[2]: https://github.com/kubernetes/kubernetes/issues/11000\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.5","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"k7t-yxp-axc","createdAt":1599598174692,"name":"--root-ca-file argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:1.2.2","security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe Docker daemon requires access to the Docker socket which is, by default, owned by the user `root` and the group `docker`.\n\n## Rationale\n\nDocker allows you to share a directory between the Docker host and a guest container without limiting the access rights of the container. This means that you can start a container and map the `/` directory on your host to the container. The container is able to modify your host file system without any restrictions. This means that you could gain elevated privileges simply by being a member of the `docker` group and subsequently start a container which maps the root `/` directory on the host.\n\n\n## Audit\n\nRun the following command on the Docker host to see the members of the `docker` group, and ensure that only trusted users are members:\n\n```\ngetent group docker\n```\n\n## Remediation\n\nYou should remove any untrusted users from the `docker` group. Additionally, you should not create a mapping of sensitive directories from the host to container volumes.\n\n## Impact\n\nProvided the proceeding instructions are implemented, rights to build and execute containers as normal user would be restricted.\n\n## Default value\n\nNot Applicable\n\n## References\n\n1. [https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface]\n2. [https://www.andreas-jung.com/contents/on-docker-security-docker-group-considered-harmful]\n3. [http://www.projectatomic.io/blog/2015/08/why-we-dont-let-non-root-users-run-docker-in-centos-fedora-or-rhel/]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.                \n\n[1]: https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface \n[2]: https://www.andreas-jung.com/contents/on-docker-security-docker-group-considered-harmful \n[3]: http://www.projectatomic.io/blog/2015/08/why-we-dont-let-non-root-users-run-docker-in-centos-fedora-or-rhel/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.2","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"dev-mh8-u1i","createdAt":1599598174666,"name":"Only trusted users are allowed to control Docker daemon"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","control:2.6","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use automatically generated self-signed certificates for TLS connections between peers.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be accessible only by authenticated etcd peers in the etcd cluster. Hence, do not use self-signed certificates for authentication.\n\n## Audit\n\nThis recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable.\n\nRun the following command on the etcd server node: \n```\nps -ef | grep etcd\n```\nVerify that if the `--peer-auto-tls` argument exists, it is not set to `true`.\n\n## Remediation\n\nEdit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and either remove the `--peer-auto-tls` parameter or set it to false. \n\n```\n--peer-auto-tls=false\n```\n\n## Impact\n\nAll peers attempting to communicate with the etcd server will require a valid client certificate for authentication.\n\n## Default value\n\n*Note*: This recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable. By default, `--peer-auto-tls` argument is set to false.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][1]\n2. [https://kubernetes.io/docs/admin/etcd/ ][2]\n3. [https://coreos.com/etcd/docs/latest/op-guide/configuration.html#peer-auto-tls][3]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.4 Controlled Use of Administrative Privileges             \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/ \n[3]: https://coreos.com/etcd/docs/latest/op-guide/configuration.html#peer-auto-tls\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.6","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"info","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"l0y-lyz-foj","createdAt":1599598174666,"name":"--peer-auto-tls argument is not set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.14","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy using the `--restart` flag in the docker run command you can specify a restart policy for how a container should or should not be restarted on exit. You should choose the on-failure restart policy and limit the restart attempts to 5.\n\n## Rationale\n\nIf you indefinitely keep trying to start the container, it could possibly lead to a denial of service on the host. It could be an easy way to do a distributed denial of service attack especially if you have many containers on the same host. Additionally, ignoring the exit status of the container and always attempting to restart the container, leads to non-investigation of the root cause behind containers getting terminated. If a container gets terminated, you should investigate on the reason behind it instead of just attempting to restart it indefinitely. You should use the on-failure restart policy to limit the number of container restarts to a maximum of 5 attempts.\n\n## Audit\n\nExecute this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: RestartPolicyName={{ .HostConfig.RestartPolicy.Name }} MaximumRetryCount={{ .HostConfig.RestartPolicy.MaximumRetryCount }}'` \n\nIf this command returns `RestartPolicyName=always`, then the system is not configured optimally. If this command returns `RestartPolicyName=no` or just `RestartPolicyName=`, then restart policies are not being used and the container would never be restarted automatically. This may be a secure option, but it is not the best option from a usability standpoint. If this command returns `RestartPolicyName=on-failure`, then verify that the number of restart attempts is set to 5 or less by looking at `MaximumRetryCount`.\n\n## Remediation\n\nIf you wish a container to be automatically restarted, use `docker run --detach --restart=on-failure:5 nginx`\n\n## Impact\n\nIf this option is set, a container will only attempt to restart itself 5 times.\n\n## Default value\n\nBy default, containers are not configured with restart policies.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/run/#restart-policies-restart\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.14","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.14\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ycq-buv-pf8","createdAt":1599598174688,"name":"'on-failure' container restart policy is set to '5'"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","control:1.1.4","security:compliance","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the controller manager pod specification file ownership is set to root:root.\n\n## Rationale\n\nThe controller manager pod specification file controls various parameters that set the behavior of various components of the master node. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/manifests/kube-controller-manager.yaml\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/manifests/kube-controller-manager.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kube-controller-manager.yaml` file ownership is set to root:root.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-controller-manager\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.4","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"jwf-xdm-mi9","createdAt":1599599105053,"name":"Controller manager pod specification file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.31","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSetup TLS connection on the API server.\n\n## Rationale\n\nAPI server communication contains sensitive parameters that should remain encrypted in transit. Configure the API server to serve only HTTPS traffic. If `--client-ca-file` argument is set, any request presenting a client certificate signed by one of the authorities in the `client-ca-file` is authenticated with an identity corresponding to the CommonName of the client certificate.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--client-ca-file` argument exists and it is set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection on the apiserver. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the client certificate authority file: `--client-ca-file=<path/to/client-ca-file>`\n\n## Impact\n\nTLS and client certificate authentication must be configured for your Kubernetes cluster deployment.\n\n## Default value\n\nBy default, `--client-ca-file` argument is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. http://rootsquash.com/2016/05/10/securing-the-kubernetes-api/ \n3. https://github.com/kelseyhightower/docker-kubernetes-tls-guide\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.31","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.31\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"nad-eon-2rv","createdAt":1599599105054,"name":"--client-ca-file argument is set as appropriate (API server)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.27","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nValidate service account before validating token.\n\n## Rationale\n\nIf --service-account-lookup is not enabled, the apiserver only verifies that the authentication token is valid, and does not validate that the service account token mentioned in the request is actually present in etcd. This allows using a service account token even after the corresponding service account is deleted. This is an example of time of check to time of use security issue.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that if the `--service-account-lookup` argument exists it is set to `true`.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the below parameter. `--service-account-lookup=true` Alternatively, you can delete the `--service-account-lookup` parameter from this file so that the default takes effect.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `--service-account-lookup` argument is set to true.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://github.com/kubernetes/kubernetes/issues/24167 \n3. https://en.wikipedia.org/wiki/Time_of_check_to_time_of_use\n\n## CIS controls\n\nVersion 6 16 Account Monitoring and Control Account Monitoring and Control Version 7 16 Account Monitoring and Control Account Monitoring and Control\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.27","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.27\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ycp-ppm-trb","createdAt":1599599105043,"name":"--service-account-lookup argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.12","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable kubelet server certificate rotation.\n\n## Rationale\n\n`RotateKubeletServerCertificate` causes the kubelet to both request a serving certificate after bootstrapping its client credentials and rotate the certificate as its existing credentials expire. This automated periodic rotation ensures that the there are no downtimes due to expired certificates and thus addressing availability in the CIA security triad.\n\n*Note*: This recommendation only applies if you let kubelets get their certificates from the API server. In case your kubelet certificates come from an outside authority/tool (e.g. Vault) then you need to take care of rotation yourself.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that `RotateKubeletServerCertificate` argument exists and is set to `true`.\n\n## Remediation\n\nOn the master edit `/var/lib/kubelet/kubeadm-flags.env` and set the parameter `KUBELET_CERTIFICATE_ARGS --feature-gates=RotateKubeletServerCertificate=true` or as an alternative, and suggested as a last resort, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_CERTIFICATE_ARGS` variable:\n\n```\n--feature-gates=RotateKubeletServerCertificate=true\n```\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, kubelet server certificate rotation is disabled.\n\n## References\n\n1. https://github.com/kubernetes/kubernetes/pull/45059\n2. https://kubernetes.io/docs/admin/kubelet-tls-bootstrapping/#kubelet-configuration\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted.\n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n\n[1]: https://github.com/kubernetes/kubernetes/pull/45059\n[2]: https://kubernetes.io/docs/admin/kubelet-tls-bootstrapping/#kubelet-configuration\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.12","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"afr-qkp-94a","createdAt":1599599105048,"name":"RotateKubeletServerCertificate argument is set to true (Kubelet)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Docker-Daemon-Configuration","control:2.3","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe `iptables` firewall is used to set up, maintain, and inspect the tables of IP packet filter rules within the Linux kernel. The Docker daemon should be allowed to make changes to the `iptables` ruleset.\n\n## Rationale\n\nDocker will not make changes to your system `iptables` rules unless you allow it to do so. If you do allow this, Docker server will automatically make any required changes. You should let Docker make changes to `iptables` automatically in order to avoid networking misconfigurations that could affect the communication between containers and with the outside world. Additionally, this reduces the administrative overhead of updating `iptables` every time you add containers or modify networking options.\n\n## Audit\n\nTo confirm that the Docker daemon is allowed to change the `iptables` ruleset, review the `dockerd` startup options and the settings in `/etc/docker/daemon.json`. To review the `dockerd` startup options, run: \n```\nps -ef | grep dockerd \n```\nEnsure that the `--iptables` parameter is either not present or not set to `false`. Also review the `/etc/docker/daemon.json` file to check that the `iptables` setting is not set to `false`.\n\n## Remediation\n\nDo not run the Docker daemon with `--iptables=false` parameter. \n\n## Impact\n\nThe Docker daemon service requires `iptables` rules to be enabled before it starts. Any restarts of `iptables` during Docker daemon operation may result in losing Docker-created rules. Adding `iptables-persistent` to your `iptables` install can mitigate.\n\n## Default value\n\nBy default, `iptables` is set to true.\n\n## References\n\n1. [https://docs.docker.com/engine/userguide/networking/default_network/container-communication/][1]\n2. [https://fralef.me/docker-and-iptables.html][2]\n\n## CIS controls\n\nVersion 6.5 Controlled Use of Administration Privileges                \n\n[1]: https://docs.docker.com/engine/userguide/networking/default_network/container-communication/\n[2]: https://fralef.me/docker-and-iptables.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.3","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"3fv-xgy-7fb","createdAt":1599599453907,"name":"Docker is allowed to make changes to iptables"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.7","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that all the registry certificate files, usually found under the `/etc/docker/certs.d/<registry-name>` directory, are individually owned and group owned by root.\n\n## Rationale\n\nThe `/etc/docker/certs.d/<registry-name>` directory contains Docker registry certificates. These certificate files must be individually owned and group owned by root to ensure that less privileged users are unable to modify the contents of the directory.\n\n## Audit\n\nYou should execute the command below to verify that the registry certificate files are individually owned and group owned by root: \n\n```\nstat -c %U:%G /etc/docker/certs.d/* | grep -v root:root \n```\n\nThis command does not return any data.\n\n## Remediation\n\nExecute the following command: `chown root:root /etc/docker/certs.d/<registry-name>/*`\n\nThis sets the individual ownership and group ownership for the registry certificate files to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the individual ownership and group ownership for registry certificate files is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.7","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"fbv-qsy-urc","createdAt":1599599454050,"name":"Registry certificate file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.17","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `controller-manager.conf` file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe `controller-manager.conf` file is the kubeconfig file for the Controller Manager. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/controller-manager.conf\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/controller-manager.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `controller-manager.conf` has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-controller-manager/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.17","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.17\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"iss-afi-xfp","createdAt":1599599454121,"name":"controller-manager.conf file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.11","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not allow all requests.\n\n## Rationale\n\nSetting admission control plugin AlwaysAdmit allows all requests and do not filter any requests. The AlwaysAdmit admission controller was deprecated in Kubernetes v1.13. Its behavior was equivalent to turning off all admission controllers.\n\n## Audit\n\nRun the following command on the master node:\n\n```bash\nps -ef | grep kube-apiserver\n```\n\nVerify the `--enable-admission-plugins` argument's value (if set) does not include `AlwaysAdmit`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and either remove the --enable-admission-plugins parameter, or set it to a value that does not include AlwaysAdmit.\n\n## Impact\n\nOnly requests explicitly allowed by the admissions control plugins would be served.\n\n## Default value\n\nAlwaysAdmit is not in the list of default admission plugins.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#alwaysadmit\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.11","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ysr-4gg-vu5","createdAt":1599599454382,"name":"Admission control plugin AlwaysAdmit is not set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.6","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `kubelet.conf` file ownership is set to `root:root`.\n\n## Rationale\n\nThe `kubelet.conf` file is the kubeconfig file for the node, and controls various parameters that set the behavior and identity of the worker node. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %U:%G /etc/kubernetes/kubelet.conf`. Verify that the ownership is set to `root:root`.\n\n## Remediation\n\nRun this command (based on the file location on your system) on the each worker node. For example, `chown root:root /etc/kubernetes/kubelet.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kubelet.conf` file ownership is set to `root:root`.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.6","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mrc-waf-mbs","createdAt":1599599696342,"name":"kubelet.conf file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.16","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `scheduler.conf` file ownership is set to `root:root`.\n\n## Rationale\n\nThe `scheduler.conf` file is the kubeconfig file for the Scheduler. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/scheduler.conf\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/scheduler.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `scheduler.conf` file ownership is set to root:root.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kubeadm/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.16","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.16\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"pbp-y4b-dhf","createdAt":1599600185878,"name":"scheduler.conf file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.2","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not allow all requests. Enable explicit authorization.\n\n## Rationale\n\nKubelets, by default, allow all authenticated requests (even anonymous ones) without needing explicit authorization checks from the API server. You should restrict this behavior and only allow explicitly authorized requests.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. If the `--authorization-mode` argument is present check that it is not set to AlwaysAllow. If it is not present check that there is a Kubelet config file specified by `--config`, and that file sets authorization: mode to something other than AlwaysAllow. It is also possible to review the running configuration of a Kubelet via the /configs endpoint on the Kubelet API port (typically `10250/TCP`). Accessing these with appropriate credentials will provide details of the Kubelet's configuration.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set authorization: mode to Webhook. If using executable arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_AUTHZ_ARGS` variable.\n\n`--authorization-mode=Webhook`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nUnauthorized requests will be denied.\n\n## Default value\n\nBy default, `--authorization-mode` argument is set to `AlwaysAllow`.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authentication][2]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\nVersion 7.14 Controlled Access Based on the Need to Know\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authentication\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.2","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"un4-gin-3dq","createdAt":1599600248005,"name":"--authorization-mode argument is not set to AlwaysAllow (Kubelet)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.8","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `/etc/kubernetes/manifests/etcd.yaml` file ownership is set to `root:root`.\n\n## Rationale\n\nThe etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` controls various parameters that set the behavior of the etcd service in the master node. etcd is a highly-available key-value store which Kubernetes uses for persistent storage of all of its REST API object. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/manifests/etcd.yaml\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/manifests/etcd.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `/etc/kubernetes/manifests/etcd.yaml` file ownership is set to root:root.\n\n## References\n\n1. https://coreos.com/etcd\n2. https://kubernetes.io/docs/admin/etcd/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.8","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oac-lbl-npz","createdAt":1599600311388,"name":"etcd pod specification file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.3","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable Kubelet authentication using certificates.\n\n## Rationale\n\nThe connections from the API server to the kubelet are used for fetching logs for pods, attaching (through kubectl) to running pods, and using the kubelet's port-forwarding functionality. These connections terminate at the kubelet's HTTPS endpoint. By default, the API server does not verify the kubelet's serving certificate, which makes the connection subject to man-in-the-middle attacks, and unsafe to run over untrusted and/or public networks. Enabling Kubelet certificate authentication ensures that the API server could authenticate the Kubelet before submitting any requests.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--client-ca-file` argument exists and is set to the location of the client certificate authority file. If the `--client-ca-file` argument is not present, check that there is a Kubelet config file specified by `--config`, and that the file sets authentication: x509: clientCAFile to the location of the client certificate authority file.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `authentication: x509: clientCAFile` to the location of the client CA file. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_AUTHZ_ARGS` variable.\n\n`--client-ca-file=<path/to/client-ca-file>`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nYou require TLS to be configured on API server as well as kubelets.\n\n## Default value\n\nBy default, `--client-ca-file argument` is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-authentication-authorization/][2]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted.\n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-authentication-authorization/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.3","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"x6l-4d1-dwh","createdAt":1599600373842,"name":"--client-ca-file argument is set as appropriate (Kubelet)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Pod-Security-Policies","control:5.2.3","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not generally permit containers to be run with the hostIPC flag set to true.\n\n## Rationale\n\nA container running in the host's IPC namespace can use IPC to interact with processes outside the container. There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to share the host IPC namespace. If you have a requirement to containers that require hostIPC, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n## Audit\n\nGet the set of PSPs with the following command: `kubectl get psp`\n\nFor each PSP, check whether privileged is enabled: `kubectl get psp <name> -o=jsonpath='{.spec.hostIPC}'`\n\nVerify that there is at least one PSP which does not return true.\n\n## Remediation\n\nCreate a PSP as described in the Kubernetes documentation, ensuring that the .spec.hostIPC field is omitted or set to false.\n\n## Impact\n\nPods defined with spec.hostIPC: true will not be permitted unless they are run under a specific PSP.\n\n## Default value\n\nBy default, PodSecurityPolicies are not defined.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/policy/pod-security-policy][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://kubernetes.io/docs/concepts/policy/pod-security-policy\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.2.3","framework":"cis-kubernetes","requirement":"Pod-Security-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vs4-ja0-gkh","createdAt":1599600435891,"name":"Minimize the admission of containers wishing to share the host IPC namespace"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","control:5.1","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAppArmor is an effective and easy-to-use Linux application security system. It is available on some Linux distributions by default, for example, on Debian and Ubuntu.\n\n## Rationale\n\nAppArmor protects the Linux OS and applications from various threats by enforcing a security policy which is also known as an AppArmor profile. You can create your own AppArmor profile for containers or use Docker's default profile. Enabling this feature enforces security policies on containers as defined in the profile.\n\n## Audit\n\nYou should run this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: AppArmorProfile={{ .AppArmorProfile }}'` \n\nThis command returns a valid AppArmor Profile for each container instance.\n\n## Remediation\n\nIf AppArmor is applicable for your Linux OS, enable it.\n\n1. Verify AppArmor is installed.\n2. Create or import a AppArmor profile for Docker containers.\n3. Enable enforcement of the policy.\n4. Start your Docker container using the customized AppArmor profile. For example: `docker run --interactive --tty --security-opt=\"apparmor:PROFILENAME\" ubuntu /bin/bash` Alternatively, Docker's default AppArmor policy can be used.\n\n## Impact\n\nThe container will have the security controls defined in the AppArmor profile. It should be noted that if the AppArmor profile is misconfigured, this may cause issues with the operation of the container.\n\n## Default value\n\nBy default, the docker-default AppArmor profile is applied to running containers. This profile can be found at `/etc/apparmor.d/docker`\n\n## References\n\n1. https://docs.docker.com/engine/security/apparmor/\n2. https://docs.docker.com/engine/reference/run/#security-configuration\n3. https://docs.docker.com/engine/security/security/#other-kernel-security-features\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.1","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"s4z-dsj-llz","createdAt":1599600498264,"name":"An AppArmor Profile is enabled"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Pod-Security-Policies","control:5.2.2","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not generally permit containers to be run with the hostPID flag set to true.\n\n## Rationale\n\nA container running in the host's PID namespace can inspect processes running outside the container. If the container also has access to ptrace capabilities this can be used to escalate privileges outside of the container. There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to share the host PID namespace. If you need to run containers which require hostPID, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n## Audit\n\nGet the set of PSPs with the following command: `kubectl get psp`\n\nFor each PSP, check whether privileged is enabled: `kubectl get psp <name> -o=jsonpath='{.spec.hostPID}'`\n\nVerify that there is at least one PSP which does not return true.\n\n## Remediation\n\nCreate a PSP as described in the Kubernetes documentation, ensuring that the `.spec.hostPID` field is omitted or set to false.\n\n## Impact\n\nPods defined with spec.hostPID: true will not be permitted unless they are run under a specific PSP.\n\n## Default value\n\nBy default, PodSecurityPolicies are not defined.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/policy/pod-security-policy][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://kubernetes.io/docs/concepts/policy/pod-security-policy\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.2.2","framework":"cis-kubernetes","requirement":"Pod-Security-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"flc-1s1-okw","createdAt":1599600559953,"name":"Minimize the admission of containers wishing to share the host process ID namespace"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.7","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the certificate authorities file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe certificate authorities file controls the authorities used to validate API requests. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command: `ps -ef | grep kubelet`. Find the file specified by the `--client-ca-file` argument. Run the following command: `stat -c %a <filename>`. Verify that the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the following command to modify the file permissions of the `--client-ca-file`:\n\n```\nchmod 644 <filename>\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default no `--client-ca-file` is specified.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/authentication/#x509-client-certs][1]\n\n## CIS controls\n\nVersion 6 5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7 14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\n[1]: https://kubernetes.io/docs/admin/authentication/#x509-client-certs\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.7","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qtd-deo-dgb","createdAt":1599600622129,"name":"Certificate authorities file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.3.4","requirement:Controller-Manager","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nExplicitly set a service account private key file for service accounts on the controller manager.\n\n## Rationale\n\nTo ensure that keys for service account tokens can be rotated as needed, a separate public/private key pair should be used for signing service account tokens. The private key should be specified to the controller manager with `--service-account-private-key-file` as appropriate.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--service-account-private-key-file` argument is set as appropriate.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and set the `--service-account-private-key-file parameter` to the private key file for service accounts:\n\n```\n--service-account-private-key-file=<filename>\n```\n\n## Impact\n\nYou would need to securely maintain the key file and rotate the keys based on your organization's key rotation policy.\n\n## Default value\n\nBy default, `--service-account-private-key-file` it not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-controller-manager/][1]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.4 Controlled Use of Administrative Privileges          \n\n[1]: https://kubernetes.io/docs/admin/kube-controller-manager/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.4","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mj1-ode-sln","createdAt":1599600796213,"name":"--service-account-private-key-file argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","control:1.2.7","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `docker.socket`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges, it is very important to audit its activities and usage. Its behavior depends on some key files and directories, including the `docker.socket` file, which holds various parameters for the Docker daemon, it should be audited.\n\n## Audit\n\n1. Locate the `docker.socket` file by running: \n    ```\n    systemctl show -p FragmentPath docker.socket \n    ```\n2. If the file does not exist, this recommendation is not applicable. If the `docker.socket` file exists, verify that there is an audit rule corresponding to the `docker.socket` file by running: \n    ```\n    auditctl -l | grep docker.socket \n    ```\n\n## Remediation\n\nIf the file exists, you should add a rule for it. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /usr/lib/systemd/system/docker.socket -k docker \n```\n\nThen restart the audit daemon: \n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `docker.socket` may not be present, but if it is, it should be audited.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.7","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"afg-qbt-7uw","createdAt":1599600857858,"name":"docker.socket auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.15","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe Process ID (PID) namespace isolates the process ID space, meaning that processes in different PID namespaces can have the same PID. This creates process level isolation between the containers and the host.\n\n## Rationale\n\nPID namespace provides separation between processes. It prevents system processes from being visible, and allows process ids to be reused including PID 1. If the host's PID namespace is shared with containers, it would basically allow these to see all of the processes on the host system. This reduces the benefit of process level isolation between the host and the containers. Under these circumstances a malicious user who has access to a container could get access to processes on the host itself, manipulate them, and even be able to kill them. This could allow for the host itself being shut down, which could be extremely serious, particularly in a multi-tenanted environment. You should not share the host's process namespace with the containers running on it.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: PidMode={{ .HostConfig.PidMode }}'` \n\nIf the command returns `host`, it means that the host PID namespace is shared with its containers; any other result means that the system is configured in line with good security practice.\n\n## Remediation\n\nYou should not start a container with the `--pid=host` argument. For example, do not start a container with the command: `docker run --interactive --tty --pid=host centos /bin/bash`\n\n## Impact\n\nContainer processes cannot see processes on the host system. In certain circumstances, you may want your container to share the host's process namespace. For example, you could build a container containing debugging tools such as strace or gdb, and want to use these tools when debugging processes on the host. If this is desired, then share specific host processes using the `-p` switch. For example: `docker run --pid=host rhel7 strace -p 1234`\n\n## Default value\n\nBy default, all containers have the PID namespace enabled and the therefore the host's process namespace is not shared with its containers.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#pid-settings-pid 2. http://man7.org/linux/man-pages/man7/pid_namespaces.7.html\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.15","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.15\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mk8-jwd-4ag","createdAt":1599600919537,"name":"Host's process namespace is not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.4","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUse https for kubelet connections.\n\n## Rationale\n\nConnections from apiserver to kubelets could potentially carry sensitive data such as secrets and keys. It is thus important to use in-transit encryption for any communication between the apiserver and kubelets.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--kubelet-https` argument either does not exist or is set to `true`.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and remove the `--kubelet-https` parameter.\n\n## Impact\n\nYou require TLS to be configured on apiserver as well as kubelets.\n\n## Default value\n\nBy default, kubelet connections are over https.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-apiserver/ ][1]\n2. [https://kubernetes.io/docs/admin/kubelet-authentication-authorization/][2]\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.                \n\n[1]: https://kubernetes.io/docs/admin/kube-apiserver/ \n[2]: https://kubernetes.io/docs/admin/kubelet-authentication-authorization/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.4","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"critical","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ftg-h4g-hqj","createdAt":1599600981186,"name":"--kubelet-https argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:2.5","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use `aufs` as the storage driver for your Docker instance.\n\n## Rationale\n\nThe `aufs` storage driver is the oldest storage driver used on Linux systems. It is based on a Linux kernel patch-set that is unlikely in future to be merged into the main OS kernel. The `aufs` driver is also known to cause some serious kernel crashes. `aufs` has only legacy support within systems using Docker. Most importantly, `aufs` is not a supported driver in many Linux distributions using latest Linux kernels.\n\n## Audit\n\nVerify that `aufs` is not used as storage driver by running this command and ensuring `aufs` is not listed: \n```\ndocker info --format 'Storage Driver: {{ .Driver }}' \n```\n\n## Remediation\n\nDo not explicitly use `aufs` as storage driver. For example, do not start Docker daemon with the `--storage-driver aufs` flag.\n\n## Impact\n\n`aufs` is the only storage driver that allows containers to share executable and shared library memory. It might be useful if you are running thousands of containers with the same program or libraries. However, you should review its use with respect to your organization's security policy.\n\n## Default value\n\nBy default, Docker uses `devicemapper` as the storage driver on most of the platforms. The default storage driver can vary based on your OS vendor. You should use the storage driver that is recommended by your preferred vendor and which is in line with policy around the applications which are being deployed.\n\n## References\n\n1. [https://docs.docker.com/engine/userguide/storagedriver/selectadriver/#supported-backing-filesystems][1]\n2. [http://muehe.org/posts/switching-docker-from-aufs-to-devicemapper/][2]\n3. [http://jpetazzo.github.io/assets/2015-03-05-deep-dive-into-docker-storage-drivers.html#1][3]\n4. [https://docs.docker.com/engine/userguide/storagedriver/][4]\n\n## CIS controls\n\nVersion 6.18 Application Software Security                \n\n[1]: https://docs.docker.com/engine/userguide/storagedriver/selectadriver/#supported-backing-filesystems \n[2]: http://muehe.org/posts/switching-docker-from-aufs-to-devicemapper/ \n[3]: http://jpetazzo.github.io/assets/2015-03-05-deep-dive-into-docker-storage-drivers.html#1 \n[4]: https://docs.docker.com/engine/userguide/storagedriver/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.5","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"n0x-jqo-rof","createdAt":1599601042737,"name":"aufs storage driver is not used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.22","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable auditing on the Kubernetes API Server and set the desired audit log path.\n\n## Rationale\n\nAuditing the Kubernetes API Server provides a security-relevant chronological set of records documenting the sequence of activities that have affected system by individual users, administrators or other components of the system. Even though currently, Kubernetes provides only basic audit capabilities, it should be enabled. You can enable it by setting an appropriate audit log path.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-log-path` argument is set as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --audit-log-path parameter to a suitable path and file where you would like audit logs to be written, for example: --audit-log-path=/var/log/apiserver/audit.log\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, auditing is not enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/concepts/cluster-administration/audit/ 3. https://github.com/kubernetes/features/issues/22\n\n## CIS controls\n\nVersion 6 6.2 Ensure Audit Log Settings Support Appropriate Log Entry Formatting Validate audit log settings for each hardware device and the software installed on it, ensuring that logs include a date, timestamp, source addresses, destination addresses, and various other useful elements of each packet and/or transaction. Systems should record logs in a standardized format such as syslog entries or those outlined by the Common Event Expression initiative. If systems cannot generate logs in a standardized format, log normalization tools can be deployed to convert logs into such a format. Version 7 6.2 Activate audit logging Ensure that local logging has been enabled on all systems and networking devices. 6.3 Enable Detailed Logging Enable system logging to include detailed information such as an event source, date, user, timestamp, source addresses, destination addresses, and other useful elements.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.22","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.22\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"fny-sti-0dk","createdAt":1599601104396,"name":"--audit-log-path argument is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.17","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nLimit the Node and Pod objects that a kubelet could modify.\n\n## Rationale\n\nUsing the NodeRestriction plug-in ensures that the kubelet is restricted to the Node and Pod objects that it could modify as defined. Such kubelets will only be allowed to modify their own Node API object, and only modify Pod API objects that are bound to their node.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--enable-admission-plugins` argument is set to a value that includes `NodeRestriction`.\n\n## Remediation\n\nFollow the Kubernetes documentation and configure NodeRestriction plug-in on kubelets. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --enable-admission-plugins parameter to a value that includes NodeRestriction. --enable-admission-plugins=...,NodeRestriction,...\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, NodeRestriction is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#noderestriction 3. https://kubernetes.io/docs/admin/authorization/node/ 4. https://acotten.com/post/kube17-security\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.17","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.17\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"jre-tn7-yma","createdAt":1599601166101,"name":"Admission control plugin NodeRestriction is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.1","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the API server pod specification file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe API server pod specification file controls various parameters that set the behavior of the API server. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node:\n\n```bash\nstat -c %a /etc/kubernetes/manifests/kube-apiserver.yaml\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/manifests/kube-apiserver.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `kube-apiserver.yaml` file has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.1","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"8tj-q6g-eyj","createdAt":1599601227733,"name":"API server pod specification file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.21","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/sysconfig/docker` file permissions are correctly set to 644 or more restrictively.\n\n## Rationale\n\nThe `/etc/sysconfig/docker` file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be writeable only by root in order to ensure that it is not modified by less privileged users.\n\n## Audit\n\nVerify that the `/etc/sysconfig/docker` file permissions are set to `644` or more restrictive, by running: \n```\nstat -c %a /etc/sysconfig/docker\n```\n\n## Remediation\n\nRun the following command: `chmod 644 /etc/sysconfig/docker`\n\nThis sets the file permissions for this file to 644.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system and in this case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/admin/configuring/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.21","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.21\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"au3-ayl-tdm","createdAt":1599601289420,"name":"/etc/sysconfig/docker file permissions are set to 644 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.4.2","requirement:Scheduler","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not bind the scheduler service to non-loopback insecure addresses.\n\n## Rationale\n\nThe Scheduler API service which runs on port 10251/TCP by default is used for health and metrics information and is available without authentication or encryption. As such it should only be bound to a localhost interface, to minimize the cluster's attack surface\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-scheduler\n```\nVerify that the `--bind-address` argument is set to `127.0.0.1`.\n\n## Remediation\n\nEdit the Scheduler pod specification file `/etc/kubernetes/manifests/kube-scheduler.yaml` on the master node and ensure the correct value for the `--bind-address` parameter.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `--bind-address` parameter is set to `0.0.0.0`.\n\n## References\n\n1. [https://kubernetes.io/docs/reference/command-line-tools-reference/kube-scheduler/][1]\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.                \n\n[1]: https://kubernetes.io/docs/reference/command-line-tools-reference/kube-scheduler/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.4.2","framework":"cis-kubernetes","requirement":"Scheduler","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.4.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"g1h-91b-y2x","createdAt":1599601351149,"name":"--bind-address argument is set to 127.0.0.1 (Scheduler)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.11","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the etcd data directory has permissions of 700 or more restrictive.\n\n## Rationale\n\netcd is a highly-available key-value store used by Kubernetes deployments for persistent storage of all of its REST API objects. This data directory should be protected from any unauthorized reads or writes. It should not be readable or writable by any group members or the world.\n\n## Audit\n\nOn the etcd server node, get the etcd data directory passed as an argument `--data-dir`, from the command:\n\n```bash\nps -ef | grep etcd\n```\n\n Based on the etcd data directory found above, run the command:\n \n ```bash\n stat -c %a /var/lib/etcd\n ```\n \n Verify the permissions are `700` or more restrictive.\n\n## Remediation\n\nOn the etcd server node, get the etcd data directory, passed as an argument `--data-dir`, from the below command: `ps -ef | grep etcd`\n\nRun the command (based on the etcd data directory found above): `chmod 700 /var/lib/etcd`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, etcd data directory has permissions of 755.\n\n## References\n\n1. https://coreos.com/etcd/docs/latest/op-guide/configuration.html#data-dir\n2. https://kubernetes.io/docs/admin/etcd/\n\n## CIS controls\n\nVersion 6\n\n14 Controlled Access Based on the Need to Know\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.11","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qgj-hf0-an1","createdAt":1599601412710,"name":"etcd data directory permissions are set to 700 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.10","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/etc/docker/daemon.json`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `/etc/docker/daemon.json`. This holds various parameters for the Docker daemon, and so it should be audited.\n\n## Audit\n\nVerify that there is an audit rule associated with the `/etc/docker/daemon.json` file. To display the rule for the `/etc/docker/daemon.json` file, run: \n\n```\nauditctl -l | grep /etc/docker/daemon.json\n```\n\n## Remediation\n\nYou should add a rule for the `/etc/docker/daemon.json` file. For example, add the following line to the `/etc/audit/audit.rules` file: \n\n```\n-w /etc/docker/daemon.json -k docker \n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `/etc/docker/daemon.json` may not exist on the system and in that case, this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n2. [https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file][2]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html \n[2]: https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.10","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"v2o-aio-i0e","createdAt":1599601474412,"name":"/etc/docker/daemon.json auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent","control:3.1"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the docker.service file ownership and group ownership are correctly set to root.\n\n## Rationale\n\nThe docker.service file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be individually and group owned by the root user in order to ensure that it is not modified or corrupted by a less privileged user.\n\n## Audit\n\n1. Locate the `docker.service` file by running: \n    ```\n    systemctl show -p FragmentPath docker.service \n    ```\n2. If the file does not exist, this recommendation is not applicable. If the file exists, verify that it is owned and group-owned by root, by running the following command with the correct filepath:\n    ```\n    stat -c %U:%G /usr/lib/systemd/system/docker.service | grep -v root:root \n    ```\n    The command should not return anything.\n\n## Remediation\n\n1. Find out the file location: `systemctl show -p FragmentPath docker.service`\n2. If the file does not exist, this recommendation is not applicable. If the file does exist, you should execute the command below, including the correct file path, in order to set the ownership and group ownership for the file to root.\n\nFor example, `chown root:root /usr/lib/systemd/system/docker.service`\n\n## Impact\n\nNone.\n\n## Default value\n\nThis file may not be present on the system and if it is not, this recommendation is not applicable. By default, if the file is present, the correct permissions are for the ownership and group ownership to be set to \"root\".\n\n## References\n\n1. https://docs.docker.com/engine/admin/systemd/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.1","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mhz-jes-n2m","createdAt":1599601536215,"name":"docker.service file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.14","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAutomate service accounts management.\n\n## Rationale\n\nWhen you create a pod, if you do not specify a service account, it is automatically assigned the default service account in the same namespace. You should create your own service account and let the API server manage its security tokens.\n\n## Audit\n\nRun the following command on the master node:\n\n```bash\nps -ef | grep kube-apiserver\n```\n\nVerify the `--disable-admission-plugins` argument is set to a value that does not include `ServiceAccount`.\n\n## Remediation\n\nFollow the documentation and create ServiceAccount objects as per your environment. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and ensure that the --disable-admission-plugins parameter is set to a value that does not include ServiceAccount.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, ServiceAccount is set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#serviceaccount 3. https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n\n## CIS controls\n\nVersion 6 16 Account Monitoring and Control Account Monitoring and Control Version 7 16 Account Monitoring and Control Account Monitoring and Control\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.14","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.14\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"wrk-jrm-u8h","createdAt":1599601597784,"name":"Admission control plugin ServiceAccount is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent","control:1.2.8"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/etc/default/docker`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `/etc/default/docker`. It holds various parameters related to the Docker daemon and should therefore be audited.\n\n## Audit\n\nVerify that there is an audit rule associated with the `/etc/default/docker` file. To see the rule for the `/etc/default/docker` file, run: \n```\nauditctl -l | grep /etc/default/docker \n```\n\n## Remediation\n\nYou should add a rule for the `/etc/default/docker` file. For example, add the following line to the `/etc/audit/audit.rules` file: \n\n```\n-w /etc/default/docker -k docker \n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited so these defaults should be changed in line with organizational security policy. The file `/etc/default/docker` may not be present, and if so, this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7 14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.8","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qfi-cgy-a6e","createdAt":1599601659531,"name":"/etc/default/docker auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.2","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the docker.service file permissions are either set to 644 or to a more restrictive value.\n\n## Rationale\n\nThe docker.service file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore not be writable by any other user other than root in order to ensure that it can not be modified by less privileged users.\n\n## Audit\n\n1. Locate the `docker.service` file by running: \n    ```\n    systemctl show -p FragmentPath docker.service\n    ```\n2. If the file does not exist, this recommendation is not applicable. If the file exists, verify that the file permissions are set to `644` or a more restrictive value by running the following command with the correct filepath:\n    ```\n    stat -c %a /usr/lib/systemd/system/docker.service\n    ```\n\n## Remediation\n\n1. Find out the file location: `systemctl show -p FragmentPath docker.service`\n2. If the file does not exist, this recommendation is not applicable. If the file exists, execute the command below including the correct file path to set the file permissions to 644. For example, `chmod 644 /usr/lib/systemd/system/docker.service`\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system. In that case, this recommendation is not applicable. By default, if the file is present, the file permissions are correctly set to 644.\n\n## References\n\n1. https://docs.docker.com/articles/systemd/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.2","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"zyv-o6s-69z","createdAt":1599601721176,"name":"docker.service file permissions are appropriately set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Pod-Security-Policies","control:5.2.5","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not generally permit containers to be run with the allowPrivilegeEscalation flag set to true.\n\n## Rationale\n\nA container running with the `allowPrivilegeEscalation` flag set to true may have processes that can gain more privileges than their parent. There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to allow privilege escalation. The option exists (and is defaulted to true) to permit setuid binaries to run. If you have need to run containers that use setuid binaries or require privilege escalation, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n## Audit\n\nGet the set of PSPs with the following command: `kubectl get psp`\n\nFor each PSP, check whether privileged is enabled: `kubectl get psp <name> -o=jsonpath='{.spec.allowPrivilegeEscalation}'`\n\nVerify that there is at least one PSP which does not return true.\n\n## Remediation\n\nCreate a PSP as described in the Kubernetes documentation, ensuring that the `.spec.allowPrivilegeEscalation` field is omitted or set to false.\n\n## Impact\n\nPods defined with `spec.allowPrivilegeEscalation: true` will not be permitted unless they are run under a specific PSP.\n\n## Default value\n\nBy default, PodSecurityPolicies are not defined.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/policy/pod-security-policy][1]\n\n## CIS controls\n\nVersion 6 5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://kubernetes.io/docs/concepts/policy/pod-security-policy\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.2.5","framework":"cis-kubernetes","requirement":"Pod-Security-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"frf-hog-dra","createdAt":1599601783271,"name":"Minimize the admission of containers with allowPrivilegeEscalation"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.22","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/default/docker` file permissions are correctly set to 644 or more restrictively.\n\n## Rationale\n\nThe `/etc/default/docker` file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be writeable only by root in order to ensure that it is not modified by less privileged users.\n\n## Audit\n\nVerify that the `/etc/default/docker` file permissions are set to `644` or more restrictively, by running: \n```\nstat -c %a /etc/default/docker\n```\n\n## Remediation\n\nRun the following command: `chmod 644 /etc/default/docker`\n\nThis sets the file permissions for this file to 644.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system and in this case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/admin/configuring/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.22","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.22\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"pqb-2cq-piw","createdAt":1599601845070,"name":"/etc/default/docker file permissions are set to 644 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.24","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIt is possible to attach to a particular `cgroup` when a container is instantiated. Confirming `cgroup` usage would ensure that containers are running in defined `cgroup`s.\n\n## Rationale\n\nSystem administrators typically define `cgroup`s in which containers are supposed to run. If `cgroup`s are not explicitly defined by the system administrator, containers run in the docker `cgroup` by default. At run time, it is possible to attach a container to a different `cgroup` other than the one originally defined. This usage should be monitored and confirmed, as by attaching to a different `cgroup`, excess permissions and resources might be granted to the container and this can therefore prove to be a security risk.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CgroupParent={{ .HostConfig.CgroupParent }}'` \n\nThis command returns the cgroup where the containers are running. If it is blank, it means that containers are running under the default docker cgroup. Any other return value indicates that the system is not configured in line with good security practice.\n\n## Remediation\n\nYou should not use the `--cgroup-parent` option within the docker run command unless strictly required.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, containers run under docker `cgroup`.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#specify-custom-cgroups\n2. https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Resource_Management_Guide/ch01.html\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n\n## Audit\n\nYou should run the following command: docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CgroupParent={{ .HostConfig.CgroupParent }}' The above command returns the cgroup where the containers are running. If it is blank, it means that containers are running under the default docker cgroup. Any other return value indicates that the system is not configured in line with good security practice.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.24","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.24\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"maa-bf8-zan","createdAt":1599601906764,"name":"cgroup usage is confirmed"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.12","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the etcd data directory ownership is set to `etcd:etcd`.\n\n## Rationale\n\n`etcd` is a highly-available key-value store used by Kubernetes deployments for persistent storage of all of its REST API objects. This data directory should be protected from any unauthorized reads or writes. It should be owned by `etcd:etcd`.\n\n## Audit\n\nOn the etcd server node, get the etcd data directory passed as an argument `--data-dir` from the command:\n\n```bash\nps -ef | grep etcd\n```\n\nBased on the etcd data directory found above, run the command:\n\n```bash\nstat -c %U:%G /var/lib/etcd\n```\n\nVerify the ownership is set to `etcd:etcd`.\n\n## Remediation\n\nOn the etcd server node, get the etcd data directory, passed as an argument `--data-dir`, from the below command: `ps -ef | grep etcd`\n\nRun the command (based on the etcd data directory found above): `chown etcd:etcd /var/lib/etcd`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, etcd data directory ownership is set to `etcd:etcd`.\n\n## References\n\n1. https://coreos.com/etcd/docs/latest/op-guide/configuration.html#data-dir\n2. https://kubernetes.io/docs/admin/etcd/\n\n## CIS controls\n\nVersion 6\n\n14 Controlled Access Based on the Need to Know\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.12","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"25d-zal-sfr","createdAt":1599601968321,"name":"etcd data directory ownership is set to etcd:etcd"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.5","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not disable timeouts on streaming connections.\n\n## Rationale\n\nSetting idle timeouts ensures that you are protected against denial-of-service attacks, inactive connections, and running out of ephemeral ports.\n\n*Note*: By default, `--streaming-connection-idle-timeout` is set to four hours, which might be too high for your environment. Setting this as appropriate would additionally ensure that such streaming connections are timed out after serving legitimate use cases.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--streaming-connection-idle-timeout` argument is not set to 0. If the argument is not present, and there is a Kubelet config file specified by `--config`, check that it does not set `streamingConnectionIdleTimeout` to 0.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `streamingConnectionIdleTimeout` to a value other than 0. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_SYSTEM_PODS_ARGS` variable.\n\n`--streaming-connection-idle-timeout=5m`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nLong-lived connections could be interrupted.\n\n## Default value\n\nBy default, `--streaming-connection-idle-timeout` is set to four hours.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://github.com/kubernetes/kubernetes/pull/18552][2]\n\n## CIS controls\n\nVersion 6.9 Limitation and Control of Network Ports, Protocols, and Services\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://github.com/kubernetes/kubernetes/pull/18552\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.5","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"xmg-h3a-wj4","createdAt":1599602030157,"name":"--streaming-connection-idle-timeout argument is not set to 0"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.3","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIf kube-proxy is running, and if it is using a file-based kubeconfig file, ensure that the proxy kubeconfig file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe kube-proxy kubeconfig file controls various parameters of the kube-proxy service in the worker node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system. It is possible to run kube-proxy with the kubeconfig parameters configured as a Kubernetes ConfigMap instead of a file. In this case, there is no proxy kubeconfig file.\n\n## Audit\n\nFind the kubeconfig file being used by `kube-proxy` by running the following command: `ps -ef | grep kube-proxy`. If `kube-proxy` is running, get the kubeconfig file location from the `--kubeconfig` parameter.\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %a <proxy kubeconfig file>`. Verify that if a file is specified and it exists, the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the each worker node:\n\n```\nchmod 644 <proxy kubeconfig file>\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, proxy file has permissions of 640.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-proxy/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior. \n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.        \n\n[1]: https://kubernetes.io/docs/admin/kube-proxy/\n\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.3","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"alc-y7j-j9q","createdAt":1599602091672,"name":"Proxy kubeconfig file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.7","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe TCP/IP port numbers below 1024are considered privileged ports. Normal users and processes are not allowed to use them for various security reasons. Docker does, however allow a container port to be mapped to a privileged port.\n\n## Rationale\n\nBy default, if the user does not specifically declare a container port to host port mapping, Docker automatically and correctly maps the container port to one available in the `49153`-`65535` range on the host. Docker does, however, allow a container port to be mapped to a privileged port on the host if the user explicitly declares it. This is because containers are executed with `NET_BIND_SERVICE` Linux kernel capability which does not restrict privileged port mapping. The privileged ports receive and transmit various pieces of data which are security sensitive and allowing containers to use them is not in line with good security practice.\n\n## Audit\n\nList all running containers instances and their port mappings by executing this command: `docker ps --quiet | xargs docker inspect --format '{{ .Id }}: Ports={{ .NetworkSettings.Ports }}'` You should then review the list and ensure that container ports are not mapped to host port numbers below `102.4`.\n\n## Remediation\n\nDo not map container ports to privileged host ports when starting a container. You should also ensure that there is no such container to host privileged port mapping declarations in the Dockerfile.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, mapping a container port to a privileged port on the host is allowed.\n\n**Note**: There might be certain cases where you want to map privileged ports, because if you forbid it, then the corresponding application has to run outside of a container.\n\nFor example: HTTP and HTTPS load balancers have to bind `80/tcp` and `443/tcp` respectively. Forbidding to map privileged ports effectively forbids from running those in a container, and mandates using an external load balancer. In such cases, those containers instances should be marked as exceptions for this recommendation.\n\n## References\n\n1. https://docs.docker.com/engine/userguide/networking/\n\n## CIS controls\n\nVersion 6\n\n9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system.\n\nVersion 7\n\n9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.7","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ua5-ygj-jad","createdAt":1599602153218,"name":"Privileged ports are not mapped within containers"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:Logging","security:compliance","control:3.2.1","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nKubernetes can audit the details of requests made to the API server. The `--audit-policy-file` flag must be set for this logging to be enabled.\n\n## Rationale\n\nLogging is an important detective control for all systems, to detect potential unauthorised access.\n\n## Audit\n\nRun the following command on one of the cluster master nodes: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-policy-file` is set. Review the contents of the file specified and ensure that it contains a valid audit policy.\n\n## Remediation\n\nCreate an audit policy file for your cluster.\n\n## Impact\n\nAudit logs will be created on the master nodes, which will consume disk space. Care should be taken to avoid generating too large volumes of log information as this could impact the available of the cluster nodes.\n\n## Default value\n\nUnless the `--audit-policy-file` flag is specified, no auditing will be carried out.\n\n## References\n\n1. [https://kubernetes.io/docs/tasks/debug-application-cluster/audit/][1]\n\n## CIS controls\n\nVersion 7.6.2 Activate audit logging - Ensure that local logging has been enabled on all systems and networking devices.\n\n[1]: https://kubernetes.io/docs/tasks/debug-application-cluster/audit/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"3.2.1","framework":"cis-kubernetes","requirement":"Logging","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-3.2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ehp-xpm-xi3","createdAt":1599602215207,"name":"Minimal audit policy is created"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.12","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe container's root filesystem should be treated as a 'golden image' by using Docker run's `--read-only` option. This prevents any writes to the container's root filesystem at container runtime and enforces the principle of immutable infrastructure.\n\n## Rationale\n\nEnabling this option forces containers at runtime to explicitly define their data writing strategy to persist or not persist their data. This also reduces security attack vectors since the container instance's filesystem cannot be tampered with or written to unless it has explicit read-write permissions on its filesystem folder and directories.\n\n## Audit\n\nRun this command on the docker host: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: ReadonlyRootfs={{ .HostConfig.ReadonlyRootfs }}'` \n\nIf this command returns `true`, it means the container's root filesystem is mounted read-only. If the above command returns `false`, it means the container's root filesystem is writeable.\n\n## Remediation\n\nAdd a `--read-only` flag at a container's runtime to enforce the container's root filesystem being mounted as read only. For example, `docker run <Run arguments> --read-only <Container Image Name or ID> <Command>`\n\nEnabling the `--read-only` option at a container's runtime should be used by administrators to force a container's executable processes to only write container data to explicit storage locations during its lifetime. \n\nExamples of explicit storage locations during a container's runtime include, but are not limited to:\n\n1. Using the `--tmpfs` option to mount a temporary file system for non-persistent data writes. `docker run --interactive --tty --read-only --tmpfs \"/run\" --tmpfs \"/tmp\" centos /bin/bash`\n2. Enabling Docker rw mounts at a container's runtime to persist container data directly on the Docker host filesystem. For example, `docker run --interactive --tty --read-only -v /opt/app/data:/run/app/data:rw centos /bin/bash`\n\n3. Utilizing the Docker shared-storage volume plugin for Docker data volume to persist container data. For example, `docker volume create -d convoy --opt o=size=20GB my-named-volume docker run --interactive --tty --read-only -v my-named-volume:/run/app/data centos /bin/bash`\n\n3. Transmitting container data outside of the Docker controlled area during the container's runtime for container data in order to ensure that it is persistent. Examples include hosted databases, network file shares and APIs.\n\n## Impact\n\nEnabling `--read-only` at container runtime may break some container OS packages if a data writing strategy is not defined. You should define what the container's data should and should not persist at runtime in order to decide which strategy to use. Example: Enable use `--tmpfs` for temporary file writes to /tmp Use Docker shared data volumes for persistent data writes\n\n## Default value\n\nBy default, a container has its root filesystem writeable, allowing all container processes to write files owned by the container's actual runtime user.\n\n## References\n\n1. http://docs.docker.com/reference/commandline/cli/#run\n2. https://docs.docker.com/engine/tutorials/dockervolumes/\n3. http://www.projectatomic.io/blog/2015/12/making-docker-images-write-only-in-production/\n4. https://docs.docker.com/engine/reference/commandline/run/#mount-tmpfs-tmpfs\n5. https://docs.docker.com/engine/tutorials/dockervolumes/#creating-and-mounting-a-data-volume-container\n\n## CIS controls\n\nVersion 6\n\n14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.12","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"635-mc8-3mr","createdAt":1599602276896,"name":"Container's root filesystem is mounted as read only"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","source:compliance-agent","control:1.2.8","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nRestrict kubelet nodes to reading only objects associated with them.\n\n## Rationale\n\nThe Node authorization mode only allows kubelets to read Secret, ConfigMap, PersistentVolume, and PersistentVolumeClaim objects associated with their nodes.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--authorization-mode` argument exists and is set to a value to include Node.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--authorization-mode` parameter to a value that includes Node. `--authorization-mode=Node,RBAC`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, Node authorization is not enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-apiserver/ ][1]\n2. [https://kubernetes.io/docs/admin/authorization/node/ ][2]\n3. [https://github.com/kubernetes/kubernetes/pull/46076 ][3]\n4. [https://acotten.com/post/kube17-security][4]\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.              \n\n[1]: https://kubernetes.io/docs/admin/kube-apiserver/ \n[2]: https://kubernetes.io/docs/admin/authorization/node/ \n[3]: https://github.com/kubernetes/kubernetes/pull/46076 \n[4]: https://acotten.com/post/kube17-security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.8","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vgg-kwx-7dh","createdAt":1599602338742,"name":"--authorization-mode argument includes Node"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.3.3","requirement:Controller-Manager","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUse individual service account credentials for each controller.\n\n## Rationale\n\nThe controller manager creates a service account per controller in the kube-system namespace, generates a credential for it, and builds a dedicated API client with that service account credential for each controller loop to use. Setting the `--use-service-account-credentials` to true runs each control loop within the controller manager using a separate service account credential. When used in combination with RBAC, this ensures that the control loops run with the minimum permissions required to perform their intended tasks.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--use-service-account-credentials` argument is set to true.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node to set the below parameter:\n\n```\n--use-service-account-credentials=true\n```\n\n## Impact\n\nWhatever authorizer is configured for the cluster, it must grant sufficient permissions to the service accounts to perform their intended tasks. When using the RBAC authorizer, those roles are created and bound to the appropriate service accounts in the kube-system namespace automatically with default roles and rolebindings that are auto-reconciled on startup. If using other authorization methods (ABAC, Webhook, etc.), the cluster deployer is responsible for granting appropriate permissions to the service accounts (the required permissions can be seen by inspecting the `controller-roles.yaml` and `controller-role-bindings.yaml` files for the RBAC roles.\n\n## Default value\n\nBy default, `--use-service-account-credentials` is set to false.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-controller-manager/ ][1]\n2. [https://kubernetes.io/docs/admin/service-accounts-admin/ ][2]\n3. [https://github.com/kubernetes/kubernetes/blob/release-1.6/plugin/pkg/auth/authorizer/rbac/bootstrappolicy/testdata/controller-roles.yaml ][3]\n4. [https://github.com/kubernetes/kubernetes/blob/release-1.6/plugin/pkg/auth/authorizer/rbac/bootstrappolicy/testdata/controller-role-bindings.yaml ][4]\n5. [https://kubernetes.io/docs/admin/authorization/rbac/#controller-roles][5]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.4 Controlled Use of Administrative Privileges \n\n[1]: https://kubernetes.io/docs/admin/kube-controller-manager/ \n[2]: https://kubernetes.io/docs/admin/service-accounts-admin/ \n[3]: https://github.com/kubernetes/kubernetes/blob/release-1.6/plugin/pkg/auth/authorizer/rbac/bootstrappolicy/testdata/controller-roles.yaml \n[4]: https://github.com/kubernetes/kubernetes/blob/release-1.6/plugin/pkg/auth/authorizer/rbac/bootstrappolicy/testdata/controller-role-bindings.yaml \n[5]: https://kubernetes.io/docs/admin/authorization/rbac/#controller-roles\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.3","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"b7m-bho-nat","createdAt":1599602400314,"name":"--use-service-account-credentials argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.6","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nProtect tuned kernel parameters from overriding kubelet default kernel parameter values.\n\n## Rationale\n\nKernel parameters are usually tuned and hardened by the system administrators before putting the systems into production. These parameters protect the kernel and the system. Your kubelet kernel defaults that rely on such parameters should be appropriately set to match the desired secured system state. Ignoring this could potentially lead to running pods with undesired kernel behavior.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--protect-kernel-defaults` argument is set to true. If the `--protect-kernel-defaults` argument is not present, check that there is a Kubelet config file specified by `--config`, and that the file sets `protectKernelDefaults` to `true`.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `protectKernelDefaults: true`. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_SYSTEM_PODS_ARGS` variable.\n\n`--protect-kernel-defaults=true`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nYou would have to re-tune kernel parameters to match kubelet parameters.\n\n## Default value\n\nBy default, `--protect-kernel-defaults` is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.3 Secure Configurations for Hardware and Software on Mobile Devices, Laptops, Workstations, and Servers\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.6","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"uiw-kms-wwu","createdAt":1599602462044,"name":"--protect-kernel-defaults argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.4","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/var/lib/docker`.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories. For example, audit `/var/lib/docker`, which holds all the information about containers it should be audited.\n\n## Audit\n\nVerify that there is an audit rule applied to the `/var/lib/docker` directory. To see the rule for the `/var/lib/docker` directory, run: \n\n```\nauditctl -l | grep /var/lib/docker\n```\n\n## Remediation\n\nYou should add a rule for the `/var/lib/docker` directory. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /var/lib/docker -k docker \n```\n\nThen restart the audit daemon:\n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.4","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tfa-927-tto","createdAt":1599602523672,"name":"/var/lib/docker auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.31","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe Docker socket docker.sock should not be mounted inside a container.\n\n## Rationale\n\nIf the Docker socket is mounted inside a container it could allow processes running within the container to execute Docker commands which would effectively allow for full control of the host.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Volumes={{ .Mounts }}' | grep docker.sock` This returns any instances where `docker.sock` has been mapped to a container as a volume.\n\n## Remediation\n\nYou should ensure that no containers mount docker.sock as a volume.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, docker.sock is not mounted inside containers.\n\n## References\n\n1. https://raesene.github.io/blog/2016/03/06/The-Dangers-Of-Docker.sock/\n2. https://forums.docker.com/t/docker-in-docker-vs-mounting-var-run-docker-sock/9450/2\n3. https://github.com/docker/docker/issues/21109\n\n## CIS controls\n\nVersion 6\n\n9 Limitation and Control of Network Ports, Protocols, and Services\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.31","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.31\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"3iw-zus-yz3","createdAt":1599602585460,"name":"Docker socket is not mounted inside any containers"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.7","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not always authorize all requests.\n\n## Rationale\n\nThe API Server, can be configured to allow all requests. This mode should not be used on any production cluster.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--authorization-mode` argument exists and is not set to `AlwaysAllow`.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--authorization-mode` parameter to values other than `AlwaysAllow`. One such example could be as below:\n\n```\n--authorization-mode=RBAC\n```\n\n## Impact\n\nOnly authorized requests will be served.\n\n## Default value\n\nBy default, `AlwaysAllow` is not enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-apiserver/ ][1]\n2. [https://kubernetes.io/docs/admin/authorization/node/ ][2]\n\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.              \n\n[1]: https://kubernetes.io/docs/admin/kube-apiserver/ \n[2]: https://kubernetes.io/docs/admin/authorization/node/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.7","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"kli-btm-jbr","createdAt":1599602646953,"name":"--authorization-mode argument is not set to AlwaysAllow (API server)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.4","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUsing the `--privileged` flag provides all Linux kernel capabilities to the container to which it is applied and therefore overwrites the `--cap-add` and `--cap-drop` flags. For this reason, ensure that it is not used.\n\n## Rationale\n\nThe `--privileged` flag provides all capabilities to the container to which it is applied, and also lifts all the limitations enforced by the device cgroup controller. As a consequence this the container has most of the rights of the underlying host. This flag only exists to allow for specific use cases (for example running Docker within Docker) and should not generally be used.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Privileged={{ .HostConfig.Privileged }}'` This command returns `Privileged=false` for each container instance.\n\n## Remediation\n\nDo not run containers with the `--privileged` flag. For example, do not start a container using the command `docker run --interactive --tty --privileged centos /bin/bash`\n\n## Impact\n\nIf you start a container without the `--privileged` flag, it will not have excessive default capabilities.\n\n## Default value\n\nFalse\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.4","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"rbd-urm-klo","createdAt":1599602708557,"name":"Privileged containers are not used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.21","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable profiling, if not needed.\n\n## Rationale\n\nProfiling allows for the identification of specific performance bottlenecks. It generates a significant amount of program data that could potentially be exploited to uncover system and program details. If you are not experiencing any bottlenecks and do not need the profiler for troubleshooting purposes, it is recommended to turn it off to reduce the potential attack surface.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--profiling` argument is set to `false`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the below parameter. --profiling=false\n\n## Impact\n\nProfiling information would not be available.\n\n## Default value\n\nBy default, profiling is enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.21","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.21\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"wk0-7yo-dw9","createdAt":1599602770265,"name":"--profiling argument is set to false (API server)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.18","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the daemon.json file permissions are correctly set to 644 or more restrictively.\n\n## Rationale\n\nThe daemon.json file contains sensitive parameters that may alter the behavior of the docker daemon. Therefore it should be writeable only by root to ensure it is not modified by less privileged users.\n\n## Audit\n\nVerify that the `daemon.json` file permissions are set to `644` or more restrictive, by running: \n```\nstat -c %a /etc/docker/daemon.json\n```\n\n## Remediation\n\nRun `chmod 644 /etc/docker/daemon.json`\n\nThis sets the file permissions for this file to 644.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system, and in that case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.18","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.18\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"7df-4w8-g7l","createdAt":1599602831833,"name":"daemon.json file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.2","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the API server pod specification file ownership is set to root:root.\n\n## Rationale\n\nThe API server pod specification file controls various parameters that set the behavior of the API server. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/manifests/kube-apiserver.yaml\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, chown root:root /etc/kubernetes/manifests/kube-apiserver.yaml\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the kube-apiserver.yaml file ownership is set to root:root.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6 5.1 Minimize And Sparingly Use Administrative Privileges Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior. Version 7 5.2 Maintain Secure Images Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.2","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vbb-t30-k0f","createdAt":1599602893246,"name":"API server pod specification file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","security:compliance","scored:false","control:1.2.33","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEncrypt etcd key-value store.\n\n## Rationale\n\netcd is a highly available key-value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be encrypted at rest to avoid any disclosures.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--encryption-provider-config` argument is set to a EncryptionConfig file. Additionally, ensure that the EncryptionConfig file has all the desired resources covered especially any secrets.\n\n## Remediation\n\nFollow the Kubernetes documentation and configure a EncryptionConfig file. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--encryption-provider-config` parameter to the path of that file: `--encryption-provider-config=</path/to/EncryptionConfig/File>`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `--encryption-provider-config` is not set.\n\n## References\n\n1. https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/ \n2. https://acotten.com/post/kube17-security \n3. https://kubernetes.io/docs/admin/kube-apiserver/ \n4. https://github.com/kubernetes/features/issues/92\n\n## CIS controls\n\nVersion 6 14.5 Encrypt At Rest Sensitive Information Sensitive information stored on systems shall be encrypted at rest and require a secondary authentication mechanism, not integrated into the operating system, in order to access the information. \n\nVersion 7 14.8 Encrypt Sensitive Information at Rest Encrypt all sensitive information at rest using a tool that requires a secondary authentication mechanism not integrated into the operating system, in order to access the information.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.33","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.33\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"7rg-crl-fs0","createdAt":1599602954959,"name":"--encryption-provider-config argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:5.28","security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should use the `--pids-limit` flag at container runtime.\n\n## Rationale\n\nAttackers could launch a fork bomb with a single command inside the container. This fork bomb could crash the entire system and would require a restart of the host to make the system functional again. Using the PIDs cgroup parameter --pids-limit would prevent this kind of attack by restricting the number of forks that can happen inside a container within a specified time frame.\n\n## Audit\n\nRun this command and ensure that `PidsLimit` is not set to 0 or -\n1.  A PidsLimit of 0 or -1 means that any number of processes can be forked concurrently inside the container. \n\n```\ndocker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: PidsLimit={{ .HostConfig.PidsLimit }}'\n```\n\n## Remediation\n\nUse `--pids-limit` flag with an appropriate value when launching the container. For example, `docker run -it --pids-limit 100 <Image_ID>`\n\nIn the above example, the number of processes allowed to run at any given time is set to 100. After a limit of 100 concurrently running processes is reached, Docker would restrict any new process creation.\n\n## Impact\n\nSet the PIDs limit value as appropriate. Incorrect values might leave containers unusable.\n\n## Default value\n\nThe Default value for `--pids-limit` is 0 which means there is no restriction on the number of forks. Note that the PIDs cgroup limit works only for kernel versions 4.3 and higher.\n\n## References\n\n1. https://github.com/docker/docker/pull/18697\n2. https://docs.docker.com/engine/reference/commandline/run/#options\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.28","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.28\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tmp-lms-u8p","createdAt":1599603016485,"name":"PIDs cgroup limit is used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.6","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the scheduler pod specification file ownership is set to root:root.\n\n## Rationale\n\nThe scheduler pod specification file controls various parameters that set the behavior of the kube-scheduler service in the master node. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/manifests/kube-scheduler.yaml\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/manifests/kube-scheduler.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kube-scheduler.yaml` file ownership is set to root:root.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-scheduler/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.6","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"y79-4ts-a0k","createdAt":1599603078027,"name":"Scheduler pod specification file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","control:1.4.1","security:compliance","requirement:Scheduler","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable profiling, if not needed.\n\n## Rationale\n\nProfiling allows for the identification of specific performance bottlenecks. It generates a significant amount of program data that could potentially be exploited to uncover system and program details. If you are not experiencing any bottlenecks and do not need the profiler for troubleshooting purposes, it is recommended to turn it off to reduce the potential attack surface.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-scheduler\n```\nVerify that the `--profiling` argument is set to `false`.\n\n## Remediation\n\nEdit the Scheduler pod specification file `/etc/kubernetes/manifests/kube-scheduler.yaml` file on the master node and set the below parameter:\n\n```\n--profiling=false\n```\n\n## Impact\n\nProfiling information would not be available.\n\n## Default value\n\nBy default, profiling is enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-scheduler/ ][1]\n2. [https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md][2]\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges                \n\n[1]: https://kubernetes.io/docs/admin/kube-scheduler/ \n[2]: https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.4.1","framework":"cis-kubernetes","requirement":"Scheduler","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.4.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"hya-urf-09b","createdAt":1599603139661,"name":"--profiling argument is set to false (Scheduler)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.25","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nRotate log files on reaching 100 MB or as appropriate.\n\n## Rationale\n\nKubernetes automatically rotates the log files. Retaining old log files ensures that you would have sufficient log data available for carrying out any investigation or correlation. If you have set file size of 100 MB and the number of old log files to keep as 10, you would approximate have 1 GB of log data that you could potentially use for your analysis.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-log-maxsize` argument is set to `100` or as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--audit-log-maxsize` parameter to an appropriate size in MB. For example, to set it as 100 MB: `--audit-log-maxsize=100`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, auditing is not enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/concepts/cluster-administration/audit/ 3. https://github.com/kubernetes/features/issues/22\n\n## CIS controls\n\nVersion 6 6.3 Ensure Audit Logging Systems Are Not Subject To Loss (i.e. rotation/archive) Ensure that all systems that store logs have adequate storage space for the logs generated on a regular basis, so that log files will not fill up between log rotation intervals. The logs must be archived and digitally signed on a periodic basis. Version 7 6.4 Ensure adequate storage for logs Ensure that all systems that store logs have adequate storage space for the logs generated.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.25","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.25\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qhy-gng-bh4","createdAt":1599603202907,"name":"--audit-log-maxsize argument is set to 100 or as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.17","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the daemon.json file individual ownership and group ownership is correctly set to root.\n\n## Rationale\n\nThe daemon.json file contains sensitive parameters that could alter the behavior of the docker daemon. It should therefore be owned and group owned by root to ensure it can not be modified by less privileged users.\n\n## Audit\n\nVerify that the `daemon.json` file is owned and group-owned by root by running: \n```\nstat -c %U:%G /etc/docker/daemon.json | grep -v root:root \n```\nThe command should return no results.\n\n## Remediation\n\nRun `chown root:root /etc/docker/daemon.json`\n\nThis sets the ownership and group ownership for the file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system, and in that case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.17","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.17\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"hlb-qzw-opk","createdAt":1599603264485,"name":"daemon.json file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.8","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the certificate authorities file ownership is set to `root:root`.\n\n## Rationale\n\nThe certificate authorities file controls the authorities used to validate API requests. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the following command: `ps -ef | grep kubelet`. Find the file specified by the `--client-ca-file` argument. Run the following command: `stat -c %U:%G <filename>`. Verify that the ownership is set to `root:root`.\n\n## Remediation\n\nRun the following command to modify the ownership of the `--client-ca-file`:\n\n```\nchown root:root <filename>\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default no `--client-ca-file` is specified.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/authentication/#x509-client-certs][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/authentication/#x509-client-certs\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.8","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ifc-9ej-k7k","createdAt":1599603326156,"name":"Client certificate authorities file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.16","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker socket file has permissions of 660 or are configured more restrictively.\n\n## Rationale\n\nOnly root and the members of the docker group should be allowed to read and write to the default Docker Unix socket. The Docker socket file should therefore have permissions of 660 or more restrictive permissions.\n\n## Audit\n\nVerify that the Docker socket file has permissions of `660` or more restrictive, by running: \n```\nstat -c %a /var/run/docker.sock\n```\n\n## Remediation\n\nRun the command `chmod 660 /var/run/docker.sock`\n\nThis sets the file permissions of the Docker socket file to 660.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for the Docker socket file is correctly set to 660.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option\n2. https://docs.docker.com/engine/reference/commandline/dockerd/#bind-docker-to-another-hostport-or-a-unix-socket\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.16","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.16\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"jxv-zrr-1c1","createdAt":1599603387716,"name":"Docker socket file permissions are set to 660 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","control:1.2.3","security:compliance","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use token based authentication.\n\n## Rationale\n\nThe token-based authentication utilizes static tokens to authenticate requests to the apiserver. The tokens are stored in clear-text in a file on the apiserver, and cannot be revoked or rotated without restarting the apiserver. Hence, do not use static token-based authentication.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver \n```\nVerify that the `--token-auth-file` argument does not exist.\n\n## Remediation\n\nFollow the documentation and configure alternate mechanisms for authentication. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and remove the `--token-auth-file=<filename>` parameter.\n\n## Impact\n\nYou will have to configure and use alternate authentication mechanisms such as certificates. Static token based authentication could not be used.\n\n## Default value\n\nBy default, `--token-auth-file` argument is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/authentication/#static-token-file\n2. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n16.14 Encrypt/Hash All Authentication Files And Monitor Their Access - Verify that all authentication files are encrypted or hashed and that these files cannot be accessed without root or administrator privileges. Audit all access to password files in the system.\n\nVersion 7\n\n16.4 Encrypt or Hash all Authentication Credentials - Encrypt or hash with a salt all authentication credentials when stored.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.3","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mvv-hb7-ucv","createdAt":1599603449449,"name":"--token-auth-file parameter is not set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.12","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/usr/sbin/runc`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `/usr/sbin/runc`, and so it should be audited.\n\n## Audit\n\nVerify that there is an audit rule corresponding to the `/usr/sbin/runc` file. To display the rule for the `/usr/sbin/runc` file, run:\n\n```\nauditctl -l | grep /usr/sbin/runc\n```\n\n## Remediation\n\nYou should add a rule for `/usr/sbin/runc` file. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /usr/sbin/runc -k docker\n```\n\nThen restart the audit daemon:\n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The `file/usr/sbin/runc` may not be present on the system, and in that case this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n2. [https://github.com/docker/docker/pull/20662][2]\n3. [https://containerd.tools/][3]\n4. [https://github.com/opencontainers/runc][4]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html \n[2]: https://github.com/docker/docker/pull/20662 \n[3]: https://containerd.tools/ \n[4]: https://github.com/opencontainers/runc\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.12","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ksp-ylk-dub","createdAt":1599603510904,"name":"/usr/sbin/runc auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.10","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSetup TLS connection on the Kubelets.\n\n## Rationale\n\nKubelet communication contains sensitive parameters that should remain encrypted in transit. Configure the Kubelets to serve only HTTPS traffic.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--tls-cert-file` and `--tls-private-key-file` arguments exist and they are set as appropriate. If these arguments are not present, check that there is a Kubelet config specified by `--config` and that it contains appropriate settings for `tlsCertFile` and `tlsPrivateKeyFile`.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `tlsCertFile` to the location of the certificate file to use to identify this Kubelet, and `tlsPrivateKeyFile` to the location of the corresponding private key file. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameters in K`UBELET_CERTIFICATE_ARGS` variable.\n\n```\n--tls-cert-file=<path/to/tls-certificate-file>\n--tls-private-key-file=<path/to/tls-key-file>\n```\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nTLS and client certificate authentication must be configured for your Kubernetes cluster deployment.\n\n## Default value\n\nBy default, `--tls-cert-file` and `--tls-private-key-file` arguments are not set. If `--tls-cert-file` and `--tls-private-key-file` are not provided, a self-signed certificate and key are generated for the public address and saved to the directory passed to `--cert-dir`.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [http://rootsquash.com/2016/05/10/securing-the-kubernetes-api/ ][2]\n3. [https://github.com/kelseyhightower/docker-kubernetes-tls-guide ][3]\n4. [https://jvns.ca/blog/2017/08/05/how-kubernetes-certificates-work/][4]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted.\n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: http://rootsquash.com/2016/05/10/securing-the-kubernetes-api/\n[3]: https://github.com/kelseyhightower/docker-kubernetes-tls-guide\n[4]: https://jvns.ca/blog/2017/08/05/how-kubernetes-certificates-work/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.10","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"gqg-7cf-6bu","createdAt":1599603572402,"name":"--tls-cert-file and --tls-private-key-file arguments are set as appropriate (Kubelet)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:1.1.3","framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the controller manager pod specification file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe controller manager pod specification file controls various parameters that set the behavior of the Controller Manager on the master node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/manifests/kube-controller-manager.yaml\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/manifests/kube-controller-manager.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `kube-controller-manager.yaml` file has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.3","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"pr0-hcf-xkw","createdAt":1599603633988,"name":"Controller manager pod specification file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","source:compliance-agent","control:1.1.19","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the Kubernetes PKI directory and file ownership is set to root:root.\n\n## Rationale\n\nKubernetes makes use of a number of certificates as part of its operation. You should set the ownership of the directory containing the PKI information and all files in that directory to maintain their integrity. The directory and files should be owned by root:root.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nls -laR /etc/kubernetes/pki/\n```\n\nVerify the ownership of all files and directories in this hierarchy is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown -R root:root /etc/kubernetes/pki/`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `/etc/kubernetes/pki/` directory and all of the files and directories contained within it, are set to be owned by the root user.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.19","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.19\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tgm-6a5-ttf","createdAt":1599603695482,"name":"Kubernetes PKI directory and file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.20","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not disable the secure port.\n\n## Rationale\n\nThe secure port is used to serve https with authentication and authorization. If you disable it, no https traffic is served and all traffic is served unencrypted.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--secure-port` argument is either not set or is set to an integer value between `1` and `65535`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and either remove the --secure-port parameter or set it to a different (non-zero) desired port.\n\n## Impact\n\nYou need to set the API Server up with the right TLS certificates.\n\n## Default value\n\nBy default, port 6443 is used as the secure port.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. Version 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.20","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.20\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"5w3-iw4-y16","createdAt":1599603757033,"name":"--secure-port argument is not set to 0"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Controller-Manager","source:compliance-agent","control:1.3.7","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not bind the Controller Manager service to non-loopback insecure addresses.\n\n## Rationale\n\nThe Controller Manager API service which runs on port 10252/TCP by default is used for health and metrics information and is available without authentication or encryption. As such it should only be bound to a localhost interface, to minimize the cluster's attack surface\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--bind-address` argument is set to `127.0.0.1`.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and ensure the correct value for the `--bind-address` parameter.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `--bind-address` parameter is set to `0.0.0.0`.\n\n## References\n\n1. https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager/ \n\n*Notes*: Although the current Kubernetes documentation site says that `--address` is deprecated in favour of `--bind-address`. Kubeadm 1.11 still makes use of `--address`.\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.7","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"pvo-5un-k18","createdAt":1599603818624,"name":"--bind-address argument is set to 127.0.0.1 (Controller Manager)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.6","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nVerify kubelet's certificate before establishing connection.\n\n## Rationale\n\nThe connections from the apiserver to the kubelet are used for fetching logs for pods, attaching (through kubectl) to running pods, and using the kubelets port-forwarding functionality. These connections terminate at the kubelets HTTPS endpoint. By default, the apiserver does not verify the kubelets serving certificate, which makes the connection subject to man-in-the-middle attacks, and unsafe to run over untrusted and/or public networks.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--kubelet-certificate-authority` argument exists and is set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and setup the TLS connection between the apiserver and kubelets. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--kubelet-certificate-authority` parameter to the path to the cert file for the certificate authority. \n\n```\n--kubelet-certificate-authority=<ca-string>\n```\n\n## Impact\n\nYou require TLS to be configured on apiserver as well as kubelets.\n\n## Default value\n\nBy default, `--kubelet-certificate-authority` argument is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://kubernetes.io/docs/admin/kubelet-authentication-authorization/ \n3. https://kubernetes.io/docs/concepts/cluster-administration/master-node-communication/#apiserver---kubelet\n\n## CIS controls\n\nVersion 6.3.4 Use Only Secure Channels For Remote System Administration - Perform all remote administration of servers, workstation, network devices, and similar equipment over secure channels. Protocols such as telnet, VNC, RDP, or others that do not actively support strong encryption should only be used if they are performed over a secondary encryption channel, such as SSL, TLS or IPSEC. \n\nVersion 7.4.5 Use Multifactor Authentication For All Administrative Access - Use multi-factor authentication and encrypted channels for all administrative account access.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.6","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"sbm-nxt-qv3","createdAt":1599603880124,"name":"--kubelet-certificate-authority argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","control:2.4","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEtcd should be configured to make use of TLS encryption for peer connections.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be encrypted in transit and also amongst peers in the etcd clusters.\n\n## Audit\n\nThis recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable.\n\nRun the following command on the etcd server node: \n```\nps -ef | grep etcd\n```\nVerify that the `--peer-cert-file` and `--peer-key-file` arguments are set as appropriate. \n\n## Remediation\n\nFollow the etcd service documentation and configure peer TLS encryption as appropriate for your etcd cluster. Then, edit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and set the below parameters:\n\n```\n--peer-cert-file=</path/to/peer-cert-file> \n--peer-key-file=</path/to/peer-key-file>\n```\n\n## Impact\n\nEtcd cluster peers would need to set up TLS for their communication.\n\n## Default value\n\n*Note*: This recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable. By default, peer communication over TLS is not configured.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][1]\n2. [https://kubernetes.io/docs/admin/etcd/][2]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.  \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.4","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"lzq-1mk-xc7","createdAt":1599603941695,"name":"--peer-cert-file and --peer-key-file arguments are set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.5","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/etc/docker`.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privilege and its behavior depends on some key files and directories, including `/etc/docker`. This holds various certificates and keys used for TLS communication between Docker daemon and Docker client and so it should be audited.\n\n## Audit\n\nVerify that there is an audit rule applied to the `/etc/docker` directory. To see the rule for the `/etc/docker` directory, run: \n\n```\nauditctl -l | grep /etc/docker\n```\n\n## Remediation\n\nYou should add a rule for the `/etc/docker` directory. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /etc/docker -k docker \n```\n\nThen restart the audit daemon:\n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.5","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"5ns-uab-zcf","createdAt":1599604003342,"name":"/etc/docker auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.16","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIPC (POSIX/SysV IPC) namespace provides separation of named shared memory segments, semaphores and message queues. The IPC namespace on the host should therefore not be shared with containers and should remain isolated.\n\n## Rationale\n\nThe IPC namespace provides separation of IPC between the host and containers. If the host's IPC namespace is shared with the container, it would allow processes within the container to see all of IPC communications on the host system. This would remove the benefit of IPC level isolation between host and containers. An attacker with access to a container could get access to the host at this level with major consequences. The IPC namespace should therefore not be shared between the host and its containers.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: IpcMode={{ .HostConfig.IpcMode }}'` \n\nIf the command returns `host`, it means that the host IPC namespace is shared with the container. Any other result means that it is not shared, and that the system is configured in line with good security practice.\n\n## Remediation\n\nDo not start a container with the `--ipc=host` argument. For example, do not start a container with the command `docker run --interactive --tty --ipc=host centos /bin/bash`\n\n## Impact\n\nShared memory segments are used in order to accelerate interprocess communications, commonly in high-performance applications. If this type of application is containerized into multiple containers, you might need to share the IPC namespace of the containers in order to achieve high performance. Under these circumstances, you should still only share container specific IPC namespaces and not the host IPC namespace. A container's IPC namespace can be shared with another container. For example, `docker run --interactive --tty --ipc=container:e3a7a1a97c58 centos /bin/bash`\n\n## Default value\n\nBy default, all containers have their IPC namespace enabled and host IPC namespace is not shared with any container.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#ipc-settings-ipc\n2. http://man7.org/linux/man-pages/man7/namespaces.7.html\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.16","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.16\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qpe-nj2-sl8","createdAt":1599604030036,"name":"Host's IPC namespace is not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","control:1.3.2","security:compliance","requirement:Controller-Manager","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable profiling, if not needed.\n\n## Rationale\n\nProfiling allows for the identification of specific performance bottlenecks. It generates a significant amount of program data that could potentially be exploited to uncover system and program details. If you are not experiencing any bottlenecks and do not need the profiler for troubleshooting purposes, it is recommended to turn it off to reduce the potential attack surface.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-controller-manager\n```\nVerify that the `--profiling` argument is set to `false`.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and set the below parameter:\n\n```\n--profiling=false\n```\n\n## Impact\n\nProfiling information would not be available.\n\n## Default value\n\nBy default, profiling is enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-controller-manager/ ][1]\n2. [https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md][2]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.4 Controlled Use of Administrative Privileges \n\n[1]: https://kubernetes.io/docs/admin/kube-controller-manager/ \n[2]: https://github.com/kubernetes/community/blob/master/contributors/devel/profiling.md\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.2","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"1ie-ddf-7wm","createdAt":1599604031896,"name":"--profiling argument is set to false (Controller Manager)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.6","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/docker` directory permissions are correctly set to 755 or more restrictively.\n\n## Rationale\n\nThe `/etc/docker` directory contains certificates and keys in addition to various sensitive files. It should therefore only be writeable by root to ensure that it can not be modified by a less privileged user.\n\n## Audit\n\nYou should execute the command below to verify that the directory has permissions of 755+: \n\n```\nstat -c %a /etc/docker\n```\n\n## Remediation\n\nRun the following command: `chmod 755 /etc/docker`\n\nThis sets the permissions for the directory to 755.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for this directory are set to 755.\n\n## References\n\n1. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.6","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"een-7do-u18","createdAt":1599604083943,"name":"/etc/docker directory permissions are set to 755 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.30","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSetup TLS connection on the API server.\n\n## Rationale\n\nAPI server communication contains sensitive parameters that should remain encrypted in transit. Configure the API server to serve only HTTPS traffic.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--tls-cert-file` and `--tls-private-key-file` arguments exist and they are set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection on the apiserver. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the TLS certificate and private key file parameters. \n```\n--tls-cert-file=<path/to/tls-certificate-file> \n--tls-private-key-file=<path/to/tls-key-file>\n```\n\n## Impact\n\nTLS and client certificate authentication must be configured for your Kubernetes cluster deployment.\n\n## Default value\n\nBy default, `--tls-cert-file` and `--tls-private-key-file` arguments are not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. http://rootsquash.com/2016/05/10/securing-the-kubernetes-api/ \n3. https://github.com/kelseyhightower/docker-kubernetes-tls-guide\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \nVersion 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.30","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.30\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"m9r-8ka-arc","createdAt":1599604115727,"name":"--tls-cert-file and --tls-private-key-file arguments are set as appropriate (API server)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","security:compliance","scored:false","control:1.1.20","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that Kubernetes PKI certificate files have permissions of 644 or more restrictive.\n\n## Rationale\n\nKubernetes makes use of a number of certificate files as part of the operation of its components. The permissions on these files should be set to 644 or more restrictive to protect their integrity.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nfind /etc/kubernetes/pki -name \"*.crt\" | xargs stat -c '%n %a'\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod -R 644 /etc/kubernetes/pki/*.crt`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the certificates used by Kubernetes are set to have permissions of 644\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.20","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.20\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ion-6fc-xd4","createdAt":1599604147464,"name":"Kubernetes PKI certificate file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.5","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the scheduler pod specification file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe scheduler pod specification file controls various parameters that set the behavior of the Scheduler service in the master node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/manifests/kube-scheduler.yaml\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/manifests/kube-scheduler.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kube-scheduler.yaml` file has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-scheduler/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.5","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qxe-hc6-qlm","createdAt":1599604179189,"name":"Scheduler pod specification file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","source:compliance-agent","control:2.1","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nConfigure TLS encryption for the etcd service.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be encrypted in transit.\n\n## Audit\n\nRun the following command on the etcd server node:\n```\nps -ef | grep etcd\n```\nVerify that the `--cert-file` and the `--key-file` arguments are set as appropriate.\n\n## Remediation\n\nFollow the etcd service documentation and configure TLS encryption. Then, edit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and set the below parameters:\n\n```\n--cert-file=</path/to/ca-file> \n--key-file=</path/to/key-file>\n```\n\n## Impact\n\nClient connections only over TLS would be served.\n\n## Default value\n\nBy default, TLS encryption is not set.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][1]\n2. [https://kubernetes.io/docs/admin/etcd/][2]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.                \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.1","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ezf-1mn-luf","createdAt":1599604210918,"name":"--cert-file and --key-file arguments are set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.26","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSet global request timeout for API server requests as appropriate.\n\n## Rationale\n\nSetting global request timeout allows extending the API server request timeout limit to a duration appropriate to the user's connection speed. By default, it is set to 60 seconds which might be problematic on slower connections making cluster resources inaccessible once the data volume for requests exceeds what can be transmitted in 60 seconds. But, setting this timeout limit to be too large can exhaust the API server resources making it prone to Denial-of-Service attack. Hence, it is recommended to set this limit as appropriate and change the default limit of 60 seconds only if needed.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--request-timeout` argument is either not set or set to an appropriate value.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml and set the below parameter as appropriate and if needed. For example, --request-timeout=300s\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, --request-timeout is set to 60 seconds.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://github.com/kubernetes/kubernetes/pull/51415\n\n## CIS controls\n\nVersion 6 14.6 Enforce Detailed Audit Logging For Sensitive Information Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. Version 7 14.9 Enforce Detail Logging for Access or Changes to Sensitive Data Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.26","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.26\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"1kt-cbt-hvl","createdAt":1599604242564,"name":"--request-timeout argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Pod-Security-Policies","control:5.2.4","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not generally permit containers to be run with the hostNetwork flag set to true.\n\n## Rationale\n\nA container running in the host's network namespace could access the local loopback device, and could access network traffic to and from other pods. There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to share the host network namespace. If you have need to run containers which require hostNetwork, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n## Audit\n\nGet the set of PSPs with the following command: `kubectl get psp`\n\nFor each PSP, check whether privileged is enabled: `kubectl get psp <name> -o=jsonpath='{.spec.hostNetwork}'`\n\nVerify that there is at least one PSP which does not return true.\n\n## Remediation\n\nCreate a PSP as described in the Kubernetes documentation, ensuring that the `.spec.hostNetwork` field is omitted or set to false.\n\n## Impact\n\nPods defined with spec.hostNetwork: true will not be permitted unless they are run under a specific PSP.\n\n## Default value\n\nBy default, PodSecurityPolicies are not defined.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/policy/pod-security-policy][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://kubernetes.io/docs/concepts/policy/pod-security-policy\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.2.4","framework":"cis-kubernetes","requirement":"Pod-Security-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mlb-fwt-s80","createdAt":1599604274257,"name":"Minimize the admission of containers wishing to share the host network namespace"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:1.2.3","security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit all Docker daemon activities.\n\n## Rationale\n\nAs well as auditing the normal Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges. It is very important to audit its activities and usage.\n\n## Audit\n\nVerify that there are audit rules for the Docker daemon. To see the rules associated with the Docker daemon, run: \n\n```\nauditctl -l | grep /usr/bin/dockerd\n```\n\n## Remediation\n\nYou should add rules for the Docker daemon. For example, add the following line to the `/etc/audit/audit.rules` file: \n\n```\n-w /usr/bin/dockerd -k docker \n```\n\nThen restart the audit daemon using the following command:\n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, the Docker daemon is not audited.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.6.2 Ensure Audit Log Settings Support Appropriate Log Entry Formatting - Validate audit log settings for each hardware device and the software installed on it, ensuring that logs include a date, timestamp, source addresses, destination addresses, and various other useful elements of each packet and/or transaction. Systems should record logs in a standardized format such as syslog entries or those outlined by the Common Event Expression initiative. If systems cannot generate logs in a standardized format, log normalization tools can be deployed to convert logs into such a format. \n\nVersion 7.6.2 Activate audit logging - Ensure that local logging has been enabled on all systems and networking devices. \n\nVersion 6.3 Enable Detailed Logging - Enable system logging to include detailed information such as an event source, date, user, timestamp, source addresses, destination addresses, and other useful elements.                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.3","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"fpu-oe5-feu","createdAt":1599604305682,"name":"Auditing is configured for the Docker daemon"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.25","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should restrict the container from acquiring additional privileges via SUID or SGID bits.\n\n## Rationale\n\nA process can set the `no_new_priv` bit in the kernel and this persists across forks, clones and execve. The `no_new_priv` bit ensures that the process and its child processes do not gain any additional privileges via SUID or SGID bits. This reduces the danger associated with many operations because the possibility of subverting privileged binaries is lessened.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: SecurityOpt={{ .HostConfig.SecurityOpt }}'` \n\nThis command returns all of the security options currently configured for containers. The option `no-new-privileges` should be one of them.\n\n## Remediation\n\nStart your container with the options `docker run --rm -it --security-opt=no-new-privileges ubuntu bash`\n\n## Impact\n\nThe `no_new_priv` option prevents LSMs like SELinux from allowing processes to acquire new privileges.\n\n## Default value\n\nBy default, new privileges are not restricted.\n\n## References\n\n1. https://github.com/projectatomic/atomic-site/issues/269\n2. https://github.com/docker/docker/pull/20727\n3. https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt\n4. https://lwn.net/Articles/475678/\n5. https://lwn.net/Articles/475362/\n\n## CIS controls\n\nVersion 6\n\n5 Controlled Use of Administration Privileges Controlled Use of Administration Privileges\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.25","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.25\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"cft-3kh-z3l","createdAt":1599604337425,"name":"Container is restricted from acquiring additional privileges"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.4","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable the read-only port.\n\n## Rationale\n\nThe Kubelet process provides a read-only API in addition to the main Kubelet API. Unauthenticated access is provided to this read-only API which could possibly retrieve potentially sensitive information about the cluster.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--read-only-port` argument exists and is set to 0. If the `--read-only-port` argument is not present, check that there is a Kubelet config file specified by `--config`. Check that if there is a readOnlyPort entry in the file, it is set to 0.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `readOnlyPort` to 0. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_SYSTEM_PODS_ARGS` variable.\n\n`--read-only-port=0`\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nRemoval of the read-only port will require that any service which made use of it will need to be re-configured to use the main Kubelet API.\n\n## Default value\n\nBy default, `--read-only-port` is set to 10255/TCP. However, if a config file is specified by `--config` the default value for `readOnlyPort` is 0.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system.\n\nVersion 7 9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.4","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"dgo-kog-lle","createdAt":1599604369044,"name":"--read-only-port argument is set to 0"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.4","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIf kube-proxy is running, ensure that the file ownership of its kubeconfig file is set to root:root.\n\n## Rationale\n\nThe kubeconfig file for kube-proxy controls various parameters for the kube-proxy service in the worker node. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nFind the kubeconfig file being used by `kube-proxy` by running the following command: `ps -ef | grep kube-proxy`. If `kube-proxy` is running, get the kubeconfig file location from the `--kubeconfig` parameter.\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %U:%G <proxy kubeconfig file>`. Verify that the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the each worker node:\n\n`chown root:root <proxy kubeconfig file>`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, proxy file ownership is set to root:root.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-proxy/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kube-proxy/\n\n## Audit\n\nFind the kubeconfig file being used by kube-proxy by running the following command: ps -ef | grep kube-proxy If kube-proxy is running, get the kubeconfig file location from the --kubeconfig parameter. Run the below command (based on the file location on your system) on the each worker node. For example, stat -c %U:%G <proxy kubeconfig file> Verify that the ownership is set to root:root.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.4","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oat-dei-klo","createdAt":1599604401268,"name":"Proxy kubeconfig file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.1","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the kubelet service file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe kubelet service file controls various parameters that set the behavior of the kubelet service in the worker node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %a /etc/systemd/system/kubelet.service.d/10-kubeadm.conf`. Verify that the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the each worker node.\n\nFor example, `chmod 644 /etc/systemd/system/kubelet.service.d/10-kubeadm.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the kubelet service file has permissions of 640.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#44-joining-your-nodes ][2]\n3. [https://kubernetes.io/docs/admin/kubeadm/#kubelet-drop-in][3]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#44-joining-your-nodes\n[3]: https://kubernetes.io/docs/admin/kubeadm/#kubelet-drop-in\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.1","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"j8k-7ii-fwo","createdAt":1599604432646,"name":"Kubelet service file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.5","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/docker` directory ownership and group ownership is correctly set to root.\n\n## Rationale\n\nThe `/etc/docker` directory contains certificates and keys in addition to various other sensitive files. It should therefore be individual owned and group owned by root in order to ensure that it can not be modified by less privileged users.\n\n## Audit\n\nYou should execute the command below to verify that the directory is owned and group owned by root: \n\n```\nstat -c %U:%G /etc/docker | grep -v root:root\n``` \n\nThis command does not return any data.\n\n## Remediation\n\nTo resolve this issue, run the following command: `chown root:root /etc/docker`\n\nThis sets the ownership and group ownership for the directory to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the ownership and group ownership for this directory is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.`\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.5","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"heb-axz-wdc","createdAt":1599604466531,"name":"/etc/docker directory ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","control:3.20","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/sysconfig/docker` file individual ownership and group ownership is correctly set to root.\n\n## Rationale\n\nThe `/etc/sysconfig/docker` file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be individually owned and group owned by root to ensure that it is not modified by less privileged users.\n\n## Audit\n\nVerify that the `/etc/sysconfig/docker` file is individually owned and group-owned by root by running: \n```\nstat -c %U:%G /etc/sysconfig/docker | grep -v root:root\n```\nThe command should return no results.\n\n## Remediation\n\nRun the following command: `chown root:root /etc/sysconfig/docker`\n\nThis sets the ownership and group ownership for the file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system, and in this case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/admin/configuring/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.20","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.20\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"xrt-uiz-s7o","createdAt":1599604498138,"name":"/etc/sysconfig/docker file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.15","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `scheduler.conf` file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe `scheduler.conf` file is the kubeconfig file for the Scheduler. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/scheduler.conf\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/scheduler.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `scheduler.conf` has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.15","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.15\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"fmc-m0d-pe5","createdAt":1599604530000,"name":"scheduler.conf file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent","control:1.2.9"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/etc/sysconfig/docker`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges, it is very important to audit its activities and usage. Its behavior depends on some key files and directories, including `/etc/sysconfig/docker`. It contains various parameters related to the Docker daemon when run on CentOS and RHEL based distributions. If present, it is important that it is audited.\n\n## Audit\n\nVerify that there is an audit rule associated with the `/etc/sysconfig/docker` file. To see the rule for the `/etc/sysconfig/docker` file, run: \n```\nauditctl -l | grep /etc/sysconfig/docker\n```\n\n## Remediation\n\nYou should add a rule for `/etc/sysconfig/docker` file. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /etc/sysconfig/docker -k docker\n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `/etc/sysconfig/docker` may not be present on the system and in that case, this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.9","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ps6-vb4-bim","createdAt":1599604561498,"name":"/etc/sysconfig/docker auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","source:compliance-agent","control:2.1"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy default, all network traffic is allowed between containers on the same host on the default network bridge. You can restrict all inter-container communication and link specific containers together that require communication. Or, you can create a custom network and only join containers that need to communicate to that custom network.\n\n## Rationale\n\nBy default, unrestricted network traffic is enabled between all containers on the same host on the default network bridge. Each container has the potential of reading all packets across the container network on the same host. This might lead to an unintended and unwanted disclosure of information to other containers. Hence, restrict inter-container communication on the default network bridge.\n\n## Audit\n\nVerify that the default network bridge has been configured to restrict inter-container communication by running:\n```\ndocker network ls --quiet | xargs docker network inspect --format '{{ .Name }}: {{ .Options }}' \n```\nCheck that it returns `com.docker.network.bridge.enable_icc:false` for the default network bridge.\n\n## Remediation\n\nEdit the Docker daemon configuration file to ensure that inter-container communication is disabled:\n\n```\n\"icc\": false\n```\n\nAlternatively, run the Docker daemon directly and pass `--icc=false` as an argument:\n\n```\ndockerd --icc=false \n```\n\nFollow the Docker documentation and create a custom network, and only join containers that need to communicate to that custom network. The `--icc` parameter only applies to the default docker bridge. If you use a custom network, adopt the segmenting networks approach instead.\n\n## Impact\n\nInter-container communication is disabled on the default network bridge. If any communication between containers on the same host is desired, it needs to be explicitly defined using container linking or custom networks.\n\n## Default value\n\nBy default, all inter-container communication is allowed on the default network bridge.\n\n## References\n\n1. [https://docs.docker.com/engine/userguide/networking/][1]\n2. [https://docs.docker.com/engine/userguide/networking/default_network/container-communication/#communication-between-containers][2]\n\n## CIS controls\n\nNone                \n\n[1]: https://docs.docker.com/engine/userguide/networking/ \n[2]: https://docs.docker.com/engine/userguide/networking/default_network/container-communication/#communication-between-containers\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_network","complianceFrameworks":[{"control":"2.1","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"dmd-zy3-5un","createdAt":1599604593277,"name":"Network traffic is restricted between containers on the default bridge"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.16","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nReject creating pods that do not match Pod Security Policies.\n\n## Rationale\n\nA Pod Security Policy is a cluster-level resource that controls the actions that a pod can perform and what it has the ability to access. The PodSecurityPolicy objects define a set of conditions that a pod must run with in order to be accepted into the system. Pod Security Policies are comprised of settings and strategies that control the security features a pod has access to and hence this must be used to control pod access permissions. Note: When the PodSecurityPolicy admission plugin is in use, there needs to be at least one PodSecurityPolicy in place for ANY pods to be admitted. See section 1.7 for recommendations on PodSecurityPolicy settings.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--enable-admission-plugins` argument is set to a value that includes `PodSecurityPolicy`.\n\n## Remediation\n\nFollow the documentation and create Pod Security Policy objects as per your environment. Then, edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --enable-admission-plugins parameter to a value that includes PodSecurityPolicy: --enable-admission-plugins=...,PodSecurityPolicy,... Then restart the API Server.\n\n## Impact\n\nThe policy objects must be created and granted before pod creation would be allowed.\n\n## Default value\n\nBy default, PodSecurityPolicy is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#podsecuritypolicy 3. https://kubernetes.io/docs/concepts/policy/pod-security-policy/#enabling-pod-security-policies\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.16","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.16\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vwz-aw9-c09","createdAt":1599604624793,"name":"Admission control plugin PodSecurityPolicy is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.4","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the file permissions on the docker.socket file are correctly set to 644 or more restrictively.\n\n## Rationale\n\nThe docker.socket file contains sensitive parameters that may alter the behavior of the Docker remote API. It should therefore be writeable only by root in order to ensure that it is not modified by less privileged users.\n\n## Audit\n\n1. Locate the `docker.socket` file by running: \n    ```\n    systemctl show -p FragmentPath docker.socket \n    ```\n2. If the file does not exist, this recommendation is not applicable. If the file exists, verify that the file permissions are set to `644` or more restrictively, by running the following command with the correct filepath:\n    ```\n    stat -c %a /usr/lib/systemd/system/docker.socket\n    ```\n\n## Remediation\n\n1. Find out the file location: `systemctl show -p FragmentPath docker.socket`\n2. If the file does not exist, this recommendation is not applicable. If the file does exist, you should execute the command below, including the correct file path to set the file permissions to 644. For example, `chmod 644 /usr/lib/systemd/system/docker.socket`\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system and in that case, this recommendation is not applicable. By default, if the file is present, the permissions should be set to 644 or more restrictively.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#bind-docker-to-another-hostport-or-a-unix-socket\n2. https://github.com/YungSang/fedora-atomic-packer/blob/master/oem/docker.socket\n3. http://daviddaeschler.com/2014/12/14/centos-7rhel-7-and-docker-containers-on-boot/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.4","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"myf-zyh-89p","createdAt":1599604656679,"name":"docker.socket file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","control:2.4","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDocker considers a private registry either secure or insecure. By default, registries are considered secure.\n\n## Rationale\n\nA secure registry uses TLS. A copy of the registry's CA certificate is placed on the Docker host in the `/etc/docker/certs.d/<registry-name>/` directory. An insecure registry is one which does not have a valid registry certificate, or one not not using TLS. You should not use insecure registries because they present a risk of traffic interception and modification. Additionally, once a registry has been marked as insecure, commands such as `docker pull`, `docker push`, and `docker search` will not result in an error message, and users may indefinitely be working with this type of insecure registry without ever being notified of the risk of potential compromise.\n\n## Audit\n\nFind out if any insecure registries are in use by running: \n```\ndocker info --format 'Insecure Registries: {{.RegistryConfig.InsecureRegistryCIDRs}}'\n```\n\n## Remediation\n\nYou should ensure that no insecure registries are in use.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, Docker assumes all registries except local ones are secure.\n\n## References\n\n1. [https://docs.docker.com/registry/insecure/][1]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.                \n\n[1]: https://docs.docker.com/registry/insecure/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.4","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"wki-o8r-1ha","createdAt":1599604688564,"name":"Insecure registries are not used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.14","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `admin.conf` file ownership is set to root:root.\n\n## Rationale\n\nThe `admin.conf` file contains the admin credentials for the cluster. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/admin.conf\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/admin.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `admin.conf` file ownership is set to `root:root`.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kubeadm/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.14","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.14\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"kcn-wwa-os0","createdAt":1599604720378,"name":"admin.conf file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.19","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the `/etc/default/docker` file ownership and group-ownership is correctly set to root.\n\n## Rationale\n\nThe `/etc/default/docker` file contains sensitive parameters that may alter the behavior of the Docker daemon. It should therefore be individually owned and group owned by root to ensure that it cannot be modified by less privileged users.\n\n## Audit\n\nVerify that the `/etc/default/docker` file is individually owned and group-owned by root by running: \n```\nstat -c %U:%G /etc/default/docker | grep -v root:root \n```\nThe command should return no results.\n\n## Remediation\n\nExecute the following command: `chown root:root /etc/default/docker`\n\nThis sets the ownership and group ownership of the file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system, and in this case, this recommendation is not applicable.\n\n## References\n\n1. https://docs.docker.com/engine/admin/configuring/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.19","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.19\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"o5w-d8y-ka1","createdAt":1599604751728,"name":"/etc/default/docker file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.5","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the kubelet.conf file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe `kubelet.conf` file is the kubeconfig file for the node, and controls various parameters that set the behavior and identity of the worker node. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %a /etc/kubernetes/kubelet.conf`. Verify that the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun this command (based on the file location on your system) on the each worker node. For example, `chmod 644 /etc/kubernetes/kubelet.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `kubelet.conf` file has permissions of 640.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior. \n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.5","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"x88-8vs-ygw","createdAt":1599604783481,"name":"kubelet.conf file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.5","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should not allow sensitive host system directories such as those listed below to be mounted as container volumes, especially in read-write mode. `/` `/boot` `/dev` `/etc` `/lib` `/proc` `/sys` `/usr`\n\n## Rationale\n\nIf sensitive directories are mounted in read-write mode, it is possible to make changes to files within them. This has obvious security implications and should be avoided.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Volumes={{ .Mounts }}'` This command returns a list of currently mapped directories and indicates whether they are mounted in read-write mode for each container instance.\n\n## Remediation\n\nDo not mount directories which are security sensitive on the host within containers, especially in read-write mode.\n\n## Impact\n\nNone\n\n## Default value\n\nDocker defaults to using a read-write volume but you can also mount a directory read-only. By default, no sensitive host directories are mounted within containers.\n\n## References\n\n1. https://docs.docker.com/engine/tutorials/dockervolumes/\n\n## CIS controls\n\nVersion 6\n\n14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.5","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"dmq-wqu-2im","createdAt":1599604814929,"name":"Sensitive host system directories are not mounted on containers"}]}
    headers:
      Content-Type:
      - application/json
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=1&page%5Bsize%5D=100
    method: GET
  response:
    body: |
      {"meta":{"page":{"total_filtered_count":52,"total_count":152}},"data":[{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.28","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nExplicitly set a service account public key file for service accounts on the apiserver.\n\n## Rationale\n\nBy default, if no --service-account-key-file is specified to the apiserver, it uses the private key from the TLS serving certificate to verify service account tokens. To ensure that the keys for service account tokens could be rotated as needed, a separate public/private key pair should be used for signing service account tokens. Hence, the public key should be specified to the apiserver with --service-account-key-file.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--service-account-key-file` argument exists and is set as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--service-account-key-file` parameter to the public key file for service accounts: `--service-account-key-file=<filename>`\n\n## Impact\n\nThe corresponding private key must be provided to the controller manager. You would need to securely maintain the key file and rotate the keys based on your organization's key rotation policy.\n\n## Default value\n\nBy default, `--service-account-key-file` argument is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://github.com/kubernetes/kubernetes/issues/24167\n\n## CIS controls\n\nVersion 6 3 Secure Configurations for Hardware and Software on Mobile Devices, Laptops, Workstations, and Servers \nVersion 7 5 Secure Configuration for Hardware and Software on Mobile Devices, Laptops, Workstations and Servers \n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.28","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.28\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"xtg-mzn-vft","createdAt":1599604846892,"name":"--service-account-key-file argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent","control:5.30"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should not share the host's user namespaces with containers running on it.\n\n## Rationale\n\nUser namespaces ensure that a root process inside the container will be mapped to a non-root process outside the container. Sharing the user namespaces of the host with the container does not therefore isolate users on the host from users in the containers.\n\n## Audit\n\nRun this command and ensure that it does not return any value for `UsernsMode`. If it returns a value of `host`, it means that the host user namespace is shared with its containers: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: UsernsMode={{ .HostConfig.UsernsMode }}'`\n\n## Remediation\n\nDo not share user namespaces between host and containers. For example, do not run the command `docker run --rm -it --userns=host ubuntu bash`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the host user namespace is shared with containers unless user namespace support is enabled.\n\n## References\n\n1. https://docs.docker.com/engine/security/userns-remap/\n2. https://docs.docker.com/engine/reference/commandline/run/#options\n3. https://github.com/docker/docker/pull/12648\n4. https://events.linuxfoundation.org/sites/events/files/slides/User%20Namespaces%20-%20ContainerCon%202015%20-%2016-9-final_0.pdf\n\n## CIS controls\n\nVersion 6\n\n12 Boundary Defense Boundary Defense\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.30","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.30\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"e7c-uzf-jwy","createdAt":1599604878282,"name":"Host's user namespaces are not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","requirement:Container-Images-and-Build-File-Configuration","framework:cis-docker","control:4.6","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should add the `HEALTHCHECK` instruction to your Docker container images in order to ensure that health checks are executed against running containers.\n\n## Rationale\n\nAn important security control is that of availability. Adding the `HEALTHCHECK` instruction to your container image ensures that the Docker engine periodically checks the running container instances against that instruction to ensure that containers are still operational. Based on the results of the health check, the Docker engine could terminate containers which are not responding correctly, and instantiate new ones.\n\n## Audit\n\nRun this command to ensure that Docker images have the appropriate `HEALTHCHECK` instruction configured: `docker inspect --format='{{ .Config.Healthcheck }}' <IMAGE>`\n\n## Remediation\n\nYou should follow the Docker documentation and rebuild your container images to include the `HEALTHCHECK` instruction.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `HEALTHCHECK` is not set.\n\n## References\n\n1. https://docs.docker.com/engine/reference/builder/#healthcheck\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_image","complianceFrameworks":[{"control":"4.6","framework":"cis-docker","requirement":"Container-Images-and-Build-File-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-4.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"5xs-afd-sfx","createdAt":1599604909942,"name":"HEALTHCHECK instructions have been added to container images"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:5.7.4","source:compliance-agent","requirement:General-Policies","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nKubernetes provides a default namespace, where objects are placed if no namespace is specified for them. Placing objects in this namespace makes application of RBAC and other controls more difficult.\n\n## Rationale\n\nResources in a Kubernetes cluster should be segregated by namespace, to allow for security controls to be applied at that level and to make it easier to manage resources.\n\n## Audit\n\nRun this command to list objects in default namespace: `kubectl get all`\n\nThe only entries there should be system managed resources such as the Kubernetes service.\n\n## Remediation\n\nEnsure that namespaces are created to allow for appropriate segregation of Kubernetes resources and that all new resources are created in a specific namespace.\n\n## Impact\n\nNone\n\n## Default value\n\nUnless a namespace is specific on object creation, the default namespace will be used.\n\n## References\n\nNone\n\n## CIS controls\n\nNone\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.7.4","framework":"cis-kubernetes","requirement":"General-Policies","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.7.4\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"gly-1rp-obv","createdAt":1599604941259,"name":"The default namespace should not be used"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.21","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSeccomp filtering provides a means for a process to specify a filter for incoming system calls. The default Docker seccomp profile works on a whitelist basis and allows for a large number of common system calls, whilst blocking all others. This filtering should not be disabled unless it causes a problem with your container application usage.\n\n## Rationale\n\nA large number of system calls are exposed to every userland process with many of them going unused for the entire lifetime of the process. Most of applications do not need all these system calls and would therefore benefit from having a reduced set of available system calls. Having a reduced set of system calls reduces the total kernel surface exposed to the application and thus improvises application security.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: SecurityOpt={{ .HostConfig.SecurityOpt }}'` \n\nThis returns either `<no value>` or your modified seccomp profile. If it returns `[seccomp:unconfined]`, the container is running without any seccomp profiles and is therefore not configured in line with good security practices.\n\n## Remediation\n\nBy default, seccomp profiles are enabled. You do not need to do anything unless you want to modify and use a modified seccomp profile.\n\n## Impact\n\nWith Docker 1.10 and greater, the default seccomp profile blocks syscalls, regardless of `--cap-add passed` to the container. You should create your own custom seccomp profile in such cases. You can also disable the default seccomp profile by passing `--security-opt=seccomp:unconfined` on docker run.\n\n## Default value\n\nWhen you run a container, it uses the default profile unless you override it with the `--security-opt` option.\n\n## References\n\n1. http://blog.scalock.com/new-docker-security-features-and-what-they-mean-seccomp-profiles\n2. https://docs.docker.com/engine/reference/run/#security-configuration\n3. https://github.com/docker/docker/blob/master/profiles/seccomp/default.json\n4. https://docs.docker.com/engine/security/seccomp/\n5. https://www.kernel.org/doc/Documentation/prctl/seccomp_filter.txt\n6. https://github.com/docker/docker/issues/22870\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.21","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.21\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"hub-v5u-cw0","createdAt":1599604972925,"name":"Default seccomp profile is not Disabled"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.7","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAllow Kubelet to manage `iptables`.\n\n## Rationale\n\nKubelets can automatically manage the required changes to `iptables` based on how you choose your networking options for the pods. It is recommended to let kubelets manage the changes to `iptables`. This ensures that the `iptables` configuration remains in sync with pods networking configuration. Manually configuring `iptables` with dynamic pod network configuration changes might hamper the communication between pods/containers and to the outside world. You might have `iptables` rules too restrictive or too open.\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that if the `--make-iptables-util-chains` argument exists then it is set to true. If the `--make-iptables-util-chains` argument does not exist, and there is a Kubelet config file specified by `--config`, verify that the file does not set `makeIPTablesUtilChains` to `false`.\n\n## Remediation\n\nIf using a kubelet config file, edit the file to set `makeIPTablesUtilChains: true`. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and remove the `--make-iptables-util-chains` argument from the `KUBELET_SYSTEM_PODS_ARGS` variable. Based on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nKubelet would manage the `iptables` on the system and keep it in sync. If you are using any other `iptables` management solution, then there might be some conflicts.\n\n## Default value\n\nBy default, `--make-iptables-util-chains argument` is set to true.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/][1]\n\n## CIS controls\n\nVersion 6.9 Limitation and Control of Network Ports, Protocols, and Services\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.7","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"f3g-zcg-jm0","createdAt":1599605004390,"name":"--make-iptables-util-chains argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.2","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSELinux is an effective and easy-to-use Linux application security system. It is available by default on some distributions such as Red Hat and Fedora.\n\n## Rationale\n\nSELinux provides a Mandatory Access Control (MAC) system that greatly augments the default Discretionary Access Control (DAC) model. You can therefore add an extra layer of safety to your containers by enabling SELinux on your Linux host.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: SecurityOpt={{ .HostConfig.SecurityOpt }}'` \n\nThis command returns all the security options currently configured on the containers listed.\n\n## Remediation\n\nIf SELinux is applicable for your Linux OS, you should use it.\n\n1. Set the SELinux State.\n2. Set the SELinux Policy.\n3. Create or import a SELinux policy template for Docker containers.\n4. Start Docker in daemon mode with SELinux enabled. For example: `docker daemon --selinux-enabled`\n5. Start your Docker container using the security options. For example, `docker run --interactive --tty --security-opt label=level:TopSecret centos /bin/bash`\n\n## Impact\n\nAny restrictions defined in the SELinux policy will be applied to your containers. It should be noted that if your SELinux policy is misconfigured, this may have an impact on the correct operation of the affected containers.\n\n## Default value\n\nBy default, no SELinux security options are applied on containers.\n\n## References\n\n1. https://docs.docker.com/engine/security/security/#other-kernel-security-features\n2. https://docs.docker.com/engine/reference/run/#security-configuration\n3. http://docs.fedoraproject.org/en-US/Fedora/13/html/Security-Enhanced_Linux/\n4. https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux_atomic_host/7/html/container_security_guide/docker_selinux_security_policy\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.2","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"eww-c9f-0hf","createdAt":1599605036108,"name":"SELinux security options are set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.26","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIf the container image does not have an HEALTHCHECK instruction defined, you should use the `--health-cmd` parameter at container runtime to check container health.\n\n## Rationale\n\nIf the container image you are using does not have a pre-defined HEALTHCHECK instruction, use the `--health-cmd` parameter to check container health at runtime. Based on the reported health status, remedial actions can be taken if necessary.\n\n## Audit\n\nRun this command and ensure that all containers are reporting their health status: `docker ps --quiet | xargs docker inspect --format '{{ .Id }}: Health={{ .State.Health.Status }}'`\n\n## Remediation\n\nYou should run the container using the `--health-cmd` parameter. For example, `docker run -d --health-cmd='stat /etc/passwd || exit 1' nginx`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, health checks are not carried out at container runtime.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#healthcheck\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.26","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.26\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ojg-sb1-nso","createdAt":1599605067593,"name":"Container health is checked at runtime"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","control:2.5","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEtcd should be configured for peer authentication.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be accessible only by authenticated etcd peers in the etcd cluster.\n\n## Audit\n\nThis recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable.\n\nRun the following command on the etcd server node: \n```\nps -ef | grep etcd\n```\nVerify that the `--peer-client-cert-auth` argument is set to `true`.  \n\n## Remediation\n\nEdit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and set the below parameter:\n\n```\n--peer-client-cert-auth=true\n```\n\n## Impact\n\nAll peers attempting to communicate with the etcd server will require a valid client certificate for authentication.\n\n## Default value\n\n*Note*: This recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable. By default, `--peer-client-cert-auth` argument is set to false.\n\n## References\n\n1. https://coreos.com/etcd/docs/latest/op-guide/security.html \n2. https://kubernetes.io/docs/admin/etcd/ \n3. https://coreos.com/etcd/docs/latest/op-guide/configuration.html#peer-client-cert-auth\n\n## CIS controls\n\nVersion 6.14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities. \n\nVersion 7.14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.                \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/ \n[3]: https://coreos.com/etcd/docs/latest/op-guide/configuration.html#peer-client-cert-auth\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.5","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"l01-5y2-miz","createdAt":1599605099307,"name":"--peer-client-cert-auth argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","requirement:Container-Images-and-Build-File-Configuration","framework:cis-docker","control:4.1","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nContainers should run as a non-root user.\n\n## Rationale\n\nIt is good practice to run the container as a non-root user, where possible. This can be done either via the USER directive in the Dockerfile or through [gosu][1] or similar where used as part of the CMD or ENTRYPOINT directives.\n\n## Remediation\n\nEnsure that the Dockerfile for each container image contains `USER <username or ID>`\n\nIn this case, the user name or ID refers to the user that was found in the container base image. If there is no specific user created in the container base image, then make use of the `useradd` command to add a specific user before the USER instruction in the Dockerfile. \n\nFor example, add the below lines in the Dockerfile to create a user in the container:\n`RUN useradd -d /home/username -m -s /bin/bash username USER username`\n\n**Note**: If there are users in the image that are not needed, you should consider deleting them. After deleting those users, commit the image and then generate new instances of the containers. Alternatively, if it is not possible to set the USER directive in the Dockerfile, a script running as part of the CMD or ENTRYPOINT sections of the Dockerfile should be used to ensure that the container process switches to a non-root user.\n\n## Impact\n\nRunning as a non-root user can present challenges when binding mount volumes from the underlying host. In this case, ensure that the user running the contained process can read and write to the bound directory, according to their requirements.\n\n## Default value\n\nBy default, containers are run with root privileges and also run as the root user inside the container.\n\n## References\n\n1. https://github.com/docker/docker/issues/2918\n2. https://github.com/docker/docker/pull/4572\n3. https://github.com/docker/docker/issues/7906\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\n[1]: https://github.com/tianon/gosu\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"4.1","framework":"cis-docker","requirement":"Container-Images-and-Build-File-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-4.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"iml-sbn-bao","createdAt":1599605130883,"name":"A user for the container has been created"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Controller-Manager","control:1.3.6","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable kubelet server certificate rotation on controller-manager.\n\n## Rationale\n\n`RotateKubeletServerCertificate` causes the kubelet to both request a serving certificate after bootstrapping its client credentials and rotate the certificate as its existing credentials expire. This automated periodic rotation ensures that the there are no downtimes due to expired certificates and thus addressing availability in the CIA security triad. \n\n*Note*: This recommendation only applies if you let kubelets get their certificates from the API server. In case your kubelet certificates come from an outside authority/tool (e.g. Vault) then you need to take care of rotation yourself.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-controller-manager\n```\nVerify that `RotateKubeletServerCertificate` argument exists and is set to `true`.\n\n## Remediation\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and set the `--feature-gates` parameter to include `RotateKubeletServerCertificate=true`. \n\n```\n--feature-gates=RotateKubeletServerCe`rtificate=true\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `RotateKubeletServerCertificate` is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet-tls-bootstrapping/#approval-controller ][1]\n2. [https://github.com/kubernetes/features/issues/267 ][2]\n3. [https://github.com/kubernetes/kubernetes/pull/45059 ][3]\n4. [https://kubernetes.io/docs/admin/kube-controller-manager/][4]\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.               \n\n[1]: https://kubernetes.io/docs/admin/kubelet-tls-bootstrapping/#approval-controller \n[2]: https://github.com/kubernetes/features/issues/267 \n[3]: https://github.com/kubernetes/kubernetes/pull/45059 \n[4]: https://kubernetes.io/docs/admin/kube-controller-manager/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.3.6","framework":"cis-kubernetes","requirement":"Controller-Manager","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.3.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"asw-6hh-yc2","createdAt":1599605162809,"name":"RotateKubeletServerCertificate argument is set to true (Controller Manager)"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.2","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the kubelet service file ownership is set to root:root.\n\n## Rationale\n\nThe kubelet service file controls various parameters that set the behavior of the kubelet service in the worker node. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the each worker node. For example, `stat -c %U:%G /etc/systemd/system/kubelet.service.d/10-kubeadm.conf`. Verify that the ownership is set to root:root.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the each worker node.\n\nFor example, `chown root:root /etc/systemd/system/kubelet.service.d/10-kubeadm.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, kubelet service file ownership is set to root:root.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#44-joining-your-nodes ][2]\n3. [https://kubernetes.io/docs/admin/kubeadm/#kubelet-drop-in][3]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#44-joining-your-nodes\n[3]: https://kubernetes.io/docs/admin/kubeadm/#kubelet-drop-in\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.2","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"sy4-z1k-udc","createdAt":1599605194356,"name":"Kubelet service file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.8","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that all the registry certificate files, usually found under `/etc/docker/certs.d/<registry-name> directory`, have permissions of 444 or are set more restrictively.\n\n## Rationale\n\nThe `/etc/docker/certs.d/<registry-name>` directory contains Docker registry certificates. These certificate files must have permissions of 444or more restrictive permissions in order to ensure that unprivileged users do not have full access to them..\n\n## Audit\n\nYou should execute the command below to verify that registry certificate files have permissions of 444+.\n\n```\nstat -c %a /etc/docker/certs.d/<registry-name>/*\n```\n\n## Remediation\n\nRun the following command: `chmod 444 /etc/docker/certs.d/<registry-name>/*`\n\nThis sets the permissions for the registry certificate files to 444.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for registry certificate files might not be 444. The default file permissions are governed by the system or user specific umask values which are defined within the operating system itself.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.8","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.8\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"sjq-1m3-njp","createdAt":1599605226177,"name":"Registry certificate file permissions are set to 444 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","source:compliance-agent","control:1.2.9","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nTurn on Role Based Access Control.\n\n## Rationale\n\nRole Based Access Control (RBAC) allows fine-grained control over the operations that different entities can perform on different objects in the cluster. It is recommended to use the RBAC authorization mode.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--authorization-mode` argument exists and is set to a value to include RBAC.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--authorization-mode` parameter to a value that includes RBAC, for example: `--authorization-mode=Node,RBAC`\n\n## Impact\n\nWhen RBAC is enabled you will need to ensure that appropriate RBAC settings (including Roles, RoleBindings and ClusterRoleBindings) are configured to allow appropriate access.\n\n## Default value\n\nBy default, RBAC authorization is not enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/reference/access-authn-authz/rbac/][1]\n\n## CIS controls\n\nVersion 6.9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system. \n\nVersion 7.9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.                \n\n[1]: https://kubernetes.io/docs/reference/access-authn-authz/rbac/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.9","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"bn4-mzo-nyg","createdAt":1599605257601,"name":"--authorization-mode argument includes RBAC"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","source:compliance-agent","control:1.1.18","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the controller-manager.conf file ownership is set to `root:root`.\n\n## Rationale\n\nThe controller-manager.conf file is the kubeconfig file for the Controller Manager. You should set its file ownership to maintain the integrity of the file. The file should be owned by `root:root`.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %U:%G /etc/kubernetes/controller-manager.conf\n```\n\nVerify the ownership is set to `root:root`.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chown root:root /etc/kubernetes/controller-manager.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `controller-manager.conf` file ownership is set to `root:root`.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-controller-manager/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.18","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.18\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"bud-aya-umc","createdAt":1599605289575,"name":"controller-manager.conf file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","control:3.3","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the docker.socket file ownership and group ownership are correctly set to root.\n\n## Rationale\n\nThe docker.socket file contains sensitive parameters that may alter the behavior of the Docker remote API. For this reason, it should be owned and group owned by root in order to ensure that it is not modified by less privileged users.\n\n## Audit\n\n1. Locate the `docker.socket` file by running: \n    ```\n    systemctl show -p FragmentPath docker.socket\n    ```\n2. If the file does not exist, this recommendation is not applicable. If the file exists, verify that the file is owned and group-owned by root by running the following command with the correct filepath:\n    ```\n    stat -c %U:%G /usr/lib/systemd/system/docker.socket | grep -v root:root \n    ```\n    The command should not return a value.\n\n## Remediation\n\n1. Find out the file location: `systemctl show -p FragmentPath docker.socket`\n2. If the file does not exist, this recommendation is not applicable. If the file exists, execute the command below, including the correct file path to set the ownership and group ownership for the file to root. For example, `chown root:root /usr/lib/systemd/system/docker.socket`\n\n## Impact\n\nNone\n\n## Default value\n\nThis file may not be present on the system. In that case, this recommendation is not applicable. By default, if the file is present, the ownership and group ownership for it should be set to root.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option 2. https://github.com/docker/docker-ce/blob/master/components/packaging/deb/systemd/docker.socket\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.3","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vc0-12t-fpa","createdAt":1599605321060,"name":"docker.socket file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.11","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable kubelet client certificate rotation.\n\n## Rationale\n\nThe `--rotate-certificates` setting causes the kubelet to rotate its client certificates by creating new CSRs as its existing credentials expire. This automated periodic rotation ensures that the there is no downtime due to expired certificates and thus addressing availability in the CIA security triad.\n\n*Note*: This recommendation only applies if you let kubelets get their certificates from the API server. In case your kubelet certificates come from an outside authority/tool (e.g. Vault) then you need to take care of rotation yourself. \n\n*Note*: This feature also requires the `RotateKubeletClientCertificate` feature gate to be enabled (which is the default since Kubernetes v1.7).\n\n## Audit\n\nRun the following command on each node: `ps -ef | grep kubelet`. Verify that the `--rotate-certificates` argument is not present, or is set to true. If the `--rotate-certificates` argument is not present, verify that if there is a Kubelet config file specified by `--config`, that file does not contain `rotateCertificates: false`.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to add the line `rotateCertificates: true` or remove it altogether to use the default value. If using command line arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and remove the `--rotate-certificates=false` argument from the `KUBELET_CERTIFICATE_ARGS` variable. Based on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, kubelet client certificate rotation is enabled.\n\n## References\n\n1. [https://github.com/kubernetes/kubernetes/pull/41912 ][1]\n2. [https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-tls-bootstrapping/#kubelet-configuration ][2]\n3. [https://kubernetes.io/docs/imported/release/notes/ ][3]\n4. [https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/][4]\n\n## CIS controls\n\nVersion 6.14.2 Encrypt All Sensitive Information Over Less-trusted - Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted.\n\nVersion 7.14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n\n[1]: https://github.com/kubernetes/kubernetes/pull/41912\n[2]: https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-tls-bootstrapping/#kubelet-configuration\n[3]: https://kubernetes.io/docs/imported/release/notes/\n[4]: https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.11","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"9x3-sy5-pte","createdAt":1599605353070,"name":"--rotate-certificates argument is not set to false"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.1.13","requirement:Master-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `admin.conf` file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe admin.conf is the administrator kubeconfig file defining various settings for the administration of the cluster. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the following command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/admin.conf\n```\n\nVerify the permissions are `644` or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/admin.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, admin.conf has permissions of 640.\n\n## References\n\n1. https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.13","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.13\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"zlc-pqm-t1x","createdAt":1599605384539,"name":"admin.conf file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.9","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that if the kubelet refers to a configuration file with the `--config` argument, that file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe kubelet reads various parameters, including security settings, from a config file specified by the `--config` argument. If this file is specified you should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nLocate the Kubelet config file as follows: `ps -ef | grep kubelet | grep config`. If the `--config` argument is present, this gives the location of the Kubelet config file, for example `/var/lib/kubelet/config.yaml`. Run the following command (using the file location you just identified) to find that file's permissions: `stat -c %a /var/lib/kubelet/config.yaml`. Verify that the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the following command (using the config file location identified in the Audit step:\n\n```\nchmod 644 /var/lib/kubelet/config.yaml\n```\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the `/var/lib/kubelet/config.yaml` file as set up by kubeadm has permissions of 644.\n\n## References\n\n1. [https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.9","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tc4-kmy-wlt","createdAt":1599605416397,"name":"Kubelet configuration file has permissions set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.15","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nReject creating objects in a namespace that is undergoing termination.\n\n## Rationale\n\nSetting admission control policy to NamespaceLifecycle ensures that objects cannot be created in non-existent namespaces, and that namespaces undergoing termination are not used for creating the new objects. This is recommended to enforce the integrity of the namespace termination process and also for the availability of the newer objects.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--disable-admission-plugins` argument is set to a value that does not include `NamespaceLifecycle`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the --disable-admission-plugins parameter to ensure it does not include NamespaceLifecycle.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, NamespaceLifecycle is set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ 2. https://kubernetes.io/docs/admin/admission-controllers/#namespacelifecycle\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.15","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.15\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"elk-zj3-p6m","createdAt":1599605447784,"name":"Admission control plugin NamespaceLifecycle is set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:1.2.2","framework_version:1.5.1","scored:true","security:compliance","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use basic authentication.\n\n## Rationale\n\nBasic authentication uses plaintext credentials for authentication. Currently, the basic authentication credentials last indefinitely, and the password cannot be changed without restarting the API server. The basic authentication is currently supported for convenience. Hence, basic authentication should not be used.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--basic-auth-file` argument does not exist.\n\n## Remediation\n\nFollow the documentation and configure alternate mechanisms for authentication. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and remove the `--basic-auth-file=<filename>` parameter.\n\n## Impact\n\nYou will have to configure and use alternate authentication mechanisms such as tokens and certificates. Username and password for basic authentication could no longer be used.\n\n## Default value\n\nBy default, basic authentication is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n2. https://kubernetes.io/docs/admin/authentication/#static-password-file\n\n## CIS controls\n\nVersion 6\n\n16.14 Encrypt/Hash All Authentication Files And Monitor Their Access - Verify that all authentication files are encrypted or hashed and that these files cannot be accessed without root or administrator privileges. Audit all access to password files in the system.\n\nVersion 7\n\n16.4 Encrypt or Hash all Authentication Credentials - Encrypt or hash with a salt all authentication credentials when stored.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.2","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oug-uvq-sti","createdAt":1599605479472,"name":"--basic-auth-file argument is not set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:5.9","framework:cis-docker","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nWhen the networking mode on a container is set to `--net=host`, the container is not placed inside a separate network stack. Effectively, applying this option instructs Docker to not containerize the container's networking. The consequence of this is that the container lives \"outside\" in the main Docker host and has full access to its network interfaces.\n\n## Rationale\n\nSelecting this option is potentially dangerous. It allows the container process to open reserved low numbered ports in the way that any other root process can. It also allows the container to access network services such as D-bus on the Docker host. A container process could potentially carry out undesired actions, such as shutting down the Docker host. This option should not be used unless there is a very specific reason for enabling it.\n\n## Audit\n\nUse this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: NetworkMode={{ .HostConfig.NetworkMode }}'` If this returns `NetworkMode=host`, it means that the `--net=host` option was passed when the container was started.\n\n## Remediation\n\nYou should not pass the --net=host option when starting any container.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, containers connect to the Docker bridge when starting and do not run in the context of the host's network stack.\n\n## References\n\n1. https://docs.docker.com/engine/userguide/networking/ 2. https://docs.docker.com/engine/reference/run/#network-settings\n\n## CIS controls\n\nVersion 6 12 Boundary Defense Boundary Defense\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.9","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"1qj-oqa-jau","createdAt":1599605510860,"name":"Host's network namespace is not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.24","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nRetain 10 or an appropriate number of old log files.\n\n## Rationale\n\nKubernetes automatically rotates the log files. Retaining old log files ensures that you would have sufficient log data available for carrying out any investigation or correlation. For example, if you have set file size of 100 MB and the number of old log files to keep as 10, you would approximate have 1 GB of log data that you could potentially use for your analysis.\n\n## Audit\n\nRun the following command on the master node:\n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-log-maxbackup` argument is set to `10` or as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--audit-log-maxbackup` parameter to `10` or to an appropriate value: `--audit-log-maxbackup=10`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, auditing is not enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://kubernetes.io/docs/concepts/cluster-administration/audit/ \n3. https://github.com/kubernetes/features/issues/22\n\n## CIS controls\n\nVersion 6 6.3 Ensure Audit Logging Systems Are Not Subject To Loss (i.e. rotation/archive) Ensure that all systems that store logs have adequate storage space for the logs generated on a regular basis, so that log files will not fill up between log rotation intervals. The logs must be archived and digitally signed on a periodic basis. Version 7 6.4 Ensure adequate storage for logs Ensure that all systems that store logs have adequate storage space for the logs generated.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.24","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.24\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"r0g-aai-2xf","createdAt":1599605542630,"name":"--audit-log-maxbackup argument is set to 10 or as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.15","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker socket file is owned by root and group owned by docker.\n\n## Rationale\n\nThe Docker daemon runs as root. The default Unix socket therefore must be owned by root. If any other user or process owns this socket, it might be possible for that non-privileged user or process to interact with the Docker daemon. Additionally, in this case a non-privileged user or process might be able to interact with containers which is neither a secure nor desired behavior. Additionally, the Docker installer creates a Unix group called docker. You can add users to this group, and in this case, those users would be able to read and write to the default Docker Unix socket. The membership of the docker group is tightly controlled by the system administrator. However, ff any other group owns this socket, then it might be possible for members of that group to interact with the Docker daemon. Such a group might not be as tightly controlled as the docker group. Again, this is not in line with good security practice. For these reason, the default Docker Unix socket file should be owned by root and group owned by docker to maintain the integrity of the socket file.\n\n## Audit\n\nVerify that the Docker socket file is owned by root and group-owned by `docker` by running: \n```\nstat -c %U:%G /var/run/docker.sock | grep -v root:docker\n```\nThe command should return no results.\n\n## Remediation\n\nRun the following command: `chown root:docker /var/run/docker.sock`\n\nThis sets the ownership to root and group ownership to docker for the default Docker socket file.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the ownership and group ownership for the Docker socket file is correctly set to root:docker.\n\n## References\n\n1. https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option\n2. https://docs.docker.com/engine/reference/commandline/dockerd/#bind-docker-to-another-hostport-or-a-unix-socket\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.15","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":11,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.15\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ysh-lkt-poz","createdAt":1599605574088,"name":"Docker socket file ownership is set to root:docker"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Master-Node-Configuration-Files","control:1.1.7","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that the `/etc/kubernetes/manifests/etcd.yaml` file has permissions of 644 or more restrictive.\n\n## Rationale\n\nThe etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` controls various parameters that set the behavior of the etcd service in the master node. etcd is a highly-available key-value store which Kubernetes uses for persistent storage of all of its REST API object. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system.\n\n## Audit\n\nRun the below command (based on the file location on your system) on the master node.\n\n```bash\nstat -c %a /etc/kubernetes/manifests/etcd.yaml\n```\n\nVerify the permissions are 644 or more restrictive.\n\n## Remediation\n\nRun the below command (based on the file location on your system) on the master node. For example, `chmod 644 /etc/kubernetes/manifests/etcd.yaml`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `/etc/kubernetes/manifests/etcd.yaml` file has permissions of 640.\n\n## References\n\n1. https://coreos.com/etcd\n2. https://kubernetes.io/docs/admin/etcd/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7\n\n5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.1.7","framework":"cis-kubernetes","requirement":"Master-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.1.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"vqc-dps-6tp","createdAt":1599605605880,"name":"etcd pod specification file permissions are set to 644 or more restrictive"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.11","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `/usr/bin/containerd`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `/usr/bin/containerd`, so it should be audited.\n\n## Audit\n\nVerify that there is an audit rule corresponding to the `/usr/bin/containerd` file. To display the rule for the `/usr/bin/containerd` file, run: \n\n```\nauditctl -l | grep /usr/bin/containerd\n```\n\n## Remediation\n\nYou should add a rule for the `/usr/bin/containerd` file. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /usr/bin/containerd -k docker \n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `/usr/bin/containerd` may not be present on the system and in that case, this recommendation is not applicable.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n2. [https://github.com/docker/docker/pull/20662][2]\n3. [https://containerd.tools/][3]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html \n[2]: https://github.com/docker/docker/pull/20662 \n[3]: https://containerd.tools/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.11","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tor-6yx-oyz","createdAt":1599605637503,"name":"/usr/bin/containerd auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.32","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\netcd should be configured to make use of TLS encryption for client connections.\n\n## Rationale\n\netcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be protected by client authentication. This requires the API server to identify itself to the etcd server using a SSL Certificate Authority file.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--etcd-cafile` argument exists and it is set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection between the apiserver and etcd. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the etcd certificate authority file parameter: `--etcd-cafile=<path/to/ca-file>`\n\n## Impact\n\nTLS and client certificate authentication must be configured for etcd.\n\n## Default value\n\nBy default, `--etcd-cafile` is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://coreos.com/etcd/docs/latest/op-guide/security.html\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks - All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. \n\nVersion 7 14.4 Encrypt All Sensitive Information in Transit - Encrypt all sensitive information in transit.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.32","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.32\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"o8k-9hv-rri","createdAt":1599605669411,"name":"--etcd-cafile argument is set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.23","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nRetain the logs for at least 30 days or as appropriate.\n\n## Rationale\n\nRetaining logs for at least 30 days ensures that you can go back in time and investigate or correlate any events. Set your audit log retention period to 30 days or as per your business requirements.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--audit-log-maxage` argument is set to `30` or as appropriate.\n\n## Remediation\n\nEdit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the `--audit-log-maxage` parameter to `30` or as an appropriate number of days: `--audit-log-maxage=30`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, auditing is not enabled.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://kubernetes.io/docs/concepts/cluster-administration/audit/ \n3. https://github.com/kubernetes/features/issues/22\n\n## CIS controls\n\nVersion 6 6.3 Ensure Audit Logging Systems Are Not Subject To Loss (i.e. rotation/archive) Ensure that all systems that store logs have adequate storage space for the logs generated on a regular basis, so that log files will not fill up between log rotation intervals. The logs must be archived and digitally signed on a periodic basis. Version 7 6.4 Ensure adequate storage for logs Ensure that all systems that store logs have adequate storage space for the logs generated.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.23","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.23\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"jbu-o8v-pku","createdAt":1599605700813,"name":"--audit-log-maxage argument is set to 30 or as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.5","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable certificate based kubelet authentication.\n\n## Rationale\n\nThe apiserver, by default, does not authenticate itself to the kubelet's HTTPS endpoints. The requests from the apiserver are treated anonymously. You should set up certificate-based kubelet authentication to ensure that the apiserver authenticates itself to kubelets when submitting requests.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--kubelet-client-certificate` and `--kubelet-client-key` arguments exist and they are set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection between the apiserver and kubelets. Then, edit API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the kubelet client certificate and key parameters as below. \n\n```\n--kubelet-client-certificate=<path/to/client-certificate-file> \n--kubelet-client-key=<path/to/client-key-file>\n```\n\n## Impact\n\nYou require TLS to be configured on apiserver as well as kubelets.\n\n## Default value\n\nBy default, certificate-based kubelet authentication is not set.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kube-apiserver/ ][1]\n2. [https://kubernetes.io/docs/admin/kubelet-authentication-authorization/ ][2]\n3. [https://kubernetes.io/docs/concepts/cluster-administration/master-node-communication/#apiserver---kubelet][3]\n\n## CIS controls\n\nVersion 6.3.4 Use Only Secure Channels For Remote System Administration - Perform all remote administration of servers, workstation, network devices, and similar equipment over secure channels. Protocols such as telnet, VNC, RDP, or others that do not actively support strong encryption should only be used if they are performed over a secondary encryption channel, such as SSL, TLS or IPSEC. \n\nVersion 7.4.5 Use Multifactor Authentication For All Administrative Access - Use multi-factor authentication and encrypted channels for all administrative account access. \n\n[1]: https://kubernetes.io/docs/admin/kube-apiserver/ \n[2]: https://kubernetes.io/docs/admin/kubelet-authentication-authorization/ \n[3]: https://kubernetes.io/docs/concepts/cluster-administration/master-node-communication/#apiserver---kubelet\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.5","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ruj-lze-13b","createdAt":1599605732980,"name":"--kubelet-client-certificate and --kubelet-client-key arguments are set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","control:1.2.6","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit the `docker.service` if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit all Docker related files and directories. The Docker daemon runs with root privileges and its behavior depends on some key files and directories, including `docker.service`. The `docker.service` file might be present if the daemon parameters have been changed by an administrator. If so, it holds various parameters for the Docker daemon and should be audited.\n\n## Audit\n\n1. Locate the `docker.service` file by running: \n    ```\n    systemctl show -p FragmentPath docker.service\n    ```\n\n2. If the file does not exist, this recommendation does not apply. If the file does exist, verify that there is an audit rule corresponding to the `docker.service` file by running: \n\n    ```\n    auditctl -l | grep docker.service\n    ```\n\n## Remediation\n\nIf the file exists, a rule for it should be added. For example, add the following line to the `/etc/audit/audit.rules` file: \n```\n-w /usr/lib/systemd/system/docker.service -k docker \n```\n\nThen restart the audit daemon: \n\n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `docker.service` may not be present on the system.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.6","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"myy-dsj-omk","createdAt":1599605764788,"name":"docker.service auditing is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","source:compliance-agent","control:1.2.19","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not bind to insecure port.\n\n## Rationale\n\nSetting up the apiserver to serve on an insecure port would allow unauthenticated and unencrypted access to your master node. This would allow attackers who could access this port, to easily take control of the cluster.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--insecure-port` argument is set to `0`.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the below parameter. --insecure-port=0\n\n## Impact\n\nAll components that use the API must connect via the secured port, authenticate themselves, and be authorized to use the API. This includes: kube-controller-manager kube-proxy kube-scheduler kubelets\n\n## Default value\n\nBy default, the insecure port is set to 8080.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6 9.1 Limit Open Ports, Protocols, and Services Ensure that only ports, protocols, and services with validated business needs are running on each system. Version 7 9.2 Ensure Only Approved Ports, Protocols and Services Are Running Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.19","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.19\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"2ci-yqv-wv0","createdAt":1599605796539,"name":"--insecure-port argument is set to 0"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.1.10","requirement:Worker-Node-Configuration-Files","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnsure that if the kubelet refers to a configuration file with the `--config` argument, that file is owned by root:root.\n\n## Rationale\n\nThe kubelet reads various parameters, including security settings, from a config file specified by the `--config` argument. If this file is specified you should restrict its file permissions to maintain the integrity of the file. The file should be owned by root:root.\n\n## Audit\n\nLocate the Kubelet config file as follows: `ps -ef | grep kubelet | grep config`. If the `--config` argument is present, this gives the location of the Kubelet config file, for example `/var/lib/kubelet/config.yaml`. Run the following command (using the file location you just identified) to find that file's permissions: `stat -c %U:%G /var/lib/kubelet/config.yaml`. Verify that the ownership is set to `root:root`.\n\n## Remediation\n\nRun the following command (using the config file location identified in the Audit step): `chown root:root /etc/kubernetes/kubelet.conf`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, `/var/lib/kubelet/config.yaml` file as set up by kubeadm is owned by `root:root`.\n\n## References\n\n1. [https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/][1]\n\n## CIS controls\n\nVersion 6.5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n\nVersion 7.5.2 Maintain Secure Images - Maintain secure images or templates for all systems in the enterprise based on the organization's approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.\n\n[1]: https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.1.10","framework":"cis-kubernetes","requirement":"Worker-Node-Configuration-Files","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.1.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ptl-pla-t0c","createdAt":1599605828233,"name":"Kubelet configuration file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.10","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy default, all containers on a Docker host share resources equally. By using the resource management capabilities of the Docker host, you can control the amount of memory that a container is able to use.\n\n## Rationale\n\nBy default a container can use all of the memory on the host. You can use memory limit mechanisms to prevent a denial of service occurring where one container consumes all of the hosts resources and other containers on the same host are therefore not able to function. Having no limit on memory usage can lead to issues where one container can easily make the whole system unstable and as a result unusable.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Memory={{ .HostConfig.Memory }}'` \n\nIf this command returns 0, it means that memory limits are not in place; if it returns a non-zero value, it means that they are in place.\n\n## Remediation\n\nYou should run the container with only as much memory as it requires by using the `--memory argument`. For example, you could run a container using the command `docker run --interactive --tty --memory 256m centos /bin/bash`\n\nIn this example, the container is started with a memory limit of 256 MB. Note that the output of the command below returns values in scientific notation if memory limits are in place. `docker inspect --format='{{.Config.Memory}}' 7c5a2d4c7fe0`\n\nFor example, if the memory limit is set to 256 MB for a container instance, the output of the command above would be `2.68435456e+08` and NOT `256m`. You should convert this value using a scientific calculator.\n\n## Impact\n\nIf correct memory limits are not set on each container, one process can expand its usage and cause other containers to run out of resources.\n\n## Default value\n\nBy default, all containers on a Docker host share their resources equally and no memory limits are enforced.\n\n## References\n\n1. https://goldmann.pl/blog/2014/09/11/resource-management-in-docker/\n2. https://docs.docker.com/engine/reference/commandline/run/#options\n3. https://docs.docker.com/engine/admin/runmetrics/\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.10","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"ecn-mmt-tqe","createdAt":1599605860081,"name":"Memory usage for containers is limited"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","source:compliance-agent","control:2.2","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nEnable client authentication on etcd service.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should not be available to unauthenticated clients. You should enable the client authentication via valid certificates to secure the access to the etcd service.\n\n## Audit\n\nRun the following command on the etcd server node:\n```\nps -ef | grep etcd\n```\nVerify that the `--client-cert-auth` argument is set to `true`.\n\n## Remediation\n\nEdit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and set the below parameter:\n\n```\n--client-cert-auth=\"true\"\n```\n\n## Impact\n\nAll clients attempting to access the etcd server will require a valid client certificate.\n\n## Default value\n\nBy default, the etcd service can be queried by unauthenticated clients.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][`]\n2. [https://kubernetes.io/docs/admin/etcd/ ][1]\n3. [https://coreos.com/etcd/docs/latest/op-guide/configuration.html#client-cert-auth][2]\n\n## CIS controls\n\nVersion 6 14 Controlled Access Based on the Need to Know Controlled Access Based on the Need to Know Version 7 4 Controlled Use of Administrative Privileges Controlled Use of Administrative Privileges                \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/ \n[3]: https://coreos.com/etcd/docs/latest/op-guide/configuration.html#client-cert-auth\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.2","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"joa-fjx-1li","createdAt":1599605891818,"name":"--client-cert-auth argument is set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.3","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy default, Docker starts containers with a restricted set of Linux kernel capabilities. This means that any process can be granted the required capabilities instead of giving it root access. Using Linux kernel capabilities, processes in general do not need to run as the root user.\n\n## Rationale\n\nDocker supports the addition and removal of capabilities. Remove all capabilities not required for the correct function of the container. Specifically, in the default capability set provided by Docker, the NET_RAW capability should be removed if not explicitly required, as it can give an attacker with access to a container the ability to create spoofed network traffic.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CapAdd={{ .HostConfig.CapAdd }} CapDrop={{ .HostConfig.CapDrop }}'` \n\nVerify that the added and deleted Linux kernel capabilities are in line with the ones needed by the container process in each container instance. Specifically, ensure that the `NET_RAW` capability is removed if not required.\n\n## Remediation\n\nExecute the command `docker run --cap-add={\"Capability 1\",\"Capability 2\"} <Run arguments> <Container Image Name or ID> <Command>` to add required capabilities.\n\nExecute the command `docker run --cap-drop={\"Capability 1\",\"Capability 2\"} <Run arguments> <Container Image Name or ID> <Command>` to remove unneeded capabilities.\n\nAlternatively, remove all the currently configured capabilities and then restore only the ones you specifically use: `docker run --cap-drop=all --cap-add={\"Capability 1\",\"Capability 2\"} <Run arguments> <Container Image Name or ID> <Command>`\n\n## Impact\n\nRestrictions on processes within a container are based on which Linux capabilities are in force. Removal of the `NET_RAW` capability prevents the container from creating raw sockets which is good security practice under most circumstances, but may affect some networking utilities.\n\n## Default value\n\nBy default, the capabilities below are applied to containers:\n\n* `AUDIT_WRITE`\n* `CHOWN`\n* `DAC_OVERRIDE`\n* `FOWNER`\n* `FSETID`\n* `KILL`\n* `MKNOD`\n* `NET_BIND_SERVICE`\n* `NET_RAW`\n* `SETFCAP`\n* `SETGID`\n* `SETPCAP`\n* `SETUID`\n* `SYS_CHROOT`\n\n## References\n\n1. https://docs.docker.com/engine/security/security/#linux-kernel-capabilities\n2. http://man7.org/linux/man-pages/man7/capabilities.7.html\n3. http://www.oreilly.com/webops-perf/free/files/docker-security.pdf\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.3","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"3j5-bun-deq","createdAt":1599605923399,"name":"Linux kernel capabilities are restricted within containers"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.11","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nBy default, all containers on a Docker host share resources equally. By using the resource management capabilities of the Docker host you can control the host CPU resources that a container may consume.\n\n## Rationale\n\nBy default, CPU time is divided between containers equally. If you wish to control available CPU resources amongst container instances, you can use the CPU sharing feature. CPU sharing allows you to prioritize one container over others and prevents lower priority containers from absorbing CPU resources which may be required by other processes. This ensures that high priority containers are able to claim the CPU runtime they require.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CpuShares={{ .HostConfig.CpuShares }}'` \n\nIf this command returns 0 or 1024, it means that CPU shares are not in place. If it returns a non-zero value other than 1024, it means that they are in place.\n\n## Remediation\n\nYou should manage the CPU runtime between your containers dependent on their priority within your organization. To do so, start the container using the `--cpu-shares` argument. For example, you could run a container as `docker run --interactive --tty --cpu-shares 512 centos /bin/bash` The container is started with CPU shares of 50% of what other containers use. So if the other container has CPU shares of 80%, this container will have CPU shares of 40%. Every new container will have 1024 shares of CPU by default. However, this value is shown as 0 if you run the command mentioned in the audit section.\n\n\nAlternatively:\n\n1. Navigate to the `/sys/fs/cgroup/cpu/system.slice/` directory.\n2. Check your container instance ID using docker ps.\n3. Inside the above directory (in step 1), call a directory. For example: `docker-<Instance ID>.scope` or `docker-4acae729e8659c6be696ee35b2237cc1fe4edd2672e9186434c5116e1a6fbed6.scope`. Navigate to this directory.\n4. You will find a file named `cpu.shares`. Execute `cat cpu.shares`. This will always give you the CPU share value based on the system. Even if there are no CPU shares configured using the `-c` or `--cpu-shares` argument in the docker run command, this file will have a value of 1024. If you set one containers CPU shares to 512 it will receive half of the CPU time compared to the other containers. So if you take 1024 as 100% you can then derive the number that you should set for respective CPU shares. For example, use 512 if you want to set it to 50% and 256 if you want to set it 25%.\n\n## Impact\n\nIf you do not correctly assign CPU thresholds, the container process may run out of resources and become unresponsive. If CPU resources on the host are not constrained, CPU shares do not place any restrictions on individual resources.\n\n## Default value\n\nBy default, all containers on a Docker host share their resources equally. No CPU shares are enforced.\n\n## References\n\n1. https://goldmann.pl/blog/2014/09/11/resource-management-in-docker/\n2. https://docs.docker.com/engine/reference/commandline/run/#options\n3. https://docs.docker.com/engine/admin/runmetrics/\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.11","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"gfh-gqy-log","createdAt":1599605955638,"name":"CPU priority is set appropriately on containers"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:5.20","framework_version:1.2.0","requirement:Container-Runtime-Configuration","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUTS namespaces provide isolation between two system identifiers: the hostname and the NIS domain name. It is used to set the hostname and the domain which are visible to running processes in that namespace. Processes running within containers do not typically require to know either the hostname or the domain name. The UTS namespace should therefore not be shared with the host.\n\n## Rationale\n\nSharing the UTS namespace with the host provides full permission for each container to change the hostname of the host. This is not in line with good security practice and should not be permitted.\n\n## Audit\n\nRun this command: `docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: UTSMode={{ .HostConfig.UTSMode }}'` \n\nIf this command returns `host`, it means the host UTS namespace is shared with the container and this recommendation is non-compliant. If the above command returns nothing, then the host's UTS namespace is not shared. This recommendation is then compliant.\n\n## Remediation\n\nYou should not start a container with the `--uts=host` argument. For example, do not start a container using the command `docker run --rm --interactive --tty --uts=host rhel7.2`\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, all containers have the UTS namespace enabled and the host UTS namespace is not shared with any containers.\n\n## References\n\n1. https://docs.docker.com/engine/reference/run/#uts-settings-uts\n2. http://man7.org/linux/man-pages/man7/namespaces.7.html\n\n## CIS controls\n\nVersion 6\n\n18 Application Software Security Application Software Security\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_container","complianceFrameworks":[{"control":"5.20","framework":"cis-docker","requirement":"Container-Runtime-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":12,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-5.20\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"j1n-gsx-mlx","createdAt":1599605987292,"name":"Host's UTS namespace is not shared"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","requirement:etcd","security:compliance","control:2.3","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not use self-signed certificates for TLS.\n\n## Rationale\n\nEtcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should not be available to unauthenticated clients. You should enable the client authentication via valid certificates to secure the access to the etcd service.\n\n## Audit\n\nRun the following command on the etcd server node: \n```\nps -ef | grep etcd\n```\nVerify that if the `--auto-tls` argument exists, it is not set to `true`.\n\n## Remediation\n\nEdit the etcd pod specification file `/etc/kubernetes/manifests/etcd.yaml` on the master node and either remove the `--auto-tls` parameter or set it to false:\n\n```\n--auto-tls=false\n```\n\n## Impact\n\nClients will not be able to use self-signed certificates for TLS.\n\n## Default value\n\nBy default, `--auto-tls` is set to false.\n\n## References\n\n1. [https://coreos.com/etcd/docs/latest/op-guide/security.html ][1]\n2. [https://kubernetes.io/docs/admin/etcd/ ][2]\n3. [https://coreos.com/etcd/docs/latest/op-guide/configuration.html#auto-tls][3]\n\n## CIS controls\n\nVersion 6 14.2 Encrypt All Sensitive Information Over Less-trusted Networks All communication of sensitive information over less-trusted networks should be encrypted. Whenever information flows over a network with a lower trust level, the information should be encrypted. Version 7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.                \n\n[1]: https://coreos.com/etcd/docs/latest/op-guide/security.html \n[2]: https://kubernetes.io/docs/admin/etcd/ \n[3]: https://coreos.com/etcd/docs/latest/op-guide/configuration.html#auto-tls\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"2.3","framework":"cis-kubernetes","requirement":"etcd","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-2.3\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"qai-h9s-xgt","createdAt":1599606018741,"name":"--auto-tls argument is not set to true"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:4.2.1","source:compliance-agent","framework:cis-kubernetes","requirement:Kubelet"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDisable anonymous requests to the Kubelet server.\n\n## Rationale\n\nWhen enabled, requests that are not rejected by other configured authentication methods are treated as anonymous requests. These requests are then served by the Kubelet server. You should rely on authentication to authorize access and disallow anonymous requests.\n\n## Audit\n\nIf using a Kubelet configuration file, check that there is an entry for authentication: anonymous: enabled set to false. Run the following command on each node: `ps -ef | grep kubelet`. Verify that the `--anonymous-auth` argument is set to false. This executable argument may be omitted, provided there is a corresponding entry set to false in the Kubelet config file.\n\n## Remediation\n\nIf using a Kubelet config file, edit the file to set `authentication: anonymous: enabled` to false. If using executable arguments, edit the kubelet service file `/etc/systemd/system/kubelet.service.d/10-kubeadm.conf` on each worker node and set the below parameter in `KUBELET_SYSTEM_PODS_ARGS` variable:\n\n```\n--anonymous-auth=false\n```\n\nBased on your system, restart the kubelet service. For example: `systemctl daemon-reload systemctl restart kubelet.service`\n\n## Impact\n\nAnonymous requests will be rejected.\n\n## Default value\n\nBy default, anonymous access is enabled.\n\n## References\n\n1. [https://kubernetes.io/docs/admin/kubelet/ ][1]\n2. [https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authentication][2]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know\n\nVersion 7.14 Controlled Access Based on the Need to Know\n\n[1]: https://kubernetes.io/docs/admin/kubelet/\n[2]: https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authentication\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_worker_node","complianceFrameworks":[{"control":"4.2.1","framework":"cis-kubernetes","requirement":"Kubelet","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-4.2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oun-uxo-viy","createdAt":1599606050277,"name":"Anonymous-auth argument is set to false"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.18","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nDo not bind the insecure API service.\n\n## Rationale\n\nIf you bind the apiserver to an insecure address, basically anyone who could connect to it over the insecure port, would have unauthenticated and unencrypted access to your master node. The apiserver doesn't do any authentication checking for insecure binds and traffic to the Insecure API port is not encrpyted, allowing attackers to potentially read sensitive data in transit.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--insecure-bind-address` argument does not exist.\n\n## Remediation\n\nEdit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and remove the --insecure-bind-address parameter.\n\n## Impact\n\nConnections to the API server will require valid authentication credentials.\n\n## Default value\n\nBy default, the insecure bind address is not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/\n\n## CIS controls\n\nVersion 6 9.1 Limit Open Ports, Protocols, and Services Ensure that only ports, protocols, and services with validated business needs are running on each system. Version 7 9.2 Ensure Only Approved Ports, Protocols and Services Are Running Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.18","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":8,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.18\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tzo-x3g-yya","createdAt":1599606081666,"name":"--insecure-bind-address argument is not set"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","control:1.2.29","source:compliance-agent","framework:cis-kubernetes","requirement:API-Server"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\netcd should be configured to make use of TLS encryption for client connections.\n\n## Rationale\n\netcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and should be protected by client authentication. This requires the API server to identify itself to the etcd server using a client certificate and key.\n\n## Audit\n\nRun the following command on the master node: \n```\nps -ef | grep kube-apiserver\n```\nVerify that the `--etcd-certfile` and `--etcd-keyfile` arguments exist and they are set as appropriate.\n\n## Remediation\n\nFollow the Kubernetes documentation and set up the TLS connection between the apiserver and etcd. Then, edit the API server pod specification file `/etc/kubernetes/manifests/kube-apiserver.yaml` on the master node and set the etcd certificate and key file parameters. \n```\n--etcd-certfile=<path/to/client-certificate-file> \n--etcd-keyfile=<path/to/client-key-file>\n```\n\n## Impact\n\nTLS and client certificate authentication must be configured for etcd.\n\n## Default value\n\nBy default, `--etcd-certfile` and `--etcd-keyfile` arguments are not set.\n\n## References\n\n1. https://kubernetes.io/docs/admin/kube-apiserver/ \n2. https://coreos.com/etcd/docs/latest/op-guide/security.html\n\n## CIS controls\n\nVersion 6 9 Limitation and Control of Network Ports, Protocols, and Services\nVersion 7 9 Limitation and Control of Network Ports, Protocols, and Services\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_master_node","complianceFrameworks":[{"control":"1.2.29","framework":"cis-kubernetes","requirement":"API-Server","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-1.2.29\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"high","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"2xl-vuo-tud","createdAt":1599606113167,"name":"--etcd-certfile and --etcd-keyfile arguments are set as appropriate"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.9","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the TLS CA certificate file, the file that is passed along with the `--tlscacert parameter`, is individually owned and group owned by root.\n\n## Rationale\n\nThe TLS CA certificate file should be protected from any tampering. It is used to authenticate the Docker server based on a given CA certificate. It must be therefore be individually owned and group owned by root to ensure that it cannot be modified by less privileged users.\n\n## Audit\n\nYou should execute the command below to verify that the TLS CA certificate file is owned and group owned by root: \n\n```\nstat -c %U:%G <path to TLS CA certificate file> | grep -v root:root\n```\n\nThis command does not return any data.\n\n## Remediation\n\nRun the following command: `chown root:root <path to TLS CA certificate file>`\n\nThis sets the individual ownership and group ownership for the TLS CA certificate file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the ownership and group-ownership for TLS CA certificate file is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.9","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.9\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"8nb-ex2-pqe","createdAt":1602076303298,"name":"TLS CA certificate file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","source:compliance-agent","control:2.2"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nSet Docker daemon log level to `info`.\n\n## Rationale\n\nSetting up an appropriate log level configures the Docker daemon to log events that you would want to review later. A base log level of `info` and above captures all logs except `debug` logs. Unless required, you should not run Docker daemon at `debug` log level.\n\n## Audit\n\nTo confirm that the log level setting is `info`, review both the `dockerd` startup options, and also the log level settings in `/etc/docker/daemon.json`. To review the `dockerd` startup options, run: \n```\nps -ef | grep dockerd \n```\nEnsure that either the `--log-level` parameter is not present or if present, that it is set to `info`. \n\nSimilarly, review the `/etc/docker/daemon.json` for the `log-level` setting.\n\n## Remediation\n\nEnsure that the Docker daemon configuration file has the following configuration included:\n\n```\n\"log-level\": \"info\" \n```\n\nAlternatively, run the Docker daemon with the `log-level` specified:\n\n```\ndockerd --log-level=\"info\"\n```\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, Docker daemon is set to log level of `info`.\n\n## References\n\n1. [https://docs.docker.com/edge/engine/reference/commandline/dockerd/][1]\n\n## CIS controls\n\nVersion 6.6.2 Ensure Audit Log Settings Support Appropriate Log Entry Formatting - Validate audit log settings for each hardware device and the software installed on it, ensuring that logs include a date, timestamp, source addresses, destination addresses, and various other useful elements of each packet and/or transaction. Systems should record logs in a standardized format such as syslog entries or those outlined by the Common Event Expression initiative. If systems cannot generate logs in a standardized format, log normalization tools can be deployed to convert logs into such a format. \n\nVersion 7.6.2 Activate audit logging - Ensure that local logging has been enabled on all systems and networking devices. \n\nVersion 6.3 Enable Detailed Logging - Enable system logging to include detailed information such as an event source, date, user, timestamp, source addresses, destination addresses, and other useful elements.                \n\n[1]: https://docs.docker.com/edge/engine/reference/commandline/dockerd/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.2","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"q6o-wrf-hf4","createdAt":1602076723155,"name":"Logging level is set to 'info'"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:3.10","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the TLS CA certificate file, the file that is passed along with the `--tlscacert` parameter, has permissions of 444 or is set more restrictively.\n\n## Rationale\n\nThe TLS CA certificate file should be protected from any tampering. It is used to authenticate the Docker server based on a given CA certificate. It must therefore have permissions of 444, or more restrictive permissions to ensure that the file cannot be modified by a less privileged user.\n\n## Audit\n\nVerify that the TLS CA certificate file has permissions of `444` or more restrictive, by running: \n```\nstat -c %a <path to TLS CA certificate file>\n```\n\n## Remediation\n\nRun the following command: `chmod 444 <path to TLS CA certificate file>`\n\nThis sets the file permissions on the TLS CA file to 444.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for the TLS CA certificate file might not be 444. The default file permissions are governed by the operating system or user specific umask values.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.10","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.10\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"hyd-ar9-kzl","createdAt":1602076723625,"name":"TLS CA certificate file permissions are set to 444 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.12","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker server certificate file, the file that is passed along with the `--tlscert` parameter, has permissions of 444 or more restrictive permissions.\n\n## Rationale\n\nThe Docker server certificate file should be protected from any tampering. It is used to authenticate the Docker server based on the given server certificate. It should therefore have permissions of 444 to prevent its modification.\n\n## Audit\n\nVerify that the Docker server certificate file has permissions of `444` or more restrictive, by running: \n```\nstat -c %a <path to Docker server certificate file>\n```\n\n## Remediation\n\nRun the command below: `chmod 444 <path to Docker server certificate file>`\n\nThis sets the file permissions of the Docker server certificate file to 444.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for the Docker server certificate file might not be 444. The default file permissions are governed by the operating system or user specific umask values.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists - All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists - Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.12","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.12\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"blu-k6b-re1","createdAt":1602076770300,"name":"Docker server certificate file permissions are set to 444 or more restrictively"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:1.2.1","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAll Docker containers and their data and metadata are stored in the `/var/lib/docker` directory. By default, `/var/lib/docker` should be mounted under either the `/` or `/var` partitions depending on how the Linux operating system in use is configured.\n\n## Rationale\n\nDocker depends on `/var/lib/docker` as the default directory where all Docker related files, including the images, are stored. This directory could fill up quickly causing both Docker and the host to become unusable. For this reason, you should create a separate partition (logical volume) for storing Docker files.\n\n## Audit\n\nTo see the partition details for the `/var/lib/docker` mount point, at the Docker host run:\n\n```\ngrep '/var/lib/docker\\s' /proc/mounts \n```\n\nAlternatively, to see whether the configured root directory is a mount point, run.\n\n```\nmountpoint -- \"$(docker info -f '{{ .DockerRootDir }}')\" \n```\n\n## Remediation\n\nFor new installations, you should create a separate partition for the `/var/lib/docker` mount point. For systems that have already been installed, you should use the Logical Volume Manager (LVM) within Linux to create a new partition.\n\n## Impact\n\nNone.\n\n## Default value\n\nBy default, `/var/lib/docker` is mounted under the `/` or `/var` partitions dependent on how the OS is configured.\n\n## References\n\n1. [https://www.projectatomic.io/docs/docker-storage-recommendation/][1]\n\n## CIS controls\n\nVersion 6.14 Controlled Access Based on the Need to Know                \n\n[1]: https://www.projectatomic.io/docs/docker-storage-recommendation/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.1","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.1\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"wcf-c0t-fkz","createdAt":1602076808377,"name":"A separate partition for containers has been created"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:3.14","security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker server certificate key file, the file that is passed along with the `--tlskey` parameter, has permissions of 400.\n\n## Rationale\n\nThe Docker server certificate key file should be protected from any tampering or unneeded reads. It holds the private key for the Docker server certificate. It must therefore have permissions of 400 to ensure that the certificate key file is not modified.\n\n## Audit\n\nVerify that the Docker server certificate key file has permissions of `400` by running: \n```\nstat -c %a <path to Docker server certificate key file>\n```\n\n## Remediation\n\nYou should execute the following command: `chmod 400 <path to Docker server certificate key file>`\n\nThis sets the Docker server certificate key file permissions to 400.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the permissions for the Docker server certificate key file might not be 400. The default file permissions are governed by the operating system or user specific umask values.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n14.4 Protect Information With Access Control Lists All information stored on systems shall be protected with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n\nVersion 7\n\n14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.14","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.14\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"z0n-cod-mxi","createdAt":1602077570102,"name":"Docker server certificate key file permissions are set to 400"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","control:2.6","requirement:Docker-Daemon-Configuration","framework_version:1.2.0","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nIt is possible to make the Docker daemon available remotely over a TCP port. If this is required, you should ensure that TLS authentication is configured in order to restrict access to the Docker daemon via IP address and port.\n\n## Rationale\n\nBy default, the Docker daemon binds to a non-networked Unix socket and runs with root privileges. If you change the default Docker daemon binding to a TCP port or any other Unix socket, anyone with access to that port or socket could have full access to the Docker daemon and therefore in turn to the host system. For this reason, you should not bind the Docker daemon to another IP/port or a Unix socket. If you must expose the Docker daemon via a network socket, you should configure TLS authentication for the daemon and for any Docker Swarm APIs (if they are in use). This type of configuration restricts the connections to your Docker daemon over the network to a limited number of clients who have access to the TLS client credentials.\n\n## Audit\n\nTo confirm that the TLS authentication setting is correct, review the `dockerd` startup options and the settings in `/etc/docker/daemon.json`. To review the `dockerd` startup options, run: \n```\nps -ef | grep dockerd \n```\nConfirm that the following parameters are present: `--tlsverify --tlscacert --tlscert --tlskey`.\n\nAlso review the `/etc/docker/daemon.json` file to ensure these settings are in place.\n\n## Remediation\n\nFollow the steps mentioned in the Docker documentation or other references.\n\n## Impact\n\nYou would need to manage and guard certificates and keys for the Docker daemon and Docker clients.\n\n## Default value\n\nBy default, TLS authentication is not configured.\n\n## References\n\n1. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n9.1 Limit Open Ports, Protocols, and Services - Ensure that only ports, protocols, and services with validated business needs are running on each system.\n\nVersion 7\n\n9.2 Ensure Only Approved Ports, Protocols and Services Are Running - Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"2.6","framework":"cis-docker","requirement":"Docker-Daemon-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-2.6\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"rh4-jeh-afu","createdAt":1602077571799,"name":"TLS authentication for Docker daemon is configured"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["control:3.13","security:compliance","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker server certificate key file, the file that is passed along with the `--tlskey` parameter, is individually owned and group owned by root.\n\n## Rationale\n\nThe Docker server certificate key file should be protected from any tampering or unneeded reads/writes. As it holds the private key for the Docker server certificate, it must be individually owned and group owned by root to ensure that it cannot be accessed by less privileged users.\n\n## Audit\n\nVerify that the Docker server certificate key file is individually owned and group-owned by root, by running: \n```\nstat -c %U:%G <path to Docker server certificate key file> | grep -v root:root \n```\nThe command should return no results.\n\n## Remediation\n\nRun the following command: `chown root:root <path to Docker server certificate key file>`\n\nThis sets the individual ownership and group ownership for the Docker server certificate key file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the individual ownership and group ownership for the Docker server certificate key file is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.13","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":6,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.13\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"oiu-e3x-yg6","createdAt":1602077710804,"name":"Docker server certificate key file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","control:3.11","framework:cis-docker","framework_version:1.2.0","requirement:Docker-Daemon-Configuration-Files","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nYou should verify that the Docker server certificate file, the file that is passed along with the `--tlscert` parameter, is individual owned and group owned by root.\n\n## Rationale\n\nThe Docker server certificate file should be protected from any tampering. It is used to authenticate the Docker server based on the given server certificate. It must therefore be individually owned and group owned by root to prevent modification by less privileged users.\n\n## Audit\n\nVerify that the Docker server certificate file is individually owned and group-owned by root, by running: \n```\nstat -c %U:%G <path to Docker server certificate file> | grep -v root:root\n```\nThe command should return no results.\n\n## Remediation\n\nRun the following command: `chown root:root <path to Docker server certificate file>`\n\nThis sets the individual ownership and the group ownership for the Docker server certificate file to root.\n\n## Impact\n\nNone\n\n## Default value\n\nBy default, the ownership and group-ownership for Docker server certificate file is correctly set to root.\n\n## References\n\n1. https://docs.docker.com/registry/insecure/\n2. https://docs.docker.com/engine/security/https/\n\n## CIS controls\n\nVersion 6\n\n5.1 Minimize And Sparingly Use Administrative Privileges - Minimize administrative privileges and only use administrative accounts when they are required. Implement focused auditing on the use of administrative privileged functions and monitor for anomalous behavior.\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"3.11","framework":"cis-docker","requirement":"Docker-Daemon-Configuration-Files","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":9,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-3.11\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"tkm-izb-xe1","createdAt":1602077837917,"name":"Docker server certificate file ownership is set to root:root"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","scored:true","security:compliance","requirement:Network-Policies-and-CNI","control:5.3.2","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nUse network policies to isolate traffic in your cluster network.\n\n## Rationale\n\nRunning different applications on the same Kubernetes cluster creates a risk of one compromised application attacking a neighboring application. Network segmentation is important to ensure that containers can communicate only with those they are supposed to. A network policy is a specification of how selections of pods are allowed to communicate with each other and other network endpoints. Network Policies are namespace scoped. When a network policy is introduced to a given namespace, all traffic not allowed by the policy is denied. However, if there are no network policies in a namespace, all traffic will be allowed into and out of the pods in that namespace.\n\n## Audit\n\nRun the following command and review the NetworkPolicy objects created in the cluster: `kubectl --all-namespaces get networkpolicy`\n\nEnsure that each namespace defined in the cluster has at least one Network Policy.\n\n## Remediation\n\nFollow the documentation and create network policy objects as you need them.\n\n## Impact\n\nOnce network policies are in use within a given namespace, traffic not explicitly allowed by a network policy will be denied. It is important to ensure that, when introducing network policies, legitimate traffic is not blocked.\n\n## Default value\n\nBy default, network policies are not created.\n\n## References\n\n1. [https://kubernetes.io/docs/concepts/services-networking/networkpolicies/ ][1]\n2. [https://octetz.com/posts/k8s-network-policy-apis ][2]\n3. [https://kubernetes.io/docs/tasks/configure-pod-container/declare-network-policy/][3]\n\n## CIS controls\n\nVersion 6.14.1 Implement Network Segmentation Based On Information Class Segment - The network based on the label or classification level of the information stored on the servers. Locate all sensitive information on separated VLANS with firewall filtering to ensure that only authorized individuals are only able to communicate with systems necessary to fulfill their specific responsibilities.\n\nVersion 7.14.1 Segment the Network Based on Sensitivity - Segment the network based on the label or classification level of the information stored on the servers, locate all sensitive information on separated Virtual Local Area Networks (VLANs).\n\nVersion 7.14.2 Enable Firewall Filtering Between VLANs - Enable firewall filtering between VLANs to ensure that only authorized systems are able to communicate with other systems necessary to fulfill their specific responsibilities.\n\n[1]: https://kubernetes.io/docs/concepts/services-networking/networkpolicies/\n[2]: https://octetz.com/posts/k8s-network-policy-apis\n[3]: https://kubernetes.io/docs/tasks/configure-pod-container/declare-network-policy/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.3.2","framework":"cis-kubernetes","requirement":"Network-Policies-and-CNI","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":5,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.3.2\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"mrw-bae-anz","createdAt":1604312181303,"name":"All namespaces have network policies defined"},{"updateAuthorId":0,"creationAuthorId":0,"tags":["framework_version:1.5.1","requirement:RBAC-and-Service-Accounts","scored:true","security:compliance","control:5.1.5","source:compliance-agent","framework:cis-kubernetes"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nThe default service account should not be used to ensure that rights granted to applications can be more easily audited and reviewed.\n\n## Rationale\n\nKubernetes provides a default service account which is used by cluster workloads where no specific service account is assigned to the pod. Where access to the Kubernetes API from a pod is required, a specific service account should be created for that pod, and rights granted to that service account. The default service account should be configured such that it does not provide a service account token and does not have any explicit rights assignments.\n\n## Audit\n\nFor each namespace in the cluster, review the rights assigned to the default service account and ensure that it has no roles or cluster roles bound to it apart from the defaults. Additionally ensure that the `automountServiceAccountToken: false` setting is in place for each default service account.\n\n## Remediation\n\nCreate explicit service accounts wherever a Kubernetes workload requires specific access to the Kubernetes API server. Modify the configuration of each default service account to include this value `automountServiceAccountToken: false`.\n\n## Impact\n\nAll workloads which require access to the Kubernetes API will require an explicit service account to be created.\n\n## Default value\n\nBy default the default service account allows for its service account token to be mounted in pods in its namespace.\n\n## References\n\n1. [https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/][1]\n\n## CIS controls\n\nNone\n\n[1]: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"kubernetes_cluster","complianceFrameworks":[{"control":"5.1.5","framework":"cis-kubernetes","requirement":"RBAC-and-Service-Accounts","version":"1.5.1"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":10,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-kubernetes-1.5.1-5.1.5\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"low","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"3yv-aqm-bxc","createdAt":1604312204438,"name":"Default service accounts are not actively used"}]}
    headers:
      Content-Type:
      - application/json
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=2&page%5Bsize%5D=100
    method: GET
  response:
    body: |
      {"meta":{"page":{"total_filtered_count":0,"total_count":152}},"data":[]}
    headers:
      Content-Type:
      - application/json
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: ""
    form: {}
    headers:
      Accept:
      - application/json
    url: https://api.datadoghq.com/api/v2/security_monitoring/rules/afg-qbt-7uw
    method: GET
  response:
    body: |
      {"updateAuthorId":0,"creationAuthorId":0,"tags":["security:compliance","framework:cis-docker","requirement:Linux-Hosts-Specific-Configuration","framework_version:1.2.0","control:1.2.7","source:compliance-agent"],"isEnabled":true,"hasExtendedTitle":true,"message":"## Description\n\nAudit `docker.socket`, if applicable.\n\n## Rationale\n\nAs well as auditing Linux file system and system calls, you should also audit the Docker daemon. Because this daemon runs with root privileges, it is very important to audit its activities and usage. Its behavior depends on some key files and directories, including the `docker.socket` file, which holds various parameters for the Docker daemon, it should be audited.\n\n## Audit\n\n1. Locate the `docker.socket` file by running: \n    ```\n    systemctl show -p FragmentPath docker.socket \n    ```\n2. If the file does not exist, this recommendation is not applicable. If the `docker.socket` file exists, verify that there is an audit rule corresponding to the `docker.socket` file by running: \n    ```\n    auditctl -l | grep docker.socket \n    ```\n\n## Remediation\n\nIf the file exists, you should add a rule for it. For example, add the following line to the `/etc/audit/audit.rules` file:\n\n```\n-w /usr/lib/systemd/system/docker.socket -k docker \n```\n\nThen restart the audit daemon: \n```\nservice auditd restart\n```\n\n## Impact\n\nAuditing can generate large log files. You should ensure that these are rotated and archived periodically. A separate partition should also be created for audit logs to avoid filling up any other critical partition.\n\n## Default value\n\nBy default, Docker related files and directories are not audited. The file `docker.socket` may not be present, but if it is, it should be audited.\n\n## References\n\n1. [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html][1]\n\n## CIS controls\n\nVersion 6.14.6 Enforce Detailed Audit Logging For Sensitive Information - Enforce detailed audit logging for access to nonpublic data and special authentication for sensitive data. \n\nVersion 7.14.9 Enforce Detail Logging for Access or Changes to Sensitive Data - Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).                \n\n[1]: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/chap-system_auditing.html\n","options":{"detectionMethod":"threshold","evaluationWindow":300,"maxSignalDuration":86400,"complianceRuleOptions":{"resourceType":"docker_daemon","complianceFrameworks":[{"control":"1.2.7","framework":"cis-docker","requirement":"Linux-Hosts-Specific-Configuration","version":"1.2.0"}],"validationQuery":"","complexRule":false},"keepAlive":7200},"version":7,"isDefault":true,"filters":[],"queries":[{"query":"source:compliance-agent @agent_rule_id:\"cis-docker-1.2.0-1.2.7\"","groupByFields":["@resource_id"],"aggregation":"count","name":"","distinctFields":[]}],"isDeleted":false,"cases":[{"status":"medium","notifications":[],"name":"Failed","condition":"a > 0"}],"type":"infrastructure_configuration","id":"afg-qbt-7uw","createdAt":1599600857858,"name":"docker.socket auditing is configured"}
    headers:
      Content-Type:
      - application/json
    status: 200 OK
    code: 200
    duration: ""
