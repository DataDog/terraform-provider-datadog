---
version: 2
interactions:
    - id: 0
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: api.datadoghq.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Accept:
                - application/json
        url: https://api.datadoghq.com/api/v2/integration/aws/logs/services
        method: GET
      response:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        transfer_encoding: []
        trailer: {}
        content_length: 430
        uncompressed: false
        body: '{"data":{"id":"logs_services","type":"logs_services","attributes":{"logs_services":["apigw-access-logs","apigw-execution-logs","appsync","batch","cloudfront","cloudtrail","codebuild","dms","docdb","ecs","eks","eks-container-insights","elb","elbv2","lambda","lambda-edge","mwaa","network-firewall","pcs","rds","redshift","redshift-serverless","route53","route53-resolver","s3","ssm","states","verified-access","vpc","vpn","waf"]}}}'
        headers:
            Content-Type:
                - application/vnd.api+json
        status: 200 OK
        code: 200
        duration: 134.336875ms
    - id: 1
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: api.datadoghq.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Accept:
                - application/json
        url: https://api.datadoghq.com/api/v2/integration/aws/logs/services
        method: GET
      response:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        transfer_encoding: []
        trailer: {}
        content_length: 430
        uncompressed: false
        body: '{"data":{"id":"logs_services","type":"logs_services","attributes":{"logs_services":["apigw-access-logs","apigw-execution-logs","appsync","batch","cloudfront","cloudtrail","codebuild","dms","docdb","ecs","eks","eks-container-insights","elb","elbv2","lambda","lambda-edge","mwaa","network-firewall","pcs","rds","redshift","redshift-serverless","route53","route53-resolver","s3","ssm","states","verified-access","vpc","vpn","waf"]}}}'
        headers:
            Content-Type:
                - application/vnd.api+json
        status: 200 OK
        code: 200
        duration: 134.141458ms
    - id: 2
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: api.datadoghq.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Accept:
                - application/json
        url: https://api.datadoghq.com/api/v2/integration/aws/logs/services
        method: GET
      response:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        transfer_encoding: []
        trailer: {}
        content_length: 430
        uncompressed: false
        body: '{"data":{"id":"logs_services","type":"logs_services","attributes":{"logs_services":["apigw-access-logs","apigw-execution-logs","appsync","batch","cloudfront","cloudtrail","codebuild","dms","docdb","ecs","eks","eks-container-insights","elb","elbv2","lambda","lambda-edge","mwaa","network-firewall","pcs","rds","redshift","redshift-serverless","route53","route53-resolver","s3","ssm","states","verified-access","vpc","vpn","waf"]}}}'
        headers:
            Content-Type:
                - application/vnd.api+json
        status: 200 OK
        code: 200
        duration: 127.378041ms
    - id: 3
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: api.datadoghq.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Accept:
                - application/json
        url: https://api.datadoghq.com/api/v2/integration/aws/logs/services
        method: GET
      response:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        transfer_encoding: []
        trailer: {}
        content_length: 430
        uncompressed: false
        body: '{"data":{"id":"logs_services","type":"logs_services","attributes":{"logs_services":["apigw-access-logs","apigw-execution-logs","appsync","batch","cloudfront","cloudtrail","codebuild","dms","docdb","ecs","eks","eks-container-insights","elb","elbv2","lambda","lambda-edge","mwaa","network-firewall","pcs","rds","redshift","redshift-serverless","route53","route53-resolver","s3","ssm","states","verified-access","vpc","vpn","waf"]}}}'
        headers:
            Content-Type:
                - application/vnd.api+json
        status: 200 OK
        code: 200
        duration: 121.503625ms
